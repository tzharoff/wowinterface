
HekiliDB = {
["namespaces"] = {
["LibDualSpec-1.0"] = {
},
},
["profileKeys"] = {
["Zèéj - Wyrmrest Accord"] = "Default",
["Zeejadin - Wyrmrest Accord"] = "Default",
["Zodep - Wyrmrest Accord"] = "Default",
["Zeenc - Wyrmrest Accord"] = "Default",
["Zeejaxxus - Wyrmrest Accord"] = "Default",
["Aqusiailea - Wyrmrest Accord"] = "Default",
["Blightpower - Wyrmrest Accord"] = "Default",
["Justzeej - Wyrmrest Accord"] = "Default",
["Beepboopbeep - Wyrmrest Accord"] = "Default",
["Zeejdruid - Wyrmrest Accord"] = "Default",
["Zeejog - Wyrmrest Accord"] = "Default",
["Calini - Wyrmrest Accord"] = "Default",
["Unzeej - Wyrmrest Accord"] = "Default",
["Nü - Wyrmrest Accord"] = "Default",
["Leafittozeej - Wyrmrest Accord"] = "Default",
["Seratia - Wyrmrest Accord"] = "Default",
["Zeejelf - Wyrmrest Accord"] = "Default",
["Healsforgold - Wyrmrest Accord"] = "Default",
["Heartheha - Wyrmrest Accord"] = "Default",
["Zeejbank - Wyrmrest Accord"] = "Default",
["Bøfá - Wyrmrest Accord"] = "Default",
["Monplande - Wyrmrest Accord"] = "Default",
["Necrozeejiac - Wyrmrest Accord"] = "Default",
["Destinedcow - Wyrmrest Accord"] = "Default",
["Robozeej - Wyrmrest Accord"] = "Default",
["Addisocke - Wyrmrest Accord"] = "Default",
["Flappyzeej - Wyrmrest Accord"] = "Default",
["Bigdiscnergy - Wyrmrest Accord"] = "Default",
["Zonks - Wyrmrest Accord"] = "Default",
["Zodji - Wyrmrest Accord"] = "Default",
["Kacheeng - Wyrmrest Accord"] = "Default",
["Zeejina - Wyrmrest Accord"] = "Default",
["Zeejorc - Wyrmrest Accord"] = "Default",
["Ztheegh - Wyrmrest Accord"] = "Default",
["Zonoes - Wyrmrest Accord"] = "Default",
["Zeej - Wyrmrest Accord"] = "Default",
["Velexis - Wyrmrest Accord"] = "Default",
["Felzeej - Wyrmrest Accord"] = "Default",
["Zeejorcstabs - Wyrmrest Accord"] = "Default",
["Zeej - US Mythic Dungeons"] = "Default",
["Destinedcow - Moon Guard"] = "Default",
["Zeejee - Wyrmrest Accord"] = "Default",
["Bowz - Wyrmrest Accord"] = "Default",
["Funkeej - Wyrmrest Accord"] = "Default",
["Fatzeej - Wyrmrest Accord"] = "Default",
["Azushanza - Wyrmrest Accord"] = "Default",
["Candypauper - Wyrmrest Accord"] = "Default",
["Seratia - Shadowsong"] = "Default",
["Gobfatha - Wyrmrest Accord"] = "Default",
["Rollingneed - Aman'Thul"] = "Default",
["Kaylaillea - Wyrmrest Accord"] = "Default",
["Átahsaia - Wyrmrest Accord"] = "Default",
["Zeejplande - Area 52"] = "Default",
["Zeejthyr - Wyrmrest Accord"] = "Default",
["Udderlyzeej - Wyrmrest Accord"] = "Default",
},
["profiles"] = {
["Default"] = {
["displays"] = {
["Interrupts"] = {
["rel"] = "CENTER",
["x"] = -55.00000762939453,
},
["Cooldowns"] = {
["rel"] = "CENTER",
["y"] = -280.0000305175781,
},
["Primary"] = {
["rel"] = "CENTER",
["zoom"] = 70,
["queue"] = {
["direction"] = "TOP",
["width"] = 35,
["offsetX"] = -42,
["height"] = 35,
["offsetY"] = -100,
},
["y"] = 0.9996872544288635,
["x"] = 455.000244140625,
},
["AOE"] = {
["rel"] = "CENTER",
},
["Defensives"] = {
["rel"] = "CENTER",
["x"] = -110.0000152587891,
},
},
["iconStore"] = {
["minimapPos"] = 242.3333554578891,
},
["toggles"] = {
["defensives"] = {
["value"] = false,
},
},
["specs"] = {
[62] = {
["settings"] = {
["cancel_pom"] = false,
["check_explosion_range"] = true,
},
},
[1467] = {
["settings"] = {
["use_early_chain"] = false,
["use_clipping"] = false,
["fire_breath_fixed"] = 0,
["use_unravel"] = false,
["use_deep_breath"] = true,
["dragonrage_pad"] = 0.5,
["use_verdant_embrace"] = false,
},
},
[63] = {
["settings"] = {
["prevent_hardcasts"] = false,
["check_explosion_range"] = true,
["pyroblast_pull"] = false,
},
},
[250] = {
["settings"] = {
["rt_damage"] = 30,
["save_blood_shield"] = true,
["vb_damage"] = 50,
["ibf_damage"] = 40,
["death_strike_pool_amount"] = 65,
},
},
[251] = {
["settings"] = {
["bos_rp"] = 50,
["ams_usage"] = "damage",
},
},
[252] = {
["settings"] = {
["dps_shell"] = false,
},
},
[1468] = {
["settings"] = {
["spend_essence"] = false,
["use_deep_breath"] = true,
["fire_breath_fixed"] = 0,
["use_unravel"] = false,
},
},
[253] = {
["settings"] = {
["mark_any"] = false,
["check_pet_range"] = false,
["barbed_shot_grace_period"] = 0.5,
["avoid_bw_overlap"] = false,
},
},
[254] = {
["settings"] = {
["mark_any"] = false,
["prevent_hardcasts"] = false,
},
},
[255] = {
["settings"] = {
["use_harpoon"] = true,
["mark_any"] = false,
["allow_focus_overcap"] = false,
["manual_kill_shot"] = false,
},
},
[66] = {
["settings"] = {
["goak_damage"] = 40,
["sentinel_def"] = false,
["ds_damage"] = 60,
["wog_health"] = 40,
},
},
[257] = {
["settings"] = {
["sw_death_protection"] = 50,
},
},
[258] = {
["settings"] = {
["pad_void_bolt"] = true,
["min_sear_ticks"] = 2,
["sw_death_protection"] = 50,
["pad_ascended_blast"] = true,
},
},
[259] = {
["settings"] = {
["mfd_points"] = 3,
["envenom_pool_pct"] = 50,
["solo_vanish"] = true,
["priority_rotation"] = false,
["dot_threshold"] = 7,
},
},
[260] = {
["settings"] = {
["no_rtb_in_dance_cto"] = true,
["stealth_padding"] = 0.1,
["ambush_anyway"] = false,
["never_roll_in_window"] = false,
["mfd_points"] = 3,
["use_ld_opener"] = false,
["allow_shadowmeld"] = false,
["solo_vanish"] = true,
["check_blade_rush_range"] = true,
["sinister_clash"] = -0.5,
["crackshot_lock"] = false,
},
},
[261] = {
["settings"] = {
["rupture_duration"] = 12,
["mfd_points"] = 3,
["priority_rotation"] = false,
["solo_vanish"] = true,
},
},
[262] = {
["settings"] = {
["purge_icd"] = 12,
["hostile_dispel"] = false,
["stack_buffer"] = 1.1,
},
},
[263] = {
["settings"] = {
["filler_shock"] = true,
["purge_icd"] = 12,
["hostile_dispel"] = false,
["pwave_gcds"] = 4,
["pad_lava_lash"] = true,
["pad_windstrike"] = true,
["funnel_priority"] = false,
["pwave_targets"] = 0,
["burn_before_wave"] = true,
["project_windfury"] = 0,
},
},
[265] = {
["settings"] = {
["manage_ds_ticks"] = false,
},
},
[266] = {
["settings"] = {
["tyrant_padding"] = 1,
["dcon_imps"] = 0,
},
},
[267] = {
["settings"] = {
["default_pet"] = "summon_sayaad",
["fixed_aoe_3_plus"] = false,
["cleave_apl"] = false,
},
},
[268] = {
["settings"] = {
["purify_stagger_maxhp"] = 6,
["purify_for_celestial"] = true,
["purify_for_niuzao"] = true,
["bof_percent"] = 50,
["eh_percent"] = 65,
["purify_stagger_currhp"] = 12,
},
},
[269] = {
["settings"] = {
["sef_one_charge"] = false,
["tok_damage"] = 1,
["check_wdp_range"] = false,
["allow_fsk"] = false,
["use_diffuse"] = false,
["check_sck_range"] = false,
},
},
[270] = {
["settings"] = {
["roll_movement"] = 5,
["save_faeline"] = false,
},
},
[70] = {
["settings"] = {
["sov_damage"] = 20,
["check_wake_range"] = false,
["desync_toll"] = false,
},
},
[102] = {
["settings"] = {
["vigil_damage"] = 50,
["delay_berserking"] = false,
["starlord_cancel"] = false,
},
},
[71] = {
["settings"] = {
["heroic_charge"] = false,
["shockwave_interrupt"] = true,
},
},
[103] = {
["settings"] = {
["vigil_damage"] = 50,
["solo_prowl"] = false,
["use_funnel"] = false,
["regrowth"] = true,
["lazy_swipe"] = false,
["frenzy_cp"] = 2,
["zerk_biteweave"] = false,
["rip_duration"] = 9,
},
},
[72] = {
["settings"] = {
["check_ww_range"] = false,
["shockwave_interrupt"] = true,
["t30_bloodthirst_crit"] = 95,
["heroic_charge"] = false,
},
},
[104] = {
["settings"] = {
["vigil_damage"] = 50,
["catweave_bear"] = false,
["maul_anyway"] = true,
["ironfur_damage_threshold"] = 5,
["maul_rage"] = 20,
["max_ironfur"] = 1,
},
},
[73] = {
["settings"] = {
["shield_wall_amount"] = 50,
["rallying_cry_amount"] = 50,
["overlap_ignore_pain"] = false,
["last_stand_condition"] = false,
["shockwave_interrupt"] = true,
["shield_wall_health"] = 50,
["rallying_cry_condition"] = false,
["last_stand_offensively"] = false,
["stack_shield_block"] = false,
["stance_weaving"] = false,
["shield_wall_condition"] = false,
["last_stand_amount"] = 50,
["last_stand_health"] = 50,
["rallying_cry_health"] = 50,
["reserve_rage"] = 35,
},
},
[256] = {
["settings"] = {
["sw_death_protection"] = 50,
},
},
[581] = {
["settings"] = {
["frailty_stacks"] = 1,
["brand_charges"] = 0,
["infernal_charges"] = 1,
},
},
[577] = {
["settings"] = {
["retreat_and_return"] = "off",
["retreat_filler"] = false,
["fel_rush_charges"] = 0,
["demon_blades_acknowledged"] = false,
["fel_rush_filler"] = true,
["recommend_movement"] = true,
["throw_glaive_charges"] = 0,
["unbound_movement"] = false,
},
},
[64] = {
["settings"] = {
["check_explosion_range"] = true,
["prevent_hardcasts"] = false,
["limit_ice_lance"] = false,
["manual_water_jet"] = false,
},
},
[1473] = {
["settings"] = {
["use_early_chain"] = false,
["use_clipping"] = false,
["fire_breath_fixed"] = 0,
["manage_source_of_magic"] = false,
["use_deep_breath"] = true,
["use_unravel"] = false,
["manage_attunement"] = false,
["use_verdant_embrace"] = false,
},
},
},
["runOnce"] = {
["forceReloadClassDefaultOptions_20220306_70"] = true,
["forceReloadClassDefaultOptions_20220306_65"] = true,
["forceReloadClassDefaultOptions_20220306_262"] = true,
["forceReloadClassDefaultOptions_20220306_71"] = true,
["forceReloadClassDefaultOptions_20220306_264"] = true,
["forceReloadClassDefaultOptions_20220306_102"] = true,
["forceReloadClassDefaultOptions_20220306_269"] = true,
["forceReloadClassDefaultOptions_20220306_250"] = true,
["updateMaxRefreshToNewSpecOptions_20220222"] = true,
["forceReloadClassDefaultOptions_20220306_66"] = true,
["forceReloadClassDefaultOptions_20220306_270"] = true,
["forceReloadClassDefaultOptions_20220306_72"] = true,
["forceReloadClassDefaultOptions_20220306_263"] = true,
["forceReloadClassDefaultOptions_20220306_1467"] = true,
["forceSpellFlashBrightness_20221030"] = true,
["forceReloadClassDefaultOptions_20220306_260"] = true,
["forceReloadClassDefaultOptions_20220306_103"] = true,
["forceReloadClassDefaultOptions_20220306_252"] = true,
["forceReloadClassDefaultOptions_20220306_259"] = true,
["forceReloadClassDefaultOptions_20220306_105"] = true,
["forceReloadClassDefaultOptions_20220306_253"] = true,
["forceReloadClassDefaultOptions_20220306_64"] = true,
["forceReloadClassDefaultOptions_20220306_261"] = true,
["forceReloadClassDefaultOptions_20220306_254"] = true,
["forceReloadClassDefaultOptions_20220306_267"] = true,
["forceReloadClassDefaultOptions_20220306_577"] = true,
["forceEnableEnhancedRecheckBoomkin_20210712"] = true,
["forceReloadClassDefaultOptions_20220306_255"] = true,
["forceReloadClassDefaultOptions_20220306_266"] = true,
["forceReloadClassDefaultOptions_20220306_265"] = true,
["forceReloadClassDefaultOptions_20220306_62"] = true,
["forceReloadAllDefaultPriorities_20220228"] = true,
["forceEnableAllClassesOnceDueToBug_20220225"] = true,
["forceReloadClassDefaultOptions_20220306_268"] = true,
["forceReloadClassDefaultOptions_20220306_63"] = true,
["forceReloadClassDefaultOptions_20220306_258"] = true,
["forceReloadClassDefaultOptions_20220306_73"] = true,
["forceReloadClassDefaultOptions_20220306_1468"] = true,
["forceReloadClassDefaultOptions_20220306_256"] = true,
["forceReloadClassDefaultOptions_20220306_257"] = true,
["forceReloadClassDefaultOptions_20220306_581"] = true,
["forceReloadClassDefaultOptions_20220306_251"] = true,
["fixHavocPriorityVersion_20240805"] = true,
["resetAberrantPackageDates_20190728_1"] = true,
["forceReloadClassDefaultOptions_20220306_104"] = true,
["forceReloadClassDefaultOptions_20220306_1473"] = true,
},
["packs"] = {
["Windwalker"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/profiles/PreRaids/PR_Monk_Windwalker.simc",
["builtIn"] = true,
["date"] = 20230807,
["spec"] = 269,
["desc"] = "2023-08-07: Require Skyreach/Skytouch for target cycling.\n\n2023-08-02: SimC updates mostly re: Mark of the Crane and Skyreach target cycling.\n\n2023-07-02: Strike of the Windlord adjusted in single-target.\n\n2023-06-24:  TP adjusted for non-Skyreach/Skytouch.\n\n2023-05-28:  Minor updates.\n\n2023-05-24:  SCK, RSK, and FoF usage update.\n\n2023-05-17:  Minor trinket, Skyreach, and ST priority revisions.\n\n2023-05-02:  Update for 10.1.\n\n2023-04-17:  Translate and reimplement Fists of Fury usage/cancellation during Serenity.\n\n2023-04-15:  Update from SimulationCraft.\n\n2023-03-25:  Adjust Touch of Death.\n\n2023-02-21:   Revise to ensure Fists of Fury is only broken when Serenity is active.\n\n2023-02-20:  Major changes to align with latest SimulationCraft priority.\n\n2023-03-08:  Revise Manic Grieftorch usage; added requirement that target is expected to live longer than the cast time to reduce risk of partial cast.",
["lists"] = {
["opener"] = {
{
["enabled"] = true,
["description"] = "Opener",
["action"] = "summon_white_tiger_statue",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled & chi.max - chi >= 3",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi.max - chi >= ( 2 + buff.power_strikes.up )",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled & chi = 3",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi = 2",
["action"] = "chi_wave",
},
{
["action"] = "expel_harm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "chi > 1 & chi.max - chi >= 2",
["action"] = "chi_burst",
},
},
["serenity_3t"] = {
{
["enabled"] = true,
["action"] = "faeline_stomp",
["description"] = "Serenity 3 Targets",
["criteria"] = "debuff.fae_exposure_damage.remains < 1",
},
{
["enabled"] = true,
["criteria"] = "( talent.skyreach.enabled || talent.skytouch.enabled ) & ! debuff.skyreach_exhaustion.up & combo_strike",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 3 & buff.teachings_of_the_monastery.remains < 1",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up & set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.fae_exposure_damage.remains < 2",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & buff.call_to_dominance.up & debuff.skyreach_exhaustion.remains > buff.call_to_dominance.remains",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & debuff.skyreach_exhaustion.remains > 55",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
["interrupt"] = "1",
["criteria"] = "buff.invokers_delight.up",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & set_bonus.tier30_2pc",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 2",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "spinning_crane_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.teachings_of_the_monastery.enabled & buff.teachings_of_the_monastery.stack < 3",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
},
["serenity_st"] = {
{
["enabled"] = true,
["action"] = "faeline_stomp",
["description"] = "Serenity 1 Target",
["criteria"] = "debuff.fae_exposure_damage.remains < 2 & ! debuff.skyreach_exhaustion.remains",
},
{
["enabled"] = true,
["criteria"] = "( talent.skyreach.enabled || talent.skytouch.enabled ) & ! debuff.skyreach_exhaustion.up & combo_strike",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 3 & buff.teachings_of_the_monastery.remains < 1",
["action"] = "blackout_kick",
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.fae_exposure_damage.remains < 2",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & buff.call_to_dominance.up & debuff.skyreach_exhaustion.remains > buff.call_to_dominance.remains",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & debuff.skyreach_exhaustion.remains > 55",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["interrupt"] = "1",
["action"] = "fists_of_fury",
["criteria"] = "buff.invokers_delight.up",
},
{
["enabled"] = true,
["criteria"] = "debuff.skyreach_exhaustion.remains > buff.call_to_dominance.remains",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & set_bonus.tier30_2pc",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.teachings_of_the_monastery.enabled & buff.teachings_of_the_monastery.stack < 3",
["action"] = "tiger_palm",
},
},
["cd_serenity"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Serenity Cooldowns",
["list_name"] = "serenity_trinkets",
},
{
["enabled"] = true,
["criteria"] = "! cooldown.invoke_xuen_the_white_tiger.remains || active_enemies > 4 || cooldown.invoke_xuen_the_white_tiger.remains > 50 || boss & fight_remains <= 30",
["action"] = "summon_white_tiger_statue",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_xuen & talent.bonedust_brew.enabled & cooldown.bonedust_brew.remains <= 5 & target.time_to_die > 25 || buff.bloodlust.up || boss & fight_remains < 25",
["action"] = "invoke_xuen",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die > 25 & fight_remains > 120 || fight_remains < 60 & ( debuff.skyreach_exhaustion.remains < 2 || debuff.skyreach_exhaustion.remains > 55 ) & ! cooldown.serenity.remains & active_enemies < 3 || buff.bloodlust.up || boss & fight_remains < 23",
["action"] = "invoke_xuen",
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & ( cooldown.serenity.up || cooldown.serenity.remains > 15 || boss & fight_remains < 30 & fight_remains > 10 ) || boss & fight_remains < 10",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "buff.invokers_delight.up || ! talent.invokers_delight.enabled || variable.hold_xuen & ( talent.drinking_horn_cover.enabled & fight_remains > 110 || ! talent.drinking_horn_cover.enabled & fight_remains > 105 ) || ! talent.invoke_xuen_the_white_tiger.enabled || boss & fight_remains < 15",
["action"] = "serenity",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! buff.serenity.up & ( target.health.current < health || buff.hidden_masters_forbidden_touch.up & ( buff.hidden_masters_forbidden_touch.remains < 2 || buff.hidden_masters_forbidden_touch.remains > target.time_to_die ) || target.time_to_die > 60 || debuff.bonedust_brew_debuff.up || boss & fight_remains < 10 )",
["action"] = "touch_of_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 90 || boss & fight_remains < 10",
["action"] = "touch_of_karma",
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "berserking",
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "bag_of_tricks",
},
},
["default_4t"] = {
{
["enabled"] = true,
["action"] = "spinning_crane_kick",
["description"] = "4 Targets",
["criteria"] = "combo_strike & buff.dance_of_chiji.up & spinning_crane_kick.max",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & buff.pressure_point.up & set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & buff.pressure_point.up & cooldown.fists_of_fury.remains > 5",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi = 1 & ( ! cooldown.rising_sun_kick.remains || ! cooldown.strike_of_the_windlord.remains ) || chi = 2 & ! cooldown.fists_of_fury.remains",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains > 3 & buff.chi_energy.stack > 10",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & set_bonus.tier30_2pc",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up & chi < 5",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "chi < 5 & energy < 50",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 4 ) & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 4 )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
},
["default_3t"] = {
{
["enabled"] = true,
["action"] = "blackout_kick",
["cycle_targets"] = 1,
["description"] = "3 Targets",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & ( cooldown.invoke_xuen_the_white_tiger.remains > 20 || fight_remains < 5 )",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & buff.pressure_point.up & set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & buff.pressure_point.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi = 1 & ( ! cooldown.rising_sun_kick.remains || ! cooldown.strike_of_the_windlord.remains ) || chi = 2 & ! cooldown.fists_of_fury.remains",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 2",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.up & ( talent.shadowboxing_treads.enabled || cooldown.rising_sun_kick.remains > 1 )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up & chi < 5",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "chi < 5 & energy < 50",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains < 3 & buff.chi_energy.stack > 15",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "cooldown.fists_of_fury.remains > 4 & chi > 3",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.rising_sun_kick.remains & cooldown.fists_of_fury.remains & chi > 4 & ( ( talent.storm_earth_and_fire.enabled & ! talent.bonedust_brew.enabled ) || ( talent.serenity.enabled ) )",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & talent.shadowboxing_treads.enabled & ! spinning_crane_kick.max",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( combo_strike & chi > 5 & talent.storm_earth_and_fire.enabled || combo_strike & chi > 4 & talent.serenity.enabled )",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
},
["default_aoe"] = {
{
["enabled"] = true,
["action"] = "spinning_crane_kick",
["description"] = ">4 Targets",
["criteria"] = "combo_strike & buff.dance_of_chiji.up & spinning_crane_kick.max",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 8",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & buff.pressure_point.up & set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 5",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up & set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.whirling_dragon_punch.enabled & cooldown.whirling_dragon_punch.remains < 3 & cooldown.fists_of_fury.remains > 3 & ! buff.kicks_of_flowing_momentum.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi = 1 & ( ! cooldown.rising_sun_kick.remains || ! cooldown.strike_of_the_windlord.remains ) || chi = 2 & ! cooldown.fists_of_fury.remains",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains < 5 & buff.chi_energy.stack > 10",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up & chi < 5",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "chi < 5 & energy < 50",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 2 ) & spinning_crane_kick.max & buff.bloodlust.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 2 ) & spinning_crane_kick.max & buff.invokers_delight.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & combo_strike & set_bonus.tier30_2pc & ! buff.bonedust_brew.up & active_enemies < 15 & ! talent.crane_vortex.enabled",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & combo_strike & set_bonus.tier30_2pc & ! buff.bonedust_brew.up & active_enemies < 8",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 4 ) & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & combo_strike & ! spinning_crane_kick.max",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1 & active_enemies = 1 & raid_event.adds.in > 20 || chi.max - chi >= 2",
["action"] = "chi_burst",
},
},
["bdb_setup"] = {
{
["enabled"] = true,
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
["description"] = "Bonedust Brew Setup",
["criteria"] = "talent.thunderfist.enabled & active_enemies > 3",
},
{
["enabled"] = true,
["criteria"] = "spinning_crane_kick.max & chi >= 4",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi.max - chi >= 2 & buff.storm_earth_and_fire.up",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! talent.whirling_dragon_punch.enabled & ! spinning_crane_kick.max",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi >= 5 & talent.whirling_dragon_punch.enabled",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & active_enemies >= 2 & talent.whirling_dragon_punch.enabled",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
},
["serenity_4t"] = {
{
["enabled"] = true,
["action"] = "faeline_stomp",
["description"] = "Serenity 4 Targets",
["criteria"] = "debuff.fae_exposure_damage.remains < 1",
},
{
["enabled"] = true,
["criteria"] = "( talent.skyreach.enabled || talent.skytouch.enabled ) & ! debuff.skyreach_exhaustion.up & combo_strike",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 3 & buff.teachings_of_the_monastery.remains < 1",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up & ! talent.bonedust_brew.enabled",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up & set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & buff.call_to_dominance.up & debuff.skyreach_exhaustion.remains > buff.call_to_dominance.remains",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.fae_exposure_damage.remains < 2",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
["interrupt"] = "1",
["criteria"] = "buff.invokers_delight.up",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & set_bonus.tier30_2pc",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "spinning_crane_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.teachings_of_the_monastery.enabled & buff.teachings_of_the_monastery.stack < 3",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
},
["serenity_aoe"] = {
{
["enabled"] = true,
["action"] = "faeline_stomp",
["description"] = "Serenity >4 Targets",
["criteria"] = "debuff.fae_exposure_damage.remains < 1",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! spinning_crane_kick.max & talent.shadowboxing_treads.enabled",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 3 & buff.teachings_of_the_monastery.remains < 1",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up & set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & buff.call_to_dominance.up & debuff.skyreach_exhaustion.remains > buff.call_to_dominance.remains & active_enemies < 10",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.fae_exposure_damage.remains < 2",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
["interrupt"] = "1",
["criteria"] = "buff.invokers_delight.up",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 6 & combo_strike & set_bonus.tier30_2pc",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "( talent.skyreach.enabled || talent.skytouch.enabled ) & ! debuff.skyreach_exhaustion.up & combo_strike & active_enemies = 5",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & active_enemies >= 3 & combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "spinning_crane_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.teachings_of_the_monastery.enabled & buff.teachings_of_the_monastery.stack < 3",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
},
["default_2t"] = {
{
["enabled"] = true,
["action"] = "blackout_kick",
["cycle_targets"] = 1,
["description"] = "2 Targets",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & ( cooldown.invoke_xuen_the_white_tiger.remains > 20 || fight_remains < 5 )",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! cooldown.fists_of_fury.remains",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.kicks_of_flowing_momentum.up || buff.pressure_point.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi = 1 & ( ! cooldown.rising_sun_kick.remains || ! cooldown.strike_of_the_windlord.remains ) || chi = 2 & ! cooldown.fists_of_fury.remains",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up & chi < 5",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 2",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.remains & chi > 2 & prev.rising_sun_kick",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "chi < 5 & energy < 50",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.up & ( talent.shadowboxing_treads.enabled || cooldown.rising_sun_kick.remains > 1 )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.shadowboxing_treads.enabled & cooldown.fists_of_fury.remains > 4 & talent.xuens_battlegear.enabled",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.rising_sun_kick.remains & cooldown.fists_of_fury.remains & ( ! buff.bonedust_brew.up || spinning_crane_kick.modifier < 1.5 )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike & spinning_crane_kick.modifier >= 2.7",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["criteria"] = "( combo_strike & chi > 5 & talent.storm_earth_and_fire.enabled || combo_strike & chi > 4 & talent.serenity.enabled )",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
},
["serenity_lust"] = {
{
["enabled"] = true,
["action"] = "faeline_stomp",
["description"] = "Serenity Lust",
["criteria"] = "debuff.fae_exposure_damage.remains < 1",
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.remains < 1",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 3 & buff.teachings_of_the_monastery.remains < 1",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["interrupt_if"] = "buff.serenity.remains>=1&buff.invokers_delight.up",
["interrupt"] = "1",
["criteria"] = "buff.invokers_delight.up",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & set_bonus.tier30_2pc",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.teachings_of_the_monastery.enabled & buff.teachings_of_the_monastery.stack < 3",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
},
["default_st"] = {
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["description"] = "1 Target",
["criteria"] = "! cooldown.fists_of_fury.remains",
},
{
["enabled"] = true,
["criteria"] = "! buff.pressure_point.up & debuff.skyreach_exhaustion.remains < 55",
["action"] = "fists_of_fury",
},
{
["enabled"] = true,
["criteria"] = "debuff.skyreach_exhaustion.remains < 1 & debuff.fae_exposure_damage.remains < 3",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up || debuff.skyreach_exhaustion.remains > 55",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.remains & chi > 2 & prev.rising_sun_kick",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & ( cooldown.invoke_xuen_the_white_tiger.remains > 20 || fight_remains < 5 )",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "buff.kicks_of_flowing_momentum.up || buff.pressure_point.up || debuff.skyreach_exhaustion.remains > 55",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["action"] = "blackout_kick",
},
{
["action"] = "fists_of_fury",
["enabled"] = true,
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "chi = 1 & ( ! cooldown.rising_sun_kick.remains || ! cooldown.strike_of_the_windlord.remains ) || chi = 2 & ! cooldown.fists_of_fury.remains",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up & chi < 5",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 2 & debuff.skyreach_exhaustion.remains > 1",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "chi < 5 & energy < 50",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "debuff.skyreach_exhaustion.remains > 30 || fight_remains < 5",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.up & cooldown.rising_sun_kick.remains > 1",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike & spinning_crane_kick.modifier >= 2.7",
["action"] = "spinning_crane_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
},
},
["cd_sef"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Storm, Earth and Fire Cooldowns",
["list_name"] = "sef_trinkets",
},
{
["enabled"] = true,
["criteria"] = "pet.xuen_the_white_tiger.active",
["action"] = "summon_white_tiger_statue",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_xuen & fight_remains > 25 & talent.bonedust_brew.enabled & cooldown.bonedust_brew.remains <= 5 & ( active_enemies < 3 & chi >= 3 || active_enemies >= 3 & chi >= 2 ) || boss & fight_remains < 25",
["action"] = "invoke_xuen",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_xuen & fight_remains > 25 & ! talent.bonedust_brew.enabled & ( cooldown.rising_sun_kick.remains < 2 ) & chi >= 3",
["action"] = "invoke_xuen",
},
{
["enabled"] = true,
["criteria"] = "talent.bonedust_brew.enabled & ( fight_remains < 30 & cooldown.bonedust_brew.remains < 4 & chi >= 4 || buff.bonedust_brew.up || ! spinning_crane_kick.max & active_enemies >= 3 & cooldown.bonedust_brew.remains <= 2 & chi >= 2 ) & ( pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > cooldown.storm_earth_and_fire.full_recharge_time )",
["action"] = "storm_earth_and_fire",
},
{
["enabled"] = true,
["criteria"] = "( ! buff.bonedust_brew.up & buff.storm_earth_and_fire.up & buff.storm_earth_and_fire.remains < 11 & spinning_crane_kick.max ) || ( ! buff.bonedust_brew.up & fight_remains < 30 & fight_remains > 10 & spinning_crane_kick.max & chi >= 4 ) || fight_remains < 10 || ( ( talent.skyreach.enabled || talent.skytouch.enabled ) & ! debuff.skyreach_exhaustion.up & active_enemies >= 4 & spinning_crane_kick.modifier >= 2 ) || ( pet.xuen_the_white_tiger.active & spinning_crane_kick.max & active_enemies >= 4 )",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "! buff.bonedust_brew.up & talent.bonedust_brew.enabled & cooldown.bonedust_brew.remains <= 2 & ( fight_remains > 60 & ( cooldown.storm_earth_and_fire.charges > 0 || cooldown.storm_earth_and_fire.remains > 10 ) & ( pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > 10 || variable.hold_xuen ) || ( ( pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > 13 ) & ( cooldown.storm_earth_and_fire.charges > 0 || cooldown.storm_earth_and_fire.remains > 13 || buff.storm_earth_and_fire.up ) ) )",
["list_name"] = "bdb_setup",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 20 || ( cooldown.storm_earth_and_fire.charges = 2 & cooldown.invoke_xuen_the_white_tiger.remains > cooldown.storm_earth_and_fire.full_recharge_time ) & cooldown.fists_of_fury.remains <= 9 & chi >= 2 & cooldown.whirling_dragon_punch.remains <= 12",
["action"] = "storm_earth_and_fire",
},
{
["enabled"] = true,
["criteria"] = "! talent.bonedust_brew.enabled & ( pet.xuen_the_white_tiger.active || fight_remains > 15 & cooldown.storm_earth_and_fire.full_recharge_time < cooldown.invoke_xuen_the_white_tiger.remains )",
["action"] = "storm_earth_and_fire",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "touch_of_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 90 || pet.xuen_the_white_tiger.active || variable.hold_xuen || boss & fight_remains < 16",
["action"] = "touch_of_karma",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 159 || variable.hold_xuen",
["action"] = "touch_of_karma",
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || boss & fight_remains < 20",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || boss & fight_remains < 15",
["action"] = "berserking",
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || boss & fight_remains < 10",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || boss & fight_remains < 20",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.down",
["action"] = "bag_of_tricks",
},
},
["sef_trinkets"] = {
{
["enabled"] = true,
["action"] = "horn_of_valor",
["description"] = "SEF Trinkets",
["criteria"] = "pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled & buff.storm_earth_and_fire.up || boss & fight_remains < 30",
},
{
["enabled"] = true,
["criteria"] = "( boss || target.time_to_die > 1 + cast_time ) & ( trinket.t1.is.manic_grieftorch & ! trinket.t2.has_use_buff || trinket.t2.is.manic_grieftorch & ! trinket.t1.has_use_buff )",
["action"] = "manic_grieftorch",
},
{
["enabled"] = true,
["criteria"] = "( pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled ) & ! buff.storm_earth_and_fire.up || boss & fight_remains < 25",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["criteria"] = "trinket.t1.has_use_buff & ! ( trinket.t1.is.horn_of_valor || trinket.t1.is.manic_grieftorch || trinket.t1.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || action_cooldown <= 60 & buff.storm_earth_and_fire.remains > 10 || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.has_use_buff & ! ( trinket.t1.is.horn_of_valor || trinket.t1.is.manic_grieftorch || trinket.t1.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "trinket.t2.has_use_buff & ! ( trinket.t2.is.horn_of_valor || trinket.t2.is.manic_grieftorch || trinket.t2.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || action_cooldown <= 60 & buff.storm_earth_and_fire.remains > 10 || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t2.has_use_buff & ! ( trinket.t2.is.horn_of_valor || trinket.t2.is.manic_grieftorch || trinket.t2.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["action"] = "trinket2",
["slot"] = "trinket2",
},
},
["st_cleave"] = {
{
["enabled"] = true,
["action"] = "blackout_kick",
["cycle_targets"] = 1,
["description"] = "ST Priority (<3 Targets)",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & buff.kicks_of_flowing_momentum.up || buff.pressure_point.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 2 & talent.shadowboxing_treads.enabled",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["action"] = "strike_of_the_windlord",
["enabled"] = true,
},
{
["action"] = "fists_of_fury",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.up & ( talent.shadowboxing_treads.enabled & active_enemies > 1 || cooldown.rising_sun_kick.remains > 1 )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( active_enemies = 1 || ! talent.shadowboxing_treads.enabled ) & cooldown.fists_of_fury.remains > 4 & talent.xuens_battlegear.enabled",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & active_enemies = 2 & cooldown.rising_sun_kick.remains & cooldown.fists_of_fury.remains & ( ! buff.bonedust_brew.up || spinning_crane_kick.modifier < 1.5 )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up & active_enemies = 2",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike & ( active_enemies > 1 || spinning_crane_kick.modifier >= 2.7 )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
},
["precombat"] = {
{
["action"] = "summon_white_tiger_statue",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "chi < chi.max",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "! talent.faeline_stomp.enabled",
["action"] = "chi_burst",
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
},
["serenity_2t"] = {
{
["enabled"] = true,
["action"] = "faeline_stomp",
["description"] = "Serenity 2 Targets",
["criteria"] = "debuff.fae_exposure_damage.remains < 2 & ! debuff.skyreach_exhaustion.remains < 2 & ! debuff.skyreach_exhaustion.remains",
},
{
["enabled"] = true,
["criteria"] = "( talent.skyreach.enabled || talent.skytouch.enabled ) & ! debuff.skyreach_exhaustion.up & combo_strike",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 3 & buff.teachings_of_the_monastery.remains < 1",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up & set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.fae_exposure_damage.remains < 2",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & buff.call_to_dominance.up & debuff.skyreach_exhaustion.remains > buff.call_to_dominance.remains",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled & debuff.skyreach_exhaustion.remains > 55",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
["interrupt"] = "1",
["criteria"] = "buff.invokers_delight.up",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & set_bonus.tier30_2pc",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 2",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "cooldown.fists_of_fury.remains > 5 & talent.shadowboxing_treads.enabled & buff.teachings_of_the_monastery.stack = 1 & combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "spinning_crane_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.teachings_of_the_monastery.enabled & buff.teachings_of_the_monastery.stack < 3",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
},
["fallthru"] = {
{
["enabled"] = true,
["action"] = "crackling_jade_lightning",
["description"] = "Fallthru",
["criteria"] = "buff.the_emperors_capacitor.stack > 19 & energy.time_to_max > execute_time - 1 & cooldown.rising_sun_kick.remains > execute_time || buff.the_emperors_capacitor.stack > 14 & ( cooldown.serenity.remains < 5 & talent.serenity.enabled || boss & fight_remains < 5 )",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi.max - chi >= ( 2 + buff.power_strikes.up )",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1 & active_enemies > 2",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1 & active_enemies = 1 & raid_event.adds.in > 20 || chi.max - chi >= 2 & active_enemies >= 2",
["action"] = "chi_burst",
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & active_enemies >= 5",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.chi_energy.stack > 30 - 5 * active_enemies & buff.storm_earth_and_fire.down & ( cooldown.rising_sun_kick.remains > 2 & cooldown.fists_of_fury.remains > 2 || cooldown.rising_sun_kick.remains < 3 & cooldown.fists_of_fury.remains > 3 & chi > 3 || cooldown.rising_sun_kick.remains > 3 & cooldown.fists_of_fury.remains < 3 & chi > 4 || chi.max - chi <= 1 & energy.time_to_max < 2 ) || buff.chi_energy.stack > 10 & fight_remains < 7",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1",
["action"] = "arcane_torrent",
},
{
["interrupt"] = "1",
["action"] = "flying_serpent_kick",
["enabled"] = true,
},
{
["action"] = "tiger_palm",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "spear_hand_strike",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.invoke_xuen_the_white_tiger.enabled || cooldown.invoke_xuen_the_white_tiger.duration > fight_remains",
["var_name"] = "hold_xuen",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! debuff.skyreach_exhaustion.remains < 1 & cooldown.rising_sun_kick.remains < 1",
["var_name"] = "hold_tp_rsk",
},
{
["enabled"] = true,
["action"] = "potion",
["description"] = "Potion",
["criteria"] = "buff.serenity.up || buff.storm_earth_and_fire.up & pet.xuen_the_white_tiger.active || fight_remains <= 30",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Build Chi at the start of combat",
["criteria"] = "time < 4 & chi < 5 & ! pet.xuen_the_white_tiger.active & ! talent.serenity.enabled",
["list_name"] = "opener",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use Trinkets (SEF)",
["strict"] = 1,
["criteria"] = "! talent.serenity.enabled",
["list_name"] = "sef_trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.serenity.enabled",
["list_name"] = "serenity_trinkets",
},
{
["enabled"] = true,
["action"] = "faeline_stomp",
["cycle_targets"] = 1,
["description"] = "Prioritize Faeline Stomp if playing with Faeline Harmony",
["criteria"] = "combo_strike & talent.faeline_harmony.enabled & debuff.fae_exposure_damage.remains < 1",
},
{
["enabled"] = true,
["action"] = "tiger_palm",
["cycle_targets"] = 1,
["description"] = "TP if not overcapping Chi or TotM",
["criteria"] = "! buff.serenity.up & buff.teachings_of_the_monastery.stack < 3 & combo_strike & chi.max - chi >= ( 2 + buff.power_strikes.up ) & ( ! talent.invoke_xuen_the_white_tiger.enabled & ! talent.serenity.enabled || ( ( ! talent.skyreach.enabled & ! talent.skytouch.enabled ) || time > 5 || pet.xuen_the_white_tiger.active ) ) & ! variable.hold_tp_rsk",
},
{
["enabled"] = true,
["action"] = "chi_burst",
["description"] = "Use Chi Burst to reset Faeline Stomp",
["criteria"] = "talent.faeline_stomp.enabled & cooldown.faeline_stomp.remains & ( chi.max - chi >= 1 & active_enemies = 1 || chi.max - chi >= 2 & active_enemies >= 2 ) & ! talent.faeline_harmony.enabled",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use Cooldowns",
["strict"] = 1,
["criteria"] = "! talent.serenity.enabled",
["list_name"] = "cd_sef",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.serenity.enabled",
["list_name"] = "cd_serenity",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Serenity Priority",
["strict"] = 1,
["criteria"] = "buff.serenity.up & buff.bloodlust.up",
["list_name"] = "serenity_lust",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "buff.serenity.up & active_enemies > 4",
["list_name"] = "serenity_aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "buff.serenity.up & active_enemies = 4",
["list_name"] = "serenity_4t",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "buff.serenity.up & active_enemies = 3",
["list_name"] = "serenity_3t",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "buff.serenity.up & active_enemies = 2",
["list_name"] = "serenity_2t",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "buff.serenity.up & active_enemies = 1",
["list_name"] = "serenity_st",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Default Priority",
["strict"] = 1,
["criteria"] = "active_enemies > 4",
["list_name"] = "default_aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 4",
["list_name"] = "default_4t",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 3",
["list_name"] = "default_3t",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 2",
["list_name"] = "default_2t",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1",
["list_name"] = "default_st",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "fallthru",
},
},
["serenity_trinkets"] = {
{
["enabled"] = true,
["action"] = "horn_of_valor",
["description"] = "Serenity Trinkets",
["criteria"] = "pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled & buff.storm_earth_and_fire.up || boss & fight_remains < 30",
},
{
["enabled"] = true,
["criteria"] = "( boss || target.time_to_die > 1 + cast_time ) & ( trinket.t1.is.manic_grieftorch & ! trinket.t2.has_use_buff || trinket.t2.is.manic_grieftorch & ! trinket.t1.has_use_buff )",
["action"] = "manic_grieftorch",
},
{
["enabled"] = true,
["criteria"] = "( pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled ) & ! buff.storm_earth_and_fire.up || boss & fight_remains < 25",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["criteria"] = "trinket.t1.has_use_buff & ! ( trinket.t1.is.horn_of_valor || trinket.t1.is.manic_grieftorch || trinket.t1.is.algethar_puzzle_box ) & buff.serenity.remains > 10 || boss & fight_remains < 30",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.has_use_buff & ! ( trinket.t1.is.horn_of_valor || trinket.t1.is.manic_grieftorch || trinket.t1.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "trinket.t2.has_use_buff & ! ( trinket.t2.is.horn_of_valor || trinket.t2.is.manic_grieftorch || trinket.t2.is.algethar_puzzle_box ) & buff.serenity.remains > 10 || boss & fight_remains < 30",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t2.has_use_buff & ! ( trinket.t2.is.horn_of_valor || trinket.t2.is.manic_grieftorch || trinket.t2.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled",
["action"] = "use_items",
},
},
},
["version"] = 20230807,
["warnings"] = "The import for 'serenity_3t' required some automated changes.\nLine 8: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 9: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 11: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 16: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 22: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'serenity_st' required some automated changes.\nLine 6: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 7: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 14: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'cd_serenity' required some automated changes.\nLine 3: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 6: Converted 'talent.invokers_delight' to 'talent.invokers_delight.enabled' (1x).\nLine 6: Converted 'talent.drinking_horn_cover' to 'talent.drinking_horn_cover.enabled' (1x).\nLine 6: Converted 'talent.drinking_horn_cover' to 'talent.drinking_horn_cover.enabled' (1x).\nLine 6: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\n\nThe import for 'default_st' required some automated changes.\nLine 6: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\n\nThe import for 'default_3t' required some automated changes.\nLine 1: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 3: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 12: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 19: Converted 'talent.storm_earth_and_fire' to 'talent.storm_earth_and_fire.enabled' (1x).\nLine 19: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 19: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 22: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 23: Converted 'talent.storm_earth_and_fire' to 'talent.storm_earth_and_fire.enabled' (1x).\nLine 23: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\n\nThe import for 'default_aoe' required some automated changes.\nLine 2: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 7: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 11: Converted 'talent.whirling_dragon_punch' to 'talent.whirling_dragon_punch.enabled' (1x).\nLine 18: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 18: Converted 'talent.crane_vortex' to 'talent.crane_vortex.enabled' (1x).\nLine 19: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 24: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\n\nThe import for 'bdb_setup' required some automated changes.\nLine 1: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 4: Converted 'talent.whirling_dragon_punch' to 'talent.whirling_dragon_punch.enabled' (1x).\nLine 5: Converted 'talent.whirling_dragon_punch' to 'talent.whirling_dragon_punch.enabled' (1x).\nLine 6: Converted 'talent.whirling_dragon_punch' to 'talent.whirling_dragon_punch.enabled' (1x).\n\nThe import for 'serenity_4t' required some automated changes.\nLine 4: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 7: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 10: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 15: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 21: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'serenity_aoe' required some automated changes.\nLine 2: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 7: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 10: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 16: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 22: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'default_2t' required some automated changes.\nLine 1: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 2: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 14: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 17: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 17: Converted 'talent.xuens_battlegear' to 'talent.xuens_battlegear.enabled' (1x).\nLine 24: Converted 'talent.storm_earth_and_fire' to 'talent.storm_earth_and_fire.enabled' (1x).\nLine 24: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\n\nThe import for 'serenity_trinkets' required some automated changes.\nLine 1: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 2: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.is.horn_of_valor' to 'trinket.t1.is.horn_of_valor' (1x).\nLine 4: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 4: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.is.horn_of_valor' to 'trinket.t1.is.horn_of_valor' (1x).\nLine 5: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 5: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 5: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 5: Converted operations in '!trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to '!trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.is.horn_of_valor' to 'trinket.t2.is.horn_of_valor' (1x).\nLine 6: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 6: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 7: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.is.horn_of_valor' to 'trinket.t2.is.horn_of_valor' (1x).\nLine 7: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 7: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 7: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 7: Converted operations in '!trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to '!trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 8: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 8: Converted operations in 'cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled' to 'cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled'.\n\nThe import for 'st_cleave' required some automated changes.\nLine 1: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 3: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 5: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 8: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 11: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 11: Converted 'talent.xuens_battlegear' to 'talent.xuens_battlegear.enabled' (1x).\n\nThe import for 'cd_sef' required some automated changes.\nLine 3: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 4: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 5: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 7: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 9: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\n\nThe import for 'sef_trinkets' required some automated changes.\nLine 1: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 2: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.is.horn_of_valor' to 'trinket.t1.is.horn_of_valor' (1x).\nLine 4: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 4: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 4: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 4: Converted operations in 'trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||action_cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to 'trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||action_cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.is.horn_of_valor' to 'trinket.t1.is.horn_of_valor' (1x).\nLine 5: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 5: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 5: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 5: Converted operations in '!trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to '!trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.is.horn_of_valor' to 'trinket.t2.is.horn_of_valor' (1x).\nLine 6: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 6: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 6: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 6: Converted operations in 'trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||action_cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to 'trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||action_cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 7: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.is.horn_of_valor' to 'trinket.t2.is.horn_of_valor' (1x).\nLine 7: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 7: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 7: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 7: Converted operations in '!trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to '!trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 5: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 6: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 7: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 8: Converted 'talent.faeline_harmony' to 'talent.faeline_harmony.enabled' (1x).\nLine 9: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 9: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 9: Converted 'talent.skyreach' to 'talent.skyreach.enabled' (1x).\nLine 9: Converted 'talent.skytouch' to 'talent.skytouch.enabled' (1x).\nLine 10: Converted 'talent.faeline_stomp' to 'talent.faeline_stomp.enabled' (1x).\nLine 10: Converted 'talent.faeline_harmony' to 'talent.faeline_harmony.enabled' (1x).\nLine 11: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 12: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.faeline_stomp' to 'talent.faeline_stomp.enabled' (1x).\n\nThe import for 'serenity_2t' required some automated changes.\nLine 8: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 9: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 11: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 14: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 19: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'fallthru' required some automated changes.\nLine 1: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\n\nThe import for 'serenity_lust' required some automated changes.\nLine 5: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 11: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'default_4t' required some automated changes.\nLine 2: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 7: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\n\nImported 21 action lists.\n",
["author"] = "SimC",
["profile"] = "actions.precombat+=/summon_white_tiger_statue\nactions.precombat+=/expel_harm,if=chi<chi.max\nactions.precombat+=/chi_burst,if=!talent.faeline_stomp\nactions.precombat+=/chi_wave\n\n# Executed every time the actor is available.\nactions=spear_hand_strike\nactions+=/variable,name=hold_xuen,op=set,value=!talent.invoke_xuen_the_white_tiger||cooldown.invoke_xuen_the_white_tiger.duration>fight_remains\nactions+=/variable,name=hold_tp_rsk,op=set,value=!debuff.skyreach_exhaustion.remains<1&cooldown.rising_sun_kick.remains<1\n# Potion\nactions+=/potion,if=buff.serenity.up||buff.storm_earth_and_fire.up&pet.xuen_the_white_tiger.active||fight_remains<=30\n# Build Chi at the start of combat\nactions+=/call_action_list,name=opener,if=time<4&chi<5&!pet.xuen_the_white_tiger.active&!talent.serenity\n# Use Trinkets (SEF)\nactions+=/call_action_list,name=sef_trinkets,strict=1,if=!talent.serenity\nactions+=/call_action_list,name=serenity_trinkets,strict=1,if=talent.serenity\n# Prioritize Faeline Stomp if playing with Faeline Harmony\nactions+=/faeline_stomp,cycle_targets=1,if=combo_strike&talent.faeline_harmony&debuff.fae_exposure_damage.remains<1\n# TP if not overcapping Chi or TotM\nactions+=/tiger_palm,cycle_targets=1,if=!buff.serenity.up&buff.teachings_of_the_monastery.stack<3&combo_strike&chi.max-chi>=(2+buff.power_strikes.up)&(!talent.invoke_xuen_the_white_tiger&!talent.serenity||((!talent.skyreach&!talent.skytouch)||time>5||pet.xuen_the_white_tiger.active))&!variable.hold_tp_rsk\n# Use Chi Burst to reset Faeline Stomp\nactions+=/chi_burst,if=talent.faeline_stomp&cooldown.faeline_stomp.remains&(chi.max-chi>=1&active_enemies=1||chi.max-chi>=2&active_enemies>=2)&!talent.faeline_harmony\n# Use Cooldowns\nactions+=/call_action_list,name=cd_sef,strict=1,if=!talent.serenity\nactions+=/call_action_list,name=cd_serenity,strict=1,if=talent.serenity\n# Serenity Priority\nactions+=/call_action_list,name=serenity_lust,strict=1,if=buff.serenity.up&buff.bloodlust.up\nactions+=/call_action_list,name=serenity_aoe,strict=1,if=buff.serenity.up&active_enemies>4\nactions+=/call_action_list,name=serenity_4t,strict=1,if=buff.serenity.up&active_enemies=4\nactions+=/call_action_list,name=serenity_3t,strict=1,if=buff.serenity.up&active_enemies=3\nactions+=/call_action_list,name=serenity_2t,strict=1,if=buff.serenity.up&active_enemies=2\nactions+=/call_action_list,name=serenity_st,strict=1,if=buff.serenity.up&active_enemies=1\n# Default Priority\nactions+=/call_action_list,name=default_aoe,strict=1,if=active_enemies>4\nactions+=/call_action_list,name=default_4t,strict=1,if=active_enemies=4\nactions+=/call_action_list,name=default_3t,strict=1,if=active_enemies=3\nactions+=/call_action_list,name=default_2t,strict=1,if=active_enemies=2\nactions+=/call_action_list,name=default_st,strict=1,if=active_enemies=1\nactions+=/call_action_list,name=fallthru\n\n# >4 Targets\nactions.default_aoe+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up&spinning_crane_kick.max\nactions.default_aoe+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist\nactions.default_aoe+=/whirling_dragon_punch,if=active_enemies>8\nactions.default_aoe+=/fists_of_fury,cycle_targets=1\nactions.default_aoe+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&spinning_crane_kick.max\nactions.default_aoe+=/rising_sun_kick,cycle_targets=1,if=buff.bonedust_brew.up&buff.pressure_point.up&set_bonus.tier30_2pc\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.default_aoe+=/whirling_dragon_punch,if=active_enemies>=5\nactions.default_aoe+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&set_bonus.tier30_2pc\nactions.default_aoe+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.default_aoe+=/rising_sun_kick,cycle_targets=1,if=talent.whirling_dragon_punch&cooldown.whirling_dragon_punch.remains<3&cooldown.fists_of_fury.remains>3&!buff.kicks_of_flowing_momentum.up\nactions.default_aoe+=/expel_harm,if=chi=1&(!cooldown.rising_sun_kick.remains||!cooldown.strike_of_the_windlord.remains)||chi=2&!cooldown.fists_of_fury.remains\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains<5&buff.chi_energy.stack>10\nactions.default_aoe+=/chi_burst,if=buff.bloodlust.up&chi<5\nactions.default_aoe+=/chi_burst,if=chi<5&energy<50\nactions.default_aoe+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>2)&spinning_crane_kick.max&buff.bloodlust.up\nactions.default_aoe+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>2)&spinning_crane_kick.max&buff.invokers_delight.up\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&combo_strike&set_bonus.tier30_2pc&!buff.bonedust_brew.up&active_enemies<15&!talent.crane_vortex\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&combo_strike&set_bonus.tier30_2pc&!buff.bonedust_brew.up&active_enemies<8\nactions.default_aoe+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>4)&spinning_crane_kick.max\nactions.default_aoe+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.default_aoe+=/strike_of_the_windlord,cycle_targets=1\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&combo_strike&!spinning_crane_kick.max\nactions.default_aoe+=/chi_burst,if=chi.max-chi>=1&active_enemies=1&raid_event.adds.in>20||chi.max-chi>=2\n\n# 4 Targets\nactions.default_4t+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up&spinning_crane_kick.max\nactions.default_4t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist\nactions.default_4t+=/fists_of_fury,cycle_targets=1\nactions.default_4t+=/rising_sun_kick,cycle_targets=1,if=buff.bonedust_brew.up&buff.pressure_point.up&set_bonus.tier30_2pc\nactions.default_4t+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&spinning_crane_kick.max\nactions.default_4t+=/rising_sun_kick,cycle_targets=1,if=!buff.bonedust_brew.up&buff.pressure_point.up&cooldown.fists_of_fury.remains>5\nactions.default_4t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.default_4t+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.default_4t+=/expel_harm,if=chi=1&(!cooldown.rising_sun_kick.remains||!cooldown.strike_of_the_windlord.remains)||chi=2&!cooldown.fists_of_fury.remains\nactions.default_4t+=/spinning_crane_kick,if=combo_strike&cooldown.fists_of_fury.remains>3&buff.chi_energy.stack>10\nactions.default_4t+=/blackout_kick,cycle_targets=1,if=combo_strike&set_bonus.tier30_2pc\nactions.default_4t+=/chi_burst,if=buff.bloodlust.up&chi<5\nactions.default_4t+=/chi_burst,if=chi<5&energy<50\nactions.default_4t+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>4)&spinning_crane_kick.max\nactions.default_4t+=/whirling_dragon_punch\nactions.default_4t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.default_4t+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.default_4t+=/strike_of_the_windlord,cycle_targets=1\nactions.default_4t+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>4)\nactions.default_4t+=/blackout_kick,cycle_targets=1,if=combo_strike\n\n# 3 Targets\nactions.default_3t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.default_3t+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.default_3t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist&(cooldown.invoke_xuen_the_white_tiger.remains>20||fight_remains<5)\nactions.default_3t+=/fists_of_fury,cycle_targets=1\nactions.default_3t+=/rising_sun_kick,cycle_targets=1,if=buff.bonedust_brew.up&buff.pressure_point.up&set_bonus.tier30_2pc\nactions.default_3t+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike\nactions.default_3t+=/rising_sun_kick,cycle_targets=1,if=!buff.bonedust_brew.up&buff.pressure_point.up\nactions.default_3t+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.default_3t+=/expel_harm,if=chi=1&(!cooldown.rising_sun_kick.remains||!cooldown.strike_of_the_windlord.remains)||chi=2&!cooldown.fists_of_fury.remains\nactions.default_3t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=2\nactions.default_3t+=/strike_of_the_windlord,cycle_targets=1\nactions.default_3t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&(talent.shadowboxing_treads||cooldown.rising_sun_kick.remains>1)\nactions.default_3t+=/whirling_dragon_punch\nactions.default_3t+=/chi_burst,if=buff.bloodlust.up&chi<5\nactions.default_3t+=/chi_burst,if=chi<5&energy<50\nactions.default_3t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.default_3t+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains<3&buff.chi_energy.stack>15\nactions.default_3t+=/rising_sun_kick,cycle_targets=1,if=cooldown.fists_of_fury.remains>4&chi>3\nactions.default_3t+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&cooldown.rising_sun_kick.remains&cooldown.fists_of_fury.remains&chi>4&((talent.storm_earth_and_fire&!talent.bonedust_brew)||(talent.serenity))\nactions.default_3t+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains\nactions.default_3t+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.default_3t+=/blackout_kick,cycle_targets=1,if=combo_strike&talent.shadowboxing_treads&!spinning_crane_kick.max\nactions.default_3t+=/spinning_crane_kick,cycle_targets=1,if=(combo_strike&chi>5&talent.storm_earth_and_fire||combo_strike&chi>4&talent.serenity)\n\n# 2 Targets\nactions.default_2t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.default_2t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist&(cooldown.invoke_xuen_the_white_tiger.remains>20||fight_remains<5)\nactions.default_2t+=/rising_sun_kick,if=!cooldown.fists_of_fury.remains\nactions.default_2t+=/fists_of_fury,cycle_targets=1\nactions.default_2t+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.default_2t+=/rising_sun_kick,cycle_targets=1,if=buff.kicks_of_flowing_momentum.up||buff.pressure_point.up\nactions.default_2t+=/expel_harm,if=chi=1&(!cooldown.rising_sun_kick.remains||!cooldown.strike_of_the_windlord.remains)||chi=2&!cooldown.fists_of_fury.remains\nactions.default_2t+=/chi_burst,if=buff.bloodlust.up&chi<5\nactions.default_2t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=2\nactions.default_2t+=/blackout_kick,cycle_targets=1,if=buff.pressure_point.remains&chi>2&prev.rising_sun_kick\nactions.default_2t+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.default_2t+=/chi_burst,if=chi<5&energy<50\nactions.default_2t+=/strike_of_the_windlord,cycle_targets=1\nactions.default_2t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&(talent.shadowboxing_treads||cooldown.rising_sun_kick.remains>1)\nactions.default_2t+=/whirling_dragon_punch\nactions.default_2t+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.default_2t+=/rising_sun_kick,cycle_targets=1,if=!talent.shadowboxing_treads&cooldown.fists_of_fury.remains>4&talent.xuens_battlegear\nactions.default_2t+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.rising_sun_kick.remains&cooldown.fists_of_fury.remains&(!buff.bonedust_brew.up||spinning_crane_kick.modifier<1.5)\nactions.default_2t+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.default_2t+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&spinning_crane_kick.modifier>=2.7\nactions.default_2t+=/rising_sun_kick,cycle_targets=1\nactions.default_2t+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.default_2t+=/faeline_stomp,if=combo_strike\nactions.default_2t+=/spinning_crane_kick,cycle_targets=1,if=(combo_strike&chi>5&talent.storm_earth_and_fire||combo_strike&chi>4&talent.serenity)\n\n# 1 Target\nactions.default_st+=/rising_sun_kick,if=!cooldown.fists_of_fury.remains\nactions.default_st+=/fists_of_fury,if=!buff.pressure_point.up&debuff.skyreach_exhaustion.remains<55\nactions.default_st+=/faeline_stomp,if=debuff.skyreach_exhaustion.remains<1&debuff.fae_exposure_damage.remains<3\nactions.default_st+=/rising_sun_kick,if=buff.pressure_point.up||debuff.skyreach_exhaustion.remains>55\nactions.default_st+=/blackout_kick,if=buff.pressure_point.remains&chi>2&prev.rising_sun_kick\nactions.default_st+=/strike_of_the_windlord,if=talent.thunderfist&(cooldown.invoke_xuen_the_white_tiger.remains>20||fight_remains<5)\nactions.default_st+=/rising_sun_kick,if=buff.kicks_of_flowing_momentum.up||buff.pressure_point.up||debuff.skyreach_exhaustion.remains>55\nactions.default_st+=/blackout_kick,if=buff.teachings_of_the_monastery.stack=3\nactions.default_st+=/fists_of_fury\nactions.default_st+=/rising_sun_kick\nactions.default_st+=/expel_harm,if=chi=1&(!cooldown.rising_sun_kick.remains||!cooldown.strike_of_the_windlord.remains)||chi=2&!cooldown.fists_of_fury.remains\nactions.default_st+=/chi_burst,if=buff.bloodlust.up&chi<5\nactions.default_st+=/blackout_kick,if=buff.teachings_of_the_monastery.stack=2&debuff.skyreach_exhaustion.remains>1\nactions.default_st+=/chi_burst,if=chi<5&energy<50\nactions.default_st+=/strike_of_the_windlord,if=debuff.skyreach_exhaustion.remains>30||fight_remains<5\nactions.default_st+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.default_st+=/blackout_kick,if=buff.teachings_of_the_monastery.up&cooldown.rising_sun_kick.remains>1\nactions.default_st+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&spinning_crane_kick.modifier>=2.7\nactions.default_st+=/whirling_dragon_punch\nactions.default_st+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.default_st+=/blackout_kick,if=combo_strike\n\n# Bonedust Brew Setup\nactions.bdb_setup+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist&active_enemies>3\nactions.bdb_setup+=/bonedust_brew,if=spinning_crane_kick.max&chi>=4\nactions.bdb_setup+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.max-chi>=2&buff.storm_earth_and_fire.up\nactions.bdb_setup+=/blackout_kick,cycle_targets=1,if=combo_strike&!talent.whirling_dragon_punch&!spinning_crane_kick.max\nactions.bdb_setup+=/rising_sun_kick,cycle_targets=1,if=combo_strike&chi>=5&talent.whirling_dragon_punch\nactions.bdb_setup+=/rising_sun_kick,cycle_targets=1,if=combo_strike&active_enemies>=2&talent.whirling_dragon_punch\n\n# Storm, Earth and Fire Cooldowns\nactions.cd_sef+=/call_action_list,name=sef_trinkets\nactions.cd_sef+=/summon_white_tiger_statue,if=pet.xuen_the_white_tiger.active\nactions.cd_sef+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&fight_remains>25&talent.bonedust_brew&cooldown.bonedust_brew.remains<=5&(active_enemies<3&chi>=3||active_enemies>=3&chi>=2)||boss&fight_remains<25\nactions.cd_sef+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&fight_remains>25&!talent.bonedust_brew&(cooldown.rising_sun_kick.remains<2)&chi>=3\nactions.cd_sef+=/storm_earth_and_fire,if=talent.bonedust_brew&(fight_remains<30&cooldown.bonedust_brew.remains<4&chi>=4||buff.bonedust_brew.up||!spinning_crane_kick.max&active_enemies>=3&cooldown.bonedust_brew.remains<=2&chi>=2)&(pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>cooldown.storm_earth_and_fire.full_recharge_time)\nactions.cd_sef+=/bonedust_brew,if=(!buff.bonedust_brew.up&buff.storm_earth_and_fire.up&buff.storm_earth_and_fire.remains<11&spinning_crane_kick.max)||(!buff.bonedust_brew.up&fight_remains<30&fight_remains>10&spinning_crane_kick.max&chi>=4)||fight_remains<10||((talent.skyreach.enabled||talent.skytouch.enabled)&!debuff.skyreach_exhaustion.up&active_enemies>=4&spinning_crane_kick.modifier>=2)||(pet.xuen_the_white_tiger.active&spinning_crane_kick.max&active_enemies>=4)\nactions.cd_sef+=/call_action_list,name=bdb_setup,if=!buff.bonedust_brew.up&talent.bonedust_brew&cooldown.bonedust_brew.remains<=2&(fight_remains>60&(cooldown.storm_earth_and_fire.charges>0||cooldown.storm_earth_and_fire.remains>10)&(pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>10||variable.hold_xuen)||((pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>13)&(cooldown.storm_earth_and_fire.charges>0||cooldown.storm_earth_and_fire.remains>13||buff.storm_earth_and_fire.up)))\nactions.cd_sef+=/storm_earth_and_fire,if=boss&fight_remains<20||(cooldown.storm_earth_and_fire.charges=2&cooldown.invoke_xuen_the_white_tiger.remains>cooldown.storm_earth_and_fire.full_recharge_time)&cooldown.fists_of_fury.remains<=9&chi>=2&cooldown.whirling_dragon_punch.remains<=12\nactions.cd_sef+=/storm_earth_and_fire,if=!talent.bonedust_brew&(pet.xuen_the_white_tiger.active||fight_remains>15&cooldown.storm_earth_and_fire.full_recharge_time<cooldown.invoke_xuen_the_white_tiger.remains)\n## actions.cd_sef+=/touch_of_death,cycle_targets=1,if=!boss&combo_strike&target.health<health\n## actions.cd_sef+=/touch_of_death,cycle_targets=1,if=!boss&combo_strike&(target.time_to_die>60||debuff.bonedust_brew_debuff.up||fight_remains<10)\nactions.cd_sef+=/touch_of_death,cycle_targets=1,if=combo_strike\nactions.cd_sef+=/touch_of_karma,cycle_targets=1,if=fight_remains>90||pet.xuen_the_white_tiger.active||variable.hold_xuen||boss&fight_remains<16\nactions.cd_sef+=/touch_of_karma,if=fight_remains>159||variable.hold_xuen\nactions.cd_sef+=/blood_fury,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||boss&fight_remains<20\nactions.cd_sef+=/berserking,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||boss&fight_remains<15\nactions.cd_sef+=/lights_judgment\nactions.cd_sef+=/fireblood,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||boss&fight_remains<10\nactions.cd_sef+=/ancestral_call,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||boss&fight_remains<20\nactions.cd_sef+=/bag_of_tricks,if=buff.storm_earth_and_fire.down\n\n# Serenity Cooldowns\nactions.cd_serenity+=/call_action_list,name=serenity_trinkets\nactions.cd_serenity+=/summon_white_tiger_statue,if=!cooldown.invoke_xuen_the_white_tiger.remains||active_enemies>4||cooldown.invoke_xuen_the_white_tiger.remains>50||boss&fight_remains<=30\nactions.cd_serenity+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&talent.bonedust_brew&cooldown.bonedust_brew.remains<=5&target.time_to_die>25||buff.bloodlust.up||boss&fight_remains<25\nactions.cd_serenity+=/invoke_xuen_the_white_tiger,if=target.time_to_die>25&fight_remains>120||fight_remains<60&(debuff.skyreach_exhaustion.remains<2||debuff.skyreach_exhaustion.remains>55)&!cooldown.serenity.remains&active_enemies<3||buff.bloodlust.up||boss&fight_remains<23\nactions.cd_serenity+=/bonedust_brew,if=!buff.bonedust_brew.up&(cooldown.serenity.up||cooldown.serenity.remains>15||boss&fight_remains<30&fight_remains>10)||boss&fight_remains<10\nactions.cd_serenity+=/serenity,if=buff.invokers_delight.up||!talent.invokers_delight||variable.hold_xuen&(talent.drinking_horn_cover&fight_remains>110||!talent.drinking_horn_cover&fight_remains>105)||!talent.invoke_xuen_the_white_tiger||boss&fight_remains<15\n## actions.cd_serenity+=/touch_of_death,cycle_targets=1,if=!boss&combo_strike&target.health<health\n## actions.cd_serenity+=/touch_of_death,cycle_targets=1,if=!boss&combo_strike&(target.time_to_die>60||debuff.bonedust_brew_debuff.up||fight_remains<10)\nactions.cd_serenity+=/touch_of_death,cycle_targets=1,if=combo_strike&!buff.serenity.up&(target.health.current<health||buff.hidden_masters_forbidden_touch.up&(buff.hidden_masters_forbidden_touch.remains<2||buff.hidden_masters_forbidden_touch.remains>target.time_to_die)||target.time_to_die>60||debuff.bonedust_brew_debuff.up||boss&fight_remains<10)\nactions.cd_serenity+=/touch_of_karma,if=fight_remains>90||boss&fight_remains<10\nactions.cd_serenity+=/blood_fury,if=buff.serenity.up||boss&fight_remains<20\nactions.cd_serenity+=/berserking,if=buff.serenity.up||boss&fight_remains<20\nactions.cd_serenity+=/lights_judgment\nactions.cd_serenity+=/fireblood,if=buff.serenity.up||boss&fight_remains<20\nactions.cd_serenity+=/ancestral_call,if=buff.serenity.up||boss&fight_remains<20\nactions.cd_serenity+=/bag_of_tricks,if=buff.serenity.up||boss&fight_remains<20\n\n# Fallthru\nactions.fallthru+=/crackling_jade_lightning,if=buff.the_emperors_capacitor.stack>19&energy.time_to_max>execute_time-1&cooldown.rising_sun_kick.remains>execute_time||buff.the_emperors_capacitor.stack>14&(cooldown.serenity.remains<5&talent.serenity||boss&fight_remains<5)\nactions.fallthru+=/faeline_stomp,if=combo_strike\nactions.fallthru+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.max-chi>=(2+buff.power_strikes.up)\nactions.fallthru+=/expel_harm,if=chi.max-chi>=1&active_enemies>2\nactions.fallthru+=/chi_burst,if=chi.max-chi>=1&active_enemies=1&raid_event.adds.in>20||chi.max-chi>=2&active_enemies>=2\nactions.fallthru+=/chi_wave\nactions.fallthru+=/expel_harm,if=chi.max-chi>=1\nactions.fallthru+=/blackout_kick,cycle_targets=1,if=combo_strike&active_enemies>=5\nactions.fallthru+=/spinning_crane_kick,if=combo_strike&buff.chi_energy.stack>30-5*active_enemies&buff.storm_earth_and_fire.down&(cooldown.rising_sun_kick.remains>2&cooldown.fists_of_fury.remains>2||cooldown.rising_sun_kick.remains<3&cooldown.fists_of_fury.remains>3&chi>3||cooldown.rising_sun_kick.remains>3&cooldown.fists_of_fury.remains<3&chi>4||chi.max-chi<=1&energy.time_to_max<2)||buff.chi_energy.stack>10&fight_remains<7\nactions.fallthru+=/arcane_torrent,if=chi.max-chi>=1\nactions.fallthru+=/flying_serpent_kick,interrupt=1\nactions.fallthru+=/tiger_palm\n\n# Opener\nactions.opener+=/summon_white_tiger_statue\nactions.opener+=/expel_harm,if=talent.chi_burst.enabled&chi.max-chi>=3\nactions.opener+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.max-chi>=(2+buff.power_strikes.up)\nactions.opener+=/expel_harm,if=talent.chi_burst.enabled&chi=3\nactions.opener+=/chi_wave,if=chi.max-chi=2\nactions.opener+=/expel_harm\nactions.opener+=/chi_burst,if=chi>1&chi.max-chi>=2\n\n# Serenity Lust\nactions.serenity_lust+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<1\nactions.serenity_lust+=/fists_of_fury,cycle_targets=1,if=buff.serenity.remains<1\nactions.serenity_lust+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.teachings_of_the_monastery.stack=3&buff.teachings_of_the_monastery.remains<1\nactions.serenity_lust+=/rising_sun_kick,cycle_targets=1\nactions.serenity_lust+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist\nactions.serenity_lust+=/fists_of_fury,if=buff.invokers_delight.up,interrupt=1,interrupt_if=buff.serenity.remains>=1&buff.invokers_delight.up\n## actions.serenity_lust+=/fists_of_fury_cancel\nactions.serenity_lust+=/blackout_kick,cycle_targets=1,if=combo_strike&set_bonus.tier30_2pc\nactions.serenity_lust+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.serenity_lust+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.serenity_lust+=/whirling_dragon_punch\nactions.serenity_lust+=/tiger_palm,cycle_targets=1,if=talent.teachings_of_the_monastery&buff.teachings_of_the_monastery.stack<3\n\n# Serenity >4 Targets\nactions.serenity_aoe+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<1\nactions.serenity_aoe+=/blackout_kick,cycle_targets=1,if=combo_strike&!spinning_crane_kick.max&talent.shadowboxing_treads\nactions.serenity_aoe+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.teachings_of_the_monastery.stack=3&buff.teachings_of_the_monastery.remains<1\nactions.serenity_aoe+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.serenity_aoe+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&set_bonus.tier30_2pc\nactions.serenity_aoe+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.serenity_aoe+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist&buff.call_to_dominance.up&debuff.skyreach_exhaustion.remains>buff.call_to_dominance.remains&active_enemies<10\nactions.serenity_aoe+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<2\nactions.serenity_aoe+=/fists_of_fury,cycle_targets=1,if=buff.invokers_delight.up,interrupt=1\n## actions.serenity_aoe+=/fists_of_fury_cancel,cycle_targets=1\nactions.serenity_aoe+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist\nactions.serenity_aoe+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.serenity_aoe+=/blackout_kick,cycle_targets=1,if=active_enemies<6&combo_strike&set_bonus.tier30_2pc\nactions.serenity_aoe+=/spinning_crane_kick,if=combo_strike&spinning_crane_kick.max\nactions.serenity_aoe+=/tiger_palm,cycle_targets=1,if=(talent.skyreach.enabled||talent.skytouch.enabled)&!debuff.skyreach_exhaustion.up&combo_strike&active_enemies=5\nactions.serenity_aoe+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.serenity_aoe+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&active_enemies>=3&combo_strike\nactions.serenity_aoe+=/strike_of_the_windlord,cycle_targets=1\nactions.serenity_aoe+=/spinning_crane_kick,if=combo_strike\nactions.serenity_aoe+=/whirling_dragon_punch\nactions.serenity_aoe+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.serenity_aoe+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.serenity_aoe+=/tiger_palm,cycle_targets=1,if=talent.teachings_of_the_monastery&buff.teachings_of_the_monastery.stack<3\n\n# Serenity 4 Targets\nactions.serenity_4t+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<1\nactions.serenity_4t+=/tiger_palm,cycle_targets=1,if=(talent.skyreach.enabled||talent.skytouch.enabled)&!debuff.skyreach_exhaustion.up&combo_strike\nactions.serenity_4t+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.teachings_of_the_monastery.stack=3&buff.teachings_of_the_monastery.remains<1\nactions.serenity_4t+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&!talent.bonedust_brew\nactions.serenity_4t+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&set_bonus.tier30_2pc\nactions.serenity_4t+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.serenity_4t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist&buff.call_to_dominance.up&debuff.skyreach_exhaustion.remains>buff.call_to_dominance.remains\nactions.serenity_4t+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<2\nactions.serenity_4t+=/fists_of_fury,cycle_targets=1,if=buff.invokers_delight.up,interrupt=1\n## actions.serenity_4t+=/fists_of_fury_cancel,cycle_targets=1\nactions.serenity_4t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist\nactions.serenity_4t+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.serenity_4t+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up\nactions.serenity_4t+=/blackout_kick,cycle_targets=1,if=combo_strike&set_bonus.tier30_2pc\nactions.serenity_4t+=/spinning_crane_kick,if=combo_strike&spinning_crane_kick.max\nactions.serenity_4t+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&combo_strike\nactions.serenity_4t+=/strike_of_the_windlord,cycle_targets=1\nactions.serenity_4t+=/spinning_crane_kick,if=combo_strike\nactions.serenity_4t+=/whirling_dragon_punch\nactions.serenity_4t+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.serenity_4t+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.serenity_4t+=/tiger_palm,cycle_targets=1,if=talent.teachings_of_the_monastery&buff.teachings_of_the_monastery.stack<3\n\n# Serenity 3 Targets\nactions.serenity_3t+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<1\nactions.serenity_3t+=/tiger_palm,cycle_targets=1,if=(talent.skyreach.enabled||talent.skytouch.enabled)&!debuff.skyreach_exhaustion.up&combo_strike\nactions.serenity_3t+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.teachings_of_the_monastery.stack=3&buff.teachings_of_the_monastery.remains<1\nactions.serenity_3t+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up\nactions.serenity_3t+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&set_bonus.tier30_2pc\nactions.serenity_3t+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.serenity_3t+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<2\nactions.serenity_3t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist&buff.call_to_dominance.up&debuff.skyreach_exhaustion.remains>buff.call_to_dominance.remains\nactions.serenity_3t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist&debuff.skyreach_exhaustion.remains>55\nactions.serenity_3t+=/fists_of_fury,cycle_targets=1,if=buff.invokers_delight.up,interrupt=1\n## actions.serenity_3t+=/fists_of_fury_cancel,cycle_targets=1\nactions.serenity_3t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist\nactions.serenity_3t+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up&spinning_crane_kick.max\nactions.serenity_3t+=/blackout_kick,cycle_targets=1,if=combo_strike&set_bonus.tier30_2pc\nactions.serenity_3t+=/spinning_crane_kick,if=combo_strike\nactions.serenity_3t+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.teachings_of_the_monastery.stack=2\nactions.serenity_3t+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&combo_strike\nactions.serenity_3t+=/strike_of_the_windlord,cycle_targets=1\nactions.serenity_3t+=/spinning_crane_kick,if=combo_strike\nactions.serenity_3t+=/whirling_dragon_punch\nactions.serenity_3t+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.serenity_3t+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.serenity_3t+=/tiger_palm,cycle_targets=1,if=talent.teachings_of_the_monastery&buff.teachings_of_the_monastery.stack<3\n\n# Serenity 2 Targets\nactions.serenity_2t+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<2&!debuff.skyreach_exhaustion.remains<2&!debuff.skyreach_exhaustion.remains\nactions.serenity_2t+=/tiger_palm,cycle_targets=1,if=(talent.skyreach.enabled||talent.skytouch.enabled)&!debuff.skyreach_exhaustion.up&combo_strike\nactions.serenity_2t+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.teachings_of_the_monastery.stack=3&buff.teachings_of_the_monastery.remains<1\nactions.serenity_2t+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up\nactions.serenity_2t+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&set_bonus.tier30_2pc\nactions.serenity_2t+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.serenity_2t+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<2\nactions.serenity_2t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist&buff.call_to_dominance.up&debuff.skyreach_exhaustion.remains>buff.call_to_dominance.remains\nactions.serenity_2t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist&debuff.skyreach_exhaustion.remains>55\nactions.serenity_2t+=/fists_of_fury,cycle_targets=1,if=buff.invokers_delight.up,interrupt=1\n## actions.serenity_2t+=/fists_of_fury_cancel,cycle_targets=1\nactions.serenity_2t+=/strike_of_the_windlord,cycle_targets=1,if=talent.thunderfist\nactions.serenity_2t+=/blackout_kick,cycle_targets=1,if=combo_strike&set_bonus.tier30_2pc\nactions.serenity_2t+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.teachings_of_the_monastery.stack=2\nactions.serenity_2t+=/blackout_kick,cycle_targets=1,if=cooldown.fists_of_fury.remains>5&talent.shadowboxing_treads&buff.teachings_of_the_monastery.stack=1&combo_strike\nactions.serenity_2t+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.serenity_2t+=/spinning_crane_kick,if=combo_strike\nactions.serenity_2t+=/whirling_dragon_punch\nactions.serenity_2t+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.serenity_2t+=/tiger_palm,cycle_targets=1,if=talent.teachings_of_the_monastery&buff.teachings_of_the_monastery.stack<3\n\n# Serenity 1 Target\nactions.serenity_st+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<2&!debuff.skyreach_exhaustion.remains\nactions.serenity_st+=/tiger_palm,if=(talent.skyreach.enabled||talent.skytouch.enabled)&!debuff.skyreach_exhaustion.up&combo_strike\nactions.serenity_st+=/blackout_kick,if=combo_strike&buff.teachings_of_the_monastery.stack=3&buff.teachings_of_the_monastery.remains<1\nactions.serenity_st+=/rising_sun_kick\nactions.serenity_st+=/faeline_stomp,if=debuff.fae_exposure_damage.remains<2\nactions.serenity_st+=/strike_of_the_windlord,if=talent.thunderfist&buff.call_to_dominance.up&debuff.skyreach_exhaustion.remains>buff.call_to_dominance.remains\nactions.serenity_st+=/strike_of_the_windlord,if=talent.thunderfist&debuff.skyreach_exhaustion.remains>55\nactions.serenity_st+=/fists_of_fury,if=buff.invokers_delight.up,interrupt=1\n## actions.serenity_st+=/fists_of_fury_cancel\nactions.serenity_st+=/strike_of_the_windlord,if=debuff.skyreach_exhaustion.remains>buff.call_to_dominance.remains\nactions.serenity_st+=/blackout_kick,if=combo_strike&set_bonus.tier30_2pc\nactions.serenity_st+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.serenity_st+=/blackout_kick,if=combo_strike\nactions.serenity_st+=/whirling_dragon_punch\nactions.serenity_st+=/tiger_palm,if=talent.teachings_of_the_monastery&buff.teachings_of_the_monastery.stack<3\n\n# ST Priority (<3 Targets)\nactions.st_cleave=blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.st_cleave+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.st_cleave+=/strike_of_the_windlord,if=talent.thunderfist\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1,if=active_enemies=1&buff.kicks_of_flowing_momentum.up||buff.pressure_point.up\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=2&talent.shadowboxing_treads\nactions.st_cleave+=/strike_of_the_windlord\nactions.st_cleave+=/fists_of_fury\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&(talent.shadowboxing_treads&active_enemies>1||cooldown.rising_sun_kick.remains>1)\nactions.st_cleave+=/whirling_dragon_punch,if=active_enemies=2\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1,if=(active_enemies=1||!talent.shadowboxing_treads)&cooldown.fists_of_fury.remains>4&talent.xuens_battlegear\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&active_enemies=2&cooldown.rising_sun_kick.remains&cooldown.fists_of_fury.remains&(!buff.bonedust_brew.up||spinning_crane_kick.modifier<1.5)\nactions.st_cleave+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up&active_enemies=2\nactions.st_cleave+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&(active_enemies>1||spinning_crane_kick.modifier>=2.7)\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1\nactions.st_cleave+=/whirling_dragon_punch\nactions.st_cleave+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike\n\n# SEF Trinkets\nactions.sef_trinkets+=/horn_of_valor,if=pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger&buff.storm_earth_and_fire.up||boss&fight_remains<30\nactions.sef_trinkets+=/manic_grieftorch,if=(boss||target.time_to_die>1+cast_time)&(trinket.1.is.manic_grieftorch&!trinket.2.has_use_buff||trinket.2.is.manic_grieftorch&!trinket.1.has_use_buff)\nactions.sef_trinkets+=/algethar_puzzle_box,if=(pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger)&!buff.storm_earth_and_fire.up||boss&fight_remains<25\nactions.sef_trinkets+=/use_item,slot=trinket1,if=trinket.1.has_use_buff&!(trinket.1.is.horn_of_valor||trinket.1.is.manic_grieftorch||trinket.1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.sef_trinkets+=/use_item,slot=trinket1,if=!trinket.1.has_use_buff&!(trinket.1.is.horn_of_valor||trinket.1.is.manic_grieftorch||trinket.1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.sef_trinkets+=/use_item,slot=trinket2,if=trinket.2.has_use_buff&!(trinket.2.is.horn_of_valor||trinket.2.is.manic_grieftorch||trinket.2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.sef_trinkets+=/use_item,slot=trinket2,if=!trinket.2.has_use_buff&!(trinket.2.is.horn_of_valor||trinket.2.is.manic_grieftorch||trinket.2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\n\n# Serenity Trinkets\nactions.serenity_trinkets+=/horn_of_valor,if=pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger&buff.storm_earth_and_fire.up||boss&fight_remains<30\nactions.serenity_trinkets+=/manic_grieftorch,if=(boss||target.time_to_die>1+cast_time)&(trinket.1.is.manic_grieftorch&!trinket.2.has_use_buff||trinket.2.is.manic_grieftorch&!trinket.1.has_use_buff)\nactions.serenity_trinkets+=/algethar_puzzle_box,if=(pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger)&!buff.storm_earth_and_fire.up||boss&fight_remains<25\nactions.serenity_trinkets+=/use_item,slot=trinket1,if=trinket.1.has_use_buff&!(trinket.1.is.horn_of_valor||trinket.1.is.manic_grieftorch||trinket.1.is.algethar_puzzle_box)&buff.serenity.remains>10||boss&fight_remains<30\nactions.serenity_trinkets+=/use_item,slot=trinket1,if=!trinket.1.has_use_buff&!(trinket.1.is.horn_of_valor||trinket.1.is.manic_grieftorch||trinket.1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.serenity_trinkets+=/use_item,slot=trinket2,if=trinket.2.has_use_buff&!(trinket.2.is.horn_of_valor||trinket.2.is.manic_grieftorch||trinket.2.is.algethar_puzzle_box)&buff.serenity.remains>10||boss&fight_remains<30\nactions.serenity_trinkets+=/use_item,slot=trinket2,if=!trinket.2.has_use_buff&!(trinket.2.is.horn_of_valor||trinket.2.is.manic_grieftorch||trinket.2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.serenity_trinkets+=/use_items,if=cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger",
},
["Shadow"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20231207,
["author"] = "SimC",
["desc"] = "2023-12-07:  Fix variables.\n\n2023-11-26:  Remove PW:S usage per SimC update.\n\n2023-11-08:  Minor fix.\n\n2023-11-05:  Patch 10.2.\n\n2023-08-27:  Minor update to precombat SC/VT.\n\n2023-07-31:  SimC update to Mindgames, SW:Death, and Devouring Plague.\n\n2023-07-22:  Reduce likelihood of using DOTs on enemies who won't live long enough to be worthwhile.\n\n2023-07-02:  Shadow Word: Death and Mindbender adjustments.\n\n2023-06-24:  Devouring Plague adjustments, especially at the end of fights.\n\n2023-05-20:  Move variables in priority to fix issues.\n\n2023-05-04:  Prevent holding_crash variable from blocking Void Eruption if Shadow Crash is not talented or is disabled.\n\n2023-05-03:  Additional updates for 10.1.\n\n2023-05-02:  Remove Light's Judgment.\n\n2023-04-29:  Updates for 10.1.\n\n2023-03-30:  Don't cycle_targets for Mind Sear.\n\n2023-03-29:  Make 'holding_crash' variable true if you've disabled Shadow Crash.\n\n2023-03-13:  Routine update from SimC.\n\n2023-03-05:  When Shadow Crash is in-flight, act as though SWP and VT are already applied to your target.",
["lists"] = {
["filler"] = {
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["description"] = "Cast Vampiric Touch to consume Unfurling Darkness, prefering the target with the lowest DoT duration active",
["criteria"] = "buff.unfurling_darkness.up",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 || ( buff.deathspeaker.up || set_bonus.tier31_2pc ) & dot.devouring_plague.ticking",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.devouring_plague.remains > cast_time",
["action"] = "mind_spike_insanity",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.mind_flay_insanity.up",
["action"] = "mind_flay",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mindgames",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.inescapable_torment.enabled & pet.fiend.active",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["description"] = "Save up to 20s if adds are coming soon.",
["criteria"] = "spell_targets > 1",
["action"] = "halo",
},
{
["enabled"] = true,
["action"] = "mind_spike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["interrupt_if"] = "ticks>=2",
["interrupt_immediate"] = "1",
["chain"] = "1",
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Use Shadow Crash while moving as a low-priority action when adds will not come in 20 seconds.",
["criteria"] = "raid_event.adds.in > 20 & ! set_bonus.tier31_4pc",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "Use Shadow Word: Death while moving as a low-priority action in execute",
["criteria"] = "target.health.pct < 20",
},
{
["enabled"] = true,
["description"] = "Use Shadow Word: Death while moving as a low-priority action",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "shadow_word_pain",
["cycle_targets"] = 1,
["description"] = "Use Shadow Word: Pain while moving as a low-priority action with T31 4pc",
["criteria"] = "set_bonus.tier31_4pc",
},
{
["enabled"] = true,
["action"] = "shadow_word_pain",
["cycle_targets"] = 1,
["description"] = "Use Shadow Word: Pain while moving as a low-priority action without T31 4pc",
["criteria"] = "! set_bonus.tier31_4pc",
},
},
["main"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_dot.vampiric_touch = active_enemies || action.shadow_crash.in_flight & talent.whispering_shadows.enabled || fight_remains < 8",
["var_name"] = "dots_up",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "fight_remains < 30 || target.time_to_die > 15 & ( ! variable.holding_crash || active_enemies > 2 )",
["list_name"] = "cds",
},
{
["enabled"] = true,
["description"] = "Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension",
["criteria"] = "variable.dots_up & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < gcd.max || fight_remains < 15 )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "remains <= gcd.max || ( ! talent.distorted_reality.enabled || active_enemies = 1 ) & insanity.deficit <= 16",
["action"] = "devouring_plague",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( set_bonus.tier31_4pc || pet.fiend.active & talent.inescapable_torment.enabled & set_bonus.tier31_2pc ) & dot.devouring_plague.ticking",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["description"] = "High priority Mind Blast action when using Inescapable Torment",
["criteria"] = "( dot.devouring_plague.remains > execute_time & ( cooldown.mind_blast.full_recharge_time <= gcd.max + execute_time ) || pet.fiend.remains <= execute_time + gcd.max ) & pet.fiend.active & talent.inescapable_torment.enabled & pet.fiend.remains > execute_time & active_enemies <= 7",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds",
["criteria"] = "dot.devouring_plague.ticking & pet.fiend.remains <= 2 & pet.fiend.active & talent.inescapable_torment.enabled & active_enemies <= 7",
},
{
["enabled"] = true,
["criteria"] = "variable.dots_up",
["action"] = "void_bolt",
},
{
["enabled"] = true,
["description"] = "Spend your Insanity on Devouring Plague at will if the fight will end in less than 10s",
["criteria"] = "fight_remains <= duration + 4",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["description"] = "Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.",
["criteria"] = "( ! talent.distorted_reality.enabled || active_enemies = 1 || remains <= gcd.max ) & ( ( remains <= gcd.max || remains < 3 & cooldown.void_torrent.up ) || insanity.deficit <= 20 || buff.voidform.up & cooldown.void_bolt.remains > buff.voidform.remains & cooldown.void_bolt.remains <= buff.voidform.remains + 2 || buff.mind_devourer.up & pmultiplier < 1.2 )",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier31_2pc",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["description"] = "Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range",
["criteria"] = "! variable.holding_crash & ( dot.vampiric_touch.refreshable || buff.deaths_torment.stack > 9 & set_bonus.tier31_4pc )",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["description"] = "Consume T31 4pc SWPs",
["criteria"] = "buff.deaths_torment.stack > 9 & set_bonus.tier31_4pc & ( ! variable.holding_crash || ! talent.shadow_crash.enabled )",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["description"] = "Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active",
["criteria"] = "variable.dots_up & talent.inescapable_torment.enabled & pet.fiend.active & ( ( ! talent.insidious_ire.enabled & ! talent.idol_of_yoggsaron.enabled ) || buff.deathspeaker.up ) & ! set_bonus.tier31_2pc",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["description"] = "Put out Vampiric Touch on enemies that will live at least 12s and Shadow Crash is not available soon",
["criteria"] = "refreshable & target.time_to_die >= 12 & ( cooldown.shadow_crash.remains >= dot.vampiric_touch.remains & ! action.shadow_crash.in_flight || variable.holding_crash || ! talent.whispering_shadows.enabled )",
},
{
["enabled"] = true,
["description"] = "Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption",
["criteria"] = "( ! buff.mind_devourer.up || cooldown.void_eruption.up & talent.void_eruption.enabled )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["cycle_targets"] = 1,
["interrupt_if"] = "cooldown.shadow_word_death.ready&pet.fiend.active&set_bonus.tier31_2pc",
["description"] = "Void Torrent if you are not holding Shadow Crash for an add pack coming, prefer the target with the most DoTs active. Only cast if Devouring Plague is on that target and will last at least 2 seconds",
["criteria"] = "! variable.holding_crash & dot.devouring_plague.remains >= 2.5",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cast Mindgames if all DoTs will be active by the time the cast finishes",
["list_name"] = "filler",
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "! buff.shadowform.up",
["action"] = "shadowform",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "mind_sear_cutoff",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "60",
["var_name"] = "pool_amount",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in >= 25 & spell_targets.shadow_crash <= 8 & ! boss & ( ! set_bonus.tier31_4pc || spell_targets.shadow_crash > 1 )",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! action.shadow_crash.in_flight & ( ! talent.shadow_crash.enabled || raid_event.adds.in < 25 || spell_targets.shadow_crash > 8 || ! boss || set_bonus.tier31_4pc & spell_targets.shadow_crash = 1 )",
["action"] = "vampiric_touch",
},
},
["aoe"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ( action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) ) >= variable.max_vts || ! variable.is_vt_possible || fight_remains < 8",
["var_name"] = "dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.max_vts - active_dot.vampiric_touch ) < 4 || raid_event.adds.in < 10 & raid_event.adds.count > ( variable.max_vts - active_dot.vampiric_touch )",
["var_name"] = "holding_crash",
["criteria"] = "variable.holding_crash & talent.whispering_shadows.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ! variable.holding_crash ) >= variable.max_vts || ! variable.is_vt_possible",
["var_name"] = "manual_vts_applied",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["description"] = "High Priority action to put out Vampiric Touch on enemies that will live at least 18 seconds, up to 12 targets manually while prepping AoE",
["criteria"] = "refreshable & target.time_to_die >= 18 & ( dot.vampiric_touch.ticking || ! variable.dots_up ) & ( variable.max_vts > 0 & ! variable.manual_vts_applied & ! action.shadow_crash.in_flight || ! talent.whispering_shadows.enabled )",
},
{
["enabled"] = true,
["action"] = "shadow_crash",
["cycle_targets"] = 1,
["description"] = "Use Shadow Crash to apply Vampiric Touch to as many adds as possible while being efficient with Vampiric Touch refresh windows",
["criteria"] = "! variable.holding_crash & ( dot.vampiric_touch.refreshable || dot.vampiric_touch.remains <= target.time_to_die & ! buff.voidform.up & ( raid_event.adds.in - dot.vampiric_touch.remains ) < 15 )",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "fight_remains < 30 || target.time_to_die > 15 & ( ! variable.holding_crash || active_enemies > 2 )",
["list_name"] = "cds",
},
{
["enabled"] = true,
["description"] = "Use Shadowfiend or Mindbender on cooldown if DoTs are active and sync with Dark Ascension",
["criteria"] = "( dot.shadow_word_pain.ticking & variable.dots_up || action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < gcd.max || fight_remains < 15 )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "talent.distorted_reality.enabled & ( active_dot.devouring_plague = 0 || insanity.deficit <= 20 )",
["action"] = "devouring_plague",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.devouring_plague.remains & ( set_bonus.tier31_4pc || pet.fiend.active & talent.inescapable_torment.enabled & set_bonus.tier31_2pc )",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["description"] = "Use Mind Blast when capped on charges and talented into Mind Devourer to fish for the buff or if Inescapable Torment is talented with Mindbender active. Only use when facing 3-7 targets.",
["cycle_targetse"] = "1",
["criteria"] = "( cooldown.mind_blast.full_recharge_time <= gcd.max + cast_time || pet.fiend.remains <= cast_time + gcd.max ) & pet.fiend.active & talent.inescapable_torment.enabled & pet.fiend.remains > cast_time & active_enemies <= 7 & ! buff.mind_devourer.up & dot.devouring_plague.remains > execute_time",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds",
["criteria"] = "pet.fiend.remains <= 2 & pet.fiend.active & talent.inescapable_torment.enabled & active_enemies <= 7",
},
{
["enabled"] = true,
["action"] = "void_bolt",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["description"] = "Use Devouring Plague on enemies that will live the longest with distorted reality.",
["criteria"] = "talent.distorted_reality.enabled",
},
{
["enabled"] = true,
["description"] = "Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.",
["criteria"] = "( remains <= gcd.max & ! variable.pool_for_cds || insanity.deficit <= 20 || buff.voidform.up & cooldown.void_bolt.remains > buff.voidform.remains & cooldown.void_bolt.remains <= buff.voidform.remains + 2 ) & ! talent.distorted_reality.enabled",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die >= 18 & ( dot.vampiric_touch.ticking || ! variable.dots_up ) & ( variable.max_vts > 0 & ( cooldown.shadow_crash.remains >= dot.vampiric_touch.remains || variable.holding_crash ) & ! action.shadow_crash.in_flight || ! talent.whispering_shadows.enabled )",
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active",
["criteria"] = "variable.dots_up & talent.inescapable_torment.enabled & pet.fiend.active & ( ( ! talent.insidious_ire.enabled & ! talent.idol_of_yoggsaron.enabled ) || buff.deathspeaker.up ) & ! set_bonus.tier31_2pc",
},
{
["enabled"] = true,
["action"] = "mind_spike_insanity",
["cycle_targets"] = 1,
["description"] = "High Priority Mind Spike: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active",
["criteria"] = "variable.dots_up & cooldown.mind_blast.full_recharge_time >= gcd.max * 3 & talent.idol_of_cthun.enabled & ( ! cooldown.void_torrent.up || ! talent.void_torrent.enabled )",
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["description"] = "High Priority Mind Flay: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active",
["criteria"] = "buff.mind_flay_insanity.up & variable.dots_up & cooldown.mind_blast.full_recharge_time >= gcd.max * 3 & talent.idol_of_cthun.enabled & ( ! cooldown.void_torrent.up || ! talent.void_torrent.enabled )",
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["description"] = "# Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption",
["criteria"] = "variable.dots_up & ( ! buff.mind_devourer.up || cooldown.void_eruption.up & talent.void_eruption.enabled )",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["cycle_targets"] = 1,
["description"] = "Void Torrent action list for AoE",
["criteria"] = "( ! variable.holding_crash || raid_event.adds.count / ( active_dot.vampiric_touch + raid_event.adds.count ) < 1.5 ) & ( dot.devouring_plague.remains >= 2.5 || buff.voidform.up )",
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["interrupt_if"] = "ticks>=2",
["interrupt_immediate"] = "1",
["description"] = "High priority action for Mind Flay: Insanity to fish for Idol of C'Thun procs, cancel as soon as something else is more important and most of the channel has completed",
["criteria"] = "buff.mind_flay_insanity.up & talent.idol_of_cthun.enabled",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "filler",
},
},
["cds"] = {
{
["enabled"] = true,
["description"] = "TODO: Check VE/DA enter conditions based on dots",
["criteria"] = "buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up & ( fight_remains <= cooldown.power_infusion.remains + 15 ) || boss & fight_remains <= 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 8",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 12",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 15",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 15",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["description"] = "Use Nymue's before we go into our cooldowns",
["name"] = "nymues_unraveling_spindle",
["criteria"] = "variable.dots_up & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < 3 + gcd.max || fight_remains < 15 )",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["action"] = "belorrelos_the_suncaller",
["use_off_gcd"] = 1,
["description"] = "Use Belor'relos, the Suncaller before we go into our cooldowns",
["criteria"] = "gcd.remains > 0 & ( ! raid_event.adds.exists & ! prev_gcd.1.mindbender || raid_event.adds.up || spell_targets.belorrelos_the_suncaller >= 5 ) || fight_remains < 20",
["name"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["description"] = "Fit in a Divine Star as you cast Belor's for the free GCD.",
["criteria"] = "( raid_event.adds.up || spell_targets.belorrelos_the_suncaller >= 5 ) & equipped.belorrelos_the_suncaller & cooldown.belorrelos_the_suncaller.remains <= gcd.max",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "Sync Power Infusion with Voidform or Dark Ascension",
["criteria"] = "( buff.voidform.up || buff.dark_ascension.up )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast before casting",
["criteria"] = "! cooldown.fiend.up & ( pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled || active_enemies > 2 & ! talent.inescapable_torment.rank ) & ( cooldown.mind_blast.charges = 0 || time > 15 )",
["action"] = "void_eruption",
},
{
["enabled"] = true,
["description"] = "Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets",
["criteria"] = "pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled & ! cooldown.fiend.up || active_enemies > 2 & ! talent.inescapable_torment.enabled",
["action"] = "dark_ascension",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "( dot.shadow_word_pain.ticking & variable.vts_applied || action.shadow_crash.in_flight )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["description"] = "Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%",
["criteria"] = "health.pct <= 75",
["action"] = "desperate_prayer",
},
},
["default"] = {
{
["action"] = "silence",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.shadow_crash.enabled & ! action.shadow_crash.disabled & raid_event.adds.in < 15",
["var_name"] = "holding_crash",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "target.time_to_die < 8 || ( dot.shadow_word_pain.ticking & dot.vampiric_touch.ticking || action.shadow_crash.in_flight ) & dot.devouring_plague.ticking",
["var_name"] = "all_dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.void_eruption.remains <= gcd.max * 3 & talent.void_eruption.enabled || cooldown.dark_ascension.up & talent.dark_ascension.enabled ) || talent.void_torrent.enabled & talent.psychic_link.enabled & cooldown.void_torrent.remains <= 4 & ( ! raid_event.adds.exists & spell_targets.vampiric_touch > 1 || raid_event.adds.in <= 5 || raid_event.adds.remains >= 6 & ! variable.holding_crash ) & ! buff.voidform.up",
["var_name"] = "pool_for_cds",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.vampiric_touch >? 12",
["var_name"] = "max_vts",
["default"] = "12",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "is_vt_possible",
["value"] = "true",
["value_else"] = "false",
["criteria"] = "dot.vampiric_touch.refreshable || active_dot.vampiric_touch < cycle_enemies & fight_remains > 8",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) >= variable.max_vts || ! variable.is_vt_possible",
["var_name"] = "vts_applied",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "main",
},
},
["trinkets"] = {
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains < 20",
["name"] = "voidmenders_shadowgem",
["action"] = "voidmenders_shadowgem",
},
{
["enabled"] = true,
["action"] = "iridal_the_earths_master",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0 || boss & fight_remains < 20",
["name"] = "iridal_the_earths_master",
},
{
["enabled"] = true,
["action"] = "dreambinder_loom_of_the_great_cycle",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0 || boss & fight_remains < 20",
["name"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["name"] = "darkmoon_deck_box_inferno",
["action"] = "darkmoon_deck_box_inferno",
},
{
["enabled"] = true,
["name"] = "darkmoon_deck_box_rime",
["action"] = "darkmoon_deck_box_rime",
},
{
["enabled"] = true,
["name"] = "darkmoon_deck_box_dance",
["action"] = "darkmoon_deck_box_dance",
},
{
["enabled"] = true,
["description"] = "Use Erupting Spear Fragment with cooldowns, adds are currently active, or the fight will end in less than 20 seconds",
["name"] = "erupting_spear_fragment",
["criteria"] = "buff.power_infusion.up || raid_event.adds.up || boss & fight_remains < 20",
["action"] = "erupting_spear_fragment",
},
{
["enabled"] = true,
["description"] = "Use Beacon to the Beyond on cooldown except to hold for incoming adds or if already facing 5 or more targets",
["name"] = "beacon_to_the_beyond",
["criteria"] = "! raid_event.adds.exists || raid_event.adds.up || spell_targets.beacon_to_the_beyond >= 5 || boss & fight_remains < 20",
["action"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["criteria"] = "buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up || ( cooldown.void_eruption.remains > 10 & trinket.cooldown.duration <= 60 ) || boss & fight_remains < 20",
["action"] = "use_items",
},
{
["enabled"] = true,
["name"] = "desperate_invokers_codex",
["action"] = "desperate_invokers_codex",
},
},
},
["version"] = 20231207,
["warnings"] = "The import for 'filler' required some automated changes.\nLine 6: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.shadow_crash' to 'talent.shadow_crash.enabled' (1x).\nLine 4: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 4: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 4: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 4: Converted 'talent.psychic_link' to 'talent.psychic_link.enabled' (1x).\nLine 7: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 2: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 4: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 7: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 7: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 8: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 9: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 10: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 11: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 13: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 14: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 15: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 16: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 16: Converted 'talent.insidious_ire' to 'talent.insidious_ire.enabled' (1x).\nLine 16: Converted 'talent.idol_of_yoggsaron' to 'talent.idol_of_yoggsaron.enabled' (1x).\nLine 17: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 17: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 18: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 18: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 19: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 20: Converted operations in '(!variable.holding_crash||raid_event.adds.count%(active_dot.vampiric_touch+raid_event.adds.count)<1.5)&(dot.devouring_plague.remains>=2.5||buff.voidform.up)' to '(!variable.holding_crash||raid_event.adds.count/(active_dot.vampiric_touch+raid_event.adds.count)<1.5)&(dot.devouring_plague.remains>=2.5||buff.voidform.up)'.\nLine 21: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 6: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 8: Converted 'trinket.belorrelos_the_suncaller.cooldown.remains' to 'cooldown.belorrelos_the_suncaller.remains'.\nLine 10: Converted 'talent.mindbender' to 'talent.mindbender.enabled' (1x).\nLine 11: Converted 'talent.mindbender' to 'talent.mindbender.enabled' (1x).\nLine 11: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\n\nThe import for 'main' required some automated changes.\nLine 1: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 3: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 4: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 5: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 6: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 7: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 10: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 13: Converted 'talent.shadow_crash' to 'talent.shadow_crash.enabled' (1x).\nLine 14: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 14: Converted 'talent.insidious_ire' to 'talent.insidious_ire.enabled' (1x).\nLine 14: Converted 'talent.idol_of_yoggsaron' to 'talent.idol_of_yoggsaron.enabled' (1x).\nLine 15: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 16: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/shadowform,if=!buff.shadowform.up\nactions.precombat+=/arcane_torrent\nactions.precombat+=/variable,name=mind_sear_cutoff,op=set,value=2\nactions.precombat+=/variable,name=pool_amount,op=set,value=60\nactions.precombat+=/shadow_crash,if=raid_event.adds.in>=25&spell_targets.shadow_crash<=8&!boss&(!set_bonus.tier31_4pc||spell_targets.shadow_crash>1)\nactions.precombat+=/vampiric_touch,if=refreshable&!action.shadow_crash.in_flight&(!talent.shadow_crash.enabled||raid_event.adds.in<25||spell_targets.shadow_crash>8||!boss||set_bonus.tier31_4pc&spell_targets.shadow_crash=1)\n\nactions+=/silence\nactions+=/variable,name=holding_crash,op=set,value=talent.shadow_crash&!action.shadow_crash.disabled&raid_event.adds.in<15\nactions+=/variable,name=all_dots_up,op=set,value=target.time_to_die<8||(dot.shadow_word_pain.ticking&dot.vampiric_touch.ticking||action.shadow_crash.in_flight)&dot.devouring_plague.ticking\nactions+=/variable,name=pool_for_cds,op=set,value=(cooldown.void_eruption.remains<=gcd.max*3&talent.void_eruption||cooldown.dark_ascension.up&talent.dark_ascension)||talent.void_torrent&talent.psychic_link&cooldown.void_torrent.remains<=4&(!raid_event.adds.exists&spell_targets.vampiric_touch>1||raid_event.adds.in<=5||raid_event.adds.remains>=6&!variable.holding_crash)&!buff.voidform.up\nactions+=/variable,name=max_vts,op=set,default=12,value=spell_targets.vampiric_touch>?12\nactions+=/variable,name=is_vt_possible,op=set,value=true,value_else=false,condition=dot.vampiric_touch.refreshable||active_dot.vampiric_touch<cycle_enemies&fight_remains>8\nactions+=/variable,name=vts_applied,op=set,value=(active_dot.vampiric_touch+8*action.shadow_crash.in_flight&talent.whispering_shadows)>=variable.max_vts||!variable.is_vt_possible\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2\nactions+=/run_action_list,name=main\n\nactions.aoe+=/variable,name=dots_up,op=set,value=(active_dot.vampiric_touch+8*(action.shadow_crash.in_flight&talent.whispering_shadows))>=variable.max_vts||!variable.is_vt_possible||fight_remains<8\nactions.aoe+=/variable,name=holding_crash,op=set,value=(variable.max_vts-active_dot.vampiric_touch)<4||raid_event.adds.in<10&raid_event.adds.count>(variable.max_vts-active_dot.vampiric_touch),if=variable.holding_crash&talent.whispering_shadows\nactions.aoe+=/variable,name=manual_vts_applied,op=set,value=(active_dot.vampiric_touch+8*!variable.holding_crash)>=variable.max_vts||!variable.is_vt_possible\n# High Priority action to put out Vampiric Touch on enemies that will live at least 18 seconds, up to 12 targets manually while prepping AoE\nactions.aoe+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=18&(dot.vampiric_touch.ticking||!variable.dots_up)&(variable.max_vts>0&!variable.manual_vts_applied&!action.shadow_crash.in_flight||!talent.whispering_shadows)\n# Use Shadow Crash to apply Vampiric Touch to as many adds as possible while being efficient with Vampiric Touch refresh windows\nactions.aoe+=/shadow_crash,cycle_targets=1,if=!variable.holding_crash&(dot.vampiric_touch.refreshable||dot.vampiric_touch.remains<=target.time_to_die&!buff.voidform.up&(raid_event.adds.in-dot.vampiric_touch.remains)<15)\nactions.aoe+=/call_action_list,name=cds,if=fight_remains<30||target.time_to_die>15&(!variable.holding_crash||active_enemies>2)\n# Use Shadowfiend or Mindbender on cooldown if DoTs are active and sync with Dark Ascension\nactions.aoe+=/mindbender,if=(dot.shadow_word_pain.ticking&variable.dots_up||action.shadow_crash.in_flight&talent.whispering_shadows)&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<gcd.max||fight_remains<15)\nactions.aoe+=/devouring_plague,cycle_targets=1,if=talent.distorted_reality&(active_dot.devouring_plague=0||insanity.deficit<=20)\nactions.aoe+=/shadow_word_death,cycle_targets=1,if=dot.devouring_plague.remains&(set_bonus.tier31_4pc||pet.fiend.active&talent.inescapable_torment&set_bonus.tier31_2pc)\n# Use Mind Blast when capped on charges and talented into Mind Devourer to fish for the buff or if Inescapable Torment is talented with Mindbender active. Only use when facing 3-7 targets.\nactions.aoe+=/mind_blast,cycle_targetse=1,if=(cooldown.mind_blast.full_recharge_time<=gcd.max+cast_time||pet.fiend.remains<=cast_time+gcd.max)&pet.fiend.active&talent.inescapable_torment&pet.fiend.remains>cast_time&active_enemies<=7&!buff.mind_devourer.up&dot.devouring_plague.remains>execute_time\n# High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds\nactions.aoe+=/shadow_word_death,cycle_targets=1,if=pet.fiend.remains<=2&pet.fiend.active&talent.inescapable_torment&active_enemies<=7\nactions.aoe+=/void_bolt,cycle_targets=1\n# Use Devouring Plague on enemies that will live the longest with distorted reality.\nactions.aoe+=/devouring_plague,cycle_targets=1,if=talent.distorted_reality\n# Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.\nactions.aoe+=/devouring_plague,if=(remains<=gcd.max&!variable.pool_for_cds||insanity.deficit<=20||buff.voidform.up&cooldown.void_bolt.remains>buff.voidform.remains&cooldown.void_bolt.remains<=buff.voidform.remains+2)&!talent.distorted_reality\nactions.aoe+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=18&(dot.vampiric_touch.ticking||!variable.dots_up)&(variable.max_vts>0&(cooldown.shadow_crash.remains>=dot.vampiric_touch.remains||variable.holding_crash)&!action.shadow_crash.in_flight||!talent.whispering_shadows)\n# Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active\nactions.aoe+=/shadow_word_death,cycle_targets=1,if=variable.dots_up&talent.inescapable_torment&pet.fiend.active&((!talent.insidious_ire&!talent.idol_of_yoggsaron)||buff.deathspeaker.up)&!set_bonus.tier31_2pc\n# High Priority Mind Spike: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active\nactions.aoe+=/mind_spike_insanity,cycle_targets=1,if=variable.dots_up&cooldown.mind_blast.full_recharge_time>=gcd*3&talent.idol_of_cthun&(!cooldown.void_torrent.up||!talent.void_torrent)\n# High Priority Mind Flay: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active\nactions.aoe+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up&variable.dots_up&cooldown.mind_blast.full_recharge_time>=gcd*3&talent.idol_of_cthun&(!cooldown.void_torrent.up||!talent.void_torrent)\n# # Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption\nactions.aoe+=/mind_blast,cycle_targets=1,if=variable.dots_up&(!buff.mind_devourer.up||cooldown.void_eruption.up&talent.void_eruption)\n# Void Torrent action list for AoE\nactions.aoe+=/void_torrent,cycle_targets=1,if=(!variable.holding_crash||raid_event.adds.count%(active_dot.vampiric_touch+raid_event.adds.count)<1.5)&(dot.devouring_plague.remains>=2.5||buff.voidform.up)\n# High priority action for Mind Flay: Insanity to fish for Idol of C'Thun procs, cancel as soon as something else is more important and most of the channel has completed\nactions.aoe+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up&talent.idol_of_cthun,interrupt_if=ticks>=2,interrupt_immediate=1\nactions.aoe+=/call_action_list,name=filler\n\n# TODO: Check VE/DA enter conditions based on dots\nactions.cds+=/potion,if=buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up&(fight_remains<=cooldown.power_infusion.remains+15)||boss&fight_remains<=30\nactions.cds+=/fireblood,if=buff.power_infusion.up||boss&fight_remains<=8\nactions.cds+=/berserking,if=buff.power_infusion.up||boss&fight_remains<=12\nactions.cds+=/blood_fury,if=buff.power_infusion.up||boss&fight_remains<=15\nactions.cds+=/ancestral_call,if=buff.power_infusion.up||boss&fight_remains<=15\n# Use Nymue's before we go into our cooldowns\nactions.cds+=/use_item,name=nymues_unraveling_spindle,if=variable.dots_up&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<3+gcd.max||fight_remains<15)\n# Use Belor'relos, the Suncaller before we go into our cooldowns\nactions.cds+=/use_item,name=belorrelos_the_suncaller,use_off_gcd=1,if=gcd.remains>0&(!raid_event.adds.exists&!prev_gcd.1.mindbender||raid_event.adds.up||spell_targets.belorrelos_the_suncaller>=5)||fight_remains<20\n# Fit in a Divine Star as you cast Belor's for the free GCD.\nactions.cds+=/divine_star,if=(raid_event.adds.up||spell_targets.belorrelos_the_suncaller>=5)&equipped.belorrelos_the_suncaller&trinket.belorrelos_the_suncaller.cooldown.remains<=gcd.max\n# Sync Power Infusion with Voidform or Dark Ascension\nactions.cds+=/power_infusion,if=(buff.voidform.up||buff.dark_ascension.up)\n# Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast before casting\nactions.cds+=/void_eruption,if=!cooldown.fiend.up&(pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender||active_enemies>2&!talent.inescapable_torment.rank)&(cooldown.mind_blast.charges=0||time>15)\n# Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets\nactions.cds+=/dark_ascension,if=pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender&!cooldown.fiend.up||active_enemies>2&!talent.inescapable_torment\nactions.cds+=/call_action_list,name=trinkets\nactions.cds+=/mindbender,if=(dot.shadow_word_pain.ticking&variable.vts_applied||action.shadow_crash.in_flight)\n# Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%\nactions.cds+=/desperate_prayer,if=health.pct<=75\n\n# Cast Vampiric Touch to consume Unfurling Darkness, prefering the target with the lowest DoT duration active\nactions.filler+=/vampiric_touch,cycle_targets=1,if=buff.unfurling_darkness.up\nactions.filler+=/shadow_word_death,cycle_targets=1,if=target.health.pct<20||(buff.deathspeaker.up||set_bonus.tier31_2pc)&dot.devouring_plague.ticking\nactions.filler+=/mind_spike_insanity,cycle_targets=1,if=dot.devouring_plague.remains>cast_time\nactions.filler+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up\nactions.filler+=/mindgames,cycle_targets=1\nactions.filler+=/shadow_word_death,cycle_targets=1,if=talent.inescapable_torment&pet.fiend.active\n# Save up to 20s if adds are coming soon.\nactions.filler+=/halo,if=spell_targets>1\nactions.filler+=/mind_spike,cycle_targets=1,\nactions.filler+=/mind_flay,cycle_targets=1,chain=1,interrupt_immediate=1,interrupt_if=ticks>=2\nactions.filler+=/divine_star\n# Use Shadow Crash while moving as a low-priority action when adds will not come in 20 seconds.\nactions.filler+=/shadow_crash,if=raid_event.adds.in>20&!set_bonus.tier31_4pc\n# Use Shadow Word: Death while moving as a low-priority action in execute\nactions.filler+=/shadow_word_death,cycle_targets=1,if=target.health.pct<20\n# Use Shadow Word: Death while moving as a low-priority action\nactions.filler+=/shadow_word_death,cycle_targets=1\n# Use Shadow Word: Pain while moving as a low-priority action with T31 4pc\nactions.filler+=/shadow_word_pain,cycle_targets=1,if=set_bonus.tier31_4pc\n# Use Shadow Word: Pain while moving as a low-priority action without T31 4pc\nactions.filler+=/shadow_word_pain,cycle_targets=1,if=!set_bonus.tier31_4pc\n\nactions.main+=/variable,name=dots_up,op=set,value=active_dot.vampiric_touch=active_enemies||action.shadow_crash.in_flight&talent.whispering_shadows||fight_remains<8\nactions.main+=/call_action_list,name=cds,if=fight_remains<30||target.time_to_die>15&(!variable.holding_crash||active_enemies>2)\n# Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension\nactions.main+=/mindbender,if=variable.dots_up&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<gcd.max||fight_remains<15)\nactions.main+=/devouring_plague,cycle_targets=1,if=remains<=gcd.max||(!talent.distorted_reality||active_enemies=1)&insanity.deficit<=16\nactions.main+=/shadow_word_death,if=(set_bonus.tier31_4pc||pet.fiend.active&talent.inescapable_torment&set_bonus.tier31_2pc)&dot.devouring_plague.ticking\n# High priority Mind Blast action when using Inescapable Torment\nactions.main+=/mind_blast,cycle_targets=1,if=(dot.devouring_plague.remains>execute_time&(cooldown.mind_blast.full_recharge_time<=gcd.max+execute_time)||pet.fiend.remains<=execute_time+gcd.max)&pet.fiend.active&talent.inescapable_torment&pet.fiend.remains>execute_time&active_enemies<=7\n# High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds\nactions.main+=/shadow_word_death,cycle_targets=1,if=dot.devouring_plague.ticking&pet.fiend.remains<=2&pet.fiend.active&talent.inescapable_torment&active_enemies<=7\nactions.main+=/void_bolt,if=variable.dots_up\n# Spend your Insanity on Devouring Plague at will if the fight will end in less than 10s\nactions.main+=/devouring_plague,if=fight_remains<=duration+4\n# Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.\nactions.main+=/devouring_plague,cycle_targets=1,if=(!talent.distorted_reality||active_enemies=1||remains<=gcd.max)&((remains<=gcd.max||remains<3&cooldown.void_torrent.up)||insanity.deficit<=20||buff.voidform.up&cooldown.void_bolt.remains>buff.voidform.remains&cooldown.void_bolt.remains<=buff.voidform.remains+2||buff.mind_devourer.up&pmultiplier<1.2)\nactions.main+=/shadow_word_death,if=set_bonus.tier31_2pc\n# Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range\nactions.main+=/shadow_crash,if=!variable.holding_crash&(dot.vampiric_touch.refreshable||buff.deaths_torment.stack>9&set_bonus.tier31_4pc)\n# Consume T31 4pc SWPs\nactions.main+=/shadow_word_pain,if=buff.deaths_torment.stack>9&set_bonus.tier31_4pc&(!variable.holding_crash||!talent.shadow_crash)\n# Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active\nactions.main+=/shadow_word_death,if=variable.dots_up&talent.inescapable_torment&pet.fiend.active&((!talent.insidious_ire&!talent.idol_of_yoggsaron)||buff.deathspeaker.up)&!set_bonus.tier31_2pc\n# Put out Vampiric Touch on enemies that will live at least 12s and Shadow Crash is not available soon\nactions.main+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=12&(cooldown.shadow_crash.remains>=dot.vampiric_touch.remains&!action.shadow_crash.in_flight||variable.holding_crash||!talent.whispering_shadows)\n# Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption\nactions.main+=/mind_blast,if=(!buff.mind_devourer.up||cooldown.void_eruption.up&talent.void_eruption)\n# Void Torrent if you are not holding Shadow Crash for an add pack coming, prefer the target with the most DoTs active. Only cast if Devouring Plague is on that target and will last at least 2 seconds\nactions.main+=/void_torrent,cycle_targets=1,if=!variable.holding_crash&dot.devouring_plague.remains>=2.5,interrupt_if=cooldown.shadow_word_death.ready&pet.fiend.active&set_bonus.tier31_2pc\n# Cast Mindgames if all DoTs will be active by the time the cast finishes\nactions.main+=/call_action_list,name=filler\n\nactions.trinkets+=/use_item,name=voidmenders_shadowgem,if=buff.power_infusion.up||boss&fight_remains<20\nactions.trinkets+=/use_item,name=iridal_the_earths_master,use_off_gcd=1,if=gcd.remains>0||boss&fight_remains<20\nactions.trinkets+=/use_item,name=dreambinder_loom_of_the_great_cycle,use_off_gcd=1,if=gcd.remains>0||boss&fight_remains<20\nactions.trinkets+=/use_item,name=darkmoon_deck_box_inferno\nactions.trinkets+=/use_item,name=darkmoon_deck_box_rime\nactions.trinkets+=/use_item,name=darkmoon_deck_box_dance\n# Use Erupting Spear Fragment with cooldowns, adds are currently active, or the fight will end in less than 20 seconds\nactions.trinkets+=/use_item,name=erupting_spear_fragment,if=buff.power_infusion.up||raid_event.adds.up||boss&fight_remains<20\n# Use Beacon to the Beyond on cooldown except to hold for incoming adds or if already facing 5 or more targets\nactions.trinkets+=/use_item,name=beacon_to_the_beyond,if=!raid_event.adds.exists||raid_event.adds.up||spell_targets.beacon_to_the_beyond>=5||boss&fight_remains<20\nactions.trinkets+=/use_items,if=buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up||(cooldown.void_eruption.remains>10&trinket.cooldown.duration<=60)||boss&fight_remains<20\nactions.trinkets+=/use_item,name=desperate_invokers_codex",
["spec"] = 258,
},
["Unholy"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["spec"] = 252,
["desc"] = "2024-05-08: SimC update.\n\n2024-03-17, 04-10: Minor SimC updates.\n\n2024-03-10: Resync with sim.\n\n2024-01-26: Tweak Fyralath.\n\n2024-01-21: Tweak Epidemic.\n\n2024-01-16: Minor SimC update.\n\n2023-12-18 & 28: Minor SimC updates.\n\n2023-12-04: Epidemic as filler when there are no runes.\n\n2023-11-27: There's this axe...\n\n2023-11-17:  SimC update.\n\n2023-11-15: Fix trinket variables.\n\n2023-11-14: Fix trinkets.\n\n2023-11-05: Patch 10.2 updates.\n\n2023-09-10: Patch 10.1.7 updates.\n\n2023-07-11: Patch 10.1.5 launch.\n\n2023-06-24: Resync with SimC.\n\n2023-05-20: Add Vial trinket.\n\n2023-05-17: Update trinkets again.\n\n2023-04-30: Update trinket logic from SimC.\n\n2023-04-15: Minor tweak to use Festering Strike in preparation for Apocalypse.\n\n2023-04-04: Unholy update from SimC.\n\n2023-03-20: More updates for 10.0.7.\n\n2023-03-13: Update for 10.0.7.",
["lists"] = {
["aoe_setup"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.bursting_sores.enabled || death_knight.fwounded_targets >= cycle_enemies || death_knight.fwounded_targets >= 8 || raid_event.adds.exists & raid_event.adds.remains <= 11 & raid_event.adds.remains > 5 ) & ( ! talent.defile.enabled || talent.defile.enabled & buff.defile.remains < gcd.max )",
["action"] = "any_dnd",
["description"] = "AoE Setup",
},
{
["enabled"] = true,
["criteria"] = "( debuff.festering_wound.down || death_knight.fwounded_targets < cycle_enemies ) & talent.bursting_sores.enabled",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power || fight_remains < 10",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "( debuff.festering_wound.down || death_knight.fwounded_targets < cycle_enemies )",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "cooldown.apocalypse.remains < variable.apoc_timing & debuff.festering_wound.stack < 4",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.epidemic.enabled",
["action"] = "death_coil",
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "! variable.epidemic_priority & ( ! variable.pooling_runic_power & variable.spend_rp || boss & fight_remains < 10 )",
["action"] = "death_coil",
["description"] = "Single Target",
},
{
["enabled"] = true,
["criteria"] = "variable.epidemic_priority & ( ! variable.pooling_runic_power & variable.spend_rp || boss & fight_remains < 10 )",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & ( active_enemies >= 2 || talent.unholy_ground.enabled & ( pet.apoc_ghoul.active & pet.apoc_ghoul.remains >= 13 || pet.gargoyle.active & pet.gargoyle.remains > 8 || pet.army_ghoul.active & pet.army_ghoul.remains > 8 || ! variable.pop_wounds & debuff.festering_wound.stack >= 4 ) || talent.defile.enabled & ( pet.gargoyle.active || pet.apoc_ghoul.active || pet.army_ghoul.active || buff.dark_transformation.up ) ) & ( death_knight.fwounded_targets >= cycle_enemies || active_enemies = 1 )",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "variable.pop_wounds || active_enemies >= 2 & death_and_decay.ticking",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pop_wounds & debuff.festering_wound.stack < 4",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["action"] = "death_coil",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! variable.pop_wounds & debuff.festering_wound.stack >= 4",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
},
["aoe_burst"] = {
{
["enabled"] = true,
["criteria"] = "( rune < 1 || talent.bursting_sores.enabled & death_knight.fwounded_targets = 0 || ! talent.bursting_sores.enabled ) & ! variable.pooling_runic_power & ( active_enemies >= 6 || runic_power.deficit < 30 || buff.festermight.stack = 20 )",
["action"] = "epidemic",
["description"] = "AoE Burst",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack >= 1",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power || fight_remains < 10",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.epidemic.enabled",
["action"] = "death_coil",
},
{
["action"] = "wound_spender",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "mind_freeze",
["enabled"] = true,
},
{
["action"] = "strangulate",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 40 & ( pet.gargoyle.active || ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > cooldown.antimagic_shell.duration )",
["action"] = "antimagic_shell",
},
{
["enabled"] = true,
["criteria"] = "death_knight.amz_absorb_percent > 0 & runic_power.deficit > 70 & talent.assimilation.enabled & ( pet.gargoyle.active || ! talent.summon_gargoyle.enabled )",
["action"] = "antimagic_zone",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Variables",
["var_name"] = "epidemic_priority",
["value"] = "1",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "talent.improved_death_coil.enabled & ! talent.coil_of_devastation.enabled & active_enemies >= 3 || talent.coil_of_devastation.enabled & active_enemies >= 4 || ! talent.improved_death_coil.enabled & active_enemies >= 2",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "garg_setup_complete",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "active_enemies >= 3 || cooldown.summon_gargoyle.remains > 1 & ( cooldown.apocalypse.remains > 1 || ! talent.apocalypse.enabled ) || ! talent.summon_gargoyle.enabled || time > 20",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "apoc_timing",
["value"] = "7",
["value_else"] = "3",
["criteria"] = "cooldown.apocalypse.remains < 10 & debuff.festering_wound.stack <= 4 & cooldown.unholy_assault.remains > 10",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "festermight_tracker",
["value"] = "debuff.festering_wound.stack >= 1",
["value_else"] = "debuff.festering_wound.stack >= ( 3 - talent.infected_claws.enabled )",
["criteria"] = "! pet.gargoyle.active & talent.festermight.enabled & buff.festermight.up & ( buff.festermight.remains / ( 5 * gcd.max ) ) >= 1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "pop_wounds",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "( cooldown.apocalypse.remains > variable.apoc_timing || ! talent.apocalypse.enabled ) & ( variable.festermight_tracker || debuff.festering_wound.stack >= 1 & ! talent.apocalypse.enabled || debuff.festering_wound.stack >= 1 & cooldown.unholy_assault.remains < 20 & talent.unholy_assault.enabled & variable.st_planning || debuff.rotten_touch.up & debuff.festering_wound.stack >= 1 || debuff.festering_wound.stack > 4 ) || fight_remains < 5 & debuff.festering_wound.stack >= 1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "pooling_runic_power",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "talent.vile_contagion.enabled & cooldown.vile_contagion.remains < 3 & runic_power < 60 & ! variable.st_planning",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "st_planning",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "active_enemies = 1 & ( ! raid_event.adds.exists || raid_event.adds.in > 15 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "adds_remain",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 6 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "spend_rp",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "( ! talent.rotten_touch.enabled || talent.rotten_touch.enabled & ! debuff.rotten_touch.up || runic_power.deficit < 15 ) & ( ( talent.improved_death_coil.enabled & ( active_enemies = 2 || talent.coil_of_devastation.enabled ) || rune < 3 || pet.gargoyle.active || buff.sudden_doom.react || cooldown.apocalypse.remains < 10 & debuff.festering_wound.stack > 3 || ! variable.pop_wounds & debuff.festering_wound.stack >= 4 ) )",
},
{
["enabled"] = true,
["criteria"] = "pet.gargoyle.remains <= 30 || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 || cooldown.summon_gargoyle.ready ) & ( buff.dark_transformation.up & 30 >= buff.dark_transformation.remains || pet.army_ghoul.active & pet.army_ghoul.remains <= 30 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 30 ) || boss & fight_remains <= 30",
["action"] = "potion",
["description"] = "Call Action Lists",
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain & ! death_and_decay.ticking & ! talent.bursting_sores.enabled & talent.defile.enabled & buff.defile.remains < gcd.max",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains < 3 * gcd.max || ! talent.summon_gargoyle.enabled || boss & fight_remains < 35",
["action"] = "army_of_the_dead",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 3 || ! talent.epidemic.enabled ) & ( pet.gargoyle.active & talent.commander_of_the_dead.enabled & buff.commander_of_the_dead.up & cooldown.apocalypse.remains < 5 & buff.commander_of_the_dead.remains > 26 || debuff.death_rot.up & debuff.death_rot.remains < gcd.max )",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.virulent_plague >= 4 || active_enemies >= 4 ) & ( talent.commander_of_the_dead.enabled & buff.commander_of_the_dead.up & cooldown.apocalypse.remains < 5 || debuff.death_rot.up & debuff.death_rot.remains < gcd.max )",
["action"] = "epidemic",
["description"] = "Modified from SimC APL: Count Virulent Plagues -or- enemies in case your enemies are outside of melee range.",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.apocalypse.remains > variable.apoc_timing + 3 || cooldown.unholy_assault.ready || active_enemies >= 3 ) & talent.plaguebringer.enabled & ( talent.superstrain.enabled || talent.unholy_blight.enabled ) & buff.plaguebringer.remains < gcd.max",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & ( ( ! talent.apocalypse.enabled || cooldown.apocalypse.remains || ! talent.summon_gargoyle.enabled ) & talent.morbidity.enabled || ! talent.morbidity.enabled ) || variable.adds_remain || fight_remains < 21",
["action"] = "unholy_blight",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die > dot.virulent_plague.remains & ( dot.virulent_plague.refreshable || talent.superstrain.enabled & ( dot.frost_fever_superstrain.refreshable || dot.blood_plague_superstrain.refreshable ) ) & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.unholy_blight.remains > 15 / ( ( talent.superstrain.enabled * 3 ) + ( talent.plaguebringer.enabled * 2 ) + ( talent.ebon_fever.enabled * 2 ) ) )",
["action"] = "outbreak",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff ) & ! variable.trinket_1_exclude",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff ) & ! variable.trinket_2_exclude",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % 45 = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % 45 = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box || trinket.t1.is.irideus_fragment || trinket.t1.is.vial_of_animated_blood",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box || trinket.t2.is.irideus_fragment || trinket.t2.is.vial_of_animated_blood",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t2.has_cooldown & ! variable.trinket_2_exclude || ! trinket.t1.has_cooldown ) || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl",
},
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["action"] = "fyralath_the_dreamrender",
["criteria"] = "dot.mark_of_fyralath.ticking & ( active_enemies < 5 || active_enemies > 21 || fight_remains < 4 ) & ( debuff.festering_wound.stack >= 2 || time > 15 )",
},
{
["enabled"] = true,
["name"] = "gavel_of_the_first_arbiter",
["action"] = "gavel_of_the_first_arbiter",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["criteria"] = "cooldown.summon_gargoyle.remains < 5 & rune <= 4 || ! talent.summon_gargoyle.enabled & pet.army_ghoul.active || active_enemies > 3 & variable.adds_remain & ( buff.dark_transformation.up || talent.bursting_sores.enabled & cooldown.any_dnd.remains < 10 & ! death_and_decay.ticking )",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["name"] = "irideus_fragment",
["use_off_gcd"] = 1,
["criteria"] = "( pet.gargoyle.active & pet.gargoyle.remains < 16 || ! talent.summon_gargoyle.enabled & pet.army_ghoul.active & pet.army_ghoul.remains < 16 ) || active_enemies > 3 & variable.adds_remain & ( buff.dark_transformation.up || talent.bursting_sores.enabled & death_and_decay.ticking )",
["action"] = "irideus_fragment",
},
{
["enabled"] = true,
["name"] = "vial_of_animated_blood",
["use_off_gcd"] = 1,
["criteria"] = "pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 18 || ! talent.apocalypse.enabled & buff.dark_transformation.up || active_enemies > 3 & variable.adds_remain & ( buff.dark_transformation.up || talent.bursting_sores.enabled & death_and_decay.ticking )",
["action"] = "vial_of_animated_blood",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_manual & variable.trinket_1_buffs & ( ( ! talent.summon_gargoyle.enabled & ( ( ! talent.army_of_the_dead.enabled || cooldown.army_of_the_dead.remains_expected > 60 || death_knight.disable_aotd ) & ( pet.apoc_ghoul.active || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) || pet.army_ghoul.active ) || talent.summon_gargoyle.enabled & pet.gargoyle.active || cooldown.summon_gargoyle.remains > 80 ) & ( pet.apoc_ghoul.active || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) & ( variable.trinket_2_exclude || variable.trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown ) ) || boss & trinket.t1.buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_manual & variable.trinket_2_buffs & ( ( ! talent.summon_gargoyle.enabled & ( ( ! talent.army_of_the_dead.enabled || cooldown.army_of_the_dead.remains_expected > 60 || death_knight.disable_aotd ) & ( pet.apoc_ghoul.active || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) || pet.army_ghoul.active ) || talent.summon_gargoyle.enabled & pet.gargoyle.active || cooldown.summon_gargoyle.remains > 80 ) & ( pet.apoc_ghoul.active || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) & ( variable.trinket_1_exclude || variable.trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown ) ) || boss & trinket.t2.buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_manual & ! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & cooldown.army_of_the_dead.remains_expected > 20 || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & cooldown.dark_transformation.remains > 20 || cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || fight_remains < 15",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_manual & ! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & cooldown.army_of_the_dead.remains_expected > 20 || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & cooldown.dark_transformation.remains > 20 || cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || fight_remains < 15",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "use_items",
["criteria"] = "( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "racials",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "variable.garg_setup_complete = 0",
["list_name"] = "garg_setup",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "variable.st_planning",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "variable.adds_remain",
["list_name"] = "aoe_cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.adds_remain & cooldown.any_dnd.remains < 10 & ! death_and_decay.ticking",
["list_name"] = "aoe_setup",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 4 & death_and_decay.ticking",
["list_name"] = "aoe_burst",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "active_enemies >= 4 & ( cooldown.any_dnd.remains > 10 & ! death_and_decay.ticking || ! variable.adds_remain )",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies <= 3",
["list_name"] = "st",
},
},
["aoe_cooldowns"] = {
{
["enabled"] = true,
["action"] = "vile_contagion",
["cycle_targets"] = 1,
["description"] = "AoE Cooldowns",
["criteria"] = "debuff.festering_wound.stack >= 4 & cooldown.any_dnd.remains < 3",
},
{
["action"] = "summon_gargoyle",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rune < 2 || buff.festermight.stack > 10 || ! talent.festermight.enabled || buff.festermight.up & buff.festermight.remains < 12",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "talent.bursting_sores.enabled & debuff.festering_wound.up & ( ! death_and_decay.ticking & cooldown.death_and_decay.remains & rune < 3 || death_and_decay.ticking & rune = 0 )",
["action"] = "apocalypse",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.bursting_sores.enabled & debuff.festering_wound.stack >= 4 || set_bonus.tier31_2pc & debuff.festering_wound.stack >= 1",
["action"] = "apocalypse",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack <= 2 || buff.dark_transformation.up",
["action"] = "unholy_assault",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! pet.ghoul.active",
["action"] = "raise_dead",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.any_dnd.remains < 10 & talent.infected_claws.enabled & ( ( cooldown.vile_contagion.remains || raid_event.adds.exists & raid_event.adds.in > 10 ) & death_knight.fwounded_targets < active_enemies || ! talent.vile_contagion.enabled ) & ( raid_event.adds.remains > 5 || ! raid_event.adds.exists ) || ! talent.infected_claws.enabled )",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["criteria"] = "buff.dark_transformation.up",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "! buff.dark_transformation.up & cooldown.dark_transformation.remains > 6 || boss & fight_remains < gcd.max",
["action"] = "sacrificial_pact",
},
},
["precombat"] = {
{
["action"] = "raise_dead",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! equipped.fyralath_the_dreamrender || active_enemies > 1",
["action"] = "army_of_the_dead",
["precombat_time"] = "2",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "buff.commander_of_the_dead.up || ! talent.commander_of_the_dead.enabled",
["action"] = "summon_gargoyle",
["description"] = "ST/Cleave Cooldowns",
},
{
["enabled"] = true,
["criteria"] = "! pet.ghoul.active",
["action"] = "raise_dead",
},
{
["enabled"] = true,
["criteria"] = "cooldown.apocalypse.remains < 5",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & debuff.festering_wound.stack >= 4",
["action"] = "apocalypse",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & ( pet.gargoyle.active & pet.gargoyle.remains <= 23 || ! talent.summon_gargoyle.enabled & talent.army_of_the_damned.enabled & pet.army_ghoul.active & pet.apoc_ghoul.active || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_damned.enabled & buff.dark_transformation.up || ! talent.summon_gargoyle.enabled & ! talent.summon_gargoyle.enabled & buff.dark_transformation.up ) || boss & fight_remains <= 21",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "rune < 3 & variable.st_planning",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning",
["action"] = "unholy_assault",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
["cycle_targets"] = 1,
},
},
["racials"] = {
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20 & ( cooldown.summon_gargoyle.remains < gcd.max & time > 15 || ! talent.summon_gargoyle.enabled || pet.gargoyle.active & rune < 2 & debuff.festering_wound.stack < 1 )",
["action"] = "arcane_torrent",
["description"] = "Racials",
},
{
["enabled"] = true,
["criteria"] = "( buff.blood_fury.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.blood_fury.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.blood_fury.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.blood_fury.duration + 3",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserking.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.berserking.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.berserking.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.berserking.duration + 3",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.unholy_strength.up & ( ! talent.festermight.enabled || buff.festermight.remains < target.time_to_die || buff.unholy_strength.remains < target.time_to_die )",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "( 18 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= 18 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 18 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= 18",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 || ( rune.deficit >= 5 & runic_power.deficit >= 60 )",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "( buff.fireblood.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.fireblood.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.fireblood.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.fireblood.duration + 3",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & ( buff.unholy_strength.up || boss & fight_remains < 5 )",
["action"] = "bag_of_tricks",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power || fight_remains < 10",
["action"] = "epidemic",
["description"] = "Generic AoE",
},
{
["enabled"] = true,
["criteria"] = "variable.pop_wounds",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pop_wounds",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.epidemic.enabled",
["action"] = "death_coil",
},
},
["garg_setup"] = {
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack >= 4 & ( buff.commander_of_the_dead.up & pet.gargoyle.remains < 23 || ! talent.commander_of_the_dead.enabled )",
["action"] = "apocalypse",
["description"] = "Garg Setup",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & debuff.festering_wound.stack > 1",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "summon_gargoyle",
["criteria"] = "buff.commander_of_the_dead.up || ! talent.commander_of_the_dead.enabled & runic_power >= 40",
},
{
["enabled"] = true,
["criteria"] = "pet.gargoyle.active & pet.gargoyle.remains <= 23",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "pet.gargoyle.active & pet.gargoyle.remains <= 23",
["action"] = "unholy_assault",
},
{
["enabled"] = true,
["criteria"] = "talent.commander_of_the_dead.enabled & runic_power >= 40 || ! talent.commander_of_the_dead.enabled",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack = 0 || talent.apocalypse.enabled & cooldown.apocalypse.remains < 3 * gcd.max & debuff.festering_wound.stack < 4 || runic_power < 40 || ! talent.apocalypse.enabled & ! pet.gargoyle.active",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "rune <= 1",
["action"] = "death_coil",
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'aoe_setup' required some automated changes.\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 1: Converted 'talent.defile' to 'talent.defile.enabled' (1x).\nLine 1: Converted 'talent.defile' to 'talent.defile.enabled' (1x).\nLine 2: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 6: Converted 'talent.epidemic' to 'talent.epidemic.enabled' (1x).\n\nThe import for 'aoe_burst' required some automated changes.\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 4: Converted 'talent.epidemic' to 'talent.epidemic.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 3: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 3: Converted 'talent.defile' to 'talent.defile.enabled' (1x).\n\nThe import for 'racials' required some automated changes.\nLine 2: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 3: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 4: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 7: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\n\nThe import for 'aoe_cooldowns' required some automated changes.\nLine 3: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 4: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 5: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 8: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\nLine 8: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 8: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\n\nThe import for 'cooldowns' required some automated changes.\nLine 1: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_damned' to 'talent.army_of_the_damned.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_damned' to 'talent.army_of_the_damned.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\n\nThe import for 'garg_setup' required some automated changes.\nLine 1: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 4: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 7: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 7: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 8: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 8: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 4: Converted 'talent.assimilation' to 'talent.assimilation.enabled' (1x).\nLine 4: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.improved_death_coil' to 'talent.improved_death_coil.enabled' (1x).\nLine 5: Converted 'talent.coil_of_devastation' to 'talent.coil_of_devastation.enabled' (1x).\nLine 5: Converted 'talent.coil_of_devastation' to 'talent.coil_of_devastation.enabled' (1x).\nLine 5: Converted 'talent.improved_death_coil' to 'talent.improved_death_coil.enabled' (1x).\nLine 6: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 8: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\nLine 8: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 8: Converted operations in '!pet.gargoyle.active&talent.festermight.enabled&buff.festermight.up&(buff.festermight.remains%(5*gcd.max))>=1' to '!pet.gargoyle.active&talent.festermight.enabled&buff.festermight.up&(buff.festermight.remains/(5*gcd.max))>=1'.\nLine 9: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 9: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 9: Converted 'talent.unholy_assault' to 'talent.unholy_assault.enabled' (1x).\nLine 10: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 13: Converted 'talent.rotten_touch' to 'talent.rotten_touch.enabled' (1x).\nLine 13: Converted 'talent.rotten_touch' to 'talent.rotten_touch.enabled' (1x).\nLine 13: Converted 'talent.improved_death_coil' to 'talent.improved_death_coil.enabled' (1x).\nLine 13: Converted 'talent.coil_of_devastation' to 'talent.coil_of_devastation.enabled' (1x).\nLine 14: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 15: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 15: Converted 'talent.defile' to 'talent.defile.enabled' (1x).\nLine 16: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 16: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 17: Converted 'talent.epidemic' to 'talent.epidemic.enabled' (1x).\nLine 17: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 18: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 19: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 19: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 19: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 20: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 20: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 20: Converted 'talent.morbidity' to 'talent.morbidity.enabled' (1x).\nLine 20: Converted 'talent.morbidity' to 'talent.morbidity.enabled' (1x).\nLine 21: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 21: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 21: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 21: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 21: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 21: Converted 'talent.ebon_fever' to 'talent.ebon_fever.enabled' (1x).\nLine 21: Converted operations in 'target.time_to_die>dot.virulent_plague.remains&(dot.virulent_plague.refreshable||talent.superstrain.enabled&(dot.frost_fever_superstrain.refreshable||dot.blood_plague_superstrain.refreshable))&(!talent.unholy_blight.enabled||talent.unholy_blight.enabled&cooldown.unholy_blight.remains>15%((talent.superstrain.enabled*3)+(talent.plaguebringer.enabled*2)+(talent.ebon_fever.enabled*2)))' to 'target.time_to_die>dot.virulent_plague.remains&(dot.virulent_plague.refreshable||talent.superstrain.enabled&(dot.frost_fever_superstrain.refreshable||dot.blood_plague_superstrain.refreshable))&(!talent.unholy_blight.enabled||talent.unholy_blight.enabled&cooldown.unholy_blight.remains>15/((talent.superstrain.enabled*3)+(talent.plaguebringer.enabled*2)+(talent.ebon_fever.enabled*2)))'.\nLine 22: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 22: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 23: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 23: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 24: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 24: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 24: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 24: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 24: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 24: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 25: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 25: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 25: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 25: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 25: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 26: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 26: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 26: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%45=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%45=0)'.\nLine 27: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 27: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 27: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%45=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%45=0)'.\nLine 28: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 28: Converted 'trinket.1.is.irideus_fragment' to 'trinket.t1.is.irideus_fragment' (1x).\nLine 28: Converted 'trinket.1.is.vial_of_animated_blood' to 'trinket.t1.is.vial_of_animated_blood' (1x).\nLine 29: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 29: Converted 'trinket.2.is.irideus_fragment' to 'trinket.t2.is.irideus_fragment' (1x).\nLine 29: Converted 'trinket.2.is.vial_of_animated_blood' to 'trinket.t2.is.vial_of_animated_blood' (1x).\nLine 30: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 30: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 30: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 30: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 30: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 30: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 30: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 30: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 30: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 30: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 30: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 30: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 30: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 30: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 30: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 30: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 30: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\nLine 31: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 31: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 34: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 34: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 35: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 35: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 36: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 36: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 37: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 37: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 37: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 37: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 37: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 37: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 37: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 37: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 37: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 37: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 38: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 38: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 38: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 38: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 38: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 38: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 38: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 38: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 38: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 38: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 39: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 39: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 39: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 39: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 39: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 39: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 39: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 39: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 39: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 40: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 40: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 40: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 40: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 40: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 40: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 40: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 40: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 40: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 41: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 41: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 41: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 41: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 42: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 42: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 42: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 42: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'aoe' required some automated changes.\nLine 4: Converted 'talent.epidemic' to 'talent.epidemic.enabled' (1x).\n\nImported 10 action lists.\n",
["author"] = "SimulationCraft",
["profile"] = "actions.precombat+=/raise_dead\nactions.precombat+=/army_of_the_dead,precombat_time=2,if=!equipped.fyralath_the_dreamrender||active_enemies>1\n\nactions+=/mind_freeze\nactions+=/strangulate\nactions+=/antimagic_shell,if=runic_power.deficit>40&(pet.gargoyle.active||!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>cooldown.antimagic_shell.duration)\nactions+=/antimagic_zone,if=death_knight.amz_absorb_percent>0&runic_power.deficit>70&talent.assimilation&(pet.gargoyle.active||!talent.summon_gargoyle)\n# Variables\nactions+=/variable,name=epidemic_priority,op=setif,value=1,value_else=0,condition=talent.improved_death_coil&!talent.coil_of_devastation&active_enemies>=3||talent.coil_of_devastation&active_enemies>=4||!talent.improved_death_coil&active_enemies>=2\nactions+=/variable,name=garg_setup_complete,op=setif,value=1,value_else=0,condition=active_enemies>=3||cooldown.summon_gargoyle.remains>1&(cooldown.apocalypse.remains>1||!talent.apocalypse)||!talent.summon_gargoyle||time>20\nactions+=/variable,name=apoc_timing,op=setif,value=7,value_else=3,condition=cooldown.apocalypse.remains<10&debuff.festering_wound.stack<=4&cooldown.unholy_assault.remains>10\nactions+=/variable,name=festermight_tracker,op=setif,value=debuff.festering_wound.stack>=1,value_else=debuff.festering_wound.stack>=(3-talent.infected_claws),condition=!pet.gargoyle.active&talent.festermight&buff.festermight.up&(buff.festermight.remains%(5*gcd.max))>=1\nactions+=/variable,name=pop_wounds,op=setif,value=1,value_else=0,condition=(cooldown.apocalypse.remains>variable.apoc_timing||!talent.apocalypse)&(variable.festermight_tracker||debuff.festering_wound.stack>=1&!talent.apocalypse||debuff.festering_wound.stack>=1&cooldown.unholy_assault.remains<20&talent.unholy_assault&variable.st_planning||debuff.rotten_touch.up&debuff.festering_wound.stack>=1||debuff.festering_wound.stack>4)||fight_remains<5&debuff.festering_wound.stack>=1\nactions+=/variable,name=pooling_runic_power,op=setif,value=1,value_else=0,condition=talent.vile_contagion&cooldown.vile_contagion.remains<3&runic_power<60&!variable.st_planning\nactions+=/variable,name=st_planning,op=setif,value=1,value_else=0,condition=active_enemies=1&(!raid_event.adds.exists||raid_event.adds.in>15)\nactions+=/variable,name=adds_remain,op=setif,value=1,value_else=0,condition=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>6)\nactions+=/variable,name=spend_rp,op=setif,value=1,value_else=0,condition=(!talent.rotten_touch||talent.rotten_touch&!debuff.rotten_touch.up||runic_power.deficit<15)&((talent.improved_death_coil&(active_enemies=2||talent.coil_of_devastation)||rune<3||pet.gargoyle.active||buff.sudden_doom.react||cooldown.apocalypse.remains<10&debuff.festering_wound.stack>3||!variable.pop_wounds&debuff.festering_wound.stack>=4))\n# Call Action Lists\n### Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=49206/summon-gargoyle'>Gargoyle</a> is up, as well as <a href='https://www.wowhead.com/spell=275699/apocalypse'>Apocalypse</a> or with <a href='https://www.wowhead.com/spell=63560/dark-transformation'>Dark Transformation</a> if <a href='https://www.wowhead.com/spell=275699/apocalypse'>Apocalypse</a> or <a href='https://www.wowhead.com/spell=49206/summon-gargoyle'>Gargoyle</a> are not talented\n## actions+=/invoke_external_buff,name=power_infusion,if=variable.st_planning&(pet.gargoyle.active&pet.gargoyle.remains<=22||!talent.summon_gargoyle&talent.army_of_the_dead&pet.army_ghoul.active&pet.army_ghoul.remains<=18||!talent.summon_gargoyle&!talent.army_of_the_dead&buff.dark_transformation.up||!talent.summon_gargoyle&buff.dark_transformation.up||!pet.gargoyle.active&cooldown.summon_gargoyle.remains+10>cooldown.invoke_external_buff.duration||active_enemies>=3&(buff.dark_transformation.up||death_and_decay.ticking))\nactions+=/potion,if=pet.gargoyle.remains<=30||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60||cooldown.summon_gargoyle.ready)&(buff.dark_transformation.up&30>=buff.dark_transformation.remains||pet.army_ghoul.active&pet.army_ghoul.remains<=30||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=30)||boss&fight_remains<=30\nactions+=/any_dnd,if=variable.adds_remain&!death_and_decay.ticking&!talent.bursting_sores&talent.defile&buff.defile.remains<gcd\nactions+=/army_of_the_dead,if=talent.summon_gargoyle&cooldown.summon_gargoyle.remains<3*gcd.max||!talent.summon_gargoyle||boss&fight_remains<35\nactions+=/death_coil,if=(active_enemies<=3||!talent.epidemic)&(pet.gargoyle.active&talent.commander_of_the_dead&buff.commander_of_the_dead.up&cooldown.apocalypse.remains<5&buff.commander_of_the_dead.remains>26||debuff.death_rot.up&debuff.death_rot.remains<gcd)\n# Modified from SimC APL: Count Virulent Plagues -or- enemies in case your enemies are outside of melee range.\nactions+=/epidemic,if=(active_dot.virulent_plague>=4||active_enemies>=4)&(talent.commander_of_the_dead&buff.commander_of_the_dead.up&cooldown.apocalypse.remains<5||debuff.death_rot.up&debuff.death_rot.remains<gcd.max)\nactions+=/wound_spender,if=(cooldown.apocalypse.remains>variable.apoc_timing+3||cooldown.unholy_assault.ready||active_enemies>=3)&talent.plaguebringer&(talent.superstrain||talent.unholy_blight)&buff.plaguebringer.remains<gcd\nactions+=/unholy_blight,if=variable.st_planning&((!talent.apocalypse||cooldown.apocalypse.remains||!talent.summon_gargoyle)&talent.morbidity||!talent.morbidity)||variable.adds_remain||fight_remains<21\nactions+=/outbreak,cycle_targets=1,if=target.time_to_die>dot.virulent_plague.remains&(dot.virulent_plague.refreshable||talent.superstrain&(dot.frost_fever_superstrain.refreshable||dot.blood_plague_superstrain.refreshable))&(!talent.unholy_blight||talent.unholy_blight&cooldown.unholy_blight.remains>15%((talent.superstrain*3)+(talent.plaguebringer*2)+(talent.ebon_fever*2)))\n## Trinkets\nactions+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\nactions+=/variable,name=trinket_1_buffs,value=(trinket.1.has_use_buff||trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)&!variable.trinket_1_exclude\nactions+=/variable,name=trinket_2_buffs,value=(trinket.2.has_use_buff||trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)&!variable.trinket_2_exclude\nactions+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%45=0)\nactions+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%45=0)\nactions+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box||trinket.1.is.irideus_fragment||trinket.1.is.vial_of_animated_blood\nactions+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box||trinket.2.is.irideus_fragment||trinket.2.is.vial_of_animated_blood\nactions+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.2.has_cooldown&!variable.trinket_2_exclude||!trinket.1.has_cooldown)||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync)*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl\nactions+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&(active_enemies<5||active_enemies>21||fight_remains<4)&(debuff.festering_wound.stack>=2||time>15)\nactions+=/use_item,name=gavel_of_the_first_arbiter\nactions+=/use_item,use_off_gcd=1,name=algethar_puzzle_box,if=cooldown.summon_gargoyle.remains<5&rune<=4||!talent.summon_gargoyle&pet.army_ghoul.active||active_enemies>3&variable.adds_remain&(buff.dark_transformation.up||talent.bursting_sores&cooldown.any_dnd.remains<10&!death_and_decay.ticking)\nactions+=/use_item,use_off_gcd=1,name=irideus_fragment,if=(pet.gargoyle.active&pet.gargoyle.remains<16||!talent.summon_gargoyle&pet.army_ghoul.active&pet.army_ghoul.remains<16)||active_enemies>3&variable.adds_remain&(buff.dark_transformation.up||talent.bursting_sores&death_and_decay.ticking)\nactions+=/use_item,use_off_gcd=1,name=vial_of_animated_blood,if=pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=18||!talent.apocalypse&buff.dark_transformation.up||active_enemies>3&variable.adds_remain&(buff.dark_transformation.up||talent.bursting_sores&death_and_decay.ticking)\nactions+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_manual&variable.trinket_1_buffs&((!talent.summon_gargoyle&((!talent.army_of_the_dead||cooldown.army_of_the_dead.remains_expected>60||death_knight.disable_aotd)&(pet.apoc_ghoul.active||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)||pet.army_ghoul.active)||talent.summon_gargoyle&pet.gargoyle.active||cooldown.summon_gargoyle.remains>80)&(pet.apoc_ghoul.active||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)&(variable.trinket_2_exclude||variable.trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown))||boss&trinket.1.proc.any_dps.duration>=fight_remains\nactions+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_manual&variable.trinket_2_buffs&((!talent.summon_gargoyle&((!talent.army_of_the_dead||cooldown.army_of_the_dead.remains_expected>60||death_knight.disable_aotd)&(pet.apoc_ghoul.active||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)||pet.army_ghoul.active)||talent.summon_gargoyle&pet.gargoyle.active||cooldown.summon_gargoyle.remains>80)&(pet.apoc_ghoul.active||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)&(variable.trinket_1_exclude||variable.trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown))||boss&trinket.2.proc.any_dps.duration>=fight_remains\nactions+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_manual&!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead||!talent.summon_gargoyle&talent.army_of_the_dead&cooldown.army_of_the_dead.remains_expected>20||!talent.summon_gargoyle&!talent.army_of_the_dead&cooldown.dark_transformation.remains>20||cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||fight_remains<15\nactions+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_manual&!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead||!talent.summon_gargoyle&talent.army_of_the_dead&cooldown.army_of_the_dead.remains_expected>20||!talent.summon_gargoyle&!talent.army_of_the_dead&cooldown.dark_transformation.remains>20||cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||fight_remains<15\nactions+=/use_items,use_off_gcd=1,if=(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions+=/call_action_list,name=racials\nactions+=/run_action_list,name=garg_setup,strict=1,if=variable.garg_setup_complete=0\nactions+=/call_action_list,name=cooldowns,strict=1,if=variable.st_planning\nactions+=/call_action_list,name=aoe_cooldowns,strict=1,if=variable.adds_remain\nactions+=/call_action_list,name=aoe_setup,if=variable.adds_remain&cooldown.any_dnd.remains<10&!death_and_decay.ticking\nactions+=/call_action_list,name=aoe_burst,strict=1,if=active_enemies>=4&death_and_decay.ticking\nactions+=/call_action_list,name=aoe,if=active_enemies>=4&(cooldown.any_dnd.remains>10&!death_and_decay.ticking||!variable.adds_remain)\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<=3\n\n# Generic AoE\nactions.aoe+=/epidemic,if=!variable.pooling_runic_power||fight_remains<10\nactions.aoe+=/wound_spender,cycle_targets=1,if=variable.pop_wounds\nactions.aoe+=/festering_strike,cycle_targets=1,if=!variable.pop_wounds\nactions.aoe+=/death_coil,if=!variable.pooling_runic_power&!talent.epidemic\n\n# AoE Burst\nactions.aoe_burst+=/epidemic,if=(rune<1||talent.bursting_sores&death_knight.fwounded_targets=0||!talent.bursting_sores)&!variable.pooling_runic_power&(active_enemies>=6||runic_power.deficit<30||buff.festermight.stack=20)\nactions.aoe_burst+=/wound_spender,cycle_targets=1,if=debuff.festering_wound.stack>=1\nactions.aoe_burst+=/epidemic,if=!variable.pooling_runic_power||fight_remains<10\nactions.aoe_burst+=/death_coil,if=!variable.pooling_runic_power&!talent.epidemic\nactions.aoe_burst+=/wound_spender\n\n# AoE Cooldowns\nactions.aoe_cooldowns+=/vile_contagion,cycle_targets=1,if=debuff.festering_wound.stack>=4&cooldown.any_dnd.remains<3\nactions.aoe_cooldowns+=/summon_gargoyle\nactions.aoe_cooldowns+=/abomination_limb,if=rune<2||buff.festermight.stack>10||!talent.festermight||buff.festermight.up&buff.festermight.remains<12\nactions.aoe_cooldowns+=/apocalypse,cycle_targets=1,if=talent.bursting_sores&debuff.festering_wound.up&(!death_and_decay.ticking&cooldown.death_and_decay.remains&rune<3||death_and_decay.ticking&rune=0)\nactions.aoe_cooldowns+=/apocalypse,cycle_targets=1,if=!talent.bursting_sores&debuff.festering_wound.stack>=4||set_bonus.tier31_2pc&debuff.festering_wound.stack>=1\nactions.aoe_cooldowns+=/unholy_assault,cycle_targets=1,if=debuff.festering_wound.stack<=2||buff.dark_transformation.up\nactions.aoe_cooldowns+=/raise_dead,if=!pet.ghoul.active\nactions.aoe_cooldowns+=/dark_transformation,if=(cooldown.any_dnd.remains<10&talent.infected_claws&((cooldown.vile_contagion.remains||raid_event.adds.exists&raid_event.adds.in>10)&death_knight.fwounded_targets<active_enemies||!talent.vile_contagion)&(raid_event.adds.remains>5||!raid_event.adds.exists)||!talent.infected_claws)\nactions.aoe_cooldowns+=/empower_rune_weapon,if=buff.dark_transformation.up\nactions.aoe_cooldowns+=/sacrificial_pact,if=!buff.dark_transformation.up&cooldown.dark_transformation.remains>6||boss&fight_remains<gcd\n\n# AoE Setup\nactions.aoe_setup+=/any_dnd,if=(!talent.bursting_sores||death_knight.fwounded_targets>=cycle_enemies||death_knight.fwounded_targets>=8||raid_event.adds.exists&raid_event.adds.remains<=11&raid_event.adds.remains>5)&(!talent.defile||talent.defile&buff.defile.remains<gcd)\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=(debuff.festering_wound.down||death_knight.fwounded_targets<cycle_enemies)&talent.bursting_sores\nactions.aoe_setup+=/epidemic,if=!variable.pooling_runic_power||fight_remains<10\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=(debuff.festering_wound.down||death_knight.fwounded_targets<cycle_enemies)\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=cooldown.apocalypse.remains<variable.apoc_timing&debuff.festering_wound.stack<4\nactions.aoe_setup+=/death_coil,if=!variable.pooling_runic_power&!talent.epidemic\n\n# ST/Cleave Cooldowns\nactions.cooldowns+=/summon_gargoyle,if=buff.commander_of_the_dead.up||!talent.commander_of_the_dead\nactions.cooldowns+=/raise_dead,if=!pet.ghoul.active\nactions.cooldowns+=/dark_transformation,if=cooldown.apocalypse.remains<5\nactions.cooldowns+=/apocalypse,cycle_targets=1,if=variable.st_planning&debuff.festering_wound.stack>=4\nactions.cooldowns+=/empower_rune_weapon,if=variable.st_planning&(pet.gargoyle.active&pet.gargoyle.remains<=23||!talent.summon_gargoyle&talent.army_of_the_damned&pet.army_ghoul.active&pet.apoc_ghoul.active||!talent.summon_gargoyle&!talent.army_of_the_damned&buff.dark_transformation.up||!talent.summon_gargoyle&!talent.summon_gargoyle&buff.dark_transformation.up)||boss&fight_remains<=21\nactions.cooldowns+=/abomination_limb,if=rune<3&variable.st_planning\nactions.cooldowns+=/unholy_assault,cycle_targets=1,if=variable.st_planning\nactions.cooldowns+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>5\nactions.cooldowns+=/soul_reaper,cycle_targets=1,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\n\n# Garg Setup\nactions.garg_setup+=/apocalypse,if=debuff.festering_wound.stack>=4&(buff.commander_of_the_dead.up&pet.gargoyle.remains<23||!talent.commander_of_the_dead)\nactions.garg_setup+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>5\nactions.garg_setup+=/any_dnd,if=!death_and_decay.ticking&debuff.festering_wound.stack>1\nactions.garg_setup+=/summon_gargoyle,use_off_gcd=1,if=buff.commander_of_the_dead.up||!talent.commander_of_the_dead&runic_power>=40\nactions.garg_setup+=/empower_rune_weapon,if=pet.gargoyle.active&pet.gargoyle.remains<=23\nactions.garg_setup+=/unholy_assault,if=pet.gargoyle.active&pet.gargoyle.remains<=23\nactions.garg_setup+=/dark_transformation,if=talent.commander_of_the_dead&runic_power>=40||!talent.commander_of_the_dead\nactions.garg_setup+=/festering_strike,if=debuff.festering_wound.stack=0||talent.apocalypse&cooldown.apocalypse.remains<3*gcd.max&debuff.festering_wound.stack<4||runic_power<40||!talent.apocalypse&!pet.gargoyle.active\nactions.garg_setup+=/death_coil,if=rune<=1\n\n# Racials\nactions.racials+=/arcane_torrent,if=runic_power.deficit>20&(cooldown.summon_gargoyle.remains<gcd&time>15||!talent.summon_gargoyle.enabled||pet.gargoyle.active&rune<2&debuff.festering_wound.stack<1)\nactions.racials+=/blood_fury,if=(buff.blood_fury.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.blood_fury.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.blood_fury.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.blood_fury.duration+3\nactions.racials+=/berserking,if=(buff.berserking.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.berserking.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.berserking.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.berserking.duration+3\nactions.racials+=/lights_judgment,if=buff.unholy_strength.up&(!talent.festermight||buff.festermight.remains<target.time_to_die||buff.unholy_strength.remains<target.time_to_die)\nactions.racials+=/ancestral_call,if=(18>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=18||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=18||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=18\nactions.racials+=/arcane_pulse,if=active_enemies>=2||(rune.deficit>=5&runic_power.deficit>=60)\nactions.racials+=/fireblood,if=(buff.fireblood.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.fireblood.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.fireblood.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.fireblood.duration+3\nactions.racials+=/bag_of_tricks,if=active_enemies=1&(buff.unholy_strength.up||boss&fight_remains<5)\n\n# Single Target\nactions.st+=/death_coil,if=!variable.epidemic_priority&(!variable.pooling_runic_power&variable.spend_rp||boss&fight_remains<10)\nactions.st+=/epidemic,if=variable.epidemic_priority&(!variable.pooling_runic_power&variable.spend_rp||boss&fight_remains<10)\nactions.st+=/any_dnd,if=!death_and_decay.ticking&(active_enemies>=2||talent.unholy_ground&(pet.apoc_ghoul.active&pet.apoc_ghoul.remains>=13||pet.gargoyle.active&pet.gargoyle.remains>8||pet.army_ghoul.active&pet.army_ghoul.remains>8||!variable.pop_wounds&debuff.festering_wound.stack>=4)||talent.defile&(pet.gargoyle.active||pet.apoc_ghoul.active||pet.army_ghoul.active||buff.dark_transformation.up))&(death_knight.fwounded_targets>=cycle_enemies||active_enemies=1)\nactions.st+=/wound_spender,cycle_targets=1,if=variable.pop_wounds||active_enemies>=2&death_and_decay.ticking\nactions.st+=/festering_strike,cycle_targets=1,if=!variable.pop_wounds&debuff.festering_wound.stack<4\nactions.st+=/death_coil\nactions.st+=/wound_spender,cycle_targets=1,if=!variable.pop_wounds&debuff.festering_wound.stack>=4",
},
["Frost DK"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimC",
["desc"] = "2024-05-08: SimC update.\n\n2024-03-10: Resync with sim.\n\n2024-01-26: Fyralath tweaks.\n\n2024-01-16: Don't use 'react' when you don't care about stacks.\n\n2024-01-10: Resync with SimC.\n\n2024-01-06: Minor SimC update.\n\n2023-12-28: Update for SimC.\n\n2023-12-24 & 25: Fyralath target-swaps; Obliterate.\n\n2023-11-27: There's this axe...\n\n2023-11-17 & 26:  Sim update.\n\n2023-11-13: Sim update.\n\n2023-11-11:  Incremental update.\n\n2023-11-10:  Incremental update from SimC.\n\n2023-11-05:  Patch 10.2 updates.\n\n2023-09-21: Tier 31 prep.\n\n2023-09-10: Minor change for Gathering Storm.\n\n2023-07-12: Patch 10.1.5 minor update.\n\n2023-06-24: Resynced with SimC.\n\n2023-05-28: Minor priority update.\n\n2023-05-24:  Update Obliterate usage with T30.\n\n2023-05-21:  Minor updates.\n\n2023-04-30:  Trinket logic updated from SimC.\n\n2023-03-27:  Minor SimC updates.\n\n2023-03-25:  Updates (mainly to Obliteration).\n\n2023-03-21:  Fix Breath of Sindragosa.\n\n2023-03-13:  Updates for 10.0.7.\n\n2023-02-20:  Additional adjustments for leveling and/or taking Obliteration without ERW.\n\n2023-02-19:  Adjusted variable.pooling_runes such that you are not pooling when you are already at max runes.  It is unclear why this check isn't needed in SimulationCraft, but is required in-game.",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up < 2 & runic_power.deficit < 20 + ( 4 * buff.rune_of_hysteria.up ) & ! variable.two_hand_check",
["action"] = "frost_strike",
["description"] = "Single Target Rotation",
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up & set_bonus.tier30_2pc & buff.killing_machine.stack < 2",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & variable.frostscythe_priority",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up & talent.icebreaker.rank = 2",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "rune < 4 & runic_power.deficit > 25 + ( 5 * buff.rune_of_hysteria.up ) & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ( variable.rp_buffs || runic_power.deficit < 25 + ( 5 * buff.rune_of_hysteria.up ) || debuff.razorice.stack = 5 & talent.shattering_blade.enabled )",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "variable.rime_buffs",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! death_knight.runeforge.razorice & ( debuff.razorice.stack < 5 || debuff.razorice.remains < gcd.max * 3 )",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runes & buff.remorseless_winter.up",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "rune < 4 & runic_power.deficit > 25 & ( ! talent.breath_of_sindragosa.enabled || cooldown.breath_of_sindragosa.remains > cooldown.horn_of_winter.duration )",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "frost_strike",
},
},
["cold_heart"] = {
{
["enabled"] = true,
["criteria"] = "fight_remains < gcd.max & ( rune < 2 || ! buff.killing_machine.up & ( ! variable.two_hand_check & buff.cold_heart.stack >= 4 || variable.two_hand_check & buff.cold_heart.stack > 8 ) || buff.killing_machine.up & ( ! variable.two_hand_check & buff.cold_heart.stack > 8 || variable.two_hand_check & buff.cold_heart.stack > 10 ) )",
["action"] = "chains_of_ice",
["description"] = "Cold Heart",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & buff.pillar_of_frost.up & buff.cold_heart.stack >= 10 & ( buff.pillar_of_frost.remains < gcd.max * ( 1 + ( talent.frostwyrms_fury.enabled & cooldown.frostwyrms_fury.ready ) ) || buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max )",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & death_knight.runeforge.fallen_crusader & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains_expected > 15 & ( buff.cold_heart.stack >= 10 & buff.unholy_strength.up || buff.cold_heart.stack >= 13 )",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & ! death_knight.runeforge.fallen_crusader & buff.cold_heart.stack >= 10 & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains_expected > 20",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & ( buff.cold_heart.stack >= 14 & ( buff.unholy_strength.up || buff.chaos_bane.up ) || buff.cold_heart.stack >= 19 || cooldown.pillar_of_frost.remains_expected < 3 & buff.cold_heart.stack >= 14 )",
["action"] = "chains_of_ice",
},
},
["breath_oblit"] = {
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & variable.frostscythe_priority",
["action"] = "frostscythe",
["description"] = "Breath & Obliteration Active Rotation",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up",
["action"] = "obliterate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 25",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20",
["action"] = "arcane_torrent",
},
},
["breath"] = {
{
["enabled"] = true,
["criteria"] = "variable.rime_buffs & runic_power > ( 45 - ( ( talent.rage_of_the_frozen_champion.enabled * 8 ) + ( 5 * buff.rune_of_hysteria.up ) ) )",
["action"] = "howling_blast",
["description"] = "Breath Active Rotation",
},
{
["enabled"] = true,
["criteria"] = "rune < 2 & runic_power.deficit > 25 + ( 5 * buff.rune_of_hysteria.up )",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & ! variable.frostscythe_priority",
["action"] = "obliterate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.frostscythe_priority & ( buff.killing_machine.up || runic_power > 45 )",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 40 || buff.pillar_of_frost.up",
["action"] = "obliterate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "runic_power < 36 & rune.time_to_2 > runic_power / 18",
["action"] = "remorseless_winter",
},
{
["enabled"] = true,
["criteria"] = "( set_bonus.tier31_4pc & variable.st_planning & talent.unholy_ground.enabled & ! death_and_decay.ticking & runic_power.deficit >= 10 ) || runic_power < 36 & rune.time_to_2 > runic_power / 18",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["criteria"] = "runic_power < 36 & rune.time_to_2 > runic_power / 18",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 25",
["action"] = "obliterate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "runic_power < 60",
["action"] = "arcane_torrent",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["var_name"] = "st_planning",
["description"] = "Variables",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.rime.up & ( talent.rage_of_the_frozen_champion.enabled || talent.avalanche.enabled || talent.icebreaker.enabled )",
["var_name"] = "rime_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.unleashed_frenzy.enabled & ( buff.unleashed_frenzy.remains < gcd.max * 3 || buff.unleashed_frenzy.stack < 3 ) || talent.icy_talons.enabled & ( buff.icy_talons.remains < gcd.max * 3 || buff.icy_talons.stack < 3 )",
["var_name"] = "rp_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ( talent.obliteration.enabled & buff.pillar_of_frost.remains > 10 || ! talent.obliteration.enabled ) || ! talent.pillar_of_frost.enabled & buff.empower_rune_weapon.up || ! talent.pillar_of_frost.enabled & ! talent.empower_rune_weapon.enabled || active_enemies >= 2 & buff.pillar_of_frost.up",
["var_name"] = "cooldown_check",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.frostscythe.enabled & ( buff.killing_machine.up || active_enemies >= 3 ) & ( ! talent.improved_obliterate.enabled & ! talent.frigid_executioner.enabled || ! talent.cleaving_strikes.enabled || talent.cleaving_strikes.enabled & ( active_enemies > 8 || ! death_and_decay.ticking & active_enemies > 4 ) )",
["var_name"] = "frostscythe_priority",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Formulaic approach to determine the time before these abilities come off cooldown that the simulation should star to pool resources. Capped at 15s in the run_action_list call.",
["var_name"] = "oblit_pooling_time",
["value"] = "( ( cooldown.pillar_of_frost.remains_expected + 1 ) / gcd.max ) / ( ( rune + 3 ) * ( runic_power + 5 ) ) * 100",
["action"] = "variable",
["value_else"] = "3",
["criteria"] = "runic_power < 35 & rune < 2 & cooldown.pillar_of_frost.remains_expected < 10",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "breath_pooling_time",
["value"] = "( ( cooldown.breath_of_sindragosa.remains + 1 ) / gcd.max ) / ( ( rune + 1 ) * ( runic_power + 20 ) ) * 100",
["value_else"] = "2",
["criteria"] = "runic_power.deficit > 10 & cooldown.breath_of_sindragosa.remains < 10",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "rune < 4 & talent.obliteration.enabled & cooldown.pillar_of_frost.remains_expected < variable.oblit_pooling_time",
["var_name"] = "pooling_runes",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.breath_of_sindragosa.enabled & cooldown.breath_of_sindragosa.remains < variable.breath_pooling_time || talent.obliteration.enabled & runic_power < 35 & cooldown.pillar_of_frost.remains_expected < variable.oblit_pooling_time",
["var_name"] = "pooling_runic_power",
},
},
["high_prio"] = {
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.up",
["action"] = "mind_freeze",
["description"] = "Interrupt",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 40 & death_knight.first_ams_cast < time",
["action"] = "antimagic_shell",
},
{
["enabled"] = true,
["criteria"] = "! death_knight.amz_specified & ( death_knight.amz_absorb_percent > 0 & runic_power.deficit > 70 & talent.assimilation.enabled & ( buff.breath_of_sindragosa.up || cooldown.breath_of_sindragosa.ready || ! talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up ) )",
["action"] = "antimagic_zone",
},
{
["enabled"] = true,
["criteria"] = "! dot.frost_fever.ticking & active_enemies >= 2 & ( ( ! talent.obliteration.enabled || talent.obliteration.enabled & ( ! cooldown.pillar_of_frost.ready || buff.pillar_of_frost.up & ! buff.killing_machine.up ) ) || ( equipped.fyralath_the_dreamrender & ! dot.mark_of_fyralath.ticking ) )",
["action"] = "howling_blast",
["description"] = "Maintain Frost Fever, Icy Talons and Unleashed Frenzy",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & variable.rp_buffs & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & variable.rp_buffs & talent.breath_of_sindragosa.enabled & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & variable.rp_buffs & ! talent.breath_of_sindragosa.enabled & talent.obliteration.enabled & ! buff.pillar_of_frost.up",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & variable.rp_buffs & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & variable.rp_buffs & talent.breath_of_sindragosa.enabled & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & variable.rp_buffs & ! talent.breath_of_sindragosa.enabled & talent.obliteration.enabled & ! buff.pillar_of_frost.up",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "variable.rw_buffs || variable.adds_remain",
["action"] = "remorseless_winter",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "buff.rime.up || ! dot.frost_fever.ticking",
["action"] = "howling_blast",
["description"] = "AoE Action List",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & variable.rp_buffs",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & equipped.fyralath_the_dreamrender & ( cooldown.rage_of_fyralath_417131.remains < 3 || ! dot.mark_of_fyralath.ticking )",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & talent.cleaving_strikes.enabled & death_and_decay.ticking & ! variable.frostscythe_priority",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "variable.frostscythe_priority",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "! variable.frostscythe_priority",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.glacial_advance.enabled",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "rune < 2 & runic_power.deficit > 25",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 25",
["action"] = "arcane_torrent",
},
},
["default"] = {
{
["action"] = "mind_freeze",
["enabled"] = true,
},
{
["action"] = "strangulate",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Choose Action list to run",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "high_prio",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "racials",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "talent.cold_heart.enabled & ( ! buff.killing_machine.up || talent.breath_of_sindragosa.enabled ) & ( ( debuff.razorice.stack = 5 || ! death_knight.runeforge.razorice & ! talent.glacial_advance.enabled & ! talent.avalanche.enabled ) || fight_remains <= gcd.max )",
["list_name"] = "cold_heart",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "buff.breath_of_sindragosa.up & talent.obliteration.enabled & buff.pillar_of_frost.up",
["list_name"] = "breath_oblit",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "buff.breath_of_sindragosa.up & ( ! talent.obliteration.enabled || talent.obliteration.enabled & ! buff.pillar_of_frost.up )",
["list_name"] = "breath",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "talent.obliteration.enabled & buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up",
["list_name"] = "obliteration",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by pillar of frost, empower rune weapon, or breath of sindragosa's cooldown. If it's value has no remainder return 1, else return 0.5.",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "trinket.t1.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t1.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t1.cooldown.duration = 0 ) )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "trinket.t2.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t2.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t2.cooldown.duration = 0 ) )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t2.has_cooldown & ! variable.trinket_2_exclude || ! trinket.t1.has_cooldown ) || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.gathering_storm.enabled || talent.everfrost.enabled",
["var_name"] = "rw_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "main_hand.2h",
["var_name"] = "two_hand_check",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Protects Breath from starving itself on ERW charges depending on anticipated resource gains. More resources enable more aggressive use.",
["var_name"] = "erw_pooling_time",
["value"] = "30",
["action"] = "variable",
["value_else"] = "45",
["criteria"] = "death_knight.ams_absorb_percent > 0.59",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ( talent.obliteration.enabled & buff.pillar_of_frost.remains < 6 || ! talent.obliteration.enabled ) || ! talent.pillar_of_frost.enabled & buff.empower_rune_weapon.up || ! talent.pillar_of_frost.enabled & ! talent.empower_rune_weapon.enabled || active_enemies >= 2 & buff.pillar_of_frost.up ) || fight_remains < 25",
["action"] = "potion",
["description"] = "Cooldowns",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.empower_rune_weapon.up & rune < 6 & ( ( cooldown.pillar_of_frost.remains_expected < 7 & buff.bloodlust.up ) || ( ( active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 12 ) || variable.st_planning ) & cooldown.pillar_of_frost.ready ) ) || fight_remains < 20",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "empower_rune_weapon",
["criteria"] = "buff.breath_of_sindragosa.up & ! buff.empower_rune_weapon.up & ( ( time < 10 & buff.bloodlust.up ) || ( runic_power < 70 & rune < 3 & ( cooldown.breath_of_sindragosa.remains > variable.erw_pooling_time || full_recharge_time < 10 ) ) )",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "empower_rune_weapon",
["criteria"] = "! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled & ! buff.empower_rune_weapon.up & rune < 5 & ( cooldown.pillar_of_frost.remains_expected < 7 || buff.pillar_of_frost.up || ! talent.pillar_of_frost.enabled )",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains < 3 & ( variable.adds_remain || variable.st_planning ) || fight_remains < 15",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "talent.breath_of_sindragosa.enabled & ( variable.adds_remain || variable.st_planning )",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled & ( variable.adds_remain || variable.st_planning )",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier31_2pc & buff.chilling_rage.remains < 3",
["action"] = "chill_streak",
},
{
["enabled"] = true,
["criteria"] = "! set_bonus.tier31_2pc & active_enemies >= 2 & ( ! death_and_decay.ticking & talent.cleaving_strikes.enabled || ! talent.cleaving_strikes.enabled || active_enemies <= 5 )",
["action"] = "chill_streak",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ( variable.adds_remain || variable.st_planning ) & ( buff.empower_rune_weapon.up || cooldown.empower_rune_weapon.remains ) || fight_remains < 12",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["criteria"] = "talent.breath_of_sindragosa.enabled & ( variable.adds_remain || variable.st_planning ) & ( ! talent.icecap.enabled & ( runic_power > 70 || cooldown.breath_of_sindragosa.remains > 40 ) || talent.icecap.enabled & ( cooldown.breath_of_sindragosa.remains > 5 ) ) || buff.breath_of_sindragosa.up",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["criteria"] = "talent.icecap.enabled & ! talent.obliteration.enabled & ! talent.breath_of_sindragosa.enabled & ( variable.adds_remain || variable.st_planning )",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["criteria"] = "! buff.breath_of_sindragosa.up & ( runic_power > 50 & cooldown.empower_rune_weapon.ready || runic_power > 60 & cooldown.empower_rune_weapon.remains_expected < 30 || runic_power > 80 & cooldown.empower_rune_weapon.remains_expected > 30 ) & ( variable.adds_remain || variable.st_planning || fight_remains < 30 )",
["action"] = "breath_of_sindragosa",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.remains < gcd.max * 2 & buff.pillar_of_frost.up & ! talent.obliteration.enabled || ! talent.pillar_of_frost.enabled ) & ( ! raid_event.adds.exists || ( raid_event.adds.in > 15 + raid_event.adds.duration || talent.absolute_zero.enabled & raid_event.adds.in > 15 + raid_event.adds.duration ) ) || fight_remains < 3",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up || raid_event.adds.exists & raid_event.adds.up & raid_event.adds.in > cooldown.pillar_of_frost.remains_expected - raid_event.adds.in - raid_event.adds.duration ) & ( buff.pillar_of_frost.remains < gcd.max * 2 || raid_event.adds.exists & raid_event.adds.remains < gcd.max * 2 )",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ! variable.two_hand_check || ! buff.pillar_of_frost.up & variable.two_hand_check & cooldown.pillar_of_frost.remains || ! talent.pillar_of_frost.enabled ) & ( ( buff.pillar_of_frost.remains < gcd.max || buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max ) & ( debuff.razorice.stack = 5 || ! death_knight.runeforge.razorice & ! talent.glacial_advance.enabled ) )",
["action"] = "frostwyrms_fury",
},
{
["action"] = "raise_dead",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 5 & target.time_to_pct_35 < 5 & active_enemies <= 2 & ( talent.obliteration.enabled & ( buff.pillar_of_frost.up & ! buff.killing_machine.up & rune > 2 || ! buff.pillar_of_frost.up ) || talent.breath_of_sindragosa.enabled & ( buff.breath_of_sindragosa.up & runic_power > 50 || ! buff.breath_of_sindragosa.up ) || ! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & variable.adds_remain & ( buff.pillar_of_frost.up & buff.pillar_of_frost.remains > 5 & buff.pillar_of_frost.remains < 11 || ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains > 10 || fight_remains < 11 ) & ( active_enemies > 5 || talent.cleaving_strikes.enabled & active_enemies >= 2 )",
["action"] = "any_dnd",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["action"] = "fyralath_the_dreamrender",
["criteria"] = "dot.mark_of_fyralath.ticking & ! buff.pillar_of_frost.up & ! buff.empower_rune_weapon.up & ! death_and_decay.ticking & ( active_enemies < 2 || dot.frost_fever.ticking )",
["description"] = "Trinkets",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["criteria"] = "! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains < 2 & ( ! talent.breath_of_sindragosa.enabled || runic_power > 60 & ( buff.breath_of_sindragosa.up || cooldown.breath_of_sindragosa.remains < 2 ) )",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Pillar of Frost.",
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( talent.obliteration.enabled & buff.pillar_of_frost.remains > 10 & ( ! variable.rp_buffs || cooldown.empower_rune_weapon.max_charges < 2 & buff.empower_rune_weapon.up ) || ! talent.obliteration.enabled ) & ( ! buff.pillar_of_frost.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & ( buff.breath_of_sindragosa.up || buff.pillar_of_frost.up ) & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( talent.obliteration.enabled & buff.pillar_of_frost.remains > 10 & ( ! variable.rp_buffs || cooldown.empower_rune_weapon.max_charges < 2 & buff.empower_rune_weapon.up ) || ! talent.obliteration.enabled ) & ( ! buff.pillar_of_frost.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & ( buff.breath_of_sindragosa.up || buff.pillar_of_frost.up ) & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains ) || ( trinket.t1.cast_time > 0 & ! buff.pillar_of_frost.up || ! trinket.t1.cast_time > 0 & cooldown.pillar_of_frost.remains > 20 ) || talent.pillar_of_frost.enabled & cooldown.pillar_of_frost.remains_expected > 20 || ! talent.pillar_of_frost.enabled )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains ) || ( trinket.t2.cast_time > 0 & ! buff.pillar_of_frost.up || ! trinket.t2.cast_time > 0 & cooldown.pillar_of_frost.remains > 20 ) || talent.pillar_of_frost.enabled & cooldown.pillar_of_frost.remains_expected > 20 || ! talent.pillar_of_frost.enabled )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["racials"] = {
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "blood_fury",
["description"] = "Racial Abilities",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & buff.unholy_strength.up",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & buff.pillar_of_frost.up & ( buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max * 3 || buff.pillar_of_frost.remains < gcd.max * 3 )",
["action"] = "bag_of_tricks",
},
},
["obliteration"] = {
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.stack < 2 & buff.pillar_of_frost.remains < gcd.max & buff.rime.up",
["action"] = "howling_blast",
["description"] = "Obliteration Active Rotation",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 1 || ! talent.glacial_advance.enabled ) & buff.killing_machine.up < 2 & buff.pillar_of_frost.remains < gcd.max & ! death_and_decay.ticking",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up < 2 & buff.pillar_of_frost.remains < gcd.max & ! death_and_decay.ticking",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & ( variable.frostscythe_priority || active_enemies > 3 & ! death_and_decay.ticking & equipped.fyralath_the_dreamrender & ( cooldown.rage_of_fyralath_417131.remains < 3 || ! dot.mark_of_fyralath.ticking ) )",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & ! variable.frostscythe_priority",
["action"] = "obliterate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & ( ! dot.frost_fever.ticking || buff.rime.up & set_bonus.tier30_2pc & ! variable.rp_buffs )",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & ( ! death_knight.runeforge.razorice & ( ! talent.avalanche.enabled || debuff.razorice.stack < 5 || debuff.razorice.remains < gcd.max * 3 ) || ( ( variable.rp_buffs || rune < 2 ) & active_enemies > 1 ) )",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & ( rune < 2 || variable.rp_buffs || debuff.razorice.stack = 5 & talent.shattering_blade.enabled ) & ! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 )",
["action"] = "frost_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up & ! buff.killing_machine.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & ! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 )",
["action"] = "frost_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & runic_power < 30",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "rune < 1 & runic_power < 30",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & active_enemies >= 2",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 )",
["action"] = "frost_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["action"] = "obliterate",
["cycle_targets"] = 1,
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'single_target' required some automated changes.\nLine 6: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 6: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 11: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\n\nThe import for 'cold_heart' required some automated changes.\nLine 2: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 2: Converted 'talent.frostwyrms_fury' to 'talent.frostwyrms_fury.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'breath' required some automated changes.\nLine 1: Converted 'talent.rage_of_the_frozen_champion' to 'talent.rage_of_the_frozen_champion.enabled' (1x).\nLine 6: Converted operations in 'runic_power<36&rune.time_to_2>runic_power%18' to 'runic_power<36&rune.time_to_2>runic_power/18'.\nLine 7: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 7: Converted operations in '(set_bonus.tier31_4pc&variable.st_planning&talent.unholy_ground.enabled&!death_and_decay.ticking&runic_power.deficit>=10)||runic_power<36&rune.time_to_2>runic_power%18' to '(set_bonus.tier31_4pc&variable.st_planning&talent.unholy_ground.enabled&!death_and_decay.ticking&runic_power.deficit>=10)||runic_power<36&rune.time_to_2>runic_power/18'.\nLine 8: Converted operations in 'runic_power<36&rune.time_to_2>runic_power%18' to 'runic_power<36&rune.time_to_2>runic_power/18'.\n\nThe import for 'variables' required some automated changes.\nLine 3: Converted 'talent.rage_of_the_frozen_champion' to 'talent.rage_of_the_frozen_champion.enabled' (1x).\nLine 3: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 3: Converted 'talent.icebreaker' to 'talent.icebreaker.enabled' (1x).\nLine 4: Converted 'talent.unleashed_frenzy' to 'talent.unleashed_frenzy.enabled' (1x).\nLine 4: Converted 'talent.icy_talons' to 'talent.icy_talons.enabled' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.empower_rune_weapon' to 'talent.empower_rune_weapon.enabled' (1x).\nLine 6: Converted 'talent.frostscythe' to 'talent.frostscythe.enabled' (1x).\nLine 6: Converted 'talent.improved_obliterate' to 'talent.improved_obliterate.enabled' (1x).\nLine 6: Converted 'talent.frigid_executioner' to 'talent.frigid_executioner.enabled' (1x).\nLine 6: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 6: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 7: Converted operations in '((cooldown.pillar_of_frost.remains_expected+1)%gcd.max)%((rune+3)*(runic_power+5))*100' to '((cooldown.pillar_of_frost.remains_expected+1)/gcd.max)/((rune+3)*(runic_power+5))*100'.\nLine 8: Converted operations in '((cooldown.breath_of_sindragosa.remains+1)%gcd.max)%((rune+1)*(runic_power+20))*100' to '((cooldown.breath_of_sindragosa.remains+1)/gcd.max)/((rune+1)*(runic_power+20))*100'.\nLine 9: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 10: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'obliteration' required some automated changes.\nLine 2: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 7: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 8: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 8: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 10: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 14: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\n\nThe import for 'racials' required some automated changes.\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 8: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 8: Converted 'talent.cold_heart' to 'talent.cold_heart.enabled' (1x).\nLine 8: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 8: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 8: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 9: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 11: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 1: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 2: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 2: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted operations in 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t1.cooldown.duration=0))' to 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t1.cooldown.duration=0))'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 4: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted operations in 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t2.cooldown.duration=0))' to 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t2.cooldown.duration=0))'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 5: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 5: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 5: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 5: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 5: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 6: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 6: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 6: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 6: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 7: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 7: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 7: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\nLine 8: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 8: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 9: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 10: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 11: Converted 'talent.gathering_storm' to 'talent.gathering_storm.enabled' (1x).\nLine 11: Converted 'talent.everfrost' to 'talent.everfrost.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'cooldowns' required some automated changes.\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 1: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.empower_rune_weapon' to 'talent.empower_rune_weapon.enabled' (1x).\nLine 2: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 6: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 9: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 9: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 11: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 11: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 11: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 12: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 12: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 12: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 14: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 14: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 14: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 14: Converted 'talent.absolute_zero' to 'talent.absolute_zero.enabled' (1x).\nLine 15: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 16: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 16: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 16: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 16: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 18: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 18: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 18: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 18: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 19: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 6: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'high_prio' required some automated changes.\nLine 3: Converted 'talent.assimilation' to 'talent.assimilation.enabled' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 6: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 8: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 8: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 9: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 10: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 4: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 8: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\n\nImported 13 action lists.\n",
["spec"] = 251,
["profile"] = "actions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\n# Evaluates a trinkets cooldown, divided by pillar of frost, empower rune weapon, or breath of sindragosa's cooldown. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.1.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.2.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.2.has_cooldown&!variable.trinket_2_exclude||!trinket.1.has_cooldown)||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync)*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\nactions.precombat+=/variable,name=rw_buffs,value=talent.gathering_storm||talent.everfrost\nactions.precombat+=/variable,name=two_hand_check,value=main_hand.2h\n# Protects Breath from starving itself on ERW charges depending on anticipated resource gains. More resources enable more aggressive use.\nactions.precombat+=/variable,name=erw_pooling_time,op=setif,value=30,value_else=45,condition=death_knight.ams_absorb_percent>0.59\n\nactions+=/mind_freeze\nactions+=/strangulate\n# Choose Action list to run\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=high_prio\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=racials\nactions+=/call_action_list,name=cold_heart,if=talent.cold_heart&(!buff.killing_machine.up||talent.breath_of_sindragosa)&((debuff.razorice.stack=5||!death_knight.runeforge.razorice&!talent.glacial_advance&!talent.avalanche)||fight_remains<=gcd)\nactions+=/run_action_list,name=breath_oblit,strict=1,if=buff.breath_of_sindragosa.up&talent.obliteration&buff.pillar_of_frost.up\nactions+=/run_action_list,name=breath,if=buff.breath_of_sindragosa.up&(!talent.obliteration||talent.obliteration&!buff.pillar_of_frost.up)\nactions+=/run_action_list,name=obliteration,if=talent.obliteration&buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=2\nactions+=/call_action_list,name=single_target,strict=1,if=active_enemies=1\n\n# AoE Action List\nactions.aoe+=/howling_blast,if=buff.rime.up||!dot.frost_fever.ticking\nactions.aoe+=/glacial_advance,if=!variable.pooling_runic_power&variable.rp_buffs\nactions.aoe+=/frostscythe,if=!death_and_decay.ticking&equipped.fyralath_the_dreamrender&(cooldown.rage_of_fyralath_417131.remains<3||!dot.mark_of_fyralath.ticking)\nactions.aoe+=/obliterate,if=buff.killing_machine.up&talent.cleaving_strikes&death_and_decay.ticking&!variable.frostscythe_priority\nactions.aoe+=/glacial_advance,if=!variable.pooling_runic_power\nactions.aoe+=/frostscythe,if=variable.frostscythe_priority\nactions.aoe+=/obliterate,if=!variable.frostscythe_priority\nactions.aoe+=/frost_strike,if=!variable.pooling_runic_power&!talent.glacial_advance\nactions.aoe+=/horn_of_winter,if=rune<2&runic_power.deficit>25\nactions.aoe+=/arcane_torrent,if=runic_power.deficit>25\n\n# Breath Active Rotation\nactions.breath+=/howling_blast,if=variable.rime_buffs&runic_power>(45-((talent.rage_of_the_frozen_champion*8)+(5*buff.rune_of_hysteria.up)))\nactions.breath+=/horn_of_winter,if=rune<2&runic_power.deficit>25+(5*buff.rune_of_hysteria.up)\nactions.breath+=/obliterate,cycle_targets=1,if=buff.killing_machine.up&!variable.frostscythe_priority\nactions.breath+=/frostscythe,if=variable.frostscythe_priority&(buff.killing_machine.up||runic_power>45)\nactions.breath+=/obliterate,cycle_targets=1,if=runic_power.deficit>40||buff.pillar_of_frost.up\nactions.breath+=/remorseless_winter,if=runic_power<36&rune.time_to_2>runic_power%18\nactions.breath+=/death_and_decay,if=(set_bonus.tier31_4pc&variable.st_planning&talent.unholy_ground&!death_and_decay.ticking&runic_power.deficit>=10)||runic_power<36&rune.time_to_2>runic_power%18\nactions.breath+=/howling_blast,if=runic_power<36&rune.time_to_2>runic_power%18\nactions.breath+=/obliterate,cycle_targets=1,if=runic_power.deficit>25\nactions.breath+=/howling_blast,if=buff.rime.up\nactions.breath+=/arcane_torrent,if=runic_power<60\n\n# Breath & Obliteration Active Rotation\nactions.breath_oblit+=/frostscythe,if=buff.killing_machine.up&variable.frostscythe_priority\nactions.breath_oblit+=/obliterate,cycle_targets=1,if=buff.killing_machine.up\nactions.breath_oblit+=/howling_blast,if=buff.rime.up\nactions.breath_oblit+=/howling_blast,if=!buff.killing_machine.up\nactions.breath_oblit+=/horn_of_winter,if=runic_power.deficit>25\nactions.breath_oblit+=/arcane_torrent,if=runic_power.deficit>20\n\n# Cold Heart\nactions.cold_heart+=/chains_of_ice,if=fight_remains<gcd&(rune<2||!buff.killing_machine.up&(!variable.two_hand_check&buff.cold_heart.stack>=4||variable.two_hand_check&buff.cold_heart.stack>8)||buff.killing_machine.up&(!variable.two_hand_check&buff.cold_heart.stack>8||variable.two_hand_check&buff.cold_heart.stack>10))\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&buff.pillar_of_frost.up&buff.cold_heart.stack>=10&(buff.pillar_of_frost.remains<gcd*(1+(talent.frostwyrms_fury&cooldown.frostwyrms_fury.ready))||buff.unholy_strength.up&buff.unholy_strength.remains<gcd)\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&death_knight.runeforge.fallen_crusader&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains_expected>15&(buff.cold_heart.stack>=10&buff.unholy_strength.up||buff.cold_heart.stack>=13)\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&!death_knight.runeforge.fallen_crusader&buff.cold_heart.stack>=10&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains_expected>20\nactions.cold_heart+=/chains_of_ice,if=talent.obliteration&!buff.pillar_of_frost.up&(buff.cold_heart.stack>=14&(buff.unholy_strength.up||buff.chaos_bane.up)||buff.cold_heart.stack>=19||cooldown.pillar_of_frost.remains_expected<3&buff.cold_heart.stack>=14)\n\n# Cooldowns\nactions.cooldowns+=/potion,if=(talent.pillar_of_frost&buff.pillar_of_frost.up&(talent.obliteration&buff.pillar_of_frost.remains<6||!talent.obliteration)||!talent.pillar_of_frost&buff.empower_rune_weapon.up||!talent.pillar_of_frost&!talent.empower_rune_weapon||active_enemies>=2&buff.pillar_of_frost.up)||fight_remains<25\nactions.cooldowns+=/empower_rune_weapon,if=talent.obliteration&!buff.empower_rune_weapon.up&rune<6&((cooldown.pillar_of_frost.remains_expected<7&buff.bloodlust.up)||((active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>12)||variable.st_planning)&cooldown.pillar_of_frost.ready))||fight_remains<20\nactions.cooldowns+=/empower_rune_weapon,use_off_gcd=1,if=buff.breath_of_sindragosa.up&!buff.empower_rune_weapon.up&((time<10&buff.bloodlust.up)||(runic_power<70&rune<3&(cooldown.breath_of_sindragosa.remains>variable.erw_pooling_time||full_recharge_time<10)))\nactions.cooldowns+=/empower_rune_weapon,use_off_gcd=1,if=!talent.breath_of_sindragosa&!talent.obliteration&!buff.empower_rune_weapon.up&rune<5&(cooldown.pillar_of_frost.remains_expected<7||buff.pillar_of_frost.up||!talent.pillar_of_frost)\nactions.cooldowns+=/abomination_limb,if=talent.obliteration&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains<3&(variable.adds_remain||variable.st_planning)||fight_remains<15\nactions.cooldowns+=/abomination_limb,if=talent.breath_of_sindragosa&(variable.adds_remain||variable.st_planning)\nactions.cooldowns+=/abomination_limb,if=!talent.breath_of_sindragosa&!talent.obliteration&(variable.adds_remain||variable.st_planning)\nactions.cooldowns+=/chill_streak,if=set_bonus.tier31_2pc&buff.chilling_rage.remains<3\nactions.cooldowns+=/chill_streak,if=!set_bonus.tier31_2pc&active_enemies>=2&(!death_and_decay.ticking&talent.cleaving_strikes||!talent.cleaving_strikes||active_enemies<=5)\nactions.cooldowns+=/pillar_of_frost,if=talent.obliteration&(variable.adds_remain||variable.st_planning)&(buff.empower_rune_weapon.up||cooldown.empower_rune_weapon.remains)||fight_remains<12\nactions.cooldowns+=/pillar_of_frost,if=talent.breath_of_sindragosa&(variable.adds_remain||variable.st_planning)&(!talent.icecap&(runic_power>70||cooldown.breath_of_sindragosa.remains>40)||talent.icecap&(cooldown.breath_of_sindragosa.remains>5))||buff.breath_of_sindragosa.up\nactions.cooldowns+=/pillar_of_frost,if=talent.icecap&!talent.obliteration&!talent.breath_of_sindragosa&(variable.adds_remain||variable.st_planning)\nactions.cooldowns+=/breath_of_sindragosa,if=!buff.breath_of_sindragosa.up&(runic_power>50&cooldown.empower_rune_weapon.ready||runic_power>60&cooldown.empower_rune_weapon.remains_expected<30||runic_power>80&cooldown.empower_rune_weapon.remains_expected>30)&(variable.adds_remain||variable.st_planning||fight_remains<30)\nactions.cooldowns+=/frostwyrms_fury,if=active_enemies=1&(talent.pillar_of_frost&buff.pillar_of_frost.remains<gcd*2&buff.pillar_of_frost.up&!talent.obliteration||!talent.pillar_of_frost)&(!raid_event.adds.exists||(raid_event.adds.in>15+raid_event.adds.duration||talent.absolute_zero&raid_event.adds.in>15+raid_event.adds.duration))||fight_remains<3\nactions.cooldowns+=/frostwyrms_fury,if=active_enemies>=2&(talent.pillar_of_frost&buff.pillar_of_frost.up||raid_event.adds.exists&raid_event.adds.up&raid_event.adds.in>cooldown.pillar_of_frost.remains_expected-raid_event.adds.in-raid_event.adds.duration)&(buff.pillar_of_frost.remains<gcd*2||raid_event.adds.exists&raid_event.adds.remains<gcd*2)\nactions.cooldowns+=/frostwyrms_fury,if=talent.obliteration&(talent.pillar_of_frost&buff.pillar_of_frost.up&!variable.two_hand_check||!buff.pillar_of_frost.up&variable.two_hand_check&cooldown.pillar_of_frost.remains||!talent.pillar_of_frost)&((buff.pillar_of_frost.remains<gcd||buff.unholy_strength.up&buff.unholy_strength.remains<gcd)&(debuff.razorice.stack=5||!death_knight.runeforge.razorice&!talent.glacial_advance))\nactions.cooldowns+=/raise_dead\nactions.cooldowns+=/soul_reaper,if=fight_remains>5&target.time_to_pct_35<5&active_enemies<=2&(talent.obliteration&(buff.pillar_of_frost.up&!buff.killing_machine.up&rune>2||!buff.pillar_of_frost.up)||talent.breath_of_sindragosa&(buff.breath_of_sindragosa.up&runic_power>50||!buff.breath_of_sindragosa.up)||!talent.breath_of_sindragosa&!talent.obliteration)\nactions.cooldowns+=/any_dnd,if=!death_and_decay.ticking&variable.adds_remain&(buff.pillar_of_frost.up&buff.pillar_of_frost.remains>5&buff.pillar_of_frost.remains<11||!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains>10||fight_remains<11)&(active_enemies>5||talent.cleaving_strikes&active_enemies>=2)\n\n### High Priority Actions Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=51271/pillar-of-frost'>Pillar of Frost</a> is up, as well as <a href='https://www.wowhead.com/spell=152279/breath-of-sindragosa'>Breath of Sindragosa</a> or on cooldown if <a href='https://www.wowhead.com/spell=51271/pillar-of-frost'>Pillar of Frost</a> and <a href='https://www.wowhead.com/spell=152279/breath-of-sindragosa'>Breath of Sindragosa</a> are not talented\n## ctions.high_prio+=/invoke_external_buff,name=power_infusion,if=(buff.pillar_of_frost.up||!talent.pillar_of_frost)&(talent.obliteration||talent.breath_of_sindragosa&buff.breath_of_sindragosa.up||!talent.breath_of_sindragosa&!talent.obliteration)\n# Interrupt\nactions.high_prio+=/mind_freeze,if=target.debuff.casting.up\nactions.high_prio+=/antimagic_shell,if=runic_power.deficit>40&death_knight.first_ams_cast<time\nactions.high_prio+=/antimagic_zone,if=!death_knight.amz_specified&(death_knight.amz_absorb_percent>0&runic_power.deficit>70&talent.assimilation&(buff.breath_of_sindragosa.up||cooldown.breath_of_sindragosa.ready||!talent.breath_of_sindragosa&!buff.pillar_of_frost.up))\n## actions.high_prio+=/antimagic_zone,if=death_knight.amz_specified&buff.amz_timing.up\n# Maintain Frost Fever, Icy Talons and Unleashed Frenzy\nactions.high_prio+=/howling_blast,if=!dot.frost_fever.ticking&active_enemies>=2&((!talent.obliteration||talent.obliteration&(!cooldown.pillar_of_frost.ready||buff.pillar_of_frost.up&!buff.killing_machine.up))||(equipped.fyralath_the_dreamrender&!dot.mark_of_fyralath.ticking))\nactions.high_prio+=/glacial_advance,if=active_enemies>=2&variable.rp_buffs&talent.obliteration&talent.breath_of_sindragosa&!buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/glacial_advance,if=active_enemies>=2&variable.rp_buffs&talent.breath_of_sindragosa&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/glacial_advance,if=active_enemies>=2&variable.rp_buffs&!talent.breath_of_sindragosa&talent.obliteration&!buff.pillar_of_frost.up\nactions.high_prio+=/frost_strike,if=active_enemies=1&variable.rp_buffs&talent.obliteration&talent.breath_of_sindragosa&!buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/frost_strike,if=active_enemies=1&variable.rp_buffs&talent.breath_of_sindragosa&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/frost_strike,if=active_enemies=1&variable.rp_buffs&!talent.breath_of_sindragosa&talent.obliteration&!buff.pillar_of_frost.up\nactions.high_prio+=/remorseless_winter,if=variable.rw_buffs||variable.adds_remain\n\n# Obliteration Active Rotation\nactions.obliteration+=/howling_blast,if=buff.killing_machine.stack<2&buff.pillar_of_frost.remains<gcd&buff.rime.up\nactions.obliteration+=/frost_strike,if=(active_enemies<=1||!talent.glacial_advance)&buff.killing_machine.up<2&buff.pillar_of_frost.remains<gcd&!death_and_decay.ticking\nactions.obliteration+=/glacial_advance,if=buff.killing_machine.up<2&buff.pillar_of_frost.remains<gcd&!death_and_decay.ticking\nactions.obliteration+=/frostscythe,if=buff.killing_machine.up&(variable.frostscythe_priority||active_enemies>3&!death_and_decay.ticking&equipped.fyralath_the_dreamrender&(cooldown.rage_of_fyralath_417131.remains<3||!dot.mark_of_fyralath.ticking))\nactions.obliteration+=/obliterate,cycle_targets=1,if=buff.killing_machine.up&!variable.frostscythe_priority\nactions.obliteration+=/howling_blast,if=!buff.killing_machine.up&(!dot.frost_fever.ticking||buff.rime.up&set_bonus.tier30_2pc&!variable.rp_buffs)\nactions.obliteration+=/glacial_advance,if=!buff.killing_machine.up&(!death_knight.runeforge.razorice&(!talent.avalanche||debuff.razorice.stack<5||debuff.razorice.remains<gcd*3)||((variable.rp_buffs||rune<2)&active_enemies>1))\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!buff.killing_machine.up&(rune<2||variable.rp_buffs||debuff.razorice.stack=5&talent.shattering_blade)&!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1)\nactions.obliteration+=/howling_blast,if=buff.rime.up&!buff.killing_machine.up\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!buff.killing_machine.up&!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1)\nactions.obliteration+=/howling_blast,if=!buff.killing_machine.up&runic_power<30\nactions.obliteration+=/arcane_torrent,if=rune<1&runic_power<30\nactions.obliteration+=/glacial_advance,if=!variable.pooling_runic_power&active_enemies>=2\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1)\nactions.obliteration+=/howling_blast,if=buff.rime.up\nactions.obliteration+=/obliterate,cycle_targets=1\n\n# Racial Abilities\nactions.racials+=/blood_fury,if=variable.cooldown_check\nactions.racials+=/berserking,if=variable.cooldown_check\nactions.racials+=/arcane_pulse,if=variable.cooldown_check\nactions.racials+=/lights_judgment,if=variable.cooldown_check\nactions.racials+=/ancestral_call,if=variable.cooldown_check\nactions.racials+=/fireblood,if=variable.cooldown_check\nactions.racials+=/bag_of_tricks,if=talent.obliteration&!buff.pillar_of_frost.up&buff.unholy_strength.up\nactions.racials+=/bag_of_tricks,if=!talent.obliteration&buff.pillar_of_frost.up&(buff.unholy_strength.up&buff.unholy_strength.remains<gcd*3||buff.pillar_of_frost.remains<gcd*3)\n\n# Single Target Rotation\nactions.single_target+=/frost_strike,if=buff.killing_machine.up<2&runic_power.deficit<20+(4*buff.rune_of_hysteria.up)&!variable.two_hand_check\nactions.single_target+=/howling_blast,if=buff.rime.up&set_bonus.tier30_2pc&buff.killing_machine.stack<2\nactions.single_target+=/frostscythe,if=buff.killing_machine.up&variable.frostscythe_priority\nactions.single_target+=/obliterate,if=buff.killing_machine.up\nactions.single_target+=/howling_blast,if=buff.rime.up&talent.icebreaker.rank=2\nactions.single_target+=/horn_of_winter,if=rune<4&runic_power.deficit>25+(5*buff.rune_of_hysteria.up)&talent.obliteration&talent.breath_of_sindragosa\nactions.single_target+=/frost_strike,if=!variable.pooling_runic_power&(variable.rp_buffs||runic_power.deficit<25+(5*buff.rune_of_hysteria.up)||debuff.razorice.stack=5&talent.shattering_blade)\nactions.single_target+=/howling_blast,if=variable.rime_buffs\nactions.single_target+=/glacial_advance,if=!variable.pooling_runic_power&!death_knight.runeforge.razorice&(debuff.razorice.stack<5||debuff.razorice.remains<gcd*3)\nactions.single_target+=/obliterate,if=!variable.pooling_runes&buff.remorseless_winter.up\nactions.single_target+=/horn_of_winter,if=rune<4&runic_power.deficit>25&(!talent.breath_of_sindragosa||cooldown.breath_of_sindragosa.remains>cooldown.horn_of_winter.duration)\nactions.single_target+=/arcane_torrent,if=runic_power.deficit>20\nactions.single_target+=/frost_strike,if=!variable.pooling_runic_power\n\n# Trinkets\nactions.trinkets+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&!buff.pillar_of_frost.up&!buff.empower_rune_weapon.up&!death_and_decay.ticking&(active_enemies<2||dot.frost_fever.ticking)\nactions.trinkets+=/use_item,use_off_gcd=1,name=algethar_puzzle_box,if=!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains<2&(!talent.breath_of_sindragosa||runic_power>60&(buff.breath_of_sindragosa.up||cooldown.breath_of_sindragosa.remains<2))\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Pillar of Frost.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(talent.obliteration&buff.pillar_of_frost.remains>10&(!variable.rp_buffs||cooldown.empower_rune_weapon.max_charges<2&buff.empower_rune_weapon.up)||!talent.obliteration)&(!buff.pillar_of_frost.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&(buff.breath_of_sindragosa.up||buff.pillar_of_frost.up)&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(talent.obliteration&buff.pillar_of_frost.remains>10&(!variable.rp_buffs||cooldown.empower_rune_weapon.max_charges<2&buff.empower_rune_weapon.up)||!talent.obliteration)&(!buff.pillar_of_frost.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&(buff.breath_of_sindragosa.up||buff.pillar_of_frost.up)&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&((variable.damage_trinket_priority=1||trinket.2.cooldown.remains)||(trinket.1.cast_time>0&!buff.pillar_of_frost.up||!trinket.1.cast_time>0&cooldown.pillar_of_frost.remains>20)||talent.pillar_of_frost&cooldown.pillar_of_frost.remains_expected>20||!talent.pillar_of_frost)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&((variable.damage_trinket_priority=2||trinket.1.cooldown.remains)||(trinket.2.cast_time>0&!buff.pillar_of_frost.up||!trinket.2.cast_time>0&cooldown.pillar_of_frost.remains>20)||talent.pillar_of_frost&cooldown.pillar_of_frost.remains_expected>20||!talent.pillar_of_frost)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions.variables+=/variable,name=rime_buffs,value=buff.rime.up&(talent.rage_of_the_frozen_champion||talent.avalanche||talent.icebreaker)\nactions.variables+=/variable,name=rp_buffs,value=talent.unleashed_frenzy&(buff.unleashed_frenzy.remains<gcd.max*3||buff.unleashed_frenzy.stack<3)||talent.icy_talons&(buff.icy_talons.remains<gcd.max*3||buff.icy_talons.stack<3)\nactions.variables+=/variable,name=cooldown_check,value=talent.pillar_of_frost&buff.pillar_of_frost.up&(talent.obliteration&buff.pillar_of_frost.remains>10||!talent.obliteration)||!talent.pillar_of_frost&buff.empower_rune_weapon.up||!talent.pillar_of_frost&!talent.empower_rune_weapon||active_enemies>=2&buff.pillar_of_frost.up\nactions.variables+=/variable,name=frostscythe_priority,value=talent.frostscythe&(buff.killing_machine.up||active_enemies>=3)&(!talent.improved_obliterate&!talent.frigid_executioner||!talent.cleaving_strikes||talent.cleaving_strikes&(active_enemies>8||!death_and_decay.ticking&active_enemies>4))\n# Formulaic approach to determine the time before these abilities come off cooldown that the simulation should star to pool resources. Capped at 15s in the run_action_list call.\nactions.variables+=/variable,name=oblit_pooling_time,op=setif,value=((cooldown.pillar_of_frost.remains_expected+1)%gcd.max)%((rune+3)*(runic_power+5))*100,value_else=3,condition=runic_power<35&rune<2&cooldown.pillar_of_frost.remains_expected<10\nactions.variables+=/variable,name=breath_pooling_time,op=setif,value=((cooldown.breath_of_sindragosa.remains+1)%gcd.max)%((rune+1)*(runic_power+20))*100,value_else=2,condition=runic_power.deficit>10&cooldown.breath_of_sindragosa.remains<10\nactions.variables+=/variable,name=pooling_runes,value=rune<4&talent.obliteration&cooldown.pillar_of_frost.remains_expected<variable.oblit_pooling_time\nactions.variables+=/variable,name=pooling_runic_power,value=talent.breath_of_sindragosa&cooldown.breath_of_sindragosa.remains<variable.breath_pooling_time||talent.obliteration&runic_power<35&cooldown.pillar_of_frost.remains_expected<variable.oblit_pooling_time",
},
["Arcane"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240806,
["spec"] = 62,
["desc"] = "2024-07-28: The War Within",
["lists"] = {
["cd_opener"] = {
{
["enabled"] = true,
["action"] = "touch_of_the_magi",
["criteria"] = "prev_gcd.1.arcane_barrage & ( action.arcane_barrage.in_flight_remains <= 0.5 || gcd.remains <= 0.5 )",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["description"] = "Use PoM or Supernova if you have Unerring Proficiency to end Touch of the Magi windows - if PoM then cancel it after to trigger the cooldown to align with future Touch windows",
["criteria"] = "debuff.touch_of_the_magi.remains <= gcd.max & buff.unerring_proficiency.stack = 30",
["action"] = "supernova",
},
{
["enabled"] = true,
["action"] = "cancel_buff",
["use_off_gcd"] = 1,
["criteria"] = "settings.cancel_pom & prev_gcd.1.arcane_blast & buff.presence_of_mind.stack = 1",
["buff_name"] = "presence_of_mind",
},
{
["enabled"] = true,
["criteria"] = "debuff.touch_of_the_magi.remains <= gcd.max & buff.nether_precision.up & active_enemies < variable.aoe_target_count & ! talent.unerring_proficiency.enabled",
["action"] = "presence_of_mind",
},
{
["enabled"] = true,
["criteria"] = "buff.presence_of_mind.up",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "variable.opener",
["action"] = "arcane_orb",
["line_cd"] = "10",
},
{
["enabled"] = true,
["criteria"] = "cooldown.arcane_surge.remains < gcd.max * 2",
["action"] = "evocation",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["description"] = "Use the Clearcasting from Evocation to trigger Nether Precision, Harmony, charges from High Voltage, and increment Aether",
["line_cd"] = "10",
["interrupt_if"] = "!gcd.remains",
["interrupt_immediate"] = "1",
["criteria"] = "variable.opener",
["interrupt_global"] = "1",
},
{
["action"] = "arcane_surge",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "shifting_power",
["description"] = "Use Shifting Power whenever all major cooldowns will fully benefit, add Arcane Orb to the list if its AOE, as Spellslinger you can use this in cooldowns with no damage lost",
["interrupt_if"] = "(cooldown.evocation.ready&cooldown.arcane_surge.remains<3)",
["interrupt_immediate"] = "1",
["criteria"] = "( ( buff.arcane_surge.down & buff.siphon_storm.down & debuff.touch_of_the_magi.down & cooldown.evocation.remains > 15 & cooldown.touch_of_the_magi.remains > 15 ) & ( cooldown.arcane_orb.remains & action.arcane_orb.charges = 0 ) & fight_remains > 10 ) || ( prev_gcd.1.arcane_barrage & ( buff.arcane_surge.up || debuff.touch_of_the_magi.up || cooldown.evocation.remains < 20 ) & talent.shifting_shards.enabled )",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["description"] = "Pool Arcane Orb for Touch of the Magi in AOE, otherwise just use to recover charges when you're low",
["criteria"] = "buff.arcane_charge.stack < 2 & ( cooldown.touch_of_the_magi.remains > 18 || ! active_enemies >= variable.aoe_target_count )",
["action"] = "arcane_orb",
},
},
["rotation_aoe"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.aoe_target_count & debuff.touch_of_the_magi.up & talent.magis_spark.enabled",
["line_cd"] = "15",
["action"] = "arcane_blast",
["description"] = "Cast Blast in AOE if you have Magi's Spark",
},
{
["enabled"] = true,
["description"] = "Use Barrage to maintain Arcane Tempo, to double dip Nether Precision when you use the above line, or if you get a 4pc proc",
["criteria"] = "( talent.arcane_tempo.enabled & buff.arcane_tempo.remains < gcd.max ) || ( ( buff.intuition.up & ( buff.arcane_charge.stack = buff.arcane_charge.max_stack || ! variable.alt_rotation ) ) & buff.nether_precision.up ) || ( buff.nether_precision.up & action.arcane_blast.executing )",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["description"] = "Use Missiles to regenerate charges, generate Nether Precision, and stack Harmony/Aether, but we always interrupt it as soon as possible.",
["criteria"] = "buff.clearcasting.react & ( ( variable.alt_rotation & buff.arcane_charge.stack < buff.arcane_charge.max_stack ) || buff.aether_attunement.up || talent.arcane_harmony.enabled ) & ( ( variable.alt_rotation & buff.arcane_charge.stack < buff.arcane_charge.max_stack ) || ! buff.nether_precision.up )",
["interrupt_if"] = "!gcd.remains",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack",
["action"] = "arcane_barrage",
},
{
["action"] = "arcane_explosion",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "arcane_intellect",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "aoe_target_count",
["default"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "9",
["criteria"] = "! talent.arcing_cleave.enabled",
["var_name"] = "aoe_target_count",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "opener",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["criteria"] = "talent.high_voltage.enabled",
["var_name"] = "alt_rotation",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "equipped.gladiators_badge || equipped.irideus_fragment || equipped.spoils_of_neltharus || equipped.timebreaching_talon || equipped.ashes_of_the_embersoul || equipped.nymues_unraveling_spindle || equipped.signet_of_the_priory || equipped.high_speakers_accretion || equipped.spymasters_web || equipped.treacherous_transmitter",
["description"] = "Variable indicates use of a trinket that boosts stats during burst",
["var_name"] = "steroid_trinket_equipped",
},
{
["enabled"] = true,
},
{
["action"] = "mirror_image",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.evocation.enabled",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.evocation.enabled",
["action"] = "evocation",
},
},
["default"] = {
{
["action"] = "counterspell",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.siphon_storm.up || ( ! talent.evocation.enabled & cooldown.arcane_surge.ready )",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_surge.down & debuff.touch_of_the_magi.down & active_enemies >= 2",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge || prev_gcd.1.evocation || boss & fight_remains < 20 || ! variable.steroid_trinket_equipped",
["action"] = "use_items",
},
{
["enabled"] = false,
["criteria"] = "( prev_gcd.1.arcane_surge || prev_gcd.1.evocation ) || cooldown.evocation.remains < 7 || boss & fight_remains < 20",
["name"] = "high_speakers_accretion",
},
{
["enabled"] = true,
["criteria"] = "( ( prev_gcd.1.arcane_surge || prev_gcd.1.evocation ) & variable.opener ) || cooldown.evocation.remains < 6 || boss & fight_remains < 20",
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["criteria"] = "( prev_gcd.1.arcane_surge || prev_gcd.1.evocation ) & ( boss & fight_remains < 80 || target.health.pct < 35 || ! talent.arcane_bombardment.enabled ) || boss & fight_remains < 20",
["name"] = "spymasters_web",
["action"] = "spymasters_web",
},
{
["enabled"] = false,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down || ( equipped.spymasters_web & target.health.pct > 35 )",
["name"] = "aberrant_spellforge",
},
{
["enabled"] = false,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "mad_queens_mandate",
},
{
["enabled"] = false,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "mereldars_toll",
},
{
["enabled"] = true,
["criteria"] = "cooldown.arcane_surge.remains <= ( gcd.max * 4 ) || cooldown.arcane_surge.ready || boss & fight_remains <= 24",
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "beacon_to_the_beyond",
["action"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "iceblood_deathsnare",
["action"] = "iceblood_deathsnare",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "desperate_invokers_codex",
["action"] = "desperate_invokers_codex",
},
{
["enabled"] = true,
["criteria"] = "mana.pct > 65 & ! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "conjured_chillglobe",
["action"] = "conjured_chillglobe",
},
{
["enabled"] = true,
["name"] = "dreambinder_loom_of_the_great_cycle",
["action"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["action"] = "iridal_the_earths_master",
["use_off_gcd"] = 1,
["name"] = "iridal_the_earths_master",
["criteria"] = "gcd.remains",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["criteria"] = "debuff.touch_of_the_magi.up & variable.opener",
["var_name"] = "opener",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 2",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["description"] = "Enter cooldown phase when cds are available or coming off cooldown otherwise default to rotation priority",
["action"] = "call_action_list",
["list_name"] = "cd_opener",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= ( variable.aoe_target_count + talent.impetus.rank + talent.splintering_sorcery.rank )",
["list_name"] = "rotation_aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "rotation_default",
},
{
["action"] = "arcane_barrage",
["enabled"] = true,
},
},
["rotation_default"] = {
{
["enabled"] = true,
["action"] = "arcane_missiles",
["description"] = "Use Missiles to generate charges and Nether Precision, interrupt if you get 4 charges",
["criteria"] = "buff.clearcasting.react & ( buff.nether_precision.down || ( buff.clearcasting.stack = 3 & ! talent.splintering_sorcery.enabled ) || ( variable.alt_rotation & buff.nether_precision.stack = 1 & buff.arcane_charge.stack < 4 ) )",
["interrupt_if"] = "!gcd.remains&(!variable.alt_rotation||buff.arcane_charge.stack=buff.arcane_charge.max_stack)",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["description"] = "Queue Barrage on the second Nether Precision stack under certain conditions, ensure you have nether precision before doing this to start Touch window, maintain Tempo and use 4pc as soon as possible",
["criteria"] = "( buff.arcane_charge.stack = buff.arcane_charge.max_stack & ( ( buff.nether_precision.stack = 1 & ( ( buff.clearcasting.up || action.arcane_orb.charges > 0 ) & time - action.arcane_blast.last_used < 0.015 ) & buff.arcane_harmony.stack > 12 ) || ( cooldown.touch_of_the_magi.ready & ( buff.nether_precision.up || ! talent.magis_spark.enabled ) ) ) ) || ( talent.arcane_tempo.enabled & buff.arcane_tempo.remains < ( gcd.max * 2 ) ) || buff.intuition.up",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.nether_precision.stack = 2 || ( buff.nether_precision.stack = 1 & ! prev_gcd.1.arcane_blast )",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["description"] = "Conserve mana above 70% when Evocation is further than your next Touch",
["criteria"] = "buff.arcane_surge.down & ( mana.pct < 70 & cooldown.arcane_surge.remains > 45 & cooldown.touch_of_the_magi.remains > 6 ) || ( mana.deficit > ( mana.max - action.arcane_blast.cost ) ) || cooldown.touch_of_the_magi.ready || ( cooldown.shifting_power.ready & cooldown.arcane_orb.ready )",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["description"] = "Blast for filler if you're not in execute or you already have some charges from another effect",
["criteria"] = "! talent.splintering_sorcery.enabled || ( buff.arcane_charge.stack > 2 & buff.nether_precision.down )",
["action"] = "arcane_blast",
},
{
["action"] = "arcane_barrage",
["enabled"] = true,
},
},
},
["version"] = 20240806,
["warnings"] = "The import for 'cd_opener' required some automated changes.\nLine 4: Converted 'talent.unerring_proficiency' to 'talent.unerring_proficiency.enabled' (1x).\nLine 10: Converted 'talent.shifting_shards' to 'talent.shifting_shards.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.evocation' to 'talent.evocation.enabled' (1x).\nLine 9: Unsupported use_item action [ high_speakers_accretion]; entry disabled.\nLine 11: Converted 'talent.arcane_bombardment' to 'talent.arcane_bombardment.enabled' (1x).\nLine 12: Unsupported use_item action [ aberrant_spellforge]; entry disabled.\nLine 13: Unsupported use_item action [ mad_queens_mandate]; entry disabled.\nLine 14: Unsupported use_item action [ mereldars_toll]; entry disabled.\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.arcing_cleave' to 'talent.arcing_cleave.enabled' (1x).\nLine 5: Converted 'talent.high_voltage' to 'talent.high_voltage.enabled' (1x).\nLine 9: Converted 'talent.evocation' to 'talent.evocation.enabled' (1x).\nLine 10: Converted 'talent.evocation' to 'talent.evocation.enabled' (1x).\n\nThe import for 'rotation_aoe' required some automated changes.\nLine 1: Converted 'talent.magis_spark' to 'talent.magis_spark.enabled' (1x).\nLine 2: Converted 'talent.arcane_tempo' to 'talent.arcane_tempo.enabled' (1x).\nLine 3: Converted 'talent.arcane_harmony' to 'talent.arcane_harmony.enabled' (1x).\n\nThe import for 'rotation_default' required some automated changes.\nLine 1: Converted 'talent.splintering_sorcery' to 'talent.splintering_sorcery.enabled' (1x).\nLine 2: Converted 'talent.magis_spark' to 'talent.magis_spark.enabled' (1x).\nLine 2: Converted 'talent.arcane_tempo' to 'talent.arcane_tempo.enabled' (1x).\nLine 5: Converted 'talent.splintering_sorcery' to 'talent.splintering_sorcery.enabled' (1x).\n\nImported 5 action lists.\n",
["profile"] = "actions.precombat+=/arcane_intellect\nactions.precombat+=/variable,name=aoe_target_count,op=reset,default=2\nactions.precombat+=/variable,name=aoe_target_count,op=set,value=9,if=!talent.arcing_cleave\nactions.precombat+=/variable,name=opener,op=set,value=1\nactions.precombat+=/variable,name=alt_rotation,op=set,if=talent.high_voltage,value=1\n# Variable indicates use of a trinket that boosts stats during burst\nactions.precombat+=/variable,name=steroid_trinket_equipped,op=set,value=equipped.gladiators_badge||equipped.irideus_fragment||equipped.spoils_of_neltharus||equipped.timebreaching_talon||equipped.ashes_of_the_embersoul||equipped.nymues_unraveling_spindle||equipped.signet_of_the_priory||equipped.high_speakers_accretion||equipped.spymasters_web||equipped.treacherous_transmitter\nactions.precombat+=/snapshot_stats\nactions.precombat+=/mirror_image\nactions.precombat+=/arcane_blast,if=!talent.evocation\nactions.precombat+=/evocation,if=talent.evocation\n\nactions+=/counterspell\nactions+=/potion,if=buff.siphon_storm.up||(!talent.evocation&cooldown.arcane_surge.ready)\nactions+=/lights_judgment,if=buff.arcane_surge.down&debuff.touch_of_the_magi.down&active_enemies>=2\nactions+=/berserking,if=prev_gcd.1.arcane_surge\nactions+=/blood_fury,if=prev_gcd.1.arcane_surge\nactions+=/fireblood,if=prev_gcd.1.arcane_surge\nactions+=/ancestral_call,if=prev_gcd.1.arcane_surge\n## PI/Summer after Radiant Spark when cooldowns are coming up, Autumn after Touch of the Magi cd starts\n## actions+=/invoke_external_buff,name=power_infusion,if=prev_gcd.1.arcane_surge\n## actions+=/invoke_external_buff,name=blessing_of_summer,if=prev_gcd.1.arcane_surge\n## actions+=/invoke_external_buff,name=blessing_of_autumn,if=cooldown.touch_of_the_magi.remains>5\nactions+=/use_items,if=prev_gcd.1.arcane_surge||prev_gcd.1.evocation||boss&fight_remains<20||!variable.steroid_trinket_equipped\nactions+=/use_item,name=high_speakers_accretion,if=(prev_gcd.1.arcane_surge||prev_gcd.1.evocation)||cooldown.evocation.remains<7||boss&fight_remains<20\nactions+=/use_item,name=treacherous_transmitter,if=((prev_gcd.1.arcane_surge||prev_gcd.1.evocation)&variable.opener)||cooldown.evocation.remains<6||boss&fight_remains<20\n## actions+=/do_treacherous_transmitter_task,use_off_gcd=1,if=buff.siphon_storm.up||boss&fight_remains<20\nactions+=/use_item,name=spymasters_web,if=(prev_gcd.1.arcane_surge||prev_gcd.1.evocation)&(boss&fight_remains<80||target.health.pct<35||!talent.arcane_bombardment)||boss&fight_remains<20\nactions+=/use_item,name=aberrant_spellforge,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down||(equipped.spymasters_web&target.health.pct>35)\nactions+=/use_item,name=mad_queens_mandate,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=mereldars_toll,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=nymues_unraveling_spindle,if=cooldown.arcane_surge.remains<=(gcd.max*4)||cooldown.arcane_surge.ready||boss&fight_remains<=24\nactions+=/use_item,name=belorrelos_the_suncaller,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=beacon_to_the_beyond,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=iceblood_deathsnare,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=desperate_invokers_codex,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=conjured_chillglobe,if=mana.pct>65&!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=dreambinder_loom_of_the_great_cycle\nactions+=/use_item,name=iridal_the_earths_master,use_off_gcd=1,if=gcd.remains\nactions+=/variable,name=opener,op=set,if=debuff.touch_of_the_magi.up&variable.opener,value=0\nactions+=/arcane_barrage,if=fight_remains<2\n# Enter cooldown phase when cds are available or coming off cooldown otherwise default to rotation priority\nactions+=/call_action_list,name=cd_opener\nactions+=/call_action_list,name=rotation_aoe,strict=1,if=active_enemies>=(variable.aoe_target_count+talent.impetus.rank+talent.splintering_sorcery.rank)\nactions+=/call_action_list,name=rotation_default\nactions+=/arcane_barrage\n\nactions.cd_opener+=/touch_of_the_magi,use_off_gcd=1,if=prev_gcd.1.arcane_barrage&(action.arcane_barrage.in_flight_remains<=0.5||gcd.remains<=0.5)\n# Use PoM or Supernova if you have Unerring Proficiency to end Touch of the Magi windows - if PoM then cancel it after to trigger the cooldown to align with future Touch windows\nactions.cd_opener+=/supernova,if=debuff.touch_of_the_magi.remains<=gcd.max&buff.unerring_proficiency.stack=30\nactions.cd_opener+=/cancel_buff,name=presence_of_mind,use_off_gcd=1,if=settings.cancel_pom&prev_gcd.1.arcane_blast&buff.presence_of_mind.stack=1\nactions.cd_opener+=/presence_of_mind,if=debuff.touch_of_the_magi.remains<=gcd.max&buff.nether_precision.up&active_enemies<variable.aoe_target_count&!talent.unerring_proficiency\n## actions.cd_opener+=/wait,sec=0.05,if=buff.presence_of_mind.up,line_cd=15\nactions.cd_opener+=/arcane_blast,if=buff.presence_of_mind.up\nactions.cd_opener+=/arcane_orb,if=variable.opener,line_cd=10\nactions.cd_opener+=/evocation,if=cooldown.arcane_surge.remains<gcd.max*2\n# Use the Clearcasting from Evocation to trigger Nether Precision, Harmony, charges from High Voltage, and increment Aether\nactions.cd_opener+=/arcane_missiles,if=variable.opener,interrupt_if=!gcd.remains,interrupt_immediate=1,interrupt_global=1,line_cd=10\nactions.cd_opener+=/arcane_surge\n# Use Shifting Power whenever all major cooldowns will fully benefit, add Arcane Orb to the list if its AOE, as Spellslinger you can use this in cooldowns with no damage lost\nactions.cd_opener+=/shifting_power,if=((buff.arcane_surge.down&buff.siphon_storm.down&debuff.touch_of_the_magi.down&cooldown.evocation.remains>15&cooldown.touch_of_the_magi.remains>15)&(cooldown.arcane_orb.remains&action.arcane_orb.charges=0)&fight_remains>10)||(prev_gcd.1.arcane_barrage&(buff.arcane_surge.up||debuff.touch_of_the_magi.up||cooldown.evocation.remains<20)&talent.shifting_shards),interrupt_if=(cooldown.evocation.ready&cooldown.arcane_surge.remains<3),interrupt_immediate=1,interrupt_global=1\n# Pool Arcane Orb for Touch of the Magi in AOE, otherwise just use to recover charges when you're low\nactions.cd_opener+=/arcane_orb,if=buff.arcane_charge.stack<2&(cooldown.touch_of_the_magi.remains>18||!active_enemies>=variable.aoe_target_count)\n\n# Cast Blast in AOE if you have Magi's Spark\nactions.rotation_aoe+=/arcane_blast,if=active_enemies>=variable.aoe_target_count&debuff.touch_of_the_magi.up&talent.magis_spark,line_cd=15\n# Use Barrage to maintain Arcane Tempo, to double dip Nether Precision when you use the above line, or if you get a 4pc proc\nactions.rotation_aoe+=/arcane_barrage,if=(talent.arcane_tempo&buff.arcane_tempo.remains<gcd.max)||((buff.intuition.up&(buff.arcane_charge.stack=buff.arcane_charge.max_stack||!variable.alt_rotation))&buff.nether_precision.up)||(buff.nether_precision.up&action.arcane_blast.executing)\n# Use Missiles to regenerate charges, generate Nether Precision, and stack Harmony/Aether, but we always interrupt it as soon as possible.\nactions.rotation_aoe+=/arcane_missiles,if=buff.clearcasting.react&((variable.alt_rotation&buff.arcane_charge.stack<buff.arcane_charge.max_stack)||buff.aether_attunement.up||talent.arcane_harmony)&((variable.alt_rotation&buff.arcane_charge.stack<buff.arcane_charge.max_stack)||!buff.nether_precision.up),interrupt_if=!gcd.remains,interrupt_immediate=1,interrupt_global=1,chain=1\nactions.rotation_aoe+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack\nactions.rotation_aoe+=/arcane_explosion\n\n# Use Missiles to generate charges and Nether Precision, interrupt if you get 4 charges\nactions.rotation_default+=/arcane_missiles,if=buff.clearcasting.react&(buff.nether_precision.down||(buff.clearcasting.stack=3&!talent.splintering_sorcery)||(variable.alt_rotation&buff.nether_precision.stack=1&buff.arcane_charge.stack<4)),interrupt_if=!gcd.remains&(!variable.alt_rotation||buff.arcane_charge.stack=buff.arcane_charge.max_stack),interrupt_immediate=1,interrupt_global=1,chain=1\n# Queue Barrage on the second Nether Precision stack under certain conditions, ensure you have nether precision before doing this to start Touch window, maintain Tempo and use 4pc as soon as possible\nactions.rotation_default+=/arcane_barrage,if=(buff.arcane_charge.stack=buff.arcane_charge.max_stack&((buff.nether_precision.stack=1&((buff.clearcasting.up||action.arcane_orb.charges>0)&time-action.arcane_blast.last_used<0.015)&buff.arcane_harmony.stack>12)||(cooldown.touch_of_the_magi.ready&(buff.nether_precision.up||!talent.magis_spark))))||(talent.arcane_tempo&buff.arcane_tempo.remains<(gcd.max*2))||buff.intuition.up\nactions.rotation_default+=/arcane_blast,if=buff.nether_precision.stack=2||(buff.nether_precision.stack=1&!prev_gcd.1.arcane_blast)\n# Conserve mana above 70% when Evocation is further than your next Touch\nactions.rotation_default+=/arcane_barrage,if=buff.arcane_surge.down&(mana.pct<70&cooldown.arcane_surge.remains>45&cooldown.touch_of_the_magi.remains>6)||(mana.deficit>(mana.max-action.arcane_blast.cost))||cooldown.touch_of_the_magi.ready||(cooldown.shifting_power.ready&cooldown.arcane_orb.ready)\n# Blast for filler if you're not in execute or you already have some charges from another effect\nactions.rotation_default+=/arcane_blast,if=!talent.splintering_sorcery||(buff.arcane_charge.stack>2&buff.nether_precision.down)\nactions.rotation_default+=/arcane_barrage",
["author"] = "SimulationCraft",
},
["Restoration Shaman"] = {
["builtIn"] = true,
["date"] = 20230321.1,
["spec"] = 264,
["desc"] = "2023-03-21:  Add Healing Rain (Acid Rain) and Stormkeeper to DPS priority.",
["profile"] = "actions.precombat+=/earthliving_weapon\nactions.precombat+=/water_shield,if=buff.water_shield.up+buff.earth_shield.up+buff.lightning_shield.up<1+talent.elemental_orbit.rank\nactions.precombat+=/lightning_shield,if=buff.water_shield.up+buff.earth_shield.up+buff.lightning_shield.up<1+talent.elemental_orbit.rank\nactions.precombat+=/earth_shield,if=buff.water_shield.up+buff.earth_shield.up+buff.lightning_shield.up<1+talent.elemental_orbit.rank\nactions.precombat+=/earth_elemental\nactions.precombat+=/potion\n\nactions+=/spiritwalkers_grace,moving=1,if=movement.distance>6\n# Interrupt of casts.\nactions+=/wind_shear\nactions+=/potion\nactions+=/use_items\nactions+=/blood_fury\nactions+=/berserking\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/healing_rain,if=!moving&talent.acid_rain\nactions+=/stormkeeper\nactions+=/flame_shock,cycle_targets=1,if=active_enemies<3&refreshable\nactions+=/primordial_wave\nactions+=/lava_burst,if=(active_enemies=1||active_enemies=2&buff.lava_surge.up)&dot.flame_shock.remains>cast_time&cooldown_react\nactions+=/earth_elemental\nactions+=/lightning_bolt,if=spell_targets.chain_lightning<2||!talent.chain_lightning\nactions+=/chain_lightning,if=spell_targets.chain_lightning>1\nactions+=/flame_shock,moving=1\nactions+=/frost_shock,moving=1",
["version"] = 20230321.1,
["warnings"] = "The import for 'default' required some automated changes.\nLine 10: Converted 'talent.acid_rain' to 'talent.acid_rain.enabled' (1x).\nLine 16: Converted 'talent.chain_lightning' to 'talent.chain_lightning.enabled' (1x).\n\nImported 2 action lists.\n",
["author"] = "Hekili",
["lists"] = {
["default"] = {
{
["moving"] = 1,
["enable_moving"] = true,
["criteria"] = "movement.distance > 6",
["enabled"] = true,
["action"] = "spiritwalkers_grace",
},
{
["enabled"] = true,
["description"] = "Interrupt of casts.",
["action"] = "wind_shear",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! moving & talent.acid_rain.enabled",
["action"] = "healing_rain",
},
{
["action"] = "stormkeeper",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 3 & refreshable",
["action"] = "flame_shock",
["cycle_targets"] = 1,
},
{
["action"] = "primordial_wave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( active_enemies = 1 || active_enemies = 2 & buff.lava_surge.up ) & dot.flame_shock.remains > cast_time & cooldown_react",
["action"] = "lava_burst",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.chain_lightning < 2 || ! talent.chain_lightning.enabled",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.chain_lightning > 1",
["action"] = "chain_lightning",
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "flame_shock",
["enabled"] = true,
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "frost_shock",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "earthliving_weapon",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.water_shield.up + buff.earth_shield.up + buff.lightning_shield.up < 1 + talent.elemental_orbit.rank",
["action"] = "water_shield",
},
{
["enabled"] = true,
["criteria"] = "buff.water_shield.up + buff.earth_shield.up + buff.lightning_shield.up < 1 + talent.elemental_orbit.rank",
["action"] = "lightning_shield",
},
{
["enabled"] = true,
["criteria"] = "buff.water_shield.up + buff.earth_shield.up + buff.lightning_shield.up < 1 + talent.elemental_orbit.rank",
["action"] = "earth_shield",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
},
},
},
["Protection Warrior"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240805,
["spec"] = 73,
["desc"] = "2024-07-24: The War Within",
["profile"] = "actions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/battle_shout\n\nactions+=/pummel\nactions+=/charge,if=time=0\nactions+=/use_items\nactions+=/avatar\nactions+=/shield_wall,if=talent.immovable_object.enabled&buff.avatar.down\nactions+=/blood_fury\nactions+=/berserking\nactions+=/arcane_torrent\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion,if=buff.avatar.up||buff.avatar.up&target.health.pct<=20\nactions+=/ignore_pain,if=target.health.pct>=20&(rage.deficit<=15&cooldown.shield_slam.ready||rage.deficit<=40&cooldown.shield_charge.ready&talent.champions_bulwark.enabled||rage.deficit<=20&cooldown.shield_charge.ready||rage.deficit<=30&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled||rage.deficit<=20&cooldown.avatar.ready||rage.deficit<=45&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=30&cooldown.avatar.ready&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=20||rage.deficit<=40&cooldown.shield_slam.ready&buff.violent_outburst.up&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=55&cooldown.shield_slam.ready&buff.violent_outburst.up&buff.last_stand.up&talent.unnerving_focus.enabled&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=17&cooldown.shield_slam.ready&talent.heavy_repercussions.enabled||rage.deficit<=18&cooldown.shield_slam.ready&talent.impenetrable_wall.enabled)||(rage>=70||buff.seeing_red.stack=7&rage>=35)&cooldown.shield_slam.remains<=1&buff.shield_block.remains>=4&set_bonus.tier31_2pc,use_off_gcd=1\nactions+=/last_stand,if=(target.health.pct>=90&talent.unnerving_focus.enabled||target.health.pct<=20&talent.unnerving_focus.enabled)||talent.bolster.enabled||set_bonus.tier30_2pc||set_bonus.tier30_4pc\nactions+=/ravager\nactions+=/demoralizing_shout,if=talent.booming_voice.enabled\nactions+=/champions_spear\nactions+=/thunderous_roar\nactions+=/shockwave,if=talent.rumbling_earth.enabled&spell_targets.shockwave>=3\nactions+=/shield_charge\nactions+=/shield_block,if=buff.shield_block.duration<=10\nactions+=/demolish\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets.thunder_clap>=3\nactions+=/call_action_list,name=generic\n\nactions.aoe+=/thunder_blast,if=dot.rend.remains<=1\nactions.aoe+=/thunder_clap,if=dot.rend.remains<=1\nactions.aoe+=/thunder_blast,if=buff.violent_outburst.up&spell_targets.thunderclap>6&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/thunder_clap,if=buff.violent_outburst.up&spell_targets.thunderclap>6&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/revenge,if=rage>=70&talent.seismic_reverberation.enabled&spell_targets.revenge>=3\nactions.aoe+=/shield_slam,if=rage<=60||buff.violent_outburst.up&spell_targets.thunderclap<=7\nactions.aoe+=/thunder_blast\nactions.aoe+=/thunder_clap\nactions.aoe+=/revenge,if=rage>=30||rage>=40&talent.barbaric_training.enabled\n\nactions.generic+=/shield_slam\nactions.generic+=/thunder_blast,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_clap,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/execute,if=buff.sudden_death.up&talent.sudden_death.enabled\nactions.generic+=/execute\nactions.generic+=/thunder_blast,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/revenge,if=(rage>=80&target.health.pct>20||buff.revenge.up&target.health.pct<=20&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>20)||(rage>=80&target.health.pct>35||buff.revenge.up&target.health.pct<=35&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>35)&talent.massacre.enabled\nactions.generic+=/execute,if=spell_targets.revenge=1\nactions.generic+=/revenge,if=target.health>20\nactions.generic+=/thunder_blast,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/devastate",
["version"] = 20240805,
["warnings"] = "Imported 4 action lists.\n",
["author"] = "SimulationCraft",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap > 6 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap > 6 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 & talent.seismic_reverberation.enabled & spell_targets.revenge >= 3",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "rage <= 60 || buff.violent_outburst.up & spell_targets.thunderclap <= 7",
["action"] = "shield_slam",
},
{
["action"] = "thunder_blast",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rage >= 30 || rage >= 40 & talent.barbaric_training.enabled",
["action"] = "revenge",
},
},
["generic"] = {
{
["action"] = "shield_slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.up & talent.sudden_death.enabled",
["action"] = "execute",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( rage >= 80 & target.health.pct > 20 || buff.revenge.up & target.health.pct <= 20 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 20 ) || ( rage >= 80 & target.health.pct > 35 || buff.revenge.up & target.health.pct <= 35 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 35 ) & talent.massacre.enabled",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.revenge = 1",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "target.health > 20",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["action"] = "devastate",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "pummel",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time = 0",
["action"] = "charge",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.immovable_object.enabled & buff.avatar.down",
["action"] = "shield_wall",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avatar.up || buff.avatar.up & target.health.pct <= 20",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "ignore_pain",
["criteria"] = "target.health.pct >= 20 & ( rage.deficit <= 15 & cooldown.shield_slam.ready || rage.deficit <= 40 & cooldown.shield_charge.ready & talent.champions_bulwark.enabled || rage.deficit <= 20 & cooldown.shield_charge.ready || rage.deficit <= 30 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled || rage.deficit <= 20 & cooldown.avatar.ready || rage.deficit <= 45 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 30 & cooldown.avatar.ready & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 20 || rage.deficit <= 40 & cooldown.shield_slam.ready & buff.violent_outburst.up & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 55 & cooldown.shield_slam.ready & buff.violent_outburst.up & buff.last_stand.up & talent.unnerving_focus.enabled & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 17 & cooldown.shield_slam.ready & talent.heavy_repercussions.enabled || rage.deficit <= 18 & cooldown.shield_slam.ready & talent.impenetrable_wall.enabled ) || ( rage >= 70 || buff.seeing_red.stack = 7 & rage >= 35 ) & cooldown.shield_slam.remains <= 1 & buff.shield_block.remains >= 4 & set_bonus.tier31_2pc",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( target.health.pct >= 90 & talent.unnerving_focus.enabled || target.health.pct <= 20 & talent.unnerving_focus.enabled ) || talent.bolster.enabled || set_bonus.tier30_2pc || set_bonus.tier30_4pc",
["action"] = "last_stand",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.booming_voice.enabled",
["action"] = "demoralizing_shout",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rumbling_earth.enabled & spell_targets.shockwave >= 3",
["action"] = "shockwave",
},
{
["action"] = "shield_charge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.shield_block.duration <= 10",
["action"] = "shield_block",
},
{
["action"] = "demolish",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "spell_targets.thunder_clap >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generic",
},
},
["precombat"] = {
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
},
},
},
["Retribution"] = {
["builtIn"] = true,
["date"] = 20240805,
["spec"] = 70,
["desc"] = "2024-07-23: The War Within",
["profile"] = "actions.precombat+=/shield_of_vengeance\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.1.cooldown.duration=0||trinket.1.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.2.cooldown.duration=0||trinket.2.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.2.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\n\nactions+=/rebuke\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=generators\n\nactions.cooldowns+=/potion,if=buff.avenging_wrath.up||buff.crusade.up||debuff.execution_sentence.up||boss&fight_remains<30\n## actions.cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.avenging_wrath.up||buff.crusade.up\nactions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2||!raid_event.adds.exists||raid_event.adds.in>75||raid_event.adds.up\nactions.cooldowns+=/fireblood,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10\nactions.cooldowns+=/use_item,name=algethar_puzzle_box,if=(cooldown.avenging_wrath.remains<5&!talent.crusade||cooldown.crusade.remains<5&talent.crusade)&(holy_power>=4&time<5||holy_power>=3&time>5)\nactions.cooldowns+=/use_item,slot=trinket1,if=(buff.avenging_wrath.up&cooldown.avenging_wrath.remains>40||buff.crusade.up&buff.crusade.stack=10)&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions.cooldowns+=/use_item,slot=trinket2,if=(buff.avenging_wrath.up&cooldown.avenging_wrath.remains>40||buff.crusade.up&buff.crusade.stack=10)&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\nactions.cooldowns+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs||!buff.crusade.up&cooldown.crusade.remains>20||!buff.avenging_wrath.up&cooldown.avenging_wrath.remains>20)\nactions.cooldowns+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs||!buff.crusade.up&cooldown.crusade.remains>20||!buff.avenging_wrath.up&cooldown.avenging_wrath.remains>20)\nactions.cooldowns+=/use_item,name=shadowed_razing_annihilator,if=(trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)\nactions.cooldowns+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&!buff.avenging_wrath.up&!buff.crusade.up\nactions.cooldowns+=/shield_of_vengeance,if=fight_remains>15&(!talent.execution_sentence||!debuff.execution_sentence.up)\nactions.cooldowns+=/execution_sentence,if=(!buff.crusade.up&cooldown.crusade.remains>15||buff.crusade.stack=10||cooldown.avenging_wrath.remains<0.75||cooldown.avenging_wrath.remains>15||talent.radiant_glory)&(holy_power>=4&time<5||holy_power>=3&time>5||holy_power>=2&talent.divine_auxiliary)&(target.time_to_die>8&!talent.executioners_will||target.time_to_die>12)\nactions.cooldowns+=/avenging_wrath,if=(holy_power>=4&time<5||holy_power>=3&time>5||holy_power>=2&talent.divine_auxiliary&(cooldown.execution_sentence.remains=0||cooldown.final_reckoning.remains=0))&(!raid_event.adds.up||target.time_to_die>10)\nactions.cooldowns+=/crusade,if=holy_power>=5&time<5||holy_power>=3&time>5\nactions.cooldowns+=/final_reckoning,if=(holy_power>=4&time<8||holy_power>=3&time>=8||holy_power>=2&talent.divine_auxiliary)&(cooldown.avenging_wrath.remains>10||cooldown.crusade.remains&(!buff.crusade.up||buff.crusade.stack>=10)||talent.radiant_glory&(buff.avenging_wrath.up||buff.crusade.up))&(!raid_event.adds.exists||raid_event.adds.up||raid_event.adds.in>40)\n\nactions.finishers+=/variable,name=ds_castable,value=(spell_targets.divine_storm>=3||spell_targets.divine_storm>=2&!talent.divine_arbiter||buff.empyrean_power.up)&!buff.empyrean_legacy.up&!(buff.divine_arbiter.up&buff.divine_arbiter.stack>24)\nactions.finishers+=/divine_hammer\nactions.finishers+=/divine_storm,if=variable.ds_castable&(!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10||talent.radiant_glory)\nactions.finishers+=/justicars_vengeance,if=!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10||talent.radiant_glory\nactions.finishers+=/templars_verdict,if=!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10||talent.radiant_glory\n\nactions.generators+=/call_action_list,name=finishers,strict=1,if=holy_power=5||buff.echoes_of_wrath.up&set_bonus.tier31_4pc&talent.crusading_strikes||(debuff.judgment.up||holy_power=4)&buff.divine_resonance.up&!set_bonus.tier31_2pc\nactions.generators+=/wake_of_ashes,if=holy_power<=2&(cooldown.avenging_wrath.remains>6||cooldown.crusade.remains>6||talent.radiant_glory)&(!talent.execution_sentence||cooldown.execution_sentence.remains>4||target.time_to_die<8)&(!raid_event.adds.exists||raid_event.adds.in>20||raid_event.adds.up)\nactions.generators+=/blade_of_justice,if=!dot.expurgation.ticking&set_bonus.tier31_2pc\nactions.generators+=/divine_toll,if=holy_power<=2&(!raid_event.adds.exists||raid_event.adds.in>30||raid_event.adds.up)&(cooldown.avenging_wrath.remains>15||cooldown.crusade.remains>15||talent.radiant_glory||boss&fight_remains<8)\nactions.generators+=/judgment,if=dot.expurgation.ticking&!buff.echoes_of_wrath.up&set_bonus.tier31_2pc\nactions.generators+=/call_action_list,name=finishers,strict=1,if=holy_power>=3&buff.crusade.up&buff.crusade.stack<10\nactions.generators+=/templar_slash,if=buff.templar_strikes.remains<gcd&spell_targets.divine_storm>=2\nactions.generators+=/blade_of_justice,if=(holy_power<=3||!talent.holy_blade)&(spell_targets.divine_storm>=2&!talent.crusading_strikes||spell_targets.divine_storm>=4)\nactions.generators+=/hammer_of_wrath,if=(spell_targets.divine_storm<2||!talent.blessed_champion)&(holy_power<=3||target.health.pct>20||!talent.vanguards_momentum)\nactions.generators+=/templar_slash,if=buff.templar_strikes.remains<gcd\nactions.generators+=/judgment,if=!debuff.judgment.up&(holy_power<=3||!talent.boundless_judgment)\nactions.generators+=/blade_of_justice,if=holy_power<=3||!talent.holy_blade\nactions.generators+=/judgment,if=holy_power<=3||!talent.boundless_judgment\nactions.generators+=/call_action_list,name=finishers,strict=1,if=(target.health.pct<=20||buff.avenging_wrath.up||buff.crusade.up||buff.empyrean_power.up)\nactions.generators+=/crusader_strike,if=cooldown.crusader_strike.charges_fractional>=1.75&(holy_power<=2||holy_power<=3&cooldown.blade_of_justice.remains>gcd*2||holy_power=4&cooldown.blade_of_justice.remains>gcd*2&cooldown.judgment.remains>gcd*2)\nactions.generators+=/call_action_list,name=finishers\nactions.generators+=/templar_slash\nactions.generators+=/templar_strike\nactions.generators+=/hammer_of_wrath,if=holy_power<=3||target.health.pct>20||!talent.vanguards_momentum\nactions.generators+=/crusader_strike\nactions.generators+=/arcane_torrent",
["version"] = 20240805,
["warnings"] = "The import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.crusade.duration=0||cooldown.crusade.duration%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%trinket.t1.cooldown.duration=0)'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.crusade.duration=0||cooldown.crusade.duration%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%trinket.t2.cooldown.duration=0)'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'cooldowns' required some automated changes.\nLine 4: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 4: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 11: Converted 'talent.execution_sentence' to 'talent.execution_sentence.enabled' (1x).\nLine 12: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 12: Converted 'talent.divine_auxiliary' to 'talent.divine_auxiliary.enabled' (1x).\nLine 12: Converted 'talent.executioners_will' to 'talent.executioners_will.enabled' (1x).\nLine 13: Converted 'talent.divine_auxiliary' to 'talent.divine_auxiliary.enabled' (1x).\nLine 15: Converted 'talent.divine_auxiliary' to 'talent.divine_auxiliary.enabled' (1x).\nLine 15: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\n\nThe import for 'finishers' required some automated changes.\nLine 1: Converted 'talent.divine_arbiter' to 'talent.divine_arbiter.enabled' (1x).\nLine 3: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 3: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 4: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 4: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 5: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 5: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\n\nThe import for 'generators' required some automated changes.\nLine 1: Converted 'talent.crusading_strikes' to 'talent.crusading_strikes.enabled' (1x).\nLine 2: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 2: Converted 'talent.execution_sentence' to 'talent.execution_sentence.enabled' (1x).\nLine 4: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 8: Converted 'talent.holy_blade' to 'talent.holy_blade.enabled' (1x).\nLine 8: Converted 'talent.crusading_strikes' to 'talent.crusading_strikes.enabled' (1x).\nLine 9: Converted 'talent.blessed_champion' to 'talent.blessed_champion.enabled' (1x).\nLine 9: Converted 'talent.vanguards_momentum' to 'talent.vanguards_momentum.enabled' (1x).\nLine 11: Converted 'talent.boundless_judgment' to 'talent.boundless_judgment.enabled' (1x).\nLine 12: Converted 'talent.holy_blade' to 'talent.holy_blade.enabled' (1x).\nLine 13: Converted 'talent.boundless_judgment' to 'talent.boundless_judgment.enabled' (1x).\nLine 19: Converted 'talent.vanguards_momentum' to 'talent.vanguards_momentum.enabled' (1x).\n\nImported 5 action lists.\n",
["lists"] = {
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generators",
},
},
["precombat"] = {
{
["action"] = "shield_of_vengeance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.crusade.duration = 0 || cooldown.crusade.duration % trinket.t1.cooldown.duration = 0 || trinket.t1.cooldown.duration % cooldown.avenging_wrath.duration = 0 || cooldown.avenging_wrath.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.crusade.duration = 0 || cooldown.crusade.duration % trinket.t2.cooldown.duration = 0 || trinket.t2.cooldown.duration % cooldown.avenging_wrath.duration = 0 || cooldown.avenging_wrath.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
},
["generators"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "holy_power = 5 || buff.echoes_of_wrath.up & set_bonus.tier31_4pc & talent.crusading_strikes.enabled || ( debuff.judgment.up || holy_power = 4 ) & buff.divine_resonance.up & ! set_bonus.tier31_2pc",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 2 & ( cooldown.avenging_wrath.remains > 6 || cooldown.crusade.remains > 6 || talent.radiant_glory.enabled ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains > 4 || target.time_to_die < 8 ) & ( ! raid_event.adds.exists || raid_event.adds.in > 20 || raid_event.adds.up )",
["action"] = "wake_of_ashes",
},
{
["enabled"] = true,
["criteria"] = "! dot.expurgation.ticking & set_bonus.tier31_2pc",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 2 & ( ! raid_event.adds.exists || raid_event.adds.in > 30 || raid_event.adds.up ) & ( cooldown.avenging_wrath.remains > 15 || cooldown.crusade.remains > 15 || talent.radiant_glory.enabled || boss & fight_remains < 8 )",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["criteria"] = "dot.expurgation.ticking & ! buff.echoes_of_wrath.up & set_bonus.tier31_2pc",
["action"] = "judgment",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "holy_power >= 3 & buff.crusade.up & buff.crusade.stack < 10",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "buff.templar_strikes.remains < gcd.max & spell_targets.divine_storm >= 2",
["action"] = "templar_slash",
},
{
["enabled"] = true,
["criteria"] = "( holy_power <= 3 || ! talent.holy_blade.enabled ) & ( spell_targets.divine_storm >= 2 & ! talent.crusading_strikes.enabled || spell_targets.divine_storm >= 4 )",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.divine_storm < 2 || ! talent.blessed_champion.enabled ) & ( holy_power <= 3 || target.health.pct > 20 || ! talent.vanguards_momentum.enabled )",
["action"] = "hammer_of_wrath",
},
{
["enabled"] = true,
["criteria"] = "buff.templar_strikes.remains < gcd.max",
["action"] = "templar_slash",
},
{
["enabled"] = true,
["criteria"] = "! debuff.judgment.up & ( holy_power <= 3 || ! talent.boundless_judgment.enabled )",
["action"] = "judgment",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 3 || ! talent.holy_blade.enabled",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 3 || ! talent.boundless_judgment.enabled",
["action"] = "judgment",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "( target.health.pct <= 20 || buff.avenging_wrath.up || buff.crusade.up || buff.empyrean_power.up )",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "cooldown.crusader_strike.charges_fractional >= 1.75 & ( holy_power <= 2 || holy_power <= 3 & cooldown.blade_of_justice.remains > gcd.max * 2 || holy_power = 4 & cooldown.blade_of_justice.remains > gcd.max * 2 & cooldown.judgment.remains > gcd.max * 2 )",
["action"] = "crusader_strike",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "finishers",
},
{
["action"] = "templar_slash",
["enabled"] = true,
},
{
["action"] = "templar_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 3 || target.health.pct > 20 || ! talent.vanguards_momentum.enabled",
["action"] = "hammer_of_wrath",
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
},
["finishers"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( spell_targets.divine_storm >= 3 || spell_targets.divine_storm >= 2 & ! talent.divine_arbiter.enabled || buff.empyrean_power.up ) & ! buff.empyrean_legacy.up & ! ( buff.divine_arbiter.up & buff.divine_arbiter.stack > 24 )",
["var_name"] = "ds_castable",
},
{
["action"] = "divine_hammer",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "variable.ds_castable & ( ! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 || talent.radiant_glory.enabled )",
["action"] = "divine_storm",
},
{
["enabled"] = true,
["criteria"] = "! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 || talent.radiant_glory.enabled",
["action"] = "justicars_vengeance",
},
{
["enabled"] = true,
["criteria"] = "! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 || talent.radiant_glory.enabled",
["action"] = "templars_verdict",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || buff.crusade.up || debuff.execution_sentence.up || boss & fight_remains < 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.lights_judgment >= 2 || ! raid_event.adds.exists || raid_event.adds.in > 75 || raid_event.adds.up",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10",
["action"] = "fireblood",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["criteria"] = "( cooldown.avenging_wrath.remains < 5 & ! talent.crusade.enabled || cooldown.crusade.remains < 5 & talent.crusade.enabled ) & ( holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5 )",
["name"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["criteria"] = "( buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 40 || buff.crusade.up & buff.crusade.stack = 10 ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 40 || buff.crusade.up & buff.crusade.stack = 10 ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs || ! buff.crusade.up & cooldown.crusade.remains > 20 || ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 20 )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs || ! buff.crusade.up & cooldown.crusade.remains > 20 || ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 20 )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "shadowed_razing_annihilator",
["criteria"] = "( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs )",
["name"] = "shadowed_razing_annihilator",
},
{
["enabled"] = true,
["action"] = "fyralath_the_dreamrender",
["criteria"] = "dot.mark_of_fyralath.ticking & ! buff.avenging_wrath.up & ! buff.crusade.up",
["name"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 15 & ( ! talent.execution_sentence.enabled || ! debuff.execution_sentence.up )",
["action"] = "shield_of_vengeance",
},
{
["enabled"] = true,
["criteria"] = "( ! buff.crusade.up & cooldown.crusade.remains > 15 || buff.crusade.stack = 10 || cooldown.avenging_wrath.remains < 0.75 || cooldown.avenging_wrath.remains > 15 || talent.radiant_glory.enabled ) & ( holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5 || holy_power >= 2 & talent.divine_auxiliary.enabled ) & ( target.time_to_die > 8 & ! talent.executioners_will.enabled || target.time_to_die > 12 )",
["action"] = "execution_sentence",
},
{
["enabled"] = true,
["criteria"] = "( holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5 || holy_power >= 2 & talent.divine_auxiliary.enabled & ( cooldown.execution_sentence.remains = 0 || cooldown.final_reckoning.remains = 0 ) ) & ( ! raid_event.adds.up || target.time_to_die > 10 )",
["action"] = "avenging_wrath",
},
{
["enabled"] = true,
["criteria"] = "holy_power >= 5 & time < 5 || holy_power >= 3 & time > 5",
["action"] = "crusade",
},
{
["enabled"] = true,
["criteria"] = "( holy_power >= 4 & time < 8 || holy_power >= 3 & time >= 8 || holy_power >= 2 & talent.divine_auxiliary.enabled ) & ( cooldown.avenging_wrath.remains > 10 || cooldown.crusade.remains & ( ! buff.crusade.up || buff.crusade.stack >= 10 ) || talent.radiant_glory.enabled & ( buff.avenging_wrath.up || buff.crusade.up ) ) & ( ! raid_event.adds.exists || raid_event.adds.up || raid_event.adds.in > 40 )",
["action"] = "final_reckoning",
},
},
},
["author"] = "SimC",
},
["Discipline"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20231114.3,
["author"] = "SimC",
["desc"] = "2023-11-14: Update for Harsh Discipline.",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! buff.twilight_equilibrium_holy_amp.up & ! buff.twilight_equilibrium_shadow_amp.up",
["var_name"] = "te_none",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_shadow_amp.up || variable.te_none",
["description"] = "Twilight Equilibrium is buffing shadow damage",
["var_name"] = "te_shadow",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_holy_amp.up || variable.te_none",
["description"] = "Twilight Equilibrium is buffing holy damage",
["var_name"] = "te_holy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.shadow_covenant.enabled",
["description"] = "Long Shadow covenant is enabled",
["var_name"] = "long_scov",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.up || buff.shadow_covenant.up",
["description"] = "Ready to start shadow covenant phase",
["var_name"] = "can_enter_scov",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "2",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mind_blast.execute_time",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.dark_indulgence.enabled",
["description"] = "penance",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["criteria"] = "talent.shadow_word_death.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["criteria"] = "talent.shadow_word_death.enabled & talent.death_and_madness.enabled & target.health.pct < 20",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mindgames.execute_time",
["criteria"] = "talent.mindgames.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.divine_star.execute_time",
["criteria"] = "talent.divine_star.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["criteria"] = "talent.halo.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "floor",
["action"] = "variable",
["value"] = "( buff.shadow_covenant.duration - variable.shadow_spells_duration_max ) / gcd.max",
["description"] = "(scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)",
["var_name"] = "max_te_holy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["description"] = "Counting variable, the number of non-fractional remaining holy casts available",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "variable.max_te_holy",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now",
["criteria"] = "talent.train_of_thought.enabled",
["var_name"] = "expected_penance_reduction",
["action"] = "variable",
["value_else"] = "0",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["description"] = "Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.",
["var_name"] = "shadow_spells_duration",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.penance.up || ( ( cooldown.penance.remains - variable.expected_penance_reduction ) < buff.shadow_covenant.remains )",
["description"] = "Penance",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.mindgames.up || ( cooldown.mindgames.remains_expected < buff.shadow_covenant.remains )",
["description"] = "Mindgames",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains )",
["description"] = "We always get the first SW:D",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "( cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains ) ) & ( target.health.pct < 20 || target.time_to_pct_20 < cooldown.shadow_word_death.remains ) & talent.death_and_madness.enabled",
["description"] = "Second SW:D only when talented and target health in execute range",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "action.mind_blast.charges >= 1",
["description"] = "Add any whole charges of mind blast",
["value"] = "action.mind_blast.charges * action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "( ( action.mind_blast.charges_fractional >= 1 & action.mind_blast.charges_fractional < 2 ) & ( ( ( 1 - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) ) || ( ( action.mind_blast.charges_fractional < 1 ) & ( ( ( 1 - action.mind_blast.charges_fractional ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) )",
["description"] = "Add any fractional charges of mindblast that will recharge in time",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.divine_star.up || ( cooldown.divine_star.remains < buff.shadow_covenant.remains )",
["description"] = "Divine Star",
["value"] = "action.divine_star.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.halo.up || ( cooldown.halo.remains < buff.shadow_covenant.remains )",
["description"] = "Halo",
["value"] = "action.halo.execute_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.",
["criteria"] = "talent.twilight_equilibrium.enabled",
["var_name"] = "should_te",
["action"] = "variable",
["value_else"] = "0",
["value"] = "( buff.shadow_covenant.remains - variable.shadow_spells_duration ) > action.smite.execute_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.remains + action.shadowfiend.execute_time",
["description"] = "First casts should always be HD prep->covenant->schism->HD dark reprimand",
["var_name"] = "next_penance_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_penance_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.penance.duration - variable.expected_penance_reduction ) < variable.next_penance_time",
["var_name"] = "can_penance",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Shadow Word: Death  SW:D is better than other spells if we are in execute phase.",
["var_name"] = "next_swd_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "( ( talent.mindgames.enabled & talent.shattered_perceptions.enabled ) || ( talent.mindgames.enabled & ! talent.expiation.enabled ) ) & target.health.pct >= 20",
["description"] = "indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "target.health.pct >= 20",
["description"] = "Mind blast is better than SW:D if we aren't in execute",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "target.health.pct >= 20 & talent.dark_indulgence.enabled",
["description"] = "Second mindblast when talented",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "talent.divine_star.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
["description"] = "Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation",
["value"] = "action.divine_star.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["criteria"] = "talent.halo.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
["var_name"] = "next_swd_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadow_word_death.duration_expected < variable.next_swd_time",
["var_name"] = "can_swd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Mindblast  Mindblast is better than other spells if we aren't in execute phase",
["var_name"] = "next_mind_blast_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "target.health.pct < 20",
["description"] = "Add SW:D if we're in execute phase",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "talent.death_and_madness.enabled & target.health.pct < 20",
["description"] = "Add a second SW:D if we have death and madness",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "talent.mindgames.enabled & ! talent.expiation.enabled",
["description"] = "Add mindgames if we have it talented and don't have expiation",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.",
["criteria"] = "action.mind_blast.charges_fractional >= 1",
["var_name"] = "can_mind_blast",
["action"] = "variable",
["value_else"] = "0",
["value"] = "( ( action.mind_blast.max_charges - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < variable.next_mind_blast_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation",
["var_name"] = "next_mindgames_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "target.health.pct < 20 || ( talent.expiation.enabled & ! talent.shattered_perceptions.enabled )",
["description"] = "SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
["description"] = "Add a second SW:D if we have death and madness",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "talent.expiation.enabled",
["description"] = "Mind blast is better than mindgames if we have expiation",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "talent.expiation.enabled & talent.dark_indulgence.enabled",
["description"] = "Second mindblast when talented",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.mindgames.duration_expected < variable.next_mindgames_time",
["var_name"] = "can_mindgames",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Divine Star",
["var_name"] = "next_divine_star_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "target.health.pct < 20 || talent.expiation.enabled",
["description"] = "SW:D is better unless outside of execute phase when expiation is untalented",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
["description"] = "Add a second SW:D if we have death and madness",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "talent.expiation.enabled",
["description"] = "Mind blast is always better",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "talent.dark_indulgence.enabled",
["description"] = "Second mindblast when talented",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "talent.mindgames.enabled",
["description"] = "Mindgames is always better",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.divine_star.duration < variable.next_divine_star_time",
["var_name"] = "can_divine_star",
},
{
["enabled"] = true,
["criteria"] = "talent.shadow_covenant.enabled & cooldown.mindbender.up",
["action"] = "run_action_list",
["list_name"] = "scov_prep",
},
{
["enabled"] = true,
["criteria"] = "variable.long_scov & variable.can_enter_scov",
["action"] = "run_action_list",
["list_name"] = "long_scov",
},
{
["enabled"] = true,
["criteria"] = "talent.purge_the_wicked.enabled & ( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) ) & ( ! ticking || ( refreshable & ( ! talent.painful_punishment.enabled || ( talent.painful_punishment.enabled & ( dot.purge_the_wicked.remains < ( cooldown.penance.remains - variable.expected_penance_reduction ) ) ) ) ) )",
["action"] = "purge_the_wicked",
},
{
["enabled"] = true,
["criteria"] = "! talent.purge_the_wicked.enabled & ( target.time_to_die > ( 0.3 * dot.shadow_word_pain.duration ) ) & ( ! ticking || ( refreshable & ( ! talent.painful_punishment.enabled || ( talent.painful_punishment.enabled & ( dot.shadow_word_pain.remains < ( cooldown.penance.remains - variable.expected_penance_reduction ) ) ) ) ) )",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.dark_indulgence.enabled & buff.power_of_the_dark_side.down & cooldown.penance.remains < gcd.max",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_penance )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled || variable.can_mind_blast",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & talent.expiation.enabled & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & ! talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_divine_star )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "! talent.mindbender.enabled & ! buff.shadow_covenant.up",
["action"] = "mindbender",
["description"] = "Don't use pets during shadow covenant windows, wasting GCDs",
},
{
["enabled"] = true,
["criteria"] = "talent.mindbender.enabled & ! buff.shadow_covenant.up",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled || ( talent.shadow_covenant.enabled & ( cooldown.shadowfiend.up || buff.shadow_covenant.up ) )",
["action"] = "power_infusion",
["description"] = "hold PI to use with shadow covenant if we have it",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
["description"] = "sync potion with PI",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || cooldown.power_infusion.remains >= action_cooldown",
["action"] = "use_items",
["description"] = "sync trinkets with PI",
},
},
["long_scov"] = {
{
["enabled"] = true,
["description"] = "Long Shadow Covenant",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 3",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 3",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_holy ) ) & ( ! ticking || refreshable ) & ( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) )",
["action"] = "purge_the_wicked",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.shattered_perceptions.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_holy ) )",
["action"] = "smite",
},
{
["enabled"] = true,
["description"] = "just in case we run out of shadow spells with the above conditions",
["action"] = "penance",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["action"] = "mind_blast",
["enabled"] = true,
},
{
["action"] = "shadow_word_death",
["enabled"] = true,
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["action"] = "halo",
["enabled"] = true,
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["scov_prep"] = {
{
["enabled"] = true,
["criteria"] = "! ticking & ( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) )",
["action"] = "purge_the_wicked",
["description"] = "Prepare to enter shadow covenant",
},
{
["enabled"] = true,
["criteria"] = "cooldown.shadowfiend.remains < cast_time",
["action"] = "power_word_radiance",
},
{
["enabled"] = true,
["criteria"] = "( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) )",
["action"] = "purge_the_wicked",
},
},
},
["version"] = 20231114.3,
["warnings"] = "The import for 'default' required some automated changes.\nLine 5: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 10: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 11: Converted 'talent.shadow_word_death' to 'talent.shadow_word_death.enabled' (1x).\nLine 12: Converted 'talent.shadow_word_death' to 'talent.shadow_word_death.enabled' (1x).\nLine 12: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 13: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 14: Converted 'talent.divine_star' to 'talent.divine_star.enabled' (1x).\nLine 15: Converted 'talent.halo' to 'talent.halo.enabled' (1x).\nLine 16: Converted operations in '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max' to '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)/gcd.max'.\nLine 19: Converted 'talent.train_of_thought' to 'talent.train_of_thought.enabled' (1x).\nLine 24: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 29: Converted 'talent.twilight_equilibrium' to 'talent.twilight_equilibrium.enabled' (1x).\nLine 37: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 37: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 37: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 37: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 39: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 40: Converted 'talent.divine_star' to 'talent.divine_star.enabled' (1x).\nLine 40: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 41: Converted 'talent.halo' to 'talent.halo.enabled' (1x).\nLine 41: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 47: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 48: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 48: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 53: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 53: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 54: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 55: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 56: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 56: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 61: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 62: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 63: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 64: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 65: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 67: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 69: Converted 'talent.purge_the_wicked' to 'talent.purge_the_wicked.enabled' (1x).\nLine 69: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 69: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 70: Converted 'talent.purge_the_wicked' to 'talent.purge_the_wicked.enabled' (1x).\nLine 70: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 70: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 71: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 72: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 73: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 74: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 75: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 75: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 76: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 76: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 77: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 77: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 78: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 79: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 80: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\n\nThe import for 'long_scov' required some automated changes.\nLine 5: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 10: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 11: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 12: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\n\nImported 5 action lists.\n",
["spec"] = 256,
["profile"] = "actions.precombat+=/power_word_fortitude\n\nactions+=/call_action_list,name=cooldowns\nactions+=/variable,name=te_none,op=set,value=!buff.twilight_equilibrium_holy_amp.up&!buff.twilight_equilibrium_shadow_amp.up\n# Twilight Equilibrium is buffing shadow damage\nactions+=/variable,name=te_shadow,op=set,value=buff.twilight_equilibrium_shadow_amp.up||variable.te_none\n# Twilight Equilibrium is buffing holy damage\nactions+=/variable,name=te_holy,op=set,value=buff.twilight_equilibrium_holy_amp.up||variable.te_none\n# Long Shadow covenant is enabled\nactions+=/variable,name=long_scov,op=set,value=talent.shadow_covenant\n# Ready to start shadow covenant phase\nactions+=/variable,name=can_enter_scov,op=set,value=cooldown.shadowfiend.up||buff.shadow_covenant.up\nactions+=/variable,name=shadow_spells_duration_max,op=set,value=0\n## actions+=/variable,name=shadow_spells_duration_max,op=add,value=action.schism.execute_time,if=talent.schism\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=2\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time\n# penance\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death&talent.death_and_madness&target.health.pct<20\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.divine_star.execute_time,if=talent.divine_star\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.halo.execute_time,if=talent.halo\n# (scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)\nactions+=/variable,name=max_te_holy,op=floor,value=(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max\n# Counting variable, the number of non-fractional remaining holy casts available\nactions+=/variable,name=remaining_te_holy,op=set,value=0\nactions+=/variable,name=remaining_te_holy,op=add,value=variable.max_te_holy\n# TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now\nactions+=/variable,name=expected_penance_reduction,op=setif,condition=talent.train_of_thought,value=2,value_else=0\n# Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.\nactions+=/variable,name=shadow_spells_duration,op=set,value=0\n# Schism\n## actions+=/variable,name=shadow_spells_duration,op=add,value=action.schism.execute_time,if=cooldown.schism.up||(cooldown.schism.remains<buff.shadow_covenant.remains)\n# Penance\nactions+=/variable,name=shadow_spells_duration,op=add,value=2,if=cooldown.penance.up||((cooldown.penance.remains-variable.expected_penance_reduction)<buff.shadow_covenant.remains)\n# Mindgames\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mindgames.execute_time,if=cooldown.mindgames.up||(cooldown.mindgames.remains_expected<buff.shadow_covenant.remains)\n# We always get the first SW:D\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains)\n# Second SW:D only when talented and target health in execute range\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=(cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains))&(target.health.pct<20||target.time_to_pct_20<cooldown.shadow_word_death.remains)&talent.death_and_madness\n# Add any whole charges of mind blast\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.charges*action.mind_blast.execute_time,if=action.mind_blast.charges>=1\n# Add any fractional charges of mindblast that will recharge in time\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.execute_time,if=((action.mind_blast.charges_fractional>=1&action.mind_blast.charges_fractional<2)&(((1-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))||((action.mind_blast.charges_fractional<1)&(((1-action.mind_blast.charges_fractional)*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))\n# Divine Star\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.divine_star.execute_time,if=cooldown.divine_star.up||(cooldown.divine_star.remains<buff.shadow_covenant.remains)\n# Halo\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.halo.execute_time,if=cooldown.halo.up||(cooldown.halo.remains<buff.shadow_covenant.remains)\n# Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.\nactions+=/variable,name=should_te,op=setif,condition=talent.twilight_equilibrium,value=(buff.shadow_covenant.remains-variable.shadow_spells_duration)>action.smite.execute_time,value_else=0\n\n# First casts should always be HD prep->covenant->schism->HD dark reprimand\nactions+=/variable,name=next_penance_time,op=set,value=cooldown.shadowfiend.remains+action.shadowfiend.execute_time\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_penance_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\nactions+=/variable,name=can_penance,op=set,value=(cooldown.penance.duration-variable.expected_penance_reduction)<variable.next_penance_time\n# Shadow Word: Death  SW:D is better than other spells if we are in execute phase.\nactions+=/variable,name=next_swd_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_swd_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio\nactions+=/variable,name=next_swd_time,op=add,value=action.mindgames.execute_time,if=((talent.mindgames&talent.shattered_perceptions)||(talent.mindgames&!talent.expiation))&target.health.pct>=20\n# Mind blast is better than SW:D if we aren't in execute\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20\n# Second mindblast when talented\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20&talent.dark_indulgence\n# Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.divine_star.execute_time,if=talent.divine_star&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.halo.execute_time,if=talent.halo&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=can_swd,op=set,value=cooldown.shadow_word_death.duration_expected<variable.next_swd_time\n# Mindblast  Mindblast is better than other spells if we aren't in execute phase\nactions+=/variable,name=next_mind_blast_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mind_blast_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# Add SW:D if we're in execute phase\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=talent.death_and_madness&target.health.pct<20\n# Add mindgames if we have it talented and don't have expiation\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames&!talent.expiation\n# TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.\nactions+=/variable,name=can_mind_blast,op=setif,condition=action.mind_blast.charges_fractional>=1,value=((action.mind_blast.max_charges-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<variable.next_mind_blast_time,value_else=0\n# Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation\nactions+=/variable,name=next_mindgames_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mindgames_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||(talent.expiation&!talent.shattered_perceptions)\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is better than mindgames if we have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation&talent.dark_indulgence\nactions+=/variable,name=can_mindgames,op=set,value=cooldown.mindgames.duration_expected<variable.next_mindgames_time\n# Divine Star\nactions+=/variable,name=next_divine_star_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_divine_star_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better unless outside of execute phase when expiation is untalented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||talent.expiation\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\n# Mindgames is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=can_divine_star,op=set,value=cooldown.divine_star.duration<variable.next_divine_star_time\nactions+=/run_action_list,name=scov_prep,if=talent.shadow_covenant&cooldown.mindbender.up\n## actions+=/run_action_list,name=short_scov,if=variable.short_scov&variable.can_enter_scov\nactions+=/run_action_list,name=long_scov,if=variable.long_scov&variable.can_enter_scov\nactions+=/purge_the_wicked,if=talent.purge_the_wicked&(target.time_to_die>(0.3*dot.purge_the_wicked.duration))&(!ticking||(refreshable&(!talent.painful_punishment||(talent.painful_punishment&(dot.purge_the_wicked.remains<(cooldown.penance.remains-variable.expected_penance_reduction))))))\nactions+=/shadow_word_pain,if=!talent.purge_the_wicked&(target.time_to_die>(0.3*dot.shadow_word_pain.duration))&(!ticking||(refreshable&(!talent.painful_punishment||(talent.painful_punishment&(dot.shadow_word_pain.remains<(cooldown.penance.remains-variable.expected_penance_reduction))))))\n## actions+=/schism,if=!talent.shadow_covenant\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&target.health.pct<20\nactions+=/mind_blast,if=talent.dark_indulgence&buff.power_of_the_dark_side.down&cooldown.penance.remains<gcd.max\nactions+=/penance,if=(!talent.shadow_covenant||variable.can_penance)\n## # For DPS, Lights wrath should always be used outside of scov when you take wrath unleashed to maximize the number of smites it buffs. In a real raid setting, you may want to cast it at the beginning of a scov cycle for additional healing.\n## actions+=/lights_wrath,if=talent.wrath_unleashed\nactions+=/mind_blast,if=!talent.shadow_covenant||variable.can_mind_blast\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&talent.shattered_perceptions\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&talent.expiation&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&!talent.shattered_perceptions\nactions+=/halo,if=!talent.shadow_covenant\nactions+=/divine_star,if=(!talent.shadow_covenant||variable.can_divine_star)\n## actions+=/power_word_solace\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/smite\n\n# Prepare to enter shadow covenant\nactions.scov_prep+=/purge_the_wicked,if=!ticking&(target.time_to_die>(0.3*dot.purge_the_wicked.duration))\nactions.scov_prep+=/power_word_radiance,if=cooldown.shadowfiend.remains<cast_time\nactions.scov_prep+=/purge_the_wicked,if=(target.time_to_die>(0.3*dot.purge_the_wicked.duration))\n\n# Long Shadow Covenant\nactions.long_scov+=/mindbender\n## actions.long_scov+=/schism\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=3\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=3\nactions.long_scov+=/purge_the_wicked,if=(!variable.should_te||(variable.should_te&variable.te_holy))&(!ticking||refreshable)&(target.time_to_die>(0.3*dot.purge_the_wicked.duration))\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/penance,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=2\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=2\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mindgames,if=talent.shattered_perceptions&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\nactions.long_scov+=/mindgames,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\n## actions.long_scov+=/lights_wrath,if=(!variable.should_te||(variable.should_te&variable.te_holy))\nactions.long_scov+=/smite,if=(!variable.should_te||(variable.should_te&variable.te_holy))\n# just in case we run out of shadow spells with the above conditions\nactions.long_scov+=/penance\nactions.long_scov+=/mindgames\nactions.long_scov+=/mind_blast\nactions.long_scov+=/shadow_word_death\nactions.long_scov+=/divine_star\nactions.long_scov+=/halo\nactions.long_scov+=/smite\n\n## Cooldowns\n# Don't use pets during shadow covenant windows, wasting GCDs\nactions.cooldowns+=/shadowfiend,if=!talent.mindbender.enabled&!buff.shadow_covenant.up\nactions.cooldowns+=/mindbender,if=talent.mindbender.enabled&!buff.shadow_covenant.up\n# hold PI to use with shadow covenant if we have it\nactions.cooldowns+=/power_infusion,if=!talent.shadow_covenant.enabled||(talent.shadow_covenant.enabled&(cooldown.shadowfiend.up||buff.shadow_covenant.up))\n# sync potion with PI\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# sync trinkets with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up||cooldown.power_infusion.remains>=cooldown",
},
["Elemental"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240310,
["spec"] = 262,
["desc"] = "2024-03-10:  Resync with sim.\n\n2023-12-01:  Tier 31 sim update.\n\n2023-11-07:  Further 10.2 updates.\n\n2023-11-05:  Update for 10.2.\n\n2023-05-20: Updates from SimC (opener CDs and Windspeaker's Lava Resurgence).\n\n2023-05-15: Don't consume some buffs with Flame Shock.\n\n2023-05-06: Update to Lava Burst prioritization.\n\n2023-04-22: Updates from SimulationCraft.\n\n2023-04-15: Correct Echo of the Elements talent.",
["profile"] = "# Ensure weapon enchant is applied.\nactions.precombat+=/flametongue_weapon,if=talent.improved_flametongue_weapon.enabled\nactions.precombat+=/lightning_shield,if=buff.lightning_shield.down&(buff.earth_shield.down||talent.elemental_orbit.enabled)\nactions.precombat+=/earth_shield,if=buff.lightning_shield.up&buff.earth_shield.down&talent.elemental_orbit.enabled\nactions.precombat+=/potion\nactions.precombat+=/stormkeeper\nactions.precombat+=/icefury\n\n# Executed every time the actor is available.\n# Interrupt of casts.\nactions+=/wind_shear\nactions+=/purge,if=settings.hostile_dispel\nactions+=/greater_purge,if=settings.hostile_dispel\n# Enable more movement.\nactions+=/spiritwalkers_grace,moving=1,if=movement.distance>6\nactions+=/blood_fury,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/berserking,if=!talent.ascendance.enabled||buff.ascendance.up\nactions+=/fireblood,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/ancestral_call,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/bag_of_tricks,if=!talent.ascendance.enabled||!buff.ascendance.up\nactions+=/use_items\nactions+=/meteor\nactions+=/tempest,if=buff.call_lightning.up\nactions+=/vesper_totem\nactions+=/natures_swiftness\nactions+=/potion\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2&(spell_targets.chain_lightning>2||spell_targets.lava_beam>2)\nactions+=/run_action_list,name=single_target\n\n# Keep your cooldowns rolling.\nactions.aoe=fire_elemental\n# Keep your cooldowns rolling.\nactions.aoe+=/storm_elemental\n# Keep your cooldowns rolling.\nactions.aoe+=/stormkeeper,if=!buff.stormkeeper.up\n# Reset LMT CD as early as possible.\nactions.aoe+=/totemic_recall,if=cooldown.liquid_magma_totem.remains>45\n# Keep your cooldowns rolling.\nactions.aoe+=/liquid_magma_totem\n# Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&buff.surge_of_power.up&!buff.splintered_elements.up\n# Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&talent.deeply_rooted_elements.enabled&!talent.surge_of_power.enabled&!buff.splintered_elements.up\n# Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&talent.master_of_the_elements.enabled&!talent.lightning_rod.enabled\n# Spread Flame Shock using Surge of Power on up to 4 for Lightning builds with Windspeaker's Lava Resurgence.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&buff.surge_of_power.up&talent.lightning_rod.enabled&talent.windspeakers_lava_resurgence.enabled&dot.flame_shock.remains<target.time_to_die-16&active_enemies<5\n# Spread Flame Shock using Surge of Power up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&buff.surge_of_power.up&(!talent.lightning_rod.enabled||talent.skybreakers_fiery_demise.enabled)&dot.flame_shock.remains<target.time_to_die-5&active_dot.flame_shock<6\n# Spread Flame Shock against low target counts if Master of the Elements was selected up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.master_of_the_elements.enabled&!talent.lightning_rod.enabled&!talent.surge_of_power.enabled&dot.flame_shock.remains<target.time_to_die-5&active_dot.flame_shock<6\n# Spread Flame Shock to gamble on Deeply Rooted Element procs up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.deeply_rooted_elements.enabled&!talent.surge_of_power.enabled&dot.flame_shock.remains<target.time_to_die-5&active_dot.flame_shock<6\n# Refresh Flame Shock using Surge of Power up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&buff.surge_of_power.up&(!talent.lightning_rod.enabled||talent.skybreakers_fiery_demise.enabled)&dot.flame_shock.remains<target.time_to_die-5&dot.flame_shock.remains>0\n# Refresh Flame Shock against low target counts if Master of the Elements was selected up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.master_of_the_elements.enabled&!talent.lightning_rod.enabled&!talent.surge_of_power.enabled&dot.flame_shock.remains<target.time_to_die-5&dot.flame_shock.remains>0\n# Refresh Flame Shock to gamble on Deeply Rooted Element procs up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.deeply_rooted_elements.enabled&!talent.surge_of_power.enabled&dot.flame_shock.remains<target.time_to_die-5&dot.flame_shock.remains>0\n# JUST DO IT! https://i.kym-cdn.com/entries/icons/mobile/000/018/147/Shia_LaBeouf__Just_Do_It__Motivational_Speech_(Original_Video_by_LaBeouf__R%C3%B6nkk%C3%B6___Turner)_0-4_screenshot.jpg\nactions.aoe+=/ascendance\n# {T31 fire} Lava burst is top prio on 3 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains&active_enemies=3&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# {T31 fire} Earthquake is still good with Mote and either 15+ Magma Chamber stacks on 6(7)+ targets or 9+ targets.\nactions.aoe+=/earthquake,if=buff.master_of_the_elements.up&(buff.magma_chamber.stack>15&active_enemies>=(7-talent.unrelenting_calamity.enabled)||talent.splintered_elements.enabled&active_enemies>=(10-talent.unrelenting_calamity.enabled)||talent.mountains_will_fall.enabled&active_enemies>=9)&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# {T31 fire} Stormkeeper is strong and should be used.\nactions.aoe+=/lava_beam,if=buff.stormkeeper.up&(buff.surge_of_power.up&active_enemies>=6||buff.master_of_the_elements.up&(active_enemies<6||!talent.surge_of_power.enabled))&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# {T31 fire} Stormkeeper is strong and should be used.\nactions.aoe+=/chain_lightning,if=buff.stormkeeper.up&(buff.surge_of_power.up&active_enemies>=6||buff.master_of_the_elements.up&(active_enemies<6||!talent.surge_of_power.enabled))&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# {T31 fire} Lava Surge is strong.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains&cooldown_react&buff.lava_surge.up&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# Cast Lava Burst to buff your immediately follow-up Earthquake with Master of the Elements.\nactions.aoe+=/lava_burst,cycle_targets=1,if=cooldown_react&buff.lava_surge.up&talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&(maelstrom>=60-5*talent.eye_of_the_storm.rank-2*talent.flow_of_power.enabled)&(!talent.echoes_of_great_sundering.enabled&!talent.lightning_rod.enabled||buff.echoes_of_great_sundering_es.up||buff.echoes_of_great_sundering_eb.up)&(!buff.ascendance.up&active_enemies>3&talent.unrelenting_calamity.enabled||active_enemies>3&!talent.unrelenting_calamity.enabled||active_enemies=3)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earthquake,if=!talent.echoes_of_great_sundering.enabled&active_enemies>3&(spell_targets.chain_lightning>3||spell_targets.lava_beam>3)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earthquake,if=!talent.echoes_of_great_sundering.enabled&!talent.elemental_blast.enabled&active_enemies=3&(spell_targets.chain_lightning=3||spell_targets.lava_beam=3)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earthquake,if=buff.echoes_of_great_sundering_es.up||buff.echoes_of_great_sundering_eb.up\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.\nactions.aoe+=/elemental_blast,cycle_targets=1,if=talent.echoes_of_great_sundering\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/elemental_blast,if=talent.echoes_of_great_sundering\n# Elemental Blast is stronger than Earthquake against 3 targets.\nactions.aoe+=/elemental_blast,if=active_enemies=3&!talent.echoes_of_great_sundering.enabled\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.\nactions.aoe+=/earth_shock,cycle_targets=1,if=talent.echoes_of_great_sundering\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earth_shock,if=talent.echoes_of_great_sundering\n# Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it. High priority on 3 targets.\nactions.aoe+=/icefury,if=!buff.ascendance.up&talent.electrified_shocks.enabled&(talent.lightning_rod.enabled&active_enemies<5&!buff.master_of_the_elements.up||talent.deeply_rooted_elements.enabled&active_enemies=3)\n# Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.\nactions.aoe+=/frost_shock,if=!buff.ascendance.up&buff.icefury.up&talent.electrified_shocks.enabled&(!debuff.electrified_shocks.up||buff.icefury.remains<gcd)&(talent.lightning_rod.enabled&active_enemies<5&!buff.master_of_the_elements.up||talent.deeply_rooted_elements.enabled&active_enemies=3)\n# Buff Stormkeeper with Master of the elements on 3-4 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains&talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&(buff.stormkeeper.up||t30_2pc_timer.next_tick<3&set_bonus.tier30_2pc)&(maelstrom<60-5*talent.eye_of_the_storm.rank-2*talent.flow_of_power.enabled-10)&active_enemies<5\n# Stormkeeper is strong and should be used.\nactions.aoe+=/lava_beam,if=buff.stormkeeper.up\n# Stormkeeper is strong and should be used.\nactions.aoe+=/chain_lightning,if=buff.stormkeeper.up\n# Power of the Maelstrom is strong and should be used.\nactions.aoe+=/lava_beam,if=buff.power_of_the_maelstrom.up&buff.ascendance.remains>cast_time\n# Power of the Maelstrom is strong and should be used.\nactions.aoe+=/chain_lightning,if=buff.power_of_the_maelstrom.up\n# Against 6 targets or more Surge of Power should be used with Lava Beam rather than Lava Burst.\nactions.aoe+=/lava_beam,if=active_enemies>=6&buff.surge_of_power.up&buff.ascendance.remains>cast_time\n# Against 6 targets or more Surge of Power should be used with Chain Lightning rather than Lava Burst.\nactions.aoe+=/chain_lightning,if=active_enemies>=6&buff.surge_of_power.up\n# Proc Deeply Rooted Elements against 3 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains>0&buff.lava_surge.up&talent.deeply_rooted_elements.enabled&buff.windspeakers_lava_resurgence.up\n# Consume Master of the Elements with Lava Beam.\nactions.aoe+=/lava_beam,if=buff.master_of_the_elements.up&buff.ascendance.remains>cast_time\n# Proc Master of the Elements against 3 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains>0&active_enemies=3&talent.master_of_the_elements.enabled\n# Gamble away for Deeply Rooted Elements procs whenever Lava Surge makes Lava Burst more efficient.\nactions.aoe+=/lava_burst,if=dot.flame_shock.remains>0&buff.lava_surge.up&talent.deeply_rooted_elements.enabled\n# Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it.\nactions.aoe+=/icefury,if=talent.electrified_shocks.enabled&active_enemies<5\n# Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.\nactions.aoe+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&!debuff.electrified_shocks.up&active_enemies<5\nactions.aoe+=/lava_beam,if=buff.ascendance.remains>cast_time\nactions.aoe+=/chain_lightning\nactions.aoe+=/flame_shock,moving=1,cycle_targets=1,if=refreshable\nactions.aoe+=/frost_shock,moving=1\n\n# Keep your cooldowns rolling.\nactions.single_target+=/fire_elemental\n# Keep your cooldowns rolling.\nactions.single_target+=/storm_elemental\n# Reset LMT CD as early as possible.\nactions.single_target+=/totemic_recall,if=cooldown.liquid_magma_totem.remains>45&(talent.lava_surge.enabled&talent.splintered_elements.enabled||active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1))\n# Keep your cooldowns rolling.\nactions.single_target+=/liquid_magma_totem,if=talent.lava_surge.enabled&talent.splintered_elements.enabled||active_dot.flame_shock=0||dot.flame_shock.remains<6||active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# Use Primordial Wave as much as possible without wasting buffs.\nactions.single_target+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&!buff.splintered_elements.up\nactions.single_target+=/flame_shock,cycle_targets=1,if=active_enemies=1&refreshable&(dot.flame_shock.remains<cooldown.primordial_wave.remains||!talent.primordial_wave.enabled)&!buff.surge_of_power.up&(!buff.master_of_the_elements.up||(!buff.stormkeeper.up&(talent.elemental_blast.enabled&maelstrom<90-8*talent.eye_of_the_storm.rank||maelstrom<60-5*talent.eye_of_the_storm.rank)))\n# Use Flame shock without Surge of Power if you can't spread it with SoP because it is going to be used on Stormkeeper or Surge of Power is not talented.\nactions.single_target+=/flame_shock,if=active_dot.flame_shock=0&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&(talent.deeply_rooted_elements.enabled||talent.ascendance.enabled||talent.primordial_wave.enabled||talent.searing_flames.enabled||talent.magma_chamber.enabled)&(!buff.master_of_the_elements.up&(buff.stormkeeper.up||cooldown.stormkeeper.remains=0)||!talent.surge_of_power.enabled)\n# Spread Flame Shock to multiple targets only if talents were selected that benefit from it.\nactions.single_target+=/flame_shock,cycle_targets=1,if=active_dot.flame_shock<cycle_enemies&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&refreshable&(talent.deeply_rooted_elements.enabled||talent.ascendance.enabled||talent.primordial_wave.enabled||talent.searing_flames.enabled||talent.magma_chamber.enabled)&(buff.surge_of_power.up&!buff.stormkeeper.up&!cooldown.stormkeeper.remains=0||!talent.surge_of_power.enabled)\n# {EB/Swelling/SoP Lightning build} Start SK window if you have enough maelstrom to: EB > SoP SK_LB > LvB > EB.\nactions.single_target+=/stormkeeper,if=!buff.ascendance.up&!buff.stormkeeper.up&maelstrom>=116&talent.elemental_blast.enabled&talent.surge_of_power.enabled&talent.swelling_maelstrom.enabled&!talent.lava_surge.enabled&!talent.echo_of_the_elements.enabled&!talent.primordial_surge.enabled\n# {EB/SoP Lightning builds} Use Stormkeeper if you already got Surge of Power buff rolling.\nactions.single_target+=/stormkeeper,if=!buff.ascendance.up&!buff.stormkeeper.up&buff.surge_of_power.up&!talent.lava_surge.enabled&!talent.echo_of_the_elements.enabled&!talent.primordial_surge.enabled\nactions.single_target+=/stormkeeper,if=!buff.ascendance.up&!buff.stormkeeper.up&(!talent.surge_of_power.enabled||!talent.elemental_blast.enabled||talent.lava_surge.enabled||talent.echo_of_the_elements.enabled||talent.primordial_surge.enabled)\nactions.single_target+=/ascendance,if=!buff.stormkeeper.up\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.stormkeeper.up&buff.surge_of_power.up\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lava_beam,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&buff.stormkeeper.up&!talent.surge_of_power.enabled\n# Stormkeeper is strong and should be used.\nactions.single_target+=/chain_lightning,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&buff.stormkeeper.up&!talent.surge_of_power.enabled\n# Buff stormkeeper with MotE when not using Surge.\nactions.single_target+=/lava_burst,if=buff.stormkeeper.up&!buff.master_of_the_elements.up&!talent.surge_of_power.enabled&talent.master_of_the_elements.enabled\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.stormkeeper.up&!talent.surge_of_power.enabled&buff.master_of_the_elements.up\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.stormkeeper.up&!talent.surge_of_power.enabled&!talent.master_of_the_elements.enabled\n# {Lightning builds} Surge of Power is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.surge_of_power.up&talent.lightning_rod.enabled\n# {Lightning builds} High prio IF for lightning builds.\nactions.single_target+=/icefury,if=talent.electrified_shocks.enabled&talent.lightning_rod.enabled\n# {Lightning builds} Maintain Electrified Shocks for lightning builds.\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&(debuff.electrified_shocks.remains<2||buff.icefury.remains<=gcd)&talent.lightning_rod.enabled\n# {Lightning builds} Refresh Electrified Shocks early to buff Stormkeeper for lightning builds.\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&maelstrom>=50&debuff.electrified_shocks.remains<2*gcd&buff.stormkeeper.up&talent.lightning_rod.enabled\nactions.single_target+=/lava_beam,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&buff.power_of_the_maelstrom.up&buff.ascendance.remains>cast_time&!set_bonus.tier31_4pc\n# {EB/SoP Lightning builds} Spend extra Frost Shock if it gives you the ability to get to next spender without using Stormkeeper charge.\nactions.single_target+=/frost_shock,if=buff.icefury.up&buff.stormkeeper.up&!talent.lava_surge.enabled&!talent.echo_of_the_elements.enabled&!talent.primordial_surge.enabled&talent.elemental_blast.enabled&(maelstrom>=61&maelstrom<75&cooldown.lava_burst.remains>gcd||maelstrom>=49&maelstrom<63&cooldown.lava_burst.ready)\n# {ES/SoP Lightning builds} Spend extra Frost Shock if it gives you the ability to get to next spender without using Stormkeeper charge.\nactions.single_target+=/frost_shock,if=buff.icefury.up&buff.stormkeeper.up&!talent.lava_surge.enabled&!talent.echo_of_the_elements.enabled&!talent.elemental_blast.enabled&(maelstrom>=36&maelstrom<50&cooldown.lava_burst.remains>gcd||maelstrom>=24&maelstrom<38&cooldown.lava_burst.ready)\n# Windspeaker's Lava Resurgence is strong. Don't sit on it...Unless it's Lightning build and you save it to buff Elemental Blast.\nactions.single_target+=/lava_burst,if=buff.windspeakers_lava_resurgence.up&(talent.echo_of_the_elements.enabled||talent.lava_surge.enabled||talent.primordial_surge.enabled||maelstrom>=63&talent.master_of_the_elements.enabled||maelstrom>=38&(buff.echoes_of_great_sundering_es.up||buff.echoes_of_great_sundering_eb.up)&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)||!talent.elemental_blast.enabled)\n# Lava Surge is neat. Utilize it...Unless it's Lightning build and you save it to buff Elemental Blast.\nactions.single_target+=/lava_burst,if=cooldown_react&buff.lava_surge.up&(talent.echo_of_the_elements.enabled||talent.lava_surge.enabled||talent.primordial_surge.enabled||!talent.master_of_the_elements.enabled||!talent.elemental_blast.enabled)\n# Spam Lava burst in Ascendance (if running Elemental Blast - only with T31 4p, otherwise always) if Further Beyond extension is depleted.\nactions.single_target+=/lava_burst,target_if=dot.flame_shock.remains>2,if=buff.ascendance.up&(set_bonus.tier31_4pc||!talent.elemental_blast.enabled)&(!talent.further_beyond.enabled||fb_extension_remaining<2)\n# {Fire builds, T31 4p} Spam Lava Burst with T31 4p as much as you can (unless you running Elemental Blast + Mountains will fall).\nactions.single_target+=/lava_burst,target_if=dot.flame_shock.remains>2,if=!buff.ascendance.up&(!talent.elemental_blast.enabled||!talent.mountains_will_fall.enabled)&!talent.lightning_rod.enabled&set_bonus.tier31_4pc\n# {Fire builds} Buff your next <anything> with MotE.\nactions.single_target+=/lava_burst,target_if=dot.flame_shock.remains>2,if=talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&!talent.lightning_rod.enabled\n# {Lightning builds} Buff your next Maelstrom Spender with MotE if it won't cap your maelstrom.\nactions.single_target+=/lava_burst,if=talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&(maelstrom>=75||maelstrom>=50&!talent.elemental_blast.enabled)&talent.swelling_maelstrom.enabled&maelstrom<=130\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Additionally Elemental Blast is stronger than EoGS. In this case don't use Earthquake on single target.\nactions.single_target+=/earthquake,if=(buff.echoes_of_great_sundering_es.up||buff.echoes_of_great_sundering_eb.up)&(!talent.elemental_blast.enabled&active_enemies<2||active_enemies>1)\n# Use Earthquake against two enemies unless you have to alternate because of Echoes of Great Sundering.\nactions.single_target+=/earthquake,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&!talent.echoes_of_great_sundering.enabled&!talent.elemental_blast.enabled\nactions.single_target+=/elemental_blast,if=(!talent.master_of_the_elements.enabled||buff.master_of_the_elements.up)&debuff.electrified_shocks.up\n# {EB/ElS Fire builds} Apply Electrified Shocks if you are out of Lava Burst charges and not close to maelstrom cap.\nactions.single_target+=/frost_shock,if=buff.icefury.up&buff.master_of_the_elements.up&maelstrom<110&cooldown.lava_burst.charges_fractional<1.0&talent.electrified_shocks.enabled&talent.elemental_blast.enabled&!talent.lightning_rod.enabled\n# Default EB line for lightning builds. Requires MotE buff for fire.\nactions.single_target+=/elemental_blast,if=buff.master_of_the_elements.up||talent.lightning_rod.enabled\nactions.single_target+=/earth_shock\n# {Fire builds}[2t] Els-cleaving Frost Shock with MotE is better than hardcasted Lava Burst on 2 targets.\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&buff.master_of_the_elements.up&!talent.lightning_rod.enabled&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# Fish for DRE procs.\nactions.single_target+=/lava_burst,target_if=dot.flame_shock.remains>2,if=talent.deeply_rooted_elements.enabled\n# Spread out your Icefury usage if you can get more use out of accompanied buffs.\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.flux_melting.enabled&!buff.flux_melting.up\n# Spread out your Icefury usage if you can get more use out of accompanied buffs.\nactions.single_target+=/frost_shock,if=buff.icefury.up&(talent.electrified_shocks.enabled&debuff.electrified_shocks.remains<2||buff.icefury.remains<6)\n# Use Lava Burst normally with fire builds. Save it as much as possible in lightning builds unless you cant use Lightning Bolt without wasting Stormkeeper charges.\nactions.single_target+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains>2&talent.echo_of_the_elements.enabled||talent.lava_surge.enabled||talent.primordial_surge.enabled||!talent.elemental_blast.enabled||!talent.master_of_the_elements.enabled||buff.stormkeeper.up\nactions.single_target+=/elemental_blast\n# Utilize the Power of the Maelstrom buff if your Chain Lightning is empowered by Unrelenting Calamity.\nactions.single_target+=/chain_lightning,if=buff.power_of_the_maelstrom.up&talent.unrelenting_calamity.enabled&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# Utilize the Power of the Maelstrom buff if your Lightning Bolt is empowered by Unrelenting Calamity.\nactions.single_target+=/lightning_bolt,if=buff.power_of_the_maelstrom.up&talent.unrelenting_calamity.enabled\nactions.single_target+=/icefury\n# Spam Chain Lightning if Storm Elemental is active. But honor all previous priorities.\nactions.single_target+=/frost_shock,if=buff.icefury.up&(talent.flux_melting.enabled||talent.electrified_shocks.enabled&!talent.lightning_rod.enabled)\n# If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.\nactions.single_target+=/frost_shock,if=buff.icefury.up&buff.master_of_the_elements.up&!buff.lava_surge.up&!talent.electrified_shocks.enabled&!talent.flux_melting.enabled&cooldown.lava_burst.charges_fractional<1.0&talent.echo_of_the_elements.enabled\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.flux_melting.enabled\n# If you have MotE up and aren't at risk of capping LvB, spend MotE on Chain Lightning.\nactions.single_target+=/chain_lightning,if=buff.master_of_the_elements.up&!buff.lava_surge.up&(cooldown.lava_burst.charges_fractional<1.0&talent.echo_of_the_elements.enabled)&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.\nactions.single_target+=/lightning_bolt,if=buff.master_of_the_elements.up&!buff.lava_surge.up&(cooldown.lava_burst.charges_fractional<1.0&talent.echo_of_the_elements.enabled)\n# Use your Icefury buffs if you didn't improve the talent.\nactions.single_target+=/frost_shock,if=buff.icefury.up&!talent.electrified_shocks.enabled&!talent.flux_melting.enabled\n# Casting Chain Lightning at two targets is more efficient than Lightning Bolt.\nactions.single_target+=/chain_lightning,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# Filler spell. Always available. Always the bottom line.\nactions.single_target+=/lightning_bolt\nactions.single_target+=/flame_shock,moving=1,cycle_targets=1,if=refreshable\nactions.single_target+=/flame_shock,moving=1,if=movement.distance>6\n# Frost Shock is our movement filler.\nactions.single_target+=/frost_shock,moving=1",
["version"] = 20240310,
["warnings"] = "The import for 'aoe' required some automated changes.\nLine 26: Converted 'talent.echoes_of_great_sundering' to 'talent.echoes_of_great_sundering.enabled' (1x).\nLine 27: Converted 'talent.echoes_of_great_sundering' to 'talent.echoes_of_great_sundering.enabled' (1x).\nLine 29: Converted 'talent.echoes_of_great_sundering' to 'talent.echoes_of_great_sundering.enabled' (1x).\nLine 30: Converted 'talent.echoes_of_great_sundering' to 'talent.echoes_of_great_sundering.enabled' (1x).\n\nImported 4 action lists.\n",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "fire_elemental",
},
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "storm_elemental",
},
{
["enabled"] = true,
["action"] = "totemic_recall",
["description"] = "Reset LMT CD as early as possible.",
["criteria"] = "cooldown.liquid_magma_totem.remains > 45 & ( talent.lava_surge.enabled & talent.splintered_elements.enabled || active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) )",
},
{
["enabled"] = true,
["action"] = "liquid_magma_totem",
["description"] = "Keep your cooldowns rolling.",
["criteria"] = "talent.lava_surge.enabled & talent.splintered_elements.enabled || active_dot.flame_shock = 0 || dot.flame_shock.remains < 6 || active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["cycle_targets"] = 1,
["criteria"] = "! buff.primordial_wave.up & ! buff.splintered_elements.up",
["description"] = "Use Primordial Wave as much as possible without wasting buffs.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "active_enemies = 1 & refreshable & ( dot.flame_shock.remains < cooldown.primordial_wave.remains || ! talent.primordial_wave.enabled ) & ! buff.surge_of_power.up & ( ! buff.master_of_the_elements.up || ( ! buff.stormkeeper.up & ( talent.elemental_blast.enabled & maelstrom < 90 - 8 * talent.eye_of_the_storm.rank || maelstrom < 60 - 5 * talent.eye_of_the_storm.rank ) ) )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "flame_shock",
["description"] = "Use Flame shock without Surge of Power if you can't spread it with SoP because it is going to be used on Stormkeeper or Surge of Power is not talented.",
["criteria"] = "active_dot.flame_shock = 0 & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & ( talent.deeply_rooted_elements.enabled || talent.ascendance.enabled || talent.primordial_wave.enabled || talent.searing_flames.enabled || talent.magma_chamber.enabled ) & ( ! buff.master_of_the_elements.up & ( buff.stormkeeper.up || cooldown.stormkeeper.remains = 0 ) || ! talent.surge_of_power.enabled )",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "active_dot.flame_shock < cycle_enemies & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & refreshable & ( talent.deeply_rooted_elements.enabled || talent.ascendance.enabled || talent.primordial_wave.enabled || talent.searing_flames.enabled || talent.magma_chamber.enabled ) & ( buff.surge_of_power.up & ! buff.stormkeeper.up & ! cooldown.stormkeeper.remains = 0 || ! talent.surge_of_power.enabled )",
["description"] = "Spread Flame Shock to multiple targets only if talents were selected that benefit from it.",
},
{
["enabled"] = true,
["action"] = "stormkeeper",
["description"] = "{EB/Swelling/SoP Lightning build} Start SK window if you have enough maelstrom to: EB > SoP SK_LB > LvB > EB.",
["criteria"] = "! buff.ascendance.up & ! buff.stormkeeper.up & maelstrom >= 116 & talent.elemental_blast.enabled & talent.surge_of_power.enabled & talent.swelling_maelstrom.enabled & ! talent.lava_surge.enabled & ! talent.echo_of_the_elements.enabled & ! talent.primordial_surge.enabled",
},
{
["enabled"] = true,
["action"] = "stormkeeper",
["description"] = "{EB/SoP Lightning builds} Use Stormkeeper if you already got Surge of Power buff rolling.",
["criteria"] = "! buff.ascendance.up & ! buff.stormkeeper.up & buff.surge_of_power.up & ! talent.lava_surge.enabled & ! talent.echo_of_the_elements.enabled & ! talent.primordial_surge.enabled",
},
{
["enabled"] = true,
["criteria"] = "! buff.ascendance.up & ! buff.stormkeeper.up & ( ! talent.surge_of_power.enabled || ! talent.elemental_blast.enabled || talent.lava_surge.enabled || talent.echo_of_the_elements.enabled || talent.primordial_surge.enabled )",
["action"] = "stormkeeper",
},
{
["enabled"] = true,
["criteria"] = "! buff.stormkeeper.up",
["action"] = "ascendance",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & buff.surge_of_power.up",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & buff.stormkeeper.up & ! talent.surge_of_power.enabled",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & buff.stormkeeper.up & ! talent.surge_of_power.enabled",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Buff stormkeeper with MotE when not using Surge.",
["criteria"] = "buff.stormkeeper.up & ! buff.master_of_the_elements.up & ! talent.surge_of_power.enabled & talent.master_of_the_elements.enabled",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & ! talent.surge_of_power.enabled & buff.master_of_the_elements.up",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & ! talent.surge_of_power.enabled & ! talent.master_of_the_elements.enabled",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "{Lightning builds} Surge of Power is strong and should be used.",
["criteria"] = "buff.surge_of_power.up & talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["action"] = "icefury",
["description"] = "{Lightning builds} High prio IF for lightning builds.",
["criteria"] = "talent.electrified_shocks.enabled & talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{Lightning builds} Maintain Electrified Shocks for lightning builds.",
["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & ( debuff.electrified_shocks.remains < 2 || buff.icefury.remains <= gcd.max ) & talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{Lightning builds} Refresh Electrified Shocks early to buff Stormkeeper for lightning builds.",
["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & maelstrom >= 50 & debuff.electrified_shocks.remains < 2 * gcd.max & buff.stormkeeper.up & talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & buff.power_of_the_maelstrom.up & buff.ascendance.remains > cast_time & ! set_bonus.tier31_4pc",
["action"] = "lava_beam",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{EB/SoP Lightning builds} Spend extra Frost Shock if it gives you the ability to get to next spender without using Stormkeeper charge.",
["criteria"] = "buff.icefury.up & buff.stormkeeper.up & ! talent.lava_surge.enabled & ! talent.echo_of_the_elements.enabled & ! talent.primordial_surge.enabled & talent.elemental_blast.enabled & ( maelstrom >= 61 & maelstrom < 75 & cooldown.lava_burst.remains > gcd.max || maelstrom >= 49 & maelstrom < 63 & cooldown.lava_burst.ready )",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{ES/SoP Lightning builds} Spend extra Frost Shock if it gives you the ability to get to next spender without using Stormkeeper charge.",
["criteria"] = "buff.icefury.up & buff.stormkeeper.up & ! talent.lava_surge.enabled & ! talent.echo_of_the_elements.enabled & ! talent.elemental_blast.enabled & ( maelstrom >= 36 & maelstrom < 50 & cooldown.lava_burst.remains > gcd.max || maelstrom >= 24 & maelstrom < 38 & cooldown.lava_burst.ready )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Windspeaker's Lava Resurgence is strong. Don't sit on it...Unless it's Lightning build and you save it to buff Elemental Blast.",
["criteria"] = "buff.windspeakers_lava_resurgence.up & ( talent.echo_of_the_elements.enabled || talent.lava_surge.enabled || talent.primordial_surge.enabled || maelstrom >= 63 & talent.master_of_the_elements.enabled || maelstrom >= 38 & ( buff.echoes_of_great_sundering_es.up || buff.echoes_of_great_sundering_eb.up ) & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) || ! talent.elemental_blast.enabled )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Lava Surge is neat. Utilize it...Unless it's Lightning build and you save it to buff Elemental Blast.",
["criteria"] = "cooldown_react & buff.lava_surge.up & ( talent.echo_of_the_elements.enabled || talent.lava_surge.enabled || talent.primordial_surge.enabled || ! talent.master_of_the_elements.enabled || ! talent.elemental_blast.enabled )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Spam Lava burst in Ascendance (if running Elemental Blast - only with T31 4p, otherwise always) if Further Beyond extension is depleted.",
["criteria"] = "buff.ascendance.up & ( set_bonus.tier31_4pc || ! talent.elemental_blast.enabled ) & ( ! talent.further_beyond.enabled || fb_extension_remaining < 2 )",
["target_if"] = "dot.flame_shock.remains > 2",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "{Fire builds, T31 4p} Spam Lava Burst with T31 4p as much as you can (unless you running Elemental Blast + Mountains will fall).",
["criteria"] = "! buff.ascendance.up & ( ! talent.elemental_blast.enabled || ! talent.mountains_will_fall.enabled ) & ! talent.lightning_rod.enabled & set_bonus.tier31_4pc",
["target_if"] = "dot.flame_shock.remains > 2",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "{Fire builds} Buff your next <anything> with MotE.",
["criteria"] = "talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & ! talent.lightning_rod.enabled",
["target_if"] = "dot.flame_shock.remains > 2",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "{Lightning builds} Buff your next Maelstrom Spender with MotE if it won't cap your maelstrom.",
["criteria"] = "talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & ( maelstrom >= 75 || maelstrom >= 50 & ! talent.elemental_blast.enabled ) & talent.swelling_maelstrom.enabled & maelstrom <= 130",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Additionally Elemental Blast is stronger than EoGS. In this case don't use Earthquake on single target.",
["criteria"] = "( buff.echoes_of_great_sundering_es.up || buff.echoes_of_great_sundering_eb.up ) & ( ! talent.elemental_blast.enabled & active_enemies < 2 || active_enemies > 1 )",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use Earthquake against two enemies unless you have to alternate because of Echoes of Great Sundering.",
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & ! talent.echoes_of_great_sundering.enabled & ! talent.elemental_blast.enabled",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.master_of_the_elements.enabled || buff.master_of_the_elements.up ) & debuff.electrified_shocks.up",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{EB/ElS Fire builds} Apply Electrified Shocks if you are out of Lava Burst charges and not close to maelstrom cap.",
["criteria"] = "buff.icefury.up & buff.master_of_the_elements.up & maelstrom < 110 & cooldown.lava_burst.charges_fractional < 1.0 & talent.electrified_shocks.enabled & talent.elemental_blast.enabled & ! talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["action"] = "elemental_blast",
["description"] = "Default EB line for lightning builds. Requires MotE buff for fire.",
["criteria"] = "buff.master_of_the_elements.up || talent.lightning_rod.enabled",
},
{
["action"] = "earth_shock",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{Fire builds}[2t] Els-cleaving Frost Shock with MotE is better than hardcasted Lava Burst on 2 targets.",
["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & buff.master_of_the_elements.up & ! talent.lightning_rod.enabled & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Fish for DRE procs.",
["criteria"] = "talent.deeply_rooted_elements.enabled",
["target_if"] = "dot.flame_shock.remains > 2",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spread out your Icefury usage if you can get more use out of accompanied buffs.",
["criteria"] = "buff.icefury.up & talent.flux_melting.enabled & ! buff.flux_melting.up",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spread out your Icefury usage if you can get more use out of accompanied buffs.",
["criteria"] = "buff.icefury.up & ( talent.electrified_shocks.enabled & debuff.electrified_shocks.remains < 2 || buff.icefury.remains < 6 )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains > 2 & talent.echo_of_the_elements.enabled || talent.lava_surge.enabled || talent.primordial_surge.enabled || ! talent.elemental_blast.enabled || ! talent.master_of_the_elements.enabled || buff.stormkeeper.up",
["description"] = "Use Lava Burst normally with fire builds. Save it as much as possible in lightning builds unless you cant use Lightning Bolt without wasting Stormkeeper charges.",
},
{
["action"] = "elemental_blast",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Utilize the Power of the Maelstrom buff if your Chain Lightning is empowered by Unrelenting Calamity.",
["criteria"] = "buff.power_of_the_maelstrom.up & talent.unrelenting_calamity.enabled & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "Utilize the Power of the Maelstrom buff if your Lightning Bolt is empowered by Unrelenting Calamity.",
["criteria"] = "buff.power_of_the_maelstrom.up & talent.unrelenting_calamity.enabled",
},
{
["action"] = "icefury",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spam Chain Lightning if Storm Elemental is active. But honor all previous priorities.",
["criteria"] = "buff.icefury.up & ( talent.flux_melting.enabled || talent.electrified_shocks.enabled & ! talent.lightning_rod.enabled )",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.",
["criteria"] = "buff.icefury.up & buff.master_of_the_elements.up & ! buff.lava_surge.up & ! talent.electrified_shocks.enabled & ! talent.flux_melting.enabled & cooldown.lava_burst.charges_fractional < 1.0 & talent.echo_of_the_elements.enabled",
},
{
["enabled"] = true,
["criteria"] = "buff.icefury.up & talent.flux_melting.enabled",
["action"] = "frost_shock",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "If you have MotE up and aren't at risk of capping LvB, spend MotE on Chain Lightning.",
["criteria"] = "buff.master_of_the_elements.up & ! buff.lava_surge.up & ( cooldown.lava_burst.charges_fractional < 1.0 & talent.echo_of_the_elements.enabled ) & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.",
["criteria"] = "buff.master_of_the_elements.up & ! buff.lava_surge.up & ( cooldown.lava_burst.charges_fractional < 1.0 & talent.echo_of_the_elements.enabled )",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Use your Icefury buffs if you didn't improve the talent.",
["criteria"] = "buff.icefury.up & ! talent.electrified_shocks.enabled & ! talent.flux_melting.enabled",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Casting Chain Lightning at two targets is more efficient than Lightning Bolt.",
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["description"] = "Filler spell. Always available. Always the bottom line.",
["action"] = "lightning_bolt",
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable",
["enabled"] = true,
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "flame_shock",
["criteria"] = "movement.distance > 6",
["moving"] = 1,
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "frost_shock",
["description"] = "Frost Shock is our movement filler.",
["moving"] = 1,
},
},
["aoe"] = {
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "fire_elemental",
},
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "storm_elemental",
},
{
["enabled"] = true,
["action"] = "stormkeeper",
["description"] = "Keep your cooldowns rolling.",
["criteria"] = "! buff.stormkeeper.up",
},
{
["enabled"] = true,
["action"] = "totemic_recall",
["description"] = "Reset LMT CD as early as possible.",
["criteria"] = "cooldown.liquid_magma_totem.remains > 45",
},
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "liquid_magma_totem",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["cycle_targets"] = 1,
["criteria"] = "! buff.primordial_wave.up & buff.surge_of_power.up & ! buff.splintered_elements.up",
["description"] = "Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["cycle_targets"] = 1,
["criteria"] = "! buff.primordial_wave.up & talent.deeply_rooted_elements.enabled & ! talent.surge_of_power.enabled & ! buff.splintered_elements.up",
["description"] = "Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["cycle_targets"] = 1,
["criteria"] = "! buff.primordial_wave.up & talent.master_of_the_elements.enabled & ! talent.lightning_rod.enabled",
["description"] = "Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & buff.surge_of_power.up & talent.lightning_rod.enabled & talent.windspeakers_lava_resurgence.enabled & dot.flame_shock.remains < target.time_to_die - 16 & active_enemies < 5",
["description"] = "Spread Flame Shock using Surge of Power on up to 4 for Lightning builds with Windspeaker's Lava Resurgence.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & buff.surge_of_power.up & ( ! talent.lightning_rod.enabled || talent.skybreakers_fiery_demise.enabled ) & dot.flame_shock.remains < target.time_to_die - 5 & active_dot.flame_shock < 6",
["description"] = "Spread Flame Shock using Surge of Power up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.master_of_the_elements.enabled & ! talent.lightning_rod.enabled & ! talent.surge_of_power.enabled & dot.flame_shock.remains < target.time_to_die - 5 & active_dot.flame_shock < 6",
["description"] = "Spread Flame Shock against low target counts if Master of the Elements was selected up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.deeply_rooted_elements.enabled & ! talent.surge_of_power.enabled & dot.flame_shock.remains < target.time_to_die - 5 & active_dot.flame_shock < 6",
["description"] = "Spread Flame Shock to gamble on Deeply Rooted Element procs up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & buff.surge_of_power.up & ( ! talent.lightning_rod.enabled || talent.skybreakers_fiery_demise.enabled ) & dot.flame_shock.remains < target.time_to_die - 5 & dot.flame_shock.remains > 0",
["description"] = "Refresh Flame Shock using Surge of Power up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.master_of_the_elements.enabled & ! talent.lightning_rod.enabled & ! talent.surge_of_power.enabled & dot.flame_shock.remains < target.time_to_die - 5 & dot.flame_shock.remains > 0",
["description"] = "Refresh Flame Shock against low target counts if Master of the Elements was selected up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.deeply_rooted_elements.enabled & ! talent.surge_of_power.enabled & dot.flame_shock.remains < target.time_to_die - 5 & dot.flame_shock.remains > 0",
["description"] = "Refresh Flame Shock to gamble on Deeply Rooted Element procs up to 6.",
},
{
["enabled"] = true,
["description"] = "JUST DO IT! https://i.kym-cdn.com/entries/icons/mobile/000/018/147/Shia_LaBeouf__Just_Do_It__Motivational_Speech_(Original_Video_by_LaBeouf__R%C3%B6nkk%C3%B6___Turner)_0-4_screenshot.jpg",
["action"] = "ascendance",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains & active_enemies = 3 & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
["description"] = "{T31 fire} Lava burst is top prio on 3 targets.",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "{T31 fire} Earthquake is still good with Mote and either 15+ Magma Chamber stacks on 6(7)+ targets or 9+ targets.",
["criteria"] = "buff.master_of_the_elements.up & ( buff.magma_chamber.stack > 15 & active_enemies >= ( 7 - talent.unrelenting_calamity.enabled ) || talent.splintered_elements.enabled & active_enemies >= ( 10 - talent.unrelenting_calamity.enabled ) || talent.mountains_will_fall.enabled & active_enemies >= 9 ) & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "{T31 fire} Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & ( buff.surge_of_power.up & active_enemies >= 6 || buff.master_of_the_elements.up & ( active_enemies < 6 || ! talent.surge_of_power.enabled ) ) & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "{T31 fire} Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & ( buff.surge_of_power.up & active_enemies >= 6 || buff.master_of_the_elements.up & ( active_enemies < 6 || ! talent.surge_of_power.enabled ) ) & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains & cooldown_react & buff.lava_surge.up & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
["description"] = "{T31 fire} Lava Surge is strong.",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "cooldown_react & buff.lava_surge.up & talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & ( maelstrom >= 60 - 5 * talent.eye_of_the_storm.rank - 2 * talent.flow_of_power.enabled ) & ( ! talent.echoes_of_great_sundering.enabled & ! talent.lightning_rod.enabled || buff.echoes_of_great_sundering_es.up || buff.echoes_of_great_sundering_eb.up ) & ( ! buff.ascendance.up & active_enemies > 3 & talent.unrelenting_calamity.enabled || active_enemies > 3 & ! talent.unrelenting_calamity.enabled || active_enemies = 3 )",
["description"] = "Cast Lava Burst to buff your immediately follow-up Earthquake with Master of the Elements.",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "! talent.echoes_of_great_sundering.enabled & active_enemies > 3 & ( spell_targets.chain_lightning > 3 || spell_targets.lava_beam > 3 )",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "! talent.echoes_of_great_sundering.enabled & ! talent.elemental_blast.enabled & active_enemies = 3 & ( spell_targets.chain_lightning = 3 || spell_targets.lava_beam = 3 )",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "buff.echoes_of_great_sundering_es.up || buff.echoes_of_great_sundering_eb.up",
},
{
["enabled"] = true,
["action"] = "elemental_blast",
["cycle_targets"] = 1,
["criteria"] = "talent.echoes_of_great_sundering.enabled",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.",
},
{
["enabled"] = true,
["action"] = "elemental_blast",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "talent.echoes_of_great_sundering.enabled",
},
{
["enabled"] = true,
["action"] = "elemental_blast",
["description"] = "Elemental Blast is stronger than Earthquake against 3 targets.",
["criteria"] = "active_enemies = 3 & ! talent.echoes_of_great_sundering.enabled",
},
{
["enabled"] = true,
["action"] = "earth_shock",
["cycle_targets"] = 1,
["criteria"] = "talent.echoes_of_great_sundering.enabled",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.",
},
{
["enabled"] = true,
["action"] = "earth_shock",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "talent.echoes_of_great_sundering.enabled",
},
{
["enabled"] = true,
["action"] = "icefury",
["description"] = "Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it. High priority on 3 targets.",
["criteria"] = "! buff.ascendance.up & talent.electrified_shocks.enabled & ( talent.lightning_rod.enabled & active_enemies < 5 & ! buff.master_of_the_elements.up || talent.deeply_rooted_elements.enabled & active_enemies = 3 )",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.",
["criteria"] = "! buff.ascendance.up & buff.icefury.up & talent.electrified_shocks.enabled & ( ! debuff.electrified_shocks.up || buff.icefury.remains < gcd.max ) & ( talent.lightning_rod.enabled & active_enemies < 5 & ! buff.master_of_the_elements.up || talent.deeply_rooted_elements.enabled & active_enemies = 3 )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains & talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & ( buff.stormkeeper.up || t30_2pc_timer.next_tick < 3 & set_bonus.tier30_2pc ) & ( maelstrom < 60 - 5 * talent.eye_of_the_storm.rank - 2 * talent.flow_of_power.enabled - 10 ) & active_enemies < 5",
["description"] = "Buff Stormkeeper with Master of the elements on 3-4 targets.",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Power of the Maelstrom is strong and should be used.",
["criteria"] = "buff.power_of_the_maelstrom.up & buff.ascendance.remains > cast_time",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Power of the Maelstrom is strong and should be used.",
["criteria"] = "buff.power_of_the_maelstrom.up",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Against 6 targets or more Surge of Power should be used with Lava Beam rather than Lava Burst.",
["criteria"] = "active_enemies >= 6 & buff.surge_of_power.up & buff.ascendance.remains > cast_time",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Against 6 targets or more Surge of Power should be used with Chain Lightning rather than Lava Burst.",
["criteria"] = "active_enemies >= 6 & buff.surge_of_power.up",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains > 0 & buff.lava_surge.up & talent.deeply_rooted_elements.enabled & buff.windspeakers_lava_resurgence.up",
["description"] = "Proc Deeply Rooted Elements against 3 targets.",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Consume Master of the Elements with Lava Beam.",
["criteria"] = "buff.master_of_the_elements.up & buff.ascendance.remains > cast_time",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains > 0 & active_enemies = 3 & talent.master_of_the_elements.enabled",
["description"] = "Proc Master of the Elements against 3 targets.",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Gamble away for Deeply Rooted Elements procs whenever Lava Surge makes Lava Burst more efficient.",
["criteria"] = "dot.flame_shock.remains > 0 & buff.lava_surge.up & talent.deeply_rooted_elements.enabled",
},
{
["enabled"] = true,
["action"] = "icefury",
["description"] = "Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it.",
["criteria"] = "talent.electrified_shocks.enabled & active_enemies < 5",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.",
["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & ! debuff.electrified_shocks.up & active_enemies < 5",
},
{
["enabled"] = true,
["criteria"] = "buff.ascendance.remains > cast_time",
["action"] = "lava_beam",
},
{
["action"] = "chain_lightning",
["enabled"] = true,
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable",
["enabled"] = true,
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "frost_shock",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Interrupt of casts.",
["action"] = "wind_shear",
},
{
["enabled"] = true,
["criteria"] = "settings.hostile_dispel",
["action"] = "purge",
},
{
["enabled"] = true,
["criteria"] = "settings.hostile_dispel",
["action"] = "greater_purge",
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "spiritwalkers_grace",
["criteria"] = "movement.distance > 6",
["description"] = "Enable more movement.",
["moving"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || ! buff.ascendance.up",
["action"] = "bag_of_tricks",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "meteor",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.call_lightning.up",
["action"] = "tempest",
},
{
["action"] = "vesper_totem",
["enabled"] = true,
},
{
["action"] = "natures_swiftness",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2 & ( spell_targets.chain_lightning > 2 || spell_targets.lava_beam > 2 )",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["enabled"] = true,
["action"] = "flametongue_weapon",
["description"] = "Ensure weapon enchant is applied.",
["criteria"] = "talent.improved_flametongue_weapon.enabled",
},
{
["enabled"] = true,
["criteria"] = "buff.lightning_shield.down & ( buff.earth_shield.down || talent.elemental_orbit.enabled )",
["action"] = "lightning_shield",
},
{
["enabled"] = true,
["criteria"] = "buff.lightning_shield.up & buff.earth_shield.down & talent.elemental_orbit.enabled",
["action"] = "earth_shield",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "stormkeeper",
["enabled"] = true,
},
{
["action"] = "icefury",
["enabled"] = true,
},
},
},
["author"] = "SimulationCraft",
},
["Fury"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240805,
["author"] = "SimC",
["desc"] = "2024-07-30: Sim update\n\n2024-07-23: The War Within",
["profile"] = "actions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\n# Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0||trinket.1.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0||trinket.2.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\nactions.precombat+=/use_item,name=algethar_puzzle_box\nactions.precombat+=/battle_shout\nactions.precombat+=/berserker_stance,toggle=on\nactions.precombat+=/recklessness,if=!equipped.fyralath_the_dreamrender\nactions.precombat+=/avatar,if=!talent.titans_torment\n\nactions+=/charge,if=time<=0.5||movement.distance>5\nactions+=/heroic_leap,if=(raid_event.movement.distance>25&raid_event.movement.in>45)\nactions+=/potion\nactions+=/pummel,if=target.debuff.casting.react\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=variables\nactions+=/lights_judgment,if=buff.recklessness.down\nactions+=/berserking,if=buff.recklessness.up\nactions+=/blood_fury\nactions+=/fireblood\nactions+=/ancestral_call\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.avatar.remains>15&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=multi_target,strict=1,if=active_enemies>=2\nactions+=/run_action_list,name=single_target,strict=1,if=active_enemies=1\n\nactions.multi_target+=/recklessness,if=(!talent.anger_management&cooldown.avatar.remains<1&talent.titans_torment)||talent.anger_management||!talent.titans_torment\nactions.multi_target+=/avatar,if=talent.titans_torment&(buff.enrage.up||talent.titanic_rage)||!talent.titans_torment\nactions.multi_target+=/thunderous_roar,if=buff.enrage.up\nactions.multi_target+=/champions_spear,if=buff.enrage.up\nactions.multi_target+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.multi_target+=/whirlwind,if=buff.meat_cleaver.stack=0&talent.improved_whirlwind\nactions.multi_target+=/execute,if=buff.enrage.up&buff.ashen_juggernaut.remains<=gcd&talent.ashen_juggernaut\nactions.multi_target+=/rampage,if=rage.pct>85&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.multi_target+=/bladestorm,if=buff.enrage.up&cooldown.avatar.remains>=9\nactions.multi_target+=/ravager,if=buff.enrage.up\nactions.multi_target+=/rampage,if=talent.anger_management\nactions.multi_target+=/bloodbath,if=buff.furious_bloodthirst.up\nactions.multi_target+=/crushing_blow\nactions.multi_target+=/onslaught,if=talent.tenderize||buff.enrage.up\nactions.multi_target+=/bloodbath,if=!dot.gushing_wound.remains\nactions.multi_target+=/rampage,if=talent.reckless_abandon\nactions.multi_target+=/execute,if=buff.enrage.up&((target.health.pct>35&talent.massacre||target.health.pct>20)&buff.sudden_death.remains<=gcd)\nactions.multi_target+=/bloodbath\nactions.multi_target+=/bloodthirst\nactions.multi_target+=/raging_blow\nactions.multi_target+=/execute\nactions.multi_target+=/whirlwind\n\nactions.single_target+=/ravager,if=cooldown.recklessness.remains<gcd||buff.recklessness.up\nactions.single_target+=/recklessness,if=!talent.anger_management||(talent.anger_management&cooldown.avatar.ready||cooldown.avatar.remains<gcd||cooldown.avatar.remains>30)\nactions.single_target+=/avatar,if=!talent.titans_torment||(talent.titans_torment&(buff.enrage.up||talent.titanic_rage))\nactions.single_target+=/champions_spear,if=buff.enrage.up&((buff.furious_bloodthirst.up&talent.titans_torment)||!talent.titans_torment||boss&fight_remains<20||active_enemies>1||!set_bonus.tier31_2pc)&raid_event.adds.in>15\nactions.single_target+=/whirlwind,if=spell_targets.whirlwind>1&talent.improved_whirlwind&!buff.meat_cleaver.up||raid_event.adds.in<2&talent.improved_whirlwind&!buff.meat_cleaver.up\nactions.single_target+=/execute,if=buff.ashen_juggernaut.up&buff.ashen_juggernaut.remains<gcd\nactions.single_target+=/bladestorm,if=buff.enrage.up&(buff.avatar.up||buff.recklessness.up&talent.anger_management)\nactions.single_target+=/odyns_fury,if=buff.enrage.up&(spell_targets.whirlwind>1||raid_event.adds.in>15)&(talent.dancing_blades&buff.dancing_blades.remains<5||!talent.dancing_blades)\nactions.single_target+=/rampage,if=talent.anger_management&(buff.recklessness.up||buff.enrage.remains<gcd||rage.pct>85)\nactions.single_target+=/bloodbath,if=set_bonus.tier30_4pc&action.bloodthirst.crit_pct_current>=95\nactions.single_target+=/bloodthirst,if=(set_bonus.tier30_4pc&action.bloodthirst.crit_pct_current>=95)||(!talent.reckless_abandon&buff.furious_bloodthirst.up&buff.enrage.up&(!dot.gushing_wound.remains||buff.champions_might.up))\nactions.single_target+=/bloodbath,if=buff.furious_bloodthirst.up\nactions.single_target+=/thunderous_roar,if=buff.enrage.up&(spell_targets.whirlwind>1||raid_event.adds.in>15)\nactions.single_target+=/onslaught,if=buff.enrage.up||talent.tenderize\nactions.single_target+=/crushing_blow,if=buff.enrage.up\nactions.single_target+=/rampage,if=talent.reckless_abandon&(buff.recklessness.up||buff.enrage.remains<gcd||rage.pct>85)\nactions.single_target+=/execute,if=buff.enrage.up&!buff.furious_bloodthirst.up&buff.ashen_juggernaut.up||buff.sudden_death.remains<=gcd&(target.health.pct>35&talent.massacre||target.health.pct>20)\nactions.single_target+=/execute,if=buff.enrage.up\nactions.single_target+=/rampage,if=talent.anger_management\nactions.single_target+=/bloodbath,if=buff.enrage.up&talent.reckless_abandon\nactions.single_target+=/rampage,if=target.health.pct<35&talent.massacre.enabled\nactions.single_target+=/bloodthirst,if=buff.enrage.down||!buff.furious_bloodthirst.up\nactions.single_target+=/raging_blow,if=charges>1\nactions.single_target+=/crushing_blow,if=charges>1\nactions.single_target+=/bloodbath,if=buff.enrage.down\nactions.single_target+=/crushing_blow,if=buff.enrage.up&talent.reckless_abandon\nactions.single_target+=/bloodthirst,if=!buff.furious_bloodthirst.up\nactions.single_target+=/raging_blow,if=charges>1\nactions.single_target+=/rampage\nactions.single_target+=/bloodbath\nactions.single_target+=/raging_blow\nactions.single_target+=/crushing_blow\nactions.single_target+=/bloodthirst\nactions.single_target+=/slam\n\n# Trinkets\nactions.trinkets+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking\nactions.trinkets+=/use_item,use_off_gcd=1,name=algethar_puzzle_box,if=cooldown.recklessness.remains<3||(talent.anger_management&cooldown.avatar.remains<3)\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&(buff.avatar.up)&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&(buff.avatar.up)&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions.variables+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20",
["version"] = 20240805,
["warnings"] = "The import for 'single_target' required some automated changes.\nLine 2: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 2: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 5: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 7: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 8: Converted 'talent.dancing_blades' to 'talent.dancing_blades.enabled' (1x).\nLine 8: Converted 'talent.dancing_blades' to 'talent.dancing_blades.enabled' (1x).\nLine 9: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 11: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 14: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 16: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 17: Converted 'talent.massacre' to 'talent.massacre.enabled' (1x).\nLine 19: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 20: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 26: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 1: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 2: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 2: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 5: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 5: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 5: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 5: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 5: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 6: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 6: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 6: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 6: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 8: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 9: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 14: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'multi_target' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 6: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 7: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 11: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 14: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 16: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 17: Converted 'talent.massacre' to 'talent.massacre.enabled' (1x).\n\nImported 6 action lists.\n",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.recklessness.remains < gcd.max || buff.recklessness.up",
["action"] = "ravager",
},
{
["enabled"] = true,
["criteria"] = "! talent.anger_management.enabled || ( talent.anger_management.enabled & cooldown.avatar.ready || cooldown.avatar.remains < gcd.max || cooldown.avatar.remains > 30 )",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "! talent.titans_torment.enabled || ( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) )",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( ( buff.furious_bloodthirst.up & talent.titans_torment.enabled ) || ! talent.titans_torment.enabled || boss & fight_remains < 20 || active_enemies > 1 || ! set_bonus.tier31_2pc ) & raid_event.adds.in > 15",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.whirlwind > 1 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up || raid_event.adds.in < 2 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "buff.ashen_juggernaut.up & buff.ashen_juggernaut.remains < gcd.max",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( buff.avatar.up || buff.recklessness.up & talent.anger_management.enabled )",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( spell_targets.whirlwind > 1 || raid_event.adds.in > 15 ) & ( talent.dancing_blades.enabled & buff.dancing_blades.remains < 5 || ! talent.dancing_blades.enabled )",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled & ( buff.recklessness.up || buff.enrage.remains < gcd.max || rage.pct > 85 )",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_4pc & action.bloodthirst.crit_pct_current >= 95",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "( set_bonus.tier30_4pc & action.bloodthirst.crit_pct_current >= 95 ) || ( ! talent.reckless_abandon.enabled & buff.furious_bloodthirst.up & buff.enrage.up & ( ! dot.gushing_wound.remains || buff.champions_might.up ) )",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "buff.furious_bloodthirst.up",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( spell_targets.whirlwind > 1 || raid_event.adds.in > 15 )",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up || talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "talent.reckless_abandon.enabled & ( buff.recklessness.up || buff.enrage.remains < gcd.max || rage.pct > 85 )",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ! buff.furious_bloodthirst.up & buff.ashen_juggernaut.up || buff.sudden_death.remains <= gcd.max & ( target.health.pct > 35 & talent.massacre.enabled || target.health.pct > 20 )",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.massacre.enabled",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.down || ! buff.furious_bloodthirst.up",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "charges > 1",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "charges > 1",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.down",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "! buff.furious_bloodthirst.up",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "charges > 1",
["action"] = "raging_blow",
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "slam",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 5",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "( raid_event.movement.distance > 25 & raid_event.movement.in > 45 )",
["action"] = "heroic_leap",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "pummel",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.down",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.up",
["action"] = "berserking",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 2",
["list_name"] = "multi_target",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t1.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t2.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "berserker_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! equipped.fyralath_the_dreamrender",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "! talent.titans_torment.enabled",
["action"] = "avatar",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["description"] = "Variables",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["description"] = "Trinkets",
["criteria"] = "dot.mark_of_fyralath.ticking",
["action"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["action"] = "algethar_puzzle_box",
["criteria"] = "cooldown.recklessness.remains < 3 || ( talent.anger_management.enabled & cooldown.avatar.remains < 3 )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & ( buff.avatar.up ) & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & ( buff.avatar.up ) & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["multi_target"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.anger_management.enabled & cooldown.avatar.remains < 1 & talent.titans_torment.enabled ) || talent.anger_management.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.stack = 0 & talent.improved_whirlwind.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & buff.ashen_juggernaut.remains <= gcd.max & talent.ashen_juggernaut.enabled",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "rage.pct > 85 & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & cooldown.avatar.remains >= 9",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "ravager",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.furious_bloodthirst.up",
["action"] = "bloodbath",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled || buff.enrage.up",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "! dot.gushing_wound.remains",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "talent.reckless_abandon.enabled",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( ( target.health.pct > 35 & talent.massacre.enabled || target.health.pct > 20 ) & buff.sudden_death.remains <= gcd.max )",
["action"] = "execute",
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
},
["spec"] = 72,
},
["Restoration Druid"] = {
["builtIn"] = true,
["date"] = 20231201,
["spec"] = 105,
["desc"] = "Healer priorities are DPS-focused only.\n\n2023-11-11:  Minor update from SimC.\n\n2023-11-05:  Patch 10.2.\n\n2023-07-24:  Ferocious Bite on targets with Rip when target cycling is enabled.\n\n2023-03-23:  Minor tweaks to Cat Form priority from SimulationCraft.",
["profile"] = "actions.precombat+=/heart_of_the_wild\nactions.precombat+=/prowl,if=talent.rake.enabled\nactions.precombat+=/cat_form,if=time=0&buff.moonkin_form.down&talent.rake.enabled\nactions.precombat+=/moonkin_form,if=time=0&buff.cat_form.down&talent.moonkin_form.enabled\n\n# Executed every time the actor is available.\nactions+=/skull_bash\nactions+=/solar_beam\nactions+=/berserking\n## actions+=/natures_vigil,if=!buff.prowl.up&!buff.shadowmeld.up\n## actions+=/regrowth,if=!buff.prowl.up&!buff.shadowmeld.up&settings.heal_in_groups,line_cd=7\nactions+=/use_items,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/potion,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/run_action_list,name=cat,if=talent.rake.enabled||buff.cat_form.up\nactions+=/run_action_list,name=owl,if=active_enemies>2&talent.moonkin_form.enabled&talent.convoke_the_spirits.enabled&cooldown.convoke_the_spirits.remains<=gcd.max&(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled)\nactions+=/moonkin_form,if=talent.moonkin_form.enabled&buff.cat_form.down\nactions+=/convoke_the_spirits,if=(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled)\nactions+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack=2&dot.adaptive_swarm_damage.remains>2\nactions+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack=1&dot.adaptive_swarm_damage.remains>2\nactions+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack=3&dot.adaptive_swarm_damage.remains>2\nactions+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack=4&dot.adaptive_swarm_damage.remains>2\nactions+=/adaptive_swarm,cycle_targets=1,if=!dot.adaptive_swarm_damage.ticking\nactions+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>5&talent.improved_sunfire.enabled\nactions+=/moonfire,cycle_targets=1,if=refreshable&time_to_die>12\nactions+=/starsurge,if=active_enemies<8\nactions+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>7&active_enemies<7\nactions+=/starfire,if=spell_targets.starfire>1||buff.heart_of_the_wild.up\nactions+=/wrath\n\nactions.cat+=/rake,if=buff.shadowmeld.up||buff.prowl.up||buff.sudden_ambush.up\nactions.cat+=/heart_of_the_wild,if=(cooldown.convoke_the_spirits.remains<40||!talent.convoke_the_spirits.enabled)||boss&fight_remains<46\nactions.cat+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack=2&dot.adaptive_swarm_damage.remains>2\nactions.cat+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack=1&dot.adaptive_swarm_damage.remains>2\nactions.cat+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack=3&dot.adaptive_swarm_damage.remains>2\nactions.cat+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack=4&dot.adaptive_swarm_damage.remains>2\nactions.cat+=/adaptive_swarm,cycle_targets=1,if=!dot.adaptive_swarm_damage.ticking\nactions.cat+=/run_action_list,name=owl,if=active_enemies>2&talent.moonkin_form.enabled&talent.convoke_the_spirits.enabled&cooldown.convoke_the_spirits.remains<=gcd.max&(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled)\nactions.cat+=/cat_form,if=(active_enemies<2||!talent.moonkin_form.enabled)&(!buff.cat_form.up&talent.convoke_the_spirits.enabled&cooldown.convoke_the_spirits.remains<=gcd.max&(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled))\nactions.cat+=/convoke_the_spirits,if=(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled)\nactions.cat+=/rip,target_if=((refreshable||energy>90&remains<=10)&(combo_points=5&time_to_die>remains+24||(remains+combo_points*4<time_to_die&remains+4+combo_points*4>time_to_die))||!ticking&combo_points>2+spell_targets.swipe_cat*2)\nactions.cat+=/thrash_cat,cycle_targets=1,if=refreshable&target.time_to_die>5&spell_targets.thrash_cat>4\nactions.cat+=/sunfire,cycle_targets=1,if=(refreshable&target.time_to_die>5)&!prev_gcd.1.cat_form&(active_enemies=1||talent.improved_sunfire.enabled)\nactions.cat+=/cat_form,if=!buff.cat_form.up&energy>50&(dot.thrash_cat.refreshable&spell_targets.swipe_cat>=9&talent.thrash.enabled)&cooldown.healing.remains>(gcd.max*2)\nactions.cat+=/moonfire,cycle_targets=1,if=(refreshable&time_to_die>12&!ticking||(prev_gcd.1.sunfire&remains<duration*0.8&spell_targets.sunfire=1))&!prev_gcd.1.cat_form&spell_targets.swipe_cat<7\nactions.cat+=/sunfire,if=prev_gcd.1.moonfire&remains<duration*0.8\nactions.cat+=/moonkin_form,if=talent.master_shapeshifter.enabled&((buff.heart_of_the_wild.up&spell_targets.starfire>6)||spell_targets.starfire>6)\nactions.cat+=/starfire,if=buff.moonkin_form.up&(talent.master_shapeshifter.enabled&((buff.heart_of_the_wild.up&spell_targets.starfire>6)||spell_targets.starfire>6))\nactions.cat+=/starsurge,if=active_enemies=1||(active_enemies<8&!buff.cat_form.up)\nactions.cat+=/cat_form,if=!buff.cat_form.up&energy>50\nactions.cat+=/ferocious_bite,cycle_targets=1,if=(combo_points>3&target.time_to_die<3)||(combo_points=5&energy>=50&dot.rip.remains>10)&spell_targets.swipe_cat<4\nactions.cat+=/thrash_cat,cycle_targets=1,if=refreshable&target.time_to_die>5&spell_targets.thrash_cat>2\nactions.cat+=/rake,target_if=refreshable&time_to_die>10&spell_targets.swipe_cat<10\nactions.cat+=/swipe_cat,if=active_enemies>3&combo_points<5&talent.improved_swipe.enabled\nactions.cat+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>5&active_enemies<7&!talent.improved_sunfire.enabled\nactions.cat+=/thrash_cat,cycle_targets=1,if=refreshable&target.time_to_die>5\nactions.cat+=/shred,if=energy>60&combo_points<5\nactions.cat+=/wrath,if=energy<15\n\nactions.owl+=/moonkin_form,if=!buff.moonkin_form.up\nactions.owl+=/convoke_the_spirits",
["version"] = 20231201,
["warnings"] = "Imported 4 action lists.\n",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "skull_bash",
},
{
["action"] = "solar_beam",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled || buff.cat_form.up",
["action"] = "run_action_list",
["list_name"] = "cat",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.moonkin_form.enabled & talent.convoke_the_spirits.enabled & cooldown.convoke_the_spirits.remains <= gcd.max & ( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled )",
["action"] = "run_action_list",
["list_name"] = "owl",
},
{
["enabled"] = true,
["criteria"] = "talent.moonkin_form.enabled & buff.cat_form.down",
["action"] = "moonkin_form",
},
{
["enabled"] = true,
["criteria"] = "( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled )",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "dot.adaptive_swarm_damage.stack = 2 & dot.adaptive_swarm_damage.remains > 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "dot.adaptive_swarm_damage.stack = 1 & dot.adaptive_swarm_damage.remains > 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "dot.adaptive_swarm_damage.stack = 3 & dot.adaptive_swarm_damage.remains > 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "dot.adaptive_swarm_damage.stack = 4 & dot.adaptive_swarm_damage.remains > 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "! dot.adaptive_swarm_damage.ticking",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "refreshable & target.time_to_die > 5 & talent.improved_sunfire.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "refreshable & time_to_die > 12",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 8",
["action"] = "starsurge",
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "refreshable & target.time_to_die > 7 & active_enemies < 7",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.starfire > 1 || buff.heart_of_the_wild.up",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["owl"] = {
{
["enabled"] = true,
["criteria"] = "! buff.moonkin_form.up",
["action"] = "moonkin_form",
},
{
["action"] = "convoke_the_spirits",
["enabled"] = true,
},
},
["cat"] = {
{
["enabled"] = true,
["criteria"] = "buff.shadowmeld.up || buff.prowl.up || buff.sudden_ambush.up",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.convoke_the_spirits.remains < 40 || ! talent.convoke_the_spirits.enabled ) || boss & fight_remains < 46",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "dot.adaptive_swarm_damage.stack = 2 & dot.adaptive_swarm_damage.remains > 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "dot.adaptive_swarm_damage.stack = 1 & dot.adaptive_swarm_damage.remains > 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "dot.adaptive_swarm_damage.stack = 3 & dot.adaptive_swarm_damage.remains > 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "dot.adaptive_swarm_damage.stack = 4 & dot.adaptive_swarm_damage.remains > 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "! dot.adaptive_swarm_damage.ticking",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.moonkin_form.enabled & talent.convoke_the_spirits.enabled & cooldown.convoke_the_spirits.remains <= gcd.max & ( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled )",
["action"] = "run_action_list",
["list_name"] = "owl",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies < 2 || ! talent.moonkin_form.enabled ) & ( ! buff.cat_form.up & talent.convoke_the_spirits.enabled & cooldown.convoke_the_spirits.remains <= gcd.max & ( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled ) )",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled )",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "( ( refreshable || energy > 90 & remains <= 10 ) & ( combo_points = 5 & time_to_die > remains + 24 || ( remains + combo_points * 4 < time_to_die & remains + 4 + combo_points * 4 > time_to_die ) ) || ! ticking & combo_points > 2 + spell_targets.swipe_cat * 2 )",
["action"] = "rip",
},
{
["enabled"] = true,
["action"] = "thrash_cat",
["criteria"] = "refreshable & target.time_to_die > 5 & spell_targets.thrash_cat > 4",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "( refreshable & target.time_to_die > 5 ) & ! prev_gcd.1.cat_form & ( active_enemies = 1 || talent.improved_sunfire.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & energy > 50 & ( dot.thrash_cat.refreshable & spell_targets.swipe_cat >= 9 & talent.thrash.enabled ) & cooldown.healing.remains > ( gcd.max * 2 )",
["action"] = "cat_form",
},
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "( refreshable & time_to_die > 12 & ! ticking || ( prev_gcd.1.sunfire & remains < duration * 0.8 & spell_targets.sunfire = 1 ) ) & ! prev_gcd.1.cat_form & spell_targets.swipe_cat < 7",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.moonfire & remains < duration * 0.8",
["action"] = "sunfire",
},
{
["enabled"] = true,
["criteria"] = "talent.master_shapeshifter.enabled & ( ( buff.heart_of_the_wild.up & spell_targets.starfire > 6 ) || spell_targets.starfire > 6 )",
["action"] = "moonkin_form",
},
{
["enabled"] = true,
["criteria"] = "buff.moonkin_form.up & ( talent.master_shapeshifter.enabled & ( ( buff.heart_of_the_wild.up & spell_targets.starfire > 6 ) || spell_targets.starfire > 6 ) )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 || ( active_enemies < 8 & ! buff.cat_form.up )",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & energy > 50",
["action"] = "cat_form",
},
{
["enabled"] = true,
["action"] = "ferocious_bite",
["criteria"] = "( combo_points > 3 & target.time_to_die < 3 ) || ( combo_points = 5 & energy >= 50 & dot.rip.remains > 10 ) & spell_targets.swipe_cat < 4",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "thrash_cat",
["criteria"] = "refreshable & target.time_to_die > 5 & spell_targets.thrash_cat > 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & time_to_die > 10 & spell_targets.swipe_cat < 10",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3 & combo_points < 5 & talent.improved_swipe.enabled",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "refreshable & target.time_to_die > 5 & active_enemies < 7 & ! talent.improved_sunfire.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "thrash_cat",
["criteria"] = "refreshable & target.time_to_die > 5",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "energy > 60 & combo_points < 5",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "energy < 15",
["action"] = "wrath",
},
},
["precombat"] = {
{
["action"] = "heart_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "time = 0 & buff.moonkin_form.down & talent.rake.enabled",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "time = 0 & buff.cat_form.down & talent.moonkin_form.enabled",
["action"] = "moonkin_form",
},
},
},
["author"] = "Makahiki",
},
["Mistweaver"] = {
["builtIn"] = true,
["date"] = 20230325,
["spec"] = 270,
["desc"] = "2023-02-16:  Added option to avoid recasting Faeline Stomp when standing in an existing faeline (for mana efficiency).\n\n2023-03-25:  Add Roll/Chi Torpedo with specialization option.",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies <= 3",
["action"] = "thunder_focus_tea",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 3",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "! talent.teachings_of_the_monastery.enabled || buff.teachings_of_the_monastery.up & active_enemies <= 3",
["action"] = "blackout_kick",
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["action"] = "spinning_crane_kick",
["enabled"] = true,
},
},
["st"] = {
{
["action"] = "thunder_focus_tea",
["enabled"] = true,
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.teachings_of_the_monastery.enabled || buff.teachings_of_the_monastery.up & cooldown.rising_sun_kick.remains > gcd.max",
["action"] = "blackout_kick",
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.teachings_of_the_monastery.enabled || buff.teachings_of_the_monastery.stack < 3 || buff.teachings_of_the_monastery.remains < 2",
["action"] = "tiger_palm",
},
},
["default"] = {
{
["action"] = "spear_hand_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "distance_check",
["action"] = "roll",
},
{
["enabled"] = true,
["criteria"] = "distance_check",
["action"] = "chi_torpedo",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! settings.save_faeline || ! ( buff.ancient_concordance.up || buff.awakened_faeline.up )",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies < 3",
["list_name"] = "st",
},
},
["precombat"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
},
},
["version"] = 20230325,
["warnings"] = "The import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 3: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\nLine 6: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nImported 4 action lists.\n",
["profile"] = "actions.precombat+=/potion\nactions.precombat+=/chi_burst\nactions.precombat+=/chi_wave\n\nactions+=/spear_hand_strike\nactions+=/roll,if=distance_check\nactions+=/chi_torpedo,if=distance_check\nactions+=/use_items\nactions+=/blood_fury\nactions+=/berserking\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion\nactions+=/faeline_stomp,if=!settings.save_faeline||!(buff.ancient_concordance.up||buff.awakened_faeline.up)\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<3\n\nactions.st+=/thunder_focus_tea\nactions.st+=/rising_sun_kick\nactions.st+=/blackout_kick,if=!talent.teachings_of_the_monastery||buff.teachings_of_the_monastery.up&cooldown.rising_sun_kick.remains>gcd.max\nactions.st+=/chi_wave\nactions.st+=/chi_burst\nactions.st+=/tiger_palm,if=!talent.teachings_of_the_monastery||buff.teachings_of_the_monastery.stack<3||buff.teachings_of_the_monastery.remains<2\n\nactions.aoe+=/thunder_focus_tea,if=active_enemies<=3\nactions.aoe+=/rising_sun_kick,if=active_enemies<=3\nactions.aoe+=/blackout_kick,if=!talent.teachings_of_the_monastery||buff.teachings_of_the_monastery.up&active_enemies<=3\nactions.aoe+=/chi_wave\nactions.aoe+=/chi_burst\nactions.aoe+=/spinning_crane_kick",
["author"] = "Aikanaka",
},
["Guardian"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240127,
["author"] = "SimC",
["desc"] = "2024-01-27:  Tweak Ironfur to use max stacks setting.\n\n2023-11-11:  Incremental update.\n\n2023-11-10:  Incremental update from SimulationCraft.\n\n2023-11-07:  Further 10.2 updates.\n\n2023-11-05:  Patch 10.2.\n\n2023-07-14:  Fix a Thrash condition.\n\n2023-07-11:  Patch 10.1.5 update.\n\n2023-06-24:  Adjust Mangle/Raze in priority.\n\n2023-05-08:  Add Tier 30 weapon.\n\n2023-03-06:  Revisited if_build and catweave_bear; restored missing mitigation priority for bigger defensive CDs.  Fix vicious_cycle talent check.\n\n2023-02-25:  Updated for 'if_build' changes with tweaks to support the \"Use Maul and Raze in Ironfur Build\" option.\n\n2023-02-21:   Routine update including changes to \"Catweave\" options.",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up",
["action"] = "skull_bash",
["description"] = "Executed every time the actor is available.",
},
{
["action"] = "soothe",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["name"] = "djaruun_pillar_of_the_elder_flame",
["action"] = "djaruun_pillar_of_the_elder_flame",
["criteria"] = "dot.moonfire.ticking",
},
{
["enabled"] = true,
["criteria"] = "( ( talent.heart_of_the_wild.enabled & buff.heart_of_the_wild.up ) || ( ( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up ) & ( ! druid.catweave_bear & ! druid.owlweave_bear ) ) )",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "buff.cat_form.up & ! druid.catweave_bear || ! tanking & druid.catweave_bear & ( ! talent.tooth_and_claw.enabled || buff.tooth_and_claw.remains > 1.5 ) & ( buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & cooldown.thrash_bear.remains > 0 & cooldown.mangle.remains > 0 & dot.moonfire.remains >= 2 || buff.cat_form.up & energy > 25 || buff.heart_of_the_wild.up & energy > 90 )",
["list_name"] = "catweave",
},
{
["enabled"] = true,
["criteria"] = "! buff.bear_form.up",
["action"] = "bear_form",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "mitigation",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "bear",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.thorns_of_iron.enabled & talent.reinforced_fur.enabled",
["var_name"] = "if_build",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! ( talent.thorns_of_iron.enabled & talent.reinforced_fur.enabled ) || settings.maul_anyway",
["var_name"] = "maul_build",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up",
["action"] = "mark_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "talent.heart_of_the_wild.enabled & ( druid.catweave_bear & buff.cat_form.up || druid.owlweave_bear & buff.moonkin_form.up )",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "buff.cat_form.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "! buff.any_form.up",
["action"] = "bear_form",
},
},
["mitigation"] = {
{
["enabled"] = true,
["criteria"] = "tanking & ! variable.if_build & incoming_damage_5s > ironfur_damage_threshold & buff.ironfur.remains < 3 * haste",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 65",
["action"] = "regrowth",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 65",
["action"] = "renewal",
},
{
["enabled"] = true,
["criteria"] = "tanking & health.pct < 65",
["action"] = "frenzied_regeneration",
},
{
["enabled"] = true,
["criteria"] = "tanking & health.pct < 75 & incoming_damage_5s > 0.1 * health.max",
["action"] = "barkskin",
},
{
["enabled"] = true,
["criteria"] = "buff.survival_instincts.down & buff.barkskin.down & health.pct < 60 & incoming_damage_5s > 0.25 * health.max",
["action"] = "survival_instincts",
},
},
["bear"] = {
{
["enabled"] = true,
["criteria"] = "! buff.bear_form.up",
["action"] = "bear_form",
},
{
["enabled"] = true,
["criteria"] = "( ( ( ! ticking & target.time_to_die > 12 ) || ( refreshable & target.time_to_die > 12 ) ) & active_enemies < 7 & talent.fury_of_nature.enabled ) || ( ( ( ! ticking & target.time_to_die > 12 ) || ( refreshable & target.time_to_die > 12 ) ) & active_enemies < 4 & ! talent.fury_of_nature.enabled )",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable || ( dot.thrash_bear.stack < 5 & talent.flashing_claws.rank = 2 || dot.thrash_bear.stack < 4 & talent.flashing_claws.rank = 1 || dot.thrash_bear.stack < 3 & ! talent.flashing_claws.enabled )",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains > 8",
["action"] = "bristling_fur",
},
{
["enabled"] = true,
["criteria"] = "buff.bear_form.up",
["action"] = "barkskin",
},
{
["action"] = "convoke_the_spirits",
["enabled"] = true,
},
{
["action"] = "berserk",
["enabled"] = true,
},
{
["action"] = "incarnation",
["enabled"] = true,
},
{
["action"] = "lunar_beam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( buff.incarnation_guardian_of_ursoc.down & cooldown.incarnation_guardian_of_ursoc.remains > 60 ) || buff.berserk_bear.down ) & rage > 75 & ( ! talent.convoke_the_spirits.enabled ) || ( buff.incarnation_guardian_of_ursoc.up || buff.berserk_bear.up ) & rage > 75 & ( ! talent.convoke_the_spirits.enabled ) || ( talent.convoke_the_spirits.enabled ) & rage > 75",
["action"] = "rage_of_the_sleeper",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up )",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "( buff.rage_of_the_sleeper.up & buff.tooth_and_claw.stack > 0 & ( active_enemies = 1 & talent.raze.enabled || active_enemies <= 6 & ! talent.raze.enabled ) & variable.if_build = 0 )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "buff.rage_of_the_sleeper.up & buff.tooth_and_claw.stack > 0 & variable.if_build = 0 & active_enemies > 1",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "( ( ( buff.incarnation.up || buff.berserk_bear.up ) & ( active_enemies <= 5 & ! talent.raze.enabled || active_enemies = 1 & talent.raze.enabled ) & ( buff.tooth_and_claw.stack >= 1 ) ) & variable.if_build = 0 ) & ( buff.rage_of_the_sleeper.up || cooldown.rage_of_the_sleeper.remains > 3 )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( buff.incarnation.up || buff.berserk_bear.up ) & ( variable.if_build = 0 ) & active_enemies > 1 & ( buff.rage_of_the_sleeper.up || cooldown.rage_of_the_sleeper.remains > 3 )",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "( rage > 50 & tanking & variable.if_build = 0 & ! buff.rage_of_the_sleeper.up & cooldown.rage_of_the_sleeper.remains > 3 & ! buff.blazing_thorns.up || rage > 90 & variable.if_build = 0 & ! buff.rage_of_the_sleeper.up & cooldown.rage_of_the_sleeper.remains > 3 & ! buff.blazing_thorns.up || ! debuff.tooth_and_claw_debuff.up )",
["action"] = "ironfur",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( rage > 50 & ! tanking & variable.if_build = 0 & buff.rage_of_the_sleeper.up & ! buff.blazing_thorns.up || rage > 90 & variable.if_build = 0 & buff.rage_of_the_sleeper.up & ! buff.blazing_thorns.up )",
["action"] = "ironfur",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( rage > 90 & variable.if_build = 1 & cooldown.rage_of_the_sleeper.remains > 3 || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & cooldown.rage_of_the_sleeper.remains > 3 || rage > 90 & variable.if_build = 1 & buff.rage_of_the_sleeper.up || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & buff.rage_of_the_sleeper.up )",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.tooth_and_claw.enabled || rage.deficit < 20 || buff.tooth_and_claw.up ) & active_enemies > 1 & ( ! talent.rage_of_the_sleeper.enabled || buff.rage_of_the_sleeper.up || cooldown.rage_of_the_sleeper.remains > 3 )",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 0 & active_enemies > 1 & ( ! talent.rage_of_the_sleeper.enabled || buff.rage_of_the_sleeper.up || cooldown.rage_of_the_sleeper.remains > 3 )",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "buff.gore.up & active_enemies < 11 || buff.vicious_cycle_mangle.stack = 3",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.tooth_and_claw.enabled || rage.deficit < 20 || buff.tooth_and_claw.up ) & ( active_enemies = 1 & talent.raze.enabled || active_enemies <= 5 & ! talent.raze.enabled ) & ( ! talent.rage_of_the_sleeper.enabled || buff.rage_of_the_sleeper.up || cooldown.rage_of_the_sleeper.remains > 3 )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies = 1 & talent.raze.enabled || active_enemies <= 5 & ! talent.raze.enabled ) & variable.if_build = 0 & ( ! talent.rage_of_the_sleeper.enabled || buff.rage_of_the_sleeper.up || cooldown.rage_of_the_sleeper.remains > 3 )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 5",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "rage.deficit > 10 & settings.mangle_more",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & active_enemies >= 11",
["action"] = "swipe_bear",
},
{
["enabled"] = true,
["criteria"] = "( buff.incarnation.up & active_enemies <= 4 ) || ( buff.incarnation.up & talent.soul_of_the_forest.enabled & active_enemies <= 5 ) || ( ( rage < 90 ) & active_enemies < 11 ) || ( ( rage < 85 ) & active_enemies < 11 & talent.soul_of_the_forest.enabled )",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "dot.thrash_bear.stack > 2",
["action"] = "pulverize",
},
{
["action"] = "thrash_bear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.galactic_guardian.up",
["action"] = "moonfire",
},
{
["action"] = "swipe_bear",
["enabled"] = true,
},
},
["catweave"] = {
{
["enabled"] = true,
["criteria"] = "! buff.heart_of_the_wild.up",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "buff.prowl.up",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "! dot.rake.ticking & combo_points < 5",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "! dot.rip.ticking & combo_points >= 3",
["action"] = "rip",
},
{
["action"] = "convoke_the_spirits",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_points >= 4 & energy > 50",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["criteria"] = "combo_points < 5 & spell_targets.swipe_cat > 1",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "combo_points < 5",
["action"] = "shred",
},
},
},
["version"] = 20240127,
["warnings"] = "The import for 'default' required some automated changes.\nLine 7: Converted 'talent.tooth_and_claw' to 'talent.tooth_and_claw.enabled' (1x).\n\nThe import for 'bear' required some automated changes.\nLine 14: Converted 'talent.raze' to 'talent.raze.enabled' (1x).\nLine 14: Converted 'talent.raze' to 'talent.raze.enabled' (1x).\nLine 19: Converted 'talent.tooth_and_claw' to 'talent.tooth_and_claw.enabled' (1x).\nLine 19: Converted 'talent.rage_of_the_sleeper' to 'talent.rage_of_the_sleeper.enabled' (1x).\nLine 20: Converted 'talent.rage_of_the_sleeper' to 'talent.rage_of_the_sleeper.enabled' (1x).\nLine 22: Converted 'talent.tooth_and_claw' to 'talent.tooth_and_claw.enabled' (1x).\nLine 22: Converted 'talent.rage_of_the_sleeper' to 'talent.rage_of_the_sleeper.enabled' (1x).\nLine 23: Converted 'talent.rage_of_the_sleeper' to 'talent.rage_of_the_sleeper.enabled' (1x).\n\nImported 5 action lists.\n",
["profile"] = "actions.precombat+=/variable,name=if_build,value=talent.thorns_of_iron.enabled&talent.reinforced_fur.enabled\nactions.precombat+=/variable,name=maul_build,value=!(talent.thorns_of_iron.enabled&talent.reinforced_fur.enabled)||settings.maul_anyway\nactions.precombat+=/mark_of_the_wild,if=!buff.prowl.up\nactions.precombat+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&(druid.catweave_bear&buff.cat_form.up||druid.owlweave_bear&buff.moonkin_form.up)\nactions.precombat+=/prowl,if=buff.cat_form.up\nactions.precombat+=/bear_form,if=!buff.any_form.up\n\n# Executed every time the actor is available.\nactions=skull_bash,if=!buff.prowl.up\nactions+=/soothe\nactions+=/use_item,slot=trinket1\nactions+=/use_item,slot=trinket2\nactions+=/use_item,name=djaruun_pillar_of_the_elder_flame,if=dot.moonfire.ticking\nactions+=/potion,if=((talent.heart_of_the_wild.enabled&buff.heart_of_the_wild.up)||((buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)&(!druid.catweave_bear&!druid.owlweave_bear)))\nactions+=/run_action_list,name=catweave,if=buff.cat_form.up&!druid.catweave_bear||!tanking&druid.catweave_bear&(!talent.tooth_and_claw||buff.tooth_and_claw.remains>1.5)&(buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&cooldown.thrash_bear.remains>0&cooldown.mangle.remains>0&dot.moonfire.remains>=2||buff.cat_form.up&energy>25||buff.heart_of_the_wild.up&energy>90)\nactions+=/bear_form,if=!buff.bear_form.up\nactions+=/call_action_list,name=mitigation\nactions+=/run_action_list,name=bear\n\nactions.bear+=/bear_form,if=!buff.bear_form.up\nactions.bear+=/moonfire,cycle_targets=1,if=(((!ticking&target.time_to_die>12)||(refreshable&target.time_to_die>12))&active_enemies<7&talent.fury_of_nature.enabled)||(((!ticking&target.time_to_die>12)||(refreshable&target.time_to_die>12))&active_enemies<4&!talent.fury_of_nature.enabled)\nactions.bear+=/thrash_bear,if=refreshable||(dot.thrash_bear.stack<5&talent.flashing_claws.rank=2||dot.thrash_bear.stack<4&talent.flashing_claws.rank=1||dot.thrash_bear.stack<3&!talent.flashing_claws.enabled)\nactions.bear+=/bristling_fur,if=cooldown.rage_of_the_sleeper.remains>8\nactions.bear+=/barkskin,if=buff.bear_form.up\nactions.bear+=/convoke_the_spirits\nactions.bear+=/berserk_bear\nactions.bear+=/incarnation\nactions.bear+=/lunar_beam\nactions.bear+=/rage_of_the_sleeper,if=((buff.incarnation_guardian_of_ursoc.down&cooldown.incarnation_guardian_of_ursoc.remains>60)||buff.berserk_bear.down)&rage>75&(!talent.convoke_the_spirits.enabled)||(buff.incarnation_guardian_of_ursoc.up||buff.berserk_bear.up)&rage>75&(!talent.convoke_the_spirits.enabled)||(talent.convoke_the_spirits.enabled)&rage>75\nactions.bear+=/berserking,if=(buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)\nactions.bear+=/maul,if=(buff.rage_of_the_sleeper.up&buff.tooth_and_claw.stack>0&(active_enemies=1&talent.raze.enabled||active_enemies<=6&!talent.raze.enabled)&variable.if_build=0)\nactions.bear+=/raze,if=buff.rage_of_the_sleeper.up&buff.tooth_and_claw.stack>0&variable.if_build=0&active_enemies>1\nactions.bear+=/maul,if=(((buff.incarnation.up||buff.berserk_bear.up)&(active_enemies<=5&!talent.raze||active_enemies=1&talent.raze)&(buff.tooth_and_claw.stack>=1))&variable.if_build=0)&(buff.rage_of_the_sleeper.up||cooldown.rage_of_the_sleeper.remains>3)\nactions.bear+=/raze,if=(buff.incarnation.up||buff.berserk_bear.up)&(variable.if_build=0)&active_enemies>1&(buff.rage_of_the_sleeper.up||cooldown.rage_of_the_sleeper.remains>3)\nactions.bear+=/ironfur,cycle_targets=1,if=(rage>50&tanking&variable.if_build=0&!buff.rage_of_the_sleeper.up&cooldown.rage_of_the_sleeper.remains>3&!buff.blazing_thorns.up||rage>90&variable.if_build=0&!buff.rage_of_the_sleeper.up&cooldown.rage_of_the_sleeper.remains>3&!buff.blazing_thorns.up||!debuff.tooth_and_claw_debuff.up)\nactions.bear+=/ironfur,cycle_targets=1,if=(rage>50&!tanking&variable.if_build=0&buff.rage_of_the_sleeper.up&!buff.blazing_thorns.up||rage>90&variable.if_build=0&buff.rage_of_the_sleeper.up&!buff.blazing_thorns.up)\nactions.bear+=/ironfur,if=(rage>90&variable.if_build=1&cooldown.rage_of_the_sleeper.remains>3||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&cooldown.rage_of_the_sleeper.remains>3||rage>90&variable.if_build=1&buff.rage_of_the_sleeper.up||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&buff.rage_of_the_sleeper.up)\nactions.bear+=/raze,if=(!talent.tooth_and_claw||rage.deficit<20||buff.tooth_and_claw.up)&active_enemies>1&(!talent.rage_of_the_sleeper||buff.rage_of_the_sleeper.up||cooldown.rage_of_the_sleeper.remains>3)\nactions.bear+=/raze,if=variable.if_build=0&active_enemies>1&(!talent.rage_of_the_sleeper||buff.rage_of_the_sleeper.up||cooldown.rage_of_the_sleeper.remains>3)\nactions.bear+=/mangle,if=buff.gore.up&active_enemies<11||buff.vicious_cycle_mangle.stack=3\nactions.bear+=/maul,if=(!talent.tooth_and_claw||rage.deficit<20||buff.tooth_and_claw.up)&(active_enemies=1&talent.raze.enabled||active_enemies<=5&!talent.raze.enabled)&(!talent.rage_of_the_sleeper||buff.rage_of_the_sleeper.up||cooldown.rage_of_the_sleeper.remains>3)\nactions.bear+=/maul,if=(active_enemies=1&talent.raze.enabled||active_enemies<=5&!talent.raze.enabled)&variable.if_build=0&(!talent.rage_of_the_sleeper||buff.rage_of_the_sleeper.up||cooldown.rage_of_the_sleeper.remains>3)\nactions.bear+=/thrash_bear,if=active_enemies>=5\nactions.bear+=/mangle,if=rage.deficit>10&settings.mangle_more\nactions.bear+=/swipe,if=buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&active_enemies>=11\nactions.bear+=/mangle,if=(buff.incarnation.up&active_enemies<=4)||(buff.incarnation.up&talent.soul_of_the_forest.enabled&active_enemies<=5)||((rage<90)&active_enemies<11)||((rage<85)&active_enemies<11&talent.soul_of_the_forest.enabled)\nactions.bear+=/thrash_bear,if=active_enemies>1\nactions.bear+=/pulverize,if=dot.thrash_bear.stack>2\nactions.bear+=/thrash_bear\nactions.bear+=/moonfire,if=buff.galactic_guardian.up\nactions.bear+=/swipe_bear\n\nactions.catweave=heart_of_the_wild,if=!buff.heart_of_the_wild.up\nactions.catweave+=/cat_form,if=!buff.cat_form.up\nactions.catweave+=/rake,if=buff.prowl.up\nactions.catweave+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up\nactions.catweave+=/rake,if=!dot.rake.ticking&combo_points<5\nactions.catweave+=/rip,if=!dot.rip.ticking&combo_points>=3\nactions.catweave+=/convoke_the_spirits\nactions.catweave+=/ferocious_bite,if=combo_points>=4&energy>50\nactions.catweave+=/swipe_cat,if=combo_points<5&spell_targets.swipe_cat>1\nactions.catweave+=/shred,if=combo_points<5\n\nactions.mitigation=ironfur,if=tanking&!variable.if_build&incoming_damage_5s>ironfur_damage_threshold&buff.ironfur.remains<3*haste\nactions.mitigation+=/regrowth,if=health.pct<65\nactions.mitigation+=/renewal,if=health.pct<65\nactions.mitigation+=/frenzied_regeneration,if=tanking&health.pct<65\nactions.mitigation+=/barkskin,if=tanking&health.pct<75&incoming_damage_5s>0.1*health.max\nactions.mitigation+=/survival_instincts,if=buff.survival_instincts.down&buff.barkskin.down&health.pct<60&incoming_damage_5s>0.25*health.max",
["spec"] = 104,
},
["Frost Mage"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240729,
["author"] = "SimC",
["desc"] = "2024-07-29: The War Within",
["lists"] = {
["precombat"] = {
{
["action"] = "arcane_intellect",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.ice_caller.enabled & ! talent.fractured_frost.enabled || active_enemies >= 3",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 2",
["action"] = "frostbolt",
},
},
["movement"] = {
{
["enabled"] = true,
["criteria"] = "movement.distance > 10",
["action"] = "blink",
},
{
["enabled"] = true,
["criteria"] = "buff.ice_floes.down",
["action"] = "ice_floes",
},
{
["action"] = "ice_nova",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "mana.pct > 30 & active_enemies >= 2",
["action"] = "arcane_explosion",
},
{
["action"] = "fire_blast",
["enabled"] = true,
},
{
["action"] = "ice_lance",
["enabled"] = true,
},
},
["cleave"] = {
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.flurry || prev_gcd.1.cone_of_cold",
["action"] = "comet_storm",
},
{
["enabled"] = true,
["criteria"] = "cooldown_react & ( ( prev_gcd.1.frostbolt & buff.icicles.stack >= 3 ) || prev_gcd.1.glacial_spike || ( buff.icicles.stack >= 3 & buff.icicles.stack < 5 & charges_fractional = 2 ) )",
["action"] = "flurry",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.glacial_spike.enabled & debuff.winters_chill.down & buff.icicles.stack = 4 & buff.fingers_of_frost.up",
["action"] = "ice_lance",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "remaining_winters_chill = 1",
["action"] = "ray_of_frost",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.stack = 5 & ( action.flurry.cooldown_react || remaining_winters_chill )",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.stack < 2 & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.remains )",
["action"] = "frozen_orb",
},
{
["enabled"] = true,
["criteria"] = "talent.coldest_snap.enabled & cooldown.comet_storm.remains > 10 & cooldown.frozen_orb.remains > 10 & remaining_winters_chill = 0 & active_enemies >= 3",
["action"] = "cone_of_cold",
},
{
["enabled"] = true,
["criteria"] = "cooldown.frozen_orb.remains > 10 & ( ! talent.comet_storm.enabled || cooldown.comet_storm.remains > 10 ) & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.remains > 10 ) || cooldown.icy_veins.remains < 20",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.stack = 5",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.up & ! prev_gcd.1.glacial_spike || remaining_winters_chill",
["action"] = "ice_lance",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4",
["action"] = "ice_nova",
},
{
["action"] = "frostbolt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "movement",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "talent.coldest_snap.enabled & ( prev_gcd.1.comet_storm || prev_gcd.1.frozen_orb & ! talent.comet_storm.enabled )",
["action"] = "cone_of_cold",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.glacial_spike || ! freezable",
["action"] = "frozen_orb",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.glacial_spike || ! freezable",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "buff.icy_veins.up & ( buff.deaths_chill.stack < 9 || buff.deaths_chill.stack = 9 & ! action.frostbolt.in_flight ) & buff.icy_veins.remains > 8 & talent.deaths_chill.enabled",
["action"] = "frostbolt",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.glacial_spike & ( ! talent.coldest_snap.enabled || cooldown.cone_of_cold.ready & cooldown.frozen_orb.remains > 25 || cooldown.cone_of_cold.remains > 20 )",
["action"] = "comet_storm",
},
{
["enabled"] = true,
["criteria"] = "freezable & debuff.frozen.down & ( ! talent.glacial_spike.enabled || prev_gcd.1.glacial_spike )",
["action"] = "freeze",
},
{
["enabled"] = true,
["criteria"] = "freezable & ! prev_off_gcd.freeze & ( prev_gcd.1.glacial_spike )",
["action"] = "ice_nova",
},
{
["enabled"] = true,
["criteria"] = "freezable & ! prev_off_gcd.freeze & ( prev_gcd.1.glacial_spike & ! remaining_winters_chill )",
["action"] = "frost_nova",
},
{
["enabled"] = true,
["criteria"] = "cooldown.comet_storm.remains > 10",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "cooldown_react & ! debuff.winters_chill.remains & buff.icicles.stack = 4 & talent.glacial_spike.enabled & ! freezable",
["action"] = "flurry",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.stack = 5 & cooldown.blizzard.remains > gcd.max",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "( freezable || ! talent.glacial_spike.enabled ) & cooldown_react & ! debuff.winters_chill.remains & ( buff.brain_freeze.up || ! buff.fingers_of_frost.up )",
["action"] = "flurry",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.up || debuff.frozen.remains > travel_time || remaining_winters_chill",
["action"] = "ice_lance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4 & ( ! talent.glacial_spike.enabled || ! freezable )",
["action"] = "ice_nova",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 7",
["action"] = "dragons_breath",
},
{
["enabled"] = true,
["criteria"] = "mana.pct > 30 & active_enemies >= 7",
["action"] = "arcane_explosion",
},
{
["action"] = "frostbolt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "movement",
},
},
["cds"] = {
{
["enabled"] = true,
["name"] = "spoils_of_neltharus",
["action"] = "spoils_of_neltharus",
["criteria"] = "buff.spoils_of_neltharus_mastery.up || buff.spoils_of_neltharus_haste.up & buff.bloodlust.down || buff.spoils_of_neltharus_vers.up & ( buff.bloodlust.up )",
},
{
["enabled"] = true,
["criteria"] = "prev_off_gcd.icy_veins || boss & fight_remains < 60",
["action"] = "potion",
},
{
["enabled"] = true,
["name"] = "dreambinder_loom_of_the_great_cycle",
["action"] = "dreambinder_loom_of_the_great_cycle",
["criteria"] = "( equipped.nymues_unraveling_spindle & prev_gcd.1.nymues_unraveling_spindle ) || fight_remains > 2",
},
{
["enabled"] = true,
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
["criteria"] = "time > 5 & ! prev_gcd.1.flurry",
},
{
["enabled"] = true,
["criteria"] = "time < 0.1 & active_enemies <= 2",
["action"] = "flurry",
},
{
["action"] = "icy_veins",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.flurry || prev_gcd.1.cone_of_cold",
["action"] = "comet_storm",
},
{
["enabled"] = true,
["criteria"] = "cooldown_react & remaining_winters_chill = 0 & debuff.winters_chill.down & ( ( prev_gcd.1.frostbolt & buff.icicles.stack >= 3 || prev_gcd.1.frostbolt & buff.brain_freeze.up ) || prev_gcd.1.glacial_spike || talent.glacial_spike.enabled & buff.icicles.stack = 4 & ! buff.fingers_of_frost.up )",
["action"] = "flurry",
},
{
["enabled"] = true,
["criteria"] = "talent.glacial_spike.enabled & debuff.winters_chill.down & buff.icicles.stack = 4 & buff.fingers_of_frost.up",
["action"] = "ice_lance",
},
{
["enabled"] = true,
["criteria"] = "remaining_winters_chill = 1",
["action"] = "ray_of_frost",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.stack = 5 & ( action.flurry.cooldown_react || remaining_winters_chill )",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.stack < 2 & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.remains )",
["action"] = "frozen_orb",
},
{
["enabled"] = true,
["criteria"] = "talent.coldest_snap.enabled & cooldown.comet_storm.remains > 10 & cooldown.frozen_orb.remains > 10 & remaining_winters_chill = 0 & active_enemies >= 3",
["action"] = "cone_of_cold",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.ice_caller.enabled & talent.freezing_rain.enabled & ( ! talent.splintering_cold.enabled & ! talent.ray_of_frost.enabled || buff.freezing_rain.up || active_enemies >= 3 )",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "( buff.icy_veins.down || ! talent.deaths_chill.enabled ) & cooldown.frozen_orb.remains > 10 & ( ! talent.comet_storm.enabled || cooldown.comet_storm.remains > 10 ) & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.remains > 10 ) || cooldown.icy_veins.remains < 20",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.stack = 5",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.up & ! prev_gcd.1.glacial_spike || remaining_winters_chill",
["action"] = "ice_lance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4",
["action"] = "ice_nova",
},
{
["action"] = "frostbolt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "movement",
},
},
["default"] = {
{
["action"] = "counterspell",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 7 & ! set_bonus.tier30_2pc || active_enemies >= 4 & talent.ice_caller.enabled",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 2 & active_enemies <= 3",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "st",
},
},
},
["version"] = 20240729,
["warnings"] = "The import for 'default' required some automated changes.\nLine 3: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\nLine 2: Converted 'talent.fractured_frost' to 'talent.fractured_frost.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 1: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 4: Converted 'talent.deaths_chill' to 'talent.deaths_chill.enabled' (1x).\nLine 5: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 6: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 10: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 12: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 14: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 2: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 3: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 6: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 7: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 8: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\nLine 8: Converted 'talent.freezing_rain' to 'talent.freezing_rain.enabled' (1x).\nLine 8: Converted 'talent.splintering_cold' to 'talent.splintering_cold.enabled' (1x).\nLine 8: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 9: Converted 'talent.deaths_chill' to 'talent.deaths_chill.enabled' (1x).\nLine 9: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 9: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 3: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 6: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 7: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 8: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 8: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\n\nThis profile is missing support for generic trinkets.  It is recommended that every priority includes either:\n - [Use Items], which includes any trinkets not explicitly included in the priority; or\n - [Trinket 1] and [Trinket 2], which will recommend the trinket for the numbered slot.\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/arcane_intellect\nactions.precombat+=/blizzard,if=active_enemies>=2&talent.ice_caller&!talent.fractured_frost||active_enemies>=3\nactions.precombat+=/frostbolt,if=active_enemies<=2\n\nactions+=/counterspell\nactions+=/call_action_list,name=cds\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>=7&!set_bonus.tier30_2pc||active_enemies>=4&talent.ice_caller\nactions+=/run_action_list,name=cleave,strict=1,if=active_enemies>=2&active_enemies<=3\nactions+=/run_action_list,name=st\n\nactions.aoe+=/cone_of_cold,if=talent.coldest_snap&(prev_gcd.1.comet_storm||prev_gcd.1.frozen_orb&!talent.comet_storm)\nactions.aoe+=/frozen_orb,if=!prev_gcd.1.glacial_spike||!freezable\nactions.aoe+=/blizzard,if=!prev_gcd.1.glacial_spike||!freezable\nactions.aoe+=/frostbolt,if=buff.icy_veins.up&(buff.deaths_chill.stack<9||buff.deaths_chill.stack=9&!action.frostbolt.in_flight)&buff.icy_veins.remains>8&talent.deaths_chill\nactions.aoe+=/comet_storm,if=!prev_gcd.1.glacial_spike&(!talent.coldest_snap||cooldown.cone_of_cold.ready&cooldown.frozen_orb.remains>25||cooldown.cone_of_cold.remains>20)\nactions.aoe+=/freeze,if=freezable&debuff.frozen.down&(!talent.glacial_spike||prev_gcd.1.glacial_spike)\nactions.aoe+=/ice_nova,if=freezable&!prev_off_gcd.freeze&(prev_gcd.1.glacial_spike)\nactions.aoe+=/frost_nova,if=freezable&!prev_off_gcd.freeze&(prev_gcd.1.glacial_spike&!remaining_winters_chill)\nactions.aoe+=/shifting_power,if=cooldown.comet_storm.remains>10\nactions.aoe+=/flurry,if=cooldown_react&!debuff.winters_chill.remains&buff.icicles.stack=4&talent.glacial_spike&!freezable\nactions.aoe+=/glacial_spike,if=buff.icicles.stack=5&cooldown.blizzard.remains>gcd.max\nactions.aoe+=/flurry,if=(freezable||!talent.glacial_spike)&cooldown_react&!debuff.winters_chill.remains&(buff.brain_freeze.up||!buff.fingers_of_frost.up)\nactions.aoe+=/ice_lance,if=buff.fingers_of_frost.up||debuff.frozen.remains>travel_time||remaining_winters_chill\nactions.aoe+=/ice_nova,if=active_enemies>=4&(!talent.glacial_spike||!freezable)\nactions.aoe+=/dragons_breath,if=active_enemies>=7\nactions.aoe+=/arcane_explosion,if=mana.pct>30&active_enemies>=7\nactions.aoe+=/frostbolt\nactions.aoe+=/call_action_list,name=movement\n\nactions.cds+=/use_item,name=spoils_of_neltharus,if=buff.spoils_of_neltharus_mastery.up||buff.spoils_of_neltharus_haste.up&buff.bloodlust.down||buff.spoils_of_neltharus_vers.up&(buff.bloodlust.up)\nactions.cds+=/potion,if=prev_off_gcd.icy_veins||boss&fight_remains<60\nactions.cds+=/use_item,name=dreambinder_loom_of_the_great_cycle,if=(equipped.nymues_unraveling_spindle&prev_gcd.1.nymues_unraveling_spindle)||fight_remains>2\nactions.cds+=/use_item,name=belorrelos_the_suncaller,if=time>5&!prev_gcd.1.flurry\nactions.cds+=/flurry,if=time<0.1&active_enemies<=2\nactions.cds+=/icy_veins\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.power_infusion.down\n## actions.cds+=/invoke_external_buff,name=blessing_of_summer,if=buff.blessing_of_summer.down\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/lights_judgment\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\n\nactions.cleave+=/comet_storm,if=prev_gcd.1.flurry||prev_gcd.1.cone_of_cold\nactions.cleave+=/flurry,cycle_targets=1,if=cooldown_react&((prev_gcd.1.frostbolt&buff.icicles.stack>=3)||prev_gcd.1.glacial_spike||(buff.icicles.stack>=3&buff.icicles.stack<5&charges_fractional=2))\nactions.cleave+=/ice_lance,cycle_targets=1,if=talent.glacial_spike&debuff.winters_chill.down&buff.icicles.stack=4&buff.fingers_of_frost.up\nactions.cleave+=/ray_of_frost,cycle_targets=1,if=remaining_winters_chill=1\nactions.cleave+=/glacial_spike,if=buff.icicles.stack=5&(action.flurry.cooldown_react||remaining_winters_chill)\nactions.cleave+=/frozen_orb,if=buff.fingers_of_frost.stack<2&(!talent.ray_of_frost||cooldown.ray_of_frost.remains)\nactions.cleave+=/cone_of_cold,if=talent.coldest_snap&cooldown.comet_storm.remains>10&cooldown.frozen_orb.remains>10&remaining_winters_chill=0&active_enemies>=3\nactions.cleave+=/shifting_power,if=cooldown.frozen_orb.remains>10&(!talent.comet_storm||cooldown.comet_storm.remains>10)&(!talent.ray_of_frost||cooldown.ray_of_frost.remains>10)||cooldown.icy_veins.remains<20\nactions.cleave+=/glacial_spike,if=buff.icicles.stack=5\nactions.cleave+=/ice_lance,cycle_targets=1,if=buff.fingers_of_frost.up&!prev_gcd.1.glacial_spike||remaining_winters_chill\nactions.cleave+=/ice_nova,if=active_enemies>=4\nactions.cleave+=/frostbolt\nactions.cleave+=/call_action_list,name=movement\n\nactions.movement+=/any_blink,if=movement.distance>10\nactions.movement+=/ice_floes,if=buff.ice_floes.down\nactions.movement+=/ice_nova\nactions.movement+=/arcane_explosion,if=mana.pct>30&active_enemies>=2\nactions.movement+=/fire_blast\nactions.movement+=/ice_lance\n\nactions.st+=/comet_storm,if=prev_gcd.1.flurry||prev_gcd.1.cone_of_cold\nactions.st+=/flurry,if=cooldown_react&remaining_winters_chill=0&debuff.winters_chill.down&((prev_gcd.1.frostbolt&buff.icicles.stack>=3||prev_gcd.1.frostbolt&buff.brain_freeze.up)||prev_gcd.1.glacial_spike||talent.glacial_spike&buff.icicles.stack=4&!buff.fingers_of_frost.up)\nactions.st+=/ice_lance,if=talent.glacial_spike&debuff.winters_chill.down&buff.icicles.stack=4&buff.fingers_of_frost.up\nactions.st+=/ray_of_frost,if=remaining_winters_chill=1\nactions.st+=/glacial_spike,if=buff.icicles.stack=5&(action.flurry.cooldown_react||remaining_winters_chill)\nactions.st+=/frozen_orb,if=buff.fingers_of_frost.stack<2&(!talent.ray_of_frost||cooldown.ray_of_frost.remains)\nactions.st+=/cone_of_cold,if=talent.coldest_snap&cooldown.comet_storm.remains>10&cooldown.frozen_orb.remains>10&remaining_winters_chill=0&active_enemies>=3\nactions.st+=/blizzard,if=active_enemies>=2&talent.ice_caller&talent.freezing_rain&(!talent.splintering_cold&!talent.ray_of_frost||buff.freezing_rain.up||active_enemies>=3)\nactions.st+=/shifting_power,if=(buff.icy_veins.down||!talent.deaths_chill)&cooldown.frozen_orb.remains>10&(!talent.comet_storm||cooldown.comet_storm.remains>10)&(!talent.ray_of_frost||cooldown.ray_of_frost.remains>10)||cooldown.icy_veins.remains<20\nactions.st+=/glacial_spike,if=buff.icicles.stack=5\nactions.st+=/ice_lance,if=buff.fingers_of_frost.up&!prev_gcd.1.glacial_spike||remaining_winters_chill\nactions.st+=/ice_nova,if=active_enemies>=4\nactions.st+=/frostbolt\nactions.st+=/call_action_list,name=movement",
["spec"] = 64,
},
["Fire"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240805,
["author"] = "SimC",
["desc"] = "2024-07-29: The War Within",
["lists"] = {
["combustion_timing"] = {
{
["enabled"] = true,
["op"] = "set",
["description"] = "Helper variable that contains the actual estimated time that the next Combustion will be ready.",
["action"] = "variable",
["value"] = "cooldown.combustion.remains_expected",
["use_off_gcd"] = 1,
["var_name"] = "combustion_ready_time",
["use_while_casting"] = 1,
},
{
["enabled"] = true,
["op"] = "set",
["description"] = "The cast time of the spell that will be precast into Combustion.",
["action"] = "variable",
["value"] = "action.fireball.cast_time * ( active_enemies < variable.combustion_flamestrike ) + action.flamestrike.cast_time * ( active_enemies >= variable.combustion_flamestrike ) - variable.combustion_cast_remains",
["use_off_gcd"] = 1,
["var_name"] = "combustion_precast_time",
["use_while_casting"] = 1,
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "variable",
["use_off_gcd"] = 1,
["value"] = "variable.combustion_ready_time",
["var_name"] = "time_to_combustion",
["op"] = "set",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "variable",
["op"] = "max",
["criteria"] = "talent.firestarter.enabled & ! variable.firestarter_combustion",
["use_off_gcd"] = 1,
["value"] = "firestarter.remains",
["description"] = "Delay Combustion for after Firestarter unless variable.firestarter_combustion is set.",
["var_name"] = "time_to_combustion",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "variable",
["op"] = "max",
["criteria"] = "talent.sun_kings_blessing.enabled & firestarter.active & buff.fury_of_the_sun_king.down",
["use_off_gcd"] = 1,
["value"] = "( buff.sun_kings_blessing.max_stack - buff.sun_kings_blessing.stack ) * ( 3 * gcd.max )",
["description"] = "Delay Combustion until SKB is ready during Firestarter",
["var_name"] = "time_to_combustion",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "variable",
["op"] = "max",
["criteria"] = "equipped.gladiators_badge & cooldown.gladiators_badge_345228.remains - 20 < variable.time_to_combustion",
["use_off_gcd"] = 1,
["value"] = "cooldown.gladiators_badge_345228.remains",
["description"] = "Delay Combustion for Gladiators Badge, unless it would be delayed longer than 20 seconds.",
["var_name"] = "time_to_combustion",
},
{
["enabled"] = true,
["op"] = "max",
["action"] = "variable",
["value"] = "buff.combustion.remains",
["use_off_gcd"] = 1,
["description"] = "Delay Combustion until Combustion expires if it's up.",
["use_while_casting"] = 1,
["var_name"] = "time_to_combustion",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "variable",
["op"] = "max",
["criteria"] = "raid_event.adds.exists & raid_event.adds.count >= 3 & raid_event.adds.duration > 15",
["use_off_gcd"] = 1,
["value"] = "raid_event.adds.in",
["description"] = "Raid Events: Delay Combustion for add spawns of 3 or more adds that will last longer than 15 seconds. These values aren't necessarily optimal in all cases.",
["var_name"] = "time_to_combustion",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["description"] = "Raid Events: Always use Combustion with vulnerability raid events, override any delays listed above to make sure it gets used here.",
["op"] = "set",
["criteria"] = "raid_event.vulnerable.exists & variable.combustion_ready_time < raid_event.vulnerable.in",
["value"] = "raid_event.vulnerable.in * ! raid_event.vulnerable.up",
["use_off_gcd"] = 1,
["action"] = "variable",
["var_name"] = "time_to_combustion",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["description"] = "Use the next Combustion on cooldown if it would not be expected to delay the scheduled one or the scheduled one would happen less than 20 seconds before the fight ends.",
["op"] = "set",
["criteria"] = "variable.combustion_ready_time + cooldown.combustion.duration * ( 1 - ( 0.4 + 0.2 * talent.firestarter.enabled ) * talent.kindling.enabled ) <= variable.time_to_combustion || variable.time_to_combustion > fight_remains - 20",
["value"] = "variable.combustion_ready_time",
["use_off_gcd"] = 1,
["action"] = "variable",
["var_name"] = "time_to_combustion",
},
},
["combustion_cooldowns"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.up",
["action"] = "berserking",
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "gladiators_badge",
["effect_name"] = "gladiators_badge",
},
},
["default"] = {
{
["action"] = "counterspell",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "The combustion_timing action list schedules the approximate time when Combustion should be used and stores the number of seconds until then in variable.time_to_combustion.",
["action"] = "call_action_list",
["list_name"] = "combustion_timing",
},
{
["enabled"] = true,
["criteria"] = "buff.potion.duration > variable.time_to_combustion + buff.combustion.duration",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.time_to_combustion > cooldown.shifting_power.remains",
["description"] = "Variable that estimates whether Shifting Power will be used before the next Combustion.",
["var_name"] = "shifting_power_before_combustion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.time_to_combustion < variable.on_use_cutoff || buff.combustion.remains > variable.skb_duration & ! cooldown.item_cd_1141.remains ) & ( ( trinket.t1.has_cooldown & trinket.t1.cooldown.remains < variable.on_use_cutoff ) + ( trinket.t2.has_cooldown & trinket.t2.cooldown.remains < variable.on_use_cutoff ) > 1 )",
["var_name"] = "item_cutoff_active",
},
{
["enabled"] = true,
["action"] = "treacherous_transmitter",
["description"] = "The War Within S1 On-Use items with special use timings",
["criteria"] = "buff.combustion.remains > 10 || boss & fight_remains < 25",
["effect_name"] = "treacherous_transmitter",
},
{
["enabled"] = false,
["criteria"] = "variable.time_to_combustion < 3",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "spymasters_web",
["criteria"] = "( buff.combustion.remains > 10 & fight_remains < 60 ) || boss & fight_remains < 25",
["effect_name"] = "spymasters_web",
},
{
["enabled"] = true,
["action"] = "gladiators_badge",
["criteria"] = "variable.time_to_combustion > action_cooldown - 5",
["effect_name"] = "gladiators_badge",
},
{
["enabled"] = true,
["criteria"] = "! variable.item_cutoff_active",
["action"] = "use_items",
},
{
["enabled"] = true,
["op"] = "set",
["description"] = "Pool as many Fire Blasts as possible for Combustion.",
["action"] = "variable",
["value"] = "buff.combustion.down & action.fire_blast.charges_fractional + ( variable.time_to_combustion + action.shifting_power.full_reduction * variable.shifting_power_before_combustion ) / cooldown.fire_blast.duration - 1 < cooldown.fire_blast.max_charges + variable.overpool_fire_blasts / cooldown.fire_blast.duration - ( buff.combustion.duration / cooldown.fire_blast.duration )  % 1 & variable.time_to_combustion < fight_remains",
["use_off_gcd"] = 1,
["var_name"] = "fire_blast_pooling",
["use_while_casting"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= 0 || buff.combustion.up || variable.time_to_combustion < variable.combustion_precast_time & cooldown.combustion.remains < variable.combustion_precast_time",
["action"] = "call_action_list",
["list_name"] = "combustion_phase",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["description"] = "Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.",
["op"] = "set",
["criteria"] = "! variable.fire_blast_pooling & talent.sun_kings_blessing.enabled",
["value"] = "scorch_execute.active & action.fire_blast.full_recharge_time > 3 * gcd.max",
["use_off_gcd"] = 1,
["action"] = "variable",
["var_name"] = "fire_blast_pooling",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & ( ! improved_scorch.active || debuff.improved_scorch.remains > cast_time + action.scorch.cast_time & ! buff.fury_of_the_sun_king.up ) & ! buff.hot_streak.react & buff.hyperthermia.down & ( talent.sun_kings_blessing.enabled & cooldown.phoenix_flames.charges <= 1 || ! talent.sun_kings_blessing.enabled )",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "phoenix_pooling",
["criteria"] = "! talent.sun_kings_blessing.enabled",
["description"] = "Variable that controls Phoenix Flames usage to ensure its charges are pooled for Combustion when needed. Only use Phoenix Flames outside of Combustion when full charges can be obtained during the next Combustion.",
["value"] = "( variable.time_to_combustion + buff.combustion.duration - 5 < action.phoenix_flames.full_recharge_time + cooldown.phoenix_flames.duration - action.shifting_power.full_reduction * variable.shifting_power_before_combustion & variable.time_to_combustion < fight_remains || talent.sun_kings_blessing.enabled ) & ! talent.alexstraszas_fury.enabled",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "! variable.fire_blast_pooling & variable.time_to_combustion > 0 & active_enemies >= variable.hard_cast_flamestrike & ! firestarter.active & ! buff.hot_streak.up & ( buff.heating_up.up & action.flamestrike.execute_remains < 0.5 || charges_fractional >= 2 )",
["use_off_gcd"] = 1,
["action"] = "fire_blast",
["description"] = "When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Feel the Burn.",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & firestarter.active & variable.time_to_combustion > 0",
["action"] = "call_action_list",
["list_name"] = "firestarter_fire_blasts",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "fire_blast",
["description"] = "Avoid capping Fire Blast charges while channeling Shifting Power",
["criteria"] = "action.shifting_power.executing & ( full_recharge_time < action.shifting_power.tick_reduction || talent.sun_kings_blessing.enabled & buff.heating_up.react )",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "variable.time_to_combustion > 0 & buff.combustion.down",
["list_name"] = "standard_rotation",
},
{
["enabled"] = true,
["criteria"] = "! scorch_execute.active",
["action"] = "ice_nova",
["description"] = "Ice Nova can be used during movement when Searing Touch is not active.",
},
{
["action"] = "scorch",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "arcane_intellect",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["criteria"] = "variable.firestarter_combustion < 0",
["default"] = "-1",
["var_name"] = "firestarter_combustion",
["description"] = "APL Variable Option: This variable specifies whether Combustion should be used during Firestarter.",
["action"] = "variable",
["value"] = "talent.sun_kings_blessing.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "hot_streak_flamestrike",
["criteria"] = "variable.hot_streak_flamestrike = 0",
["description"] = "APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes outside of Combustion should be used.",
["value"] = "4 * ( talent.quickflame.enabled || talent.flame_patch.enabled ) + 999 * ( ! talent.flame_patch.enabled & ! talent.quickflame.enabled )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "hard_cast_flamestrike",
["criteria"] = "variable.hard_cast_flamestrike = 0",
["description"] = "APL Variable Option: This variable specifies the number of targets at which Hard Cast Flamestrikes outside of Combustion should be used as filler.",
["value"] = "999",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "combustion_flamestrike",
["criteria"] = "variable.combustion_flamestrike = 0",
["description"] = "APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes are used during Combustion.",
["value"] = "4 * ( talent.quickflame.enabled || talent.flame_patch.enabled ) + 999 * ( ! talent.flame_patch.enabled & ! talent.quickflame.enabled )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "skb_flamestrike",
["criteria"] = "variable.skb_flamestrike = 0",
["description"] = "APL Variable Option: This variable specifies the number of targets at which Flamestrikes should be used to consume Fury of the Sun King.",
["value"] = "3 * ( talent.quickflame.enabled || talent.flame_patch.enabled ) + 999 * ( ! talent.flame_patch.enabled & ! talent.quickflame.enabled )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "arcane_explosion",
["criteria"] = "variable.arcane_explosion = 0",
["description"] = "APL Variable Option: This variable specifies the number of targets at which Arcane Explosion outside of Combustion should be used.",
["value"] = "999",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "arcane_explosion_mana",
["default"] = "40",
["description"] = "APL Variable Option: This variable specifies the percentage of mana below which Arcane Explosion will not be used.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "combustion_shifting_power",
["criteria"] = "variable.combustion_shifting_power = 0",
["description"] = "APL Variable Option: The number of targets at which Shifting Power can used during Combustion.",
["value"] = "999",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "combustion_cast_remains",
["default"] = "0.3",
["description"] = "APL Variable Option: The time remaining on a cast when Combustion can be used in seconds.",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "overpool_fire_blasts",
["default"] = "0",
["description"] = "APL Variable Option: This variable specifies the number of seconds of Fire Blast that should be pooled past the default amount.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "6",
["description"] = "The duration of a Sun King's Blessing Combustion.",
["var_name"] = "skb_duration",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "equipped.gladiators_badge || equipped.moonlit_prism || equipped.irideus_fragment || equipped.spoils_of_neltharus || equipped.timebreaching_talon || equipped.horn_of_valor",
["description"] = "Whether a usable item used to buff Combustion is equipped.",
["var_name"] = "combustion_on_use",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "on_use_cutoff",
["criteria"] = "variable.combustion_on_use",
["description"] = "How long before Combustion should trinkets that trigger a shared category cooldown on other trinkets not be used?",
["value"] = "20",
},
{
["action"] = "mirror_image",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.hot_streak_flamestrike",
["action"] = "flamestrike",
},
{
["action"] = "pyroblast",
["enabled"] = true,
},
},
["firestarter_fire_blasts"] = {
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "fire_blast",
["description"] = "While casting Fireball or Pyroblast, convert Heating Up to a Hot Streak!",
["criteria"] = "! variable.fire_blast_pooling & ! buff.hot_streak.up & ( action.fireball.execute_remains > gcd.remains || action.pyroblast.executing ) & buff.heating_up.up + hot_streak_spells_in_flight = 1 & ( cooldown.shifting_power.ready || charges > 1 || buff.feel_the_burn.remains < 2 * gcd.max )",
},
{
["enabled"] = true,
["criteria"] = "! variable.fire_blast_pooling & buff.heating_up.react + hot_streak_spells_in_flight = 1 & ( talent.feel_the_burn.enabled & buff.feel_the_burn.remains < gcd.remains || cooldown.shifting_power.ready ) & time > 0",
["use_off_gcd"] = 1,
["action"] = "fire_blast",
["description"] = "If not casting anything, use Fire Blast to trigger Hot Streak! only if Feel the Burn is talented and would expire before the GCD ends or if Shifting Power is available.",
},
},
["active_talents"] = {
{
["enabled"] = true,
["criteria"] = "buff.combustion.up || ( buff.sun_kings_blessing.max_stack - buff.sun_kings_blessing.stack > 4 || variable.time_to_combustion <= 0 || buff.combustion.remains > travel_time || ! talent.sun_kings_blessing.enabled & ( cooldown.meteor.duration < variable.time_to_combustion || fight_remains < variable.time_to_combustion ) )",
["action"] = "meteor",
},
{
["enabled"] = true,
["criteria"] = "talent.alexstraszas_fury.enabled & ( buff.combustion.down & ! buff.hot_streak.up ) & ( buff.feel_the_burn.up || time > 15 ) & ( ! improved_scorch.active )",
["action"] = "dragons_breath",
["description"] = "With Alexstrasza's Fury when Combustion is not active, Dragon's Breath should be used to convert Heating Up to a Hot Streak.",
},
},
["standard_rotation"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.hot_streak_flamestrike & ( buff.hot_streak.up || buff.hyperthermia.up )",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "( buff.hyperthermia.up || buff.hot_streak.up & ( buff.hot_streak.remains < action.fireball.execute_time ) || buff.hot_streak.up & ( hot_streak_spells_in_flight || firestarter.active || talent.call_of_the_sun_king.enabled & action.phoenix_flames.charges ) || buff.hot_streak.up & scorch_execute.active )",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.skb_flamestrike & buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & debuff.improved_scorch.remains < action.pyroblast.cast_time + 5 * gcd.max & buff.fury_of_the_sun_king.up & ! action.scorch.in_flight",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "! firestarter.active & ( ! variable.fire_blast_pooling || talent.spontaneous_combustion.enabled ) & buff.fury_of_the_sun_king.down & ( ( ( action.fireball.executing & ( action.fireball.execute_remains < 0.5 || ! talent.hyperthermia.enabled ) || action.pyroblast.executing & ( action.pyroblast.execute_remains < 0.5 ) ) & buff.heating_up.react ) || ( scorch_execute.active & ( ! improved_scorch.active || debuff.improved_scorch.stack = debuff.improved_scorch.max_stack || full_recharge_time < 3 ) & ( buff.heating_up.react & ! action.scorch.executing || ! buff.hot_streak.react & ! buff.heating_up.react & action.scorch.executing & ! hot_streak_spells_in_flight ) ) )",
["use_off_gcd"] = 1,
["action"] = "fire_blast",
["description"] = "During the standard rotation, only use Fire Blasts when they are not being pooled for  Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "buff.hyperthermia.up & charges > 0 & buff.heating_up.react",
["use_off_gcd"] = 1,
["action"] = "fire_blast",
["description"] = "We will munch Fireblasts during Hyperthermia",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & debuff.improved_scorch.remains < 4 * gcd.max",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "buff.frostfire_empowerment.up & ! buff.hot_streak.up & ! buff.excess_frost.up",
["action"] = "fireball",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & debuff.improved_scorch.stack < debuff.improved_scorch.max_stack",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "buff.heat_shimmer.react & ( talent.scald.enabled || talent.improved_scorch.enabled ) & active_enemies < variable.combustion_flamestrike",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "talent.sun_kings_blessing.enabled & talent.call_of_the_sun_king.enabled & ! buff.hot_streak.react & hot_streak_spells_in_flight < 2",
["action"] = "phoenix_flames",
["description"] = "SKB prefers to not pool Phoenix Flames.",
},
{
["enabled"] = true,
["criteria"] = "! talent.sun_kings_blessing.enabled & talent.call_of_the_sun_king.enabled & ! buff.hot_streak.up & hot_streak_spells_in_flight < 2 & ( ! variable.phoenix_pooling & buff.flames_fury.up || charges_fractional > 2.5 || charges_fractional > 1.5 || buff.flames_fury.up ) & ( ! talent.feel_the_burn.enabled || buff.feel_the_burn.remains < 3 * gcd.max || buff.flames_fury.up )",
["action"] = "phoenix_flames",
["description"] = "UI and default fire will pool.",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "active_talents",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & talent.alexstraszas_fury.enabled",
["action"] = "dragons_breath",
},
{
["enabled"] = true,
["criteria"] = "( scorch_execute.active || buff.heat_shimmer.up )",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.arcane_explosion & mana.pct >= variable.arcane_explosion_mana",
["action"] = "arcane_explosion",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.hard_cast_flamestrike",
["action"] = "flamestrike",
["description"] = "With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball. This is currently never true up to 10t.",
},
{
["action"] = "fireball",
["enabled"] = true,
},
},
["combustion_phase"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.",
["criteria"] = "buff.combustion.remains > variable.skb_duration || boss & fight_remains < 20",
["list_name"] = "combustion_cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "active_talents",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & buff.fury_of_the_sun_king.expiration_delay_remains = 0 & cooldown.combustion.remains < cast_time & active_enemies >= variable.skb_flamestrike",
["action"] = "flamestrike",
["description"] = "If Combustion is down, precast something before activating it.",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & ( buff.fury_of_the_sun_king.expiration_delay_remains = 0 || buff.flame_accelerant.up )",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time & active_enemies < 2 & ! improved_scorch.active & ! ( talent.sun_kings_blessing.enabled & talent.flame_accelerant.enabled )",
["action"] = "fireball",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time",
["action"] = "scorch",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "hot_streak_spells_in_flight = 0 & buff.combustion.down & variable.time_to_combustion <= 0 & ( action.scorch.executing & action.scorch.execute_remains < variable.combustion_cast_remains || action.fireball.executing & action.fireball.execute_remains < variable.combustion_cast_remains || action.pyroblast.executing & action.pyroblast.execute_remains < variable.combustion_cast_remains || action.flamestrike.executing & action.flamestrike.execute_remains < variable.combustion_cast_remains || action.meteor.in_flight & action.meteor.in_flight_remains < variable.combustion_cast_remains )",
["use_off_gcd"] = 1,
["action"] = "combustion",
["description"] = "Combustion should be used when the precast is almost finished or when Meteor is about to land.",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "! variable.fire_blast_pooling & ( ! improved_scorch.active || action.scorch.executing || debuff.improved_scorch.remains > 4 * gcd.max ) & ( buff.fury_of_the_sun_king.down || action.pyroblast.executing ) & buff.combustion.up & ! buff.hot_streak.react & hot_streak_spells_in_flight + buff.heating_up.react * ( gcd.remains > 0 ) < 2",
["use_off_gcd"] = 1,
["action"] = "fire_blast",
},
{
["buff_name"] = "hyperthermia",
["criteria"] = "buff.fury_of_the_sun_king.react",
["action"] = "cancel_buff",
["enabled"] = true,
["description"] = "Cancelaura HT if SKB is ready",
},
{
["enabled"] = true,
["criteria"] = "( buff.hot_streak.up & active_enemies >= variable.combustion_flamestrike ) || ( buff.hyperthermia.up & active_enemies >= variable.combustion_flamestrike - talent.hyperthermia.enabled )",
["action"] = "flamestrike",
["description"] = "Spend Hot Streaks during Combustion at high priority.",
},
{
["enabled"] = true,
["criteria"] = "buff.hyperthermia.up",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.up & buff.combustion.up",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.scorch & buff.heating_up.up & active_enemies < variable.combustion_flamestrike & buff.combustion.up",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & active_enemies >= variable.skb_flamestrike & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "flamestrike",
["description"] = "Spend Fury of the Sun King procs inside of combustion.",
},
{
["enabled"] = true,
["criteria"] = "buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "talent.phoenix_reborn.enabled & buff.heating_up.up + hot_streak_spells_in_flight < 2 & buff.flames_fury.up",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "buff.frostfire_empowerment.up & ! buff.hot_streak.up & ! buff.excess_frost.up",
["action"] = "fireball",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & ( debuff.improved_scorch.remains < 4 * gcd.max ) & active_enemies < variable.combustion_flamestrike",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "buff.heat_shimmer.up & ( talent.scald.enabled || talent.improved_scorch.enabled ) & active_enemies < variable.combustion_flamestrike",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.call_of_the_sun_king.enabled & travel_time < buff.combustion.remains || ( talent.call_of_the_sun_king.enabled & buff.combustion.remains < 4 || buff.sun_kings_blessing.stack < 8 ) ) & buff.heating_up.react + hot_streak_spells_in_flight < 2",
["action"] = "phoenix_flames",
["description"] = "Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.",
},
{
["enabled"] = true,
["criteria"] = "buff.frostfire_empowerment.up & ! buff.hot_streak.up",
["action"] = "fireball",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.remains > cast_time & cast_time >= gcd.max",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.remains > cast_time",
["action"] = "fireball",
},
},
},
["version"] = 20240805,
["warnings"] = "The import for 'combustion_timing' required some automated changes.\nLine 4: Converted 'talent.firestarter' to 'talent.firestarter.enabled' (1x).\nLine 5: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 10: Converted 'talent.firestarter' to 'talent.firestarter.enabled' (1x).\nLine 10: Converted 'talent.kindling' to 'talent.kindling.enabled' (1x).\n\nThe import for 'firestarter_fire_blasts' required some automated changes.\nLine 2: Converted 'talent.feel_the_burn' to 'talent.feel_the_burn.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 5: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 7: Unsupported use_item action [ imperfect_ascendancy_serum]; entry disabled.\nLine 11: Converted operations in 'buff.combustion.down&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion)%cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts%cooldown.fire_blast.duration-(buff.combustion.duration%cooldown.fire_blast.duration)%%1&variable.time_to_combustion<fight_remains' to 'buff.combustion.down&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion)/cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts/cooldown.fire_blast.duration-(buff.combustion.duration/cooldown.fire_blast.duration)%1&variable.time_to_combustion<fight_remains'.\nLine 13: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 14: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 14: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 15: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 15: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 15: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 18: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 3: Converted 'talent.quickflame' to 'talent.quickflame.enabled' (1x).\nLine 3: Converted 'talent.flame_patch' to 'talent.flame_patch.enabled' (1x).\nLine 3: Converted 'talent.flame_patch' to 'talent.flame_patch.enabled' (1x).\nLine 3: Converted 'talent.quickflame' to 'talent.quickflame.enabled' (1x).\nLine 5: Converted 'talent.quickflame' to 'talent.quickflame.enabled' (1x).\nLine 5: Converted 'talent.flame_patch' to 'talent.flame_patch.enabled' (1x).\nLine 5: Converted 'talent.flame_patch' to 'talent.flame_patch.enabled' (1x).\nLine 5: Converted 'talent.quickflame' to 'talent.quickflame.enabled' (1x).\nLine 6: Converted 'talent.quickflame' to 'talent.quickflame.enabled' (1x).\nLine 6: Converted 'talent.flame_patch' to 'talent.flame_patch.enabled' (1x).\nLine 6: Converted 'talent.flame_patch' to 'talent.flame_patch.enabled' (1x).\nLine 6: Converted 'talent.quickflame' to 'talent.quickflame.enabled' (1x).\n\nThe import for 'active_talents' required some automated changes.\nLine 1: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 2: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\n\nThe import for 'standard_rotation' required some automated changes.\nLine 2: Converted 'talent.call_of_the_sun_king' to 'talent.call_of_the_sun_king.enabled' (1x).\nLine 6: Converted 'talent.spontaneous_combustion' to 'talent.spontaneous_combustion.enabled' (1x).\nLine 6: Converted 'talent.hyperthermia' to 'talent.hyperthermia.enabled' (1x).\nLine 11: Converted 'talent.scald' to 'talent.scald.enabled' (1x).\nLine 11: Converted 'talent.improved_scorch' to 'talent.improved_scorch.enabled' (1x).\nLine 12: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 12: Converted 'talent.call_of_the_sun_king' to 'talent.call_of_the_sun_king.enabled' (1x).\nLine 13: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 13: Converted 'talent.call_of_the_sun_king' to 'talent.call_of_the_sun_king.enabled' (1x).\nLine 13: Converted 'talent.feel_the_burn' to 'talent.feel_the_burn.enabled' (1x).\nLine 15: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - excess_frost\n - frostfire_empowerment\n\nThe import for 'combustion_phase' required some automated changes.\nLine 5: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 5: Converted 'talent.flame_accelerant' to 'talent.flame_accelerant.enabled' (1x).\nLine 10: Converted 'talent.hyperthermia' to 'talent.hyperthermia.enabled' (1x).\nLine 16: Converted 'talent.phoenix_reborn' to 'talent.phoenix_reborn.enabled' (1x).\nLine 19: Converted 'talent.scald' to 'talent.scald.enabled' (1x).\nLine 19: Converted 'talent.improved_scorch' to 'talent.improved_scorch.enabled' (1x).\nLine 20: Converted 'talent.call_of_the_sun_king' to 'talent.call_of_the_sun_king.enabled' (1x).\nLine 20: Converted 'talent.call_of_the_sun_king' to 'talent.call_of_the_sun_king.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - excess_frost\n - frostfire_empowerment\n\nImported 8 action lists.\n",
["spec"] = 63,
["profile"] = "actions.precombat+=/arcane_intellect\n# APL Variable Option: This variable specifies whether Combustion should be used during Firestarter.\nactions.precombat+=/variable,name=firestarter_combustion,default=-1,value=talent.sun_kings_blessing,if=variable.firestarter_combustion<0\n# APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes outside of Combustion should be used.\nactions.precombat+=/variable,name=hot_streak_flamestrike,if=variable.hot_streak_flamestrike=0,value=4*(talent.quickflame||talent.flame_patch)+999*(!talent.flame_patch&!talent.quickflame)\n# APL Variable Option: This variable specifies the number of targets at which Hard Cast Flamestrikes outside of Combustion should be used as filler.\nactions.precombat+=/variable,name=hard_cast_flamestrike,if=variable.hard_cast_flamestrike=0,value=999\n# APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes are used during Combustion.\nactions.precombat+=/variable,name=combustion_flamestrike,if=variable.combustion_flamestrike=0,value=4*(talent.quickflame||talent.flame_patch)+999*(!talent.flame_patch&!talent.quickflame)\n# APL Variable Option: This variable specifies the number of targets at which Flamestrikes should be used to consume Fury of the Sun King.\nactions.precombat+=/variable,name=skb_flamestrike,if=variable.skb_flamestrike=0,value=3*(talent.quickflame||talent.flame_patch)+999*(!talent.flame_patch&!talent.quickflame)\n# APL Variable Option: This variable specifies the number of targets at which Arcane Explosion outside of Combustion should be used.\nactions.precombat+=/variable,name=arcane_explosion,if=variable.arcane_explosion=0,value=999\n# APL Variable Option: This variable specifies the percentage of mana below which Arcane Explosion will not be used.\nactions.precombat+=/variable,name=arcane_explosion_mana,default=40,op=reset\n# APL Variable Option: The number of targets at which Shifting Power can used during Combustion.\nactions.precombat+=/variable,name=combustion_shifting_power,if=variable.combustion_shifting_power=0,value=999\n# APL Variable Option: The time remaining on a cast when Combustion can be used in seconds.\nactions.precombat+=/variable,name=combustion_cast_remains,default=0.3,op=reset\n# APL Variable Option: This variable specifies the number of seconds of Fire Blast that should be pooled past the default amount.\nactions.precombat+=/variable,name=overpool_fire_blasts,default=0,op=reset\n# The duration of a Sun King's Blessing Combustion.\nactions.precombat+=/variable,name=skb_duration,value=6\n# Whether a usable item used to buff Combustion is equipped.\nactions.precombat+=/variable,name=combustion_on_use,value=equipped.gladiators_badge||equipped.moonlit_prism||equipped.irideus_fragment||equipped.spoils_of_neltharus||equipped.timebreaching_talon||equipped.horn_of_valor\n# How long before Combustion should trinkets that trigger a shared category cooldown on other trinkets not be used?\nactions.precombat+=/variable,name=on_use_cutoff,value=20,if=variable.combustion_on_use\nactions.precombat+=/mirror_image\nactions.precombat+=/flamestrike,if=active_enemies>=variable.hot_streak_flamestrike\nactions.precombat+=/pyroblast\n\nactions+=/counterspell\n## actions+=/time_warp\n# The combustion_timing action list schedules the approximate time when Combustion should be used and stores the number of seconds until then in variable.time_to_combustion.\nactions+=/call_action_list,name=combustion_timing\nactions+=/potion,if=buff.potion.duration>variable.time_to_combustion+buff.combustion.duration\n# Variable that estimates whether Shifting Power will be used before the next Combustion.\nactions+=/variable,name=shifting_power_before_combustion,value=variable.time_to_combustion>cooldown.shifting_power.remains\nactions+=/variable,name=item_cutoff_active,value=(variable.time_to_combustion<variable.on_use_cutoff||buff.combustion.remains>variable.skb_duration&!cooldown.item_cd_1141.remains)&((trinket.1.has_cooldown&trinket.1.cooldown.remains<variable.on_use_cutoff)+(trinket.2.has_cooldown&trinket.2.cooldown.remains<variable.on_use_cutoff)>1)\n# The War Within S1 On-Use items with special use timings\nactions+=/use_item,effect_name=treacherous_transmitter,if=buff.combustion.remains>10||boss&fight_remains<25\nactions+=/use_item,name=imperfect_ascendancy_serum,if=variable.time_to_combustion<3\nactions+=/use_item,effect_name=spymasters_web,if=(buff.combustion.remains>10&fight_remains<60)||boss&fight_remains<25\nactions+=/use_item,effect_name=gladiators_badge,if=variable.time_to_combustion>cooldown-5\nactions+=/use_items,if=!variable.item_cutoff_active\n# Pool as many Fire Blasts as possible for Combustion.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=buff.combustion.down&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion)%cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts%cooldown.fire_blast.duration-(buff.combustion.duration%cooldown.fire_blast.duration)%%1&variable.time_to_combustion<fight_remains\nactions+=/call_action_list,name=combustion_phase,if=variable.time_to_combustion<=0||buff.combustion.up||variable.time_to_combustion<variable.combustion_precast_time&cooldown.combustion.remains<variable.combustion_precast_time\n# Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=scorch_execute.active&action.fire_blast.full_recharge_time>3*gcd.max,if=!variable.fire_blast_pooling&talent.sun_kings_blessing\nactions+=/shifting_power,if=buff.combustion.down&(!improved_scorch.active||debuff.improved_scorch.remains>cast_time+action.scorch.cast_time&!buff.fury_of_the_sun_king.up)&!buff.hot_streak.react&buff.hyperthermia.down&(talent.sun_kings_blessing&cooldown.phoenix_flames.charges<=1||!talent.sun_kings_blessing)\n# Variable that controls Phoenix Flames usage to ensure its charges are pooled for Combustion when needed. Only use Phoenix Flames outside of Combustion when full charges can be obtained during the next Combustion.\nactions+=/variable,name=phoenix_pooling,if=!talent.sun_kings_blessing,value=(variable.time_to_combustion+buff.combustion.duration-5<action.phoenix_flames.full_recharge_time+cooldown.phoenix_flames.duration-action.shifting_power.full_reduction*variable.shifting_power_before_combustion&variable.time_to_combustion<fight_remains||talent.sun_kings_blessing)&!talent.alexstraszas_fury\n# When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Feel the Burn.\nactions+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&variable.time_to_combustion>0&active_enemies>=variable.hard_cast_flamestrike&!firestarter.active&!buff.hot_streak.up&(buff.heating_up.up&action.flamestrike.execute_remains<0.5||charges_fractional>=2)\nactions+=/call_action_list,name=firestarter_fire_blasts,if=buff.combustion.down&firestarter.active&variable.time_to_combustion>0\n# Avoid capping Fire Blast charges while channeling Shifting Power\nactions+=/fire_blast,use_while_casting=1,if=action.shifting_power.executing&(full_recharge_time<action.shifting_power.tick_reduction||talent.sun_kings_blessing&buff.heating_up.react)\nactions+=/call_action_list,name=standard_rotation,strict=1,if=variable.time_to_combustion>0&buff.combustion.down\n# Ice Nova can be used during movement when Searing Touch is not active.\nactions+=/ice_nova,if=!scorch_execute.active\nactions+=/scorch\n\nactions.active_talents+=/meteor,if=buff.combustion.up||(buff.sun_kings_blessing.max_stack-buff.sun_kings_blessing.stack>4||variable.time_to_combustion<=0||buff.combustion.remains>travel_time||!talent.sun_kings_blessing&(cooldown.meteor.duration<variable.time_to_combustion||fight_remains<variable.time_to_combustion))\n# With Alexstrasza's Fury when Combustion is not active, Dragon's Breath should be used to convert Heating Up to a Hot Streak.\nactions.active_talents+=/dragons_breath,if=talent.alexstraszas_fury&(buff.combustion.down&!buff.hot_streak.up)&(buff.feel_the_burn.up||time>15)&(!improved_scorch.active)\n\nactions.combustion_cooldowns+=/potion\nactions.combustion_cooldowns+=/blood_fury\nactions.combustion_cooldowns+=/berserking,if=buff.combustion.up\nactions.combustion_cooldowns+=/fireblood\nactions.combustion_cooldowns+=/ancestral_call\n## actions.combustion_cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.power_infusion.down\n## actions.combustion_cooldowns+=/invoke_external_buff,name=blessing_of_summer,if=buff.blessing_of_summer.down\nactions.combustion_cooldowns+=/use_item,effect_name=gladiators_badge\n\n# Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.\nactions.combustion_phase+=/call_action_list,name=combustion_cooldowns,if=buff.combustion.remains>variable.skb_duration||boss&fight_remains<20\nactions.combustion_phase+=/call_action_list,name=active_talents\n# If Combustion is down, precast something before activating it.\nactions.combustion_phase+=/flamestrike,if=buff.combustion.down&buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&buff.fury_of_the_sun_king.expiration_delay_remains=0&cooldown.combustion.remains<cast_time&active_enemies>=variable.skb_flamestrike\nactions.combustion_phase+=/pyroblast,if=buff.combustion.down&buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&(buff.fury_of_the_sun_king.expiration_delay_remains=0||buff.flame_accelerant.up)\nactions.combustion_phase+=/fireball,if=buff.combustion.down&cooldown.combustion.remains<cast_time&active_enemies<2&!improved_scorch.active&!(talent.sun_kings_blessing&talent.flame_accelerant)\nactions.combustion_phase+=/scorch,if=buff.combustion.down&cooldown.combustion.remains<cast_time\n# Combustion should be used when the precast is almost finished or when Meteor is about to land.\nactions.combustion_phase+=/combustion,use_off_gcd=1,use_while_casting=1,if=hot_streak_spells_in_flight=0&buff.combustion.down&variable.time_to_combustion<=0&(action.scorch.executing&action.scorch.execute_remains<variable.combustion_cast_remains||action.fireball.executing&action.fireball.execute_remains<variable.combustion_cast_remains||action.pyroblast.executing&action.pyroblast.execute_remains<variable.combustion_cast_remains||action.flamestrike.executing&action.flamestrike.execute_remains<variable.combustion_cast_remains||action.meteor.in_flight&action.meteor.in_flight_remains<variable.combustion_cast_remains)\nactions.combustion_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&(!improved_scorch.active||action.scorch.executing||debuff.improved_scorch.remains>4*gcd.max)&(buff.fury_of_the_sun_king.down||action.pyroblast.executing)&buff.combustion.up&!buff.hot_streak.react&hot_streak_spells_in_flight+buff.heating_up.react*(gcd.remains>0)<2\n# Cancelaura HT if SKB is ready\nactions.combustion_phase+=/cancel_buff,name=hyperthermia,if=buff.fury_of_the_sun_king.react\n# Spend Hot Streaks during Combustion at high priority.\nactions.combustion_phase+=/flamestrike,if=(buff.hot_streak.up&active_enemies>=variable.combustion_flamestrike)||(buff.hyperthermia.up&active_enemies>=variable.combustion_flamestrike-talent.hyperthermia)\nactions.combustion_phase+=/pyroblast,if=buff.hyperthermia.up\nactions.combustion_phase+=/pyroblast,if=buff.hot_streak.up&buff.combustion.up\nactions.combustion_phase+=/pyroblast,if=prev_gcd.1.scorch&buff.heating_up.up&active_enemies<variable.combustion_flamestrike&buff.combustion.up\n# Spend Fury of the Sun King procs inside of combustion.\nactions.combustion_phase+=/flamestrike,if=buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&active_enemies>=variable.skb_flamestrike&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.combustion_phase+=/pyroblast,if=buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.combustion_phase+=/phoenix_flames,if=talent.phoenix_reborn&buff.heating_up.up+hot_streak_spells_in_flight<2&buff.flames_fury.up\nactions.combustion_phase+=/fireball,if=buff.frostfire_empowerment.up&!buff.hot_streak.up&!buff.excess_frost.up\nactions.combustion_phase+=/scorch,if=improved_scorch.active&(debuff.improved_scorch.remains<4*gcd.max)&active_enemies<variable.combustion_flamestrike\nactions.combustion_phase+=/scorch,if=buff.heat_shimmer.up&(talent.scald||talent.improved_scorch)&active_enemies<variable.combustion_flamestrike\n# Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.\nactions.combustion_phase+=/phoenix_flames,if=(!talent.call_of_the_sun_king&travel_time<buff.combustion.remains||(talent.call_of_the_sun_king&buff.combustion.remains<4||buff.sun_kings_blessing.stack<8))&buff.heating_up.react+hot_streak_spells_in_flight<2\nactions.combustion_phase+=/fireball,if=buff.frostfire_empowerment.up&!buff.hot_streak.up\nactions.combustion_phase+=/scorch,if=buff.combustion.remains>cast_time&cast_time>=gcd.max\nactions.combustion_phase+=/fireball,if=buff.combustion.remains>cast_time\n\n# Helper variable that contains the actual estimated time that the next Combustion will be ready.\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=combustion_ready_time,value=cooldown.combustion.remains_expected\n# The cast time of the spell that will be precast into Combustion.\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=combustion_precast_time,value=action.fireball.cast_time*(active_enemies<variable.combustion_flamestrike)+action.flamestrike.cast_time*(active_enemies>=variable.combustion_flamestrike)-variable.combustion_cast_remains\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,value=variable.combustion_ready_time\n# Delay Combustion for after Firestarter unless variable.firestarter_combustion is set.\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=firestarter.remains,if=talent.firestarter&!variable.firestarter_combustion\n# Delay Combustion until SKB is ready during Firestarter\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=(buff.sun_kings_blessing.max_stack-buff.sun_kings_blessing.stack)*(3*gcd.max),if=talent.sun_kings_blessing&firestarter.active&buff.fury_of_the_sun_king.down\n# Delay Combustion for Gladiators Badge, unless it would be delayed longer than 20 seconds.\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.gladiators_badge_345228.remains,if=equipped.gladiators_badge&cooldown.gladiators_badge_345228.remains-20<variable.time_to_combustion\n# Delay Combustion until Combustion expires if it's up.\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=buff.combustion.remains\n# Raid Events: Delay Combustion for add spawns of 3 or more adds that will last longer than 15 seconds. These values aren't necessarily optimal in all cases.\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=raid_event.adds.in,if=raid_event.adds.exists&raid_event.adds.count>=3&raid_event.adds.duration>15\n# Raid Events: Always use Combustion with vulnerability raid events, override any delays listed above to make sure it gets used here.\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,value=raid_event.vulnerable.in*!raid_event.vulnerable.up,if=raid_event.vulnerable.exists&variable.combustion_ready_time<raid_event.vulnerable.in\n# Use the next Combustion on cooldown if it would not be expected to delay the scheduled one or the scheduled one would happen less than 20 seconds before the fight ends.\nactions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,value=variable.combustion_ready_time,if=variable.combustion_ready_time+cooldown.combustion.duration*(1-(0.4+0.2*talent.firestarter)*talent.kindling)<=variable.time_to_combustion||variable.time_to_combustion>fight_remains-20\n\n# While casting Fireball or Pyroblast, convert Heating Up to a Hot Streak!\nactions.firestarter_fire_blasts+=/fire_blast,use_while_casting=1,if=!variable.fire_blast_pooling&!buff.hot_streak.up&(action.fireball.execute_remains>gcd.remains||action.pyroblast.executing)&buff.heating_up.up+hot_streak_spells_in_flight=1&(cooldown.shifting_power.ready||charges>1||buff.feel_the_burn.remains<2*gcd.max)\n# If not casting anything, use Fire Blast to trigger Hot Streak! only if Feel the Burn is talented and would expire before the GCD ends or if Shifting Power is available.\nactions.firestarter_fire_blasts+=/fire_blast,use_off_gcd=1,if=!variable.fire_blast_pooling&buff.heating_up.react+hot_streak_spells_in_flight=1&(talent.feel_the_burn&buff.feel_the_burn.remains<gcd.remains||cooldown.shifting_power.ready)&time>0\n\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.hot_streak_flamestrike&(buff.hot_streak.up||buff.hyperthermia.up)\nactions.standard_rotation+=/pyroblast,if=(buff.hyperthermia.up||buff.hot_streak.up&(buff.hot_streak.remains<action.fireball.execute_time)||buff.hot_streak.up&(hot_streak_spells_in_flight||firestarter.active||talent.call_of_the_sun_king&action.phoenix_flames.charges)||buff.hot_streak.up&scorch_execute.active)\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.skb_flamestrike&buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.standard_rotation+=/scorch,if=improved_scorch.active&debuff.improved_scorch.remains<action.pyroblast.cast_time+5*gcd.max&buff.fury_of_the_sun_king.up&!action.scorch.in_flight\nactions.standard_rotation+=/pyroblast,if=buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.expiration_delay_remains=0\n# During the standard rotation, only use Fire Blasts when they are not being pooled for  Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.\nactions.standard_rotation+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!firestarter.active&(!variable.fire_blast_pooling||talent.spontaneous_combustion)&buff.fury_of_the_sun_king.down&(((action.fireball.executing&(action.fireball.execute_remains<0.5||!talent.hyperthermia)||action.pyroblast.executing&(action.pyroblast.execute_remains<0.5))&buff.heating_up.react)||(scorch_execute.active&(!improved_scorch.active||debuff.improved_scorch.stack=debuff.improved_scorch.max_stack||full_recharge_time<3)&(buff.heating_up.react&!action.scorch.executing||!buff.hot_streak.react&!buff.heating_up.react&action.scorch.executing&!hot_streak_spells_in_flight)))\n# We will munch Fireblasts during Hyperthermia\nactions.standard_rotation+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=buff.hyperthermia.up&charges>0&buff.heating_up.react\n## actions.standard_rotation+=/pyroblast,if=prev_gcd.1.scorch&buff.heating_up.up&scorch_execute.active&active_enemies<variable.hot_streak_flamestrike\nactions.standard_rotation+=/scorch,if=improved_scorch.active&debuff.improved_scorch.remains<4*gcd.max\nactions.standard_rotation+=/fireball,if=buff.frostfire_empowerment.up&!buff.hot_streak.up&!buff.excess_frost.up\nactions.standard_rotation+=/scorch,if=improved_scorch.active&debuff.improved_scorch.stack<debuff.improved_scorch.max_stack\nactions.standard_rotation+=/scorch,if=buff.heat_shimmer.react&(talent.scald||talent.improved_scorch)&active_enemies<variable.combustion_flamestrike\n# SKB prefers to not pool Phoenix Flames.\nactions.standard_rotation+=/phoenix_flames,if=talent.sun_kings_blessing&talent.call_of_the_sun_king&!buff.hot_streak.react&hot_streak_spells_in_flight<2\n# UI and default fire will pool.\nactions.standard_rotation+=/phoenix_flames,if=!talent.sun_kings_blessing&talent.call_of_the_sun_king&!buff.hot_streak.up&hot_streak_spells_in_flight<2&(!variable.phoenix_pooling&buff.flames_fury.up||charges_fractional>2.5||charges_fractional>1.5||buff.flames_fury.up)&(!talent.feel_the_burn||buff.feel_the_burn.remains<3*gcd.max||buff.flames_fury.up)\nactions.standard_rotation+=/call_action_list,name=active_talents\nactions.standard_rotation+=/dragons_breath,if=active_enemies>1&talent.alexstraszas_fury\nactions.standard_rotation+=/scorch,if=(scorch_execute.active||buff.heat_shimmer.up)\nactions.standard_rotation+=/arcane_explosion,if=active_enemies>=variable.arcane_explosion&mana.pct>=variable.arcane_explosion_mana\n# With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball. This is currently never true up to 10t.\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike\nactions.standard_rotation+=/fireball",
},
["Augmentation"] = {
["source"] = "https://www.icy-veins.com/wow/augmentation-evoker-pve-dps-rotation-cooldowns-abilities",
["builtIn"] = true,
["date"] = 20240729,
["spec"] = 1473,
["desc"] = "2024-07-27: Update from SimC\n\n2024-07-23: The War Within",
["lists"] = {
["items"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.breath_of_eons.remains <= 3 & ( trinket.t1.is.nymues_unraveling_spindle & variable.trinket_priority = 1 || trinket.t2.is.nymues_unraveling_spindle & variable.trinket_priority = 2 ) || ( cooldown.fire_breath.remains <= 4 || cooldown.upheaval.remains <= 4 ) & cooldown.breath_of_eons.remains > 10 & ! debuff.temporal_wound.up & ( trinket.t1.is.nymues_unraveling_spindle & variable.trinket_priority = 2 || trinket.t2.is.nymues_unraveling_spindle & variable.trinket_priority = 1 )",
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["criteria"] = "buff.spymasters_report.stack = 1 & debuff.temporal_wound.up & ! buff.spymasters_web.up || debuff.temporal_wound.up & ( fight_remains < 120 ) || ( fight_remains <= 20 || evoker.allied_cds_up > 0 & fight_remains <= 60 || evoker.allied_cds_up > 0 & fight_remains <= 30 ) & ! buff.spymasters_web.up",
["name"] = "spymasters_web",
["action"] = "spymasters_web",
},
{
["enabled"] = true,
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( debuff.temporal_wound.up || variable.trinket_2_buffs & ! trinket.t2.cooldown.up & ( prev_gcd.1.fire_breath || prev_gcd.1.upheaval ) & buff.ebon_might_self.up ) & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( debuff.temporal_wound.up || variable.trinket_1_buffs & ! trinket.t1.cooldown.up & ( prev_gcd.1.fire_breath || prev_gcd.1.upheaval ) & buff.ebon_might_self.up ) & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains ) & ( gcd.remains > 0.1 || ! variable.trinket_1_ogcd_cast )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains ) & ( gcd.remains > 0.1 || ! variable.trinket_2_ogcd_cast )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["description"] = "Use on use weapons",
["criteria"] = "gcd.remains >= gcd.max * 0.6",
},
},
["opener_filler"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.opener_delay >? variable.minimum_opener_delay",
["var_name"] = "opener_delay",
["criteria"] = "! variable.opener_cds_detected & evoker.allied_cds_up > 0",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.opener_delay - 1",
["var_name"] = "opener_delay",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "opener_cds_detected",
["criteria"] = "! variable.opener_cds_detected & evoker.allied_cds_up > 0",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 || talent.pupil_of_alexstrasza.enabled",
["action"] = "living_flame",
},
{
["action"] = "azure_strike",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "debuff.temporal_wound.remains",
["var_name"] = "temp_wound",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.prescience < group_members || solo & buff.prescience.down ) & ( ( full_recharge_time <= gcd.max * 3 || cooldown.ebon_might.remains <= gcd.max * 3 & ( buff.ebon_might_self.remains - gcd.max * 3 ) <= buff.ebon_might_self.duration * 0.4 || variable.temp_wound >= ( gcd.max + action.eruption.cast_time ) || boss & fight_remains <= 30 ) & ( buff.trembling_earth.stack + evoker.prescience_buffs ) <= ( 5 + ( full_recharge_time <= gcd.max * 3 ) ) )",
["action"] = "prescience",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "( buff.ebon_might_self.remains - cast_time ) <= buff.ebon_might_self.duration * 0.4 & ( active_enemies > 0 || raid_event.adds.in <= 3 ) & ( evoker.prescience_buffs >= 2 & time <= 10 || evoker.prescience_buffs >= 3 || ! group & ! raid || buff.ebon_might_self.remains >= action.ebon_might.cast_time || group_members <= 3 )",
["list_name"] = "ebon_logic",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.opener_delay > 0 & boss",
["list_name"] = "opener_filler",
},
{
["enabled"] = true,
["criteria"] = "debuff.temporal_wound.up & buff.ebon_might_self.up",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! talent.bombardments.enabled || talent.extended_battle.enabled || debuff.bombardments.remains <= 7 & ! buff.mass_disintegrate_stacks.up )",
["var_name"] = "bombardment_clause",
["criteria"] = "talent.bombardments.enabled",
},
{
["action"] = "deep_breath",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "tip_the_scales",
["criteria"] = "talent.threads_of_fate.enabled",
["line_cd"] = "110",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "cooldown.time_skip.up & talent.time_skip.enabled & ! talent.interwoven_threads.enabled & ( ! talent.bombardments.enabled || variable.bombardment_clause || ! dot.fire_breath_damage.ticking & talent.molten_embers.enabled )",
["list_name"] = "fb",
},
{
["enabled"] = true,
["action"] = "tip_the_scales",
["criteria"] = "cooldown.upheaval.ready & ! cooldown.fire_breath.ready & talent.molten_embers.enabled & ! talent.threads_of_fate.enabled",
["line_cd"] = "110",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die > cast_time + 0.2 & buff.ebon_might_self.remains > cast_time & cooldown.time_skip.up & talent.time_skip.enabled & ! talent.interwoven_threads.enabled & ( ! talent.bombardments.enabled || variable.bombardment_clause )",
["action"] = "upheaval",
["empower_to"] = "1",
},
{
["enabled"] = true,
["action"] = "breath_of_eons",
["criteria"] = "( ( cooldown.ebon_might.remains <= 4 || buff.ebon_might_self.up ) & target.time_to_die > 15 & raid_event.adds.in > 15 & ( ! equipped.nymues_unraveling_spindle || cooldown.nymues_unraveling_spindle.remains >= 10 || fight_remains < 30 || trinket.t1.is.nymues_unraveling_spindle & variable.trinket_priority = 2 || trinket.t2.is.nymues_unraveling_spindle & variable.trinket_priority = 1 ) || boss & fight_remains < 30 ) & boss",
["line_cd"] = "117",
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.ebon_might.remains <= 4 || buff.ebon_might_self.up ) & target.time_to_die > 15 & ( ! equipped.nymues_unraveling_spindle || cooldown.nymues_unraveling_spindle.remains >= 10 || fight_remains < 30 || trinket.t1.is.nymues_unraveling_spindle & variable.trinket_priority = 2 || trinket.t2.is.nymues_unraveling_spindle & variable.trinket_priority = 1 ) || fight_remains < 30 ) & ! boss",
["action"] = "breath_of_eons",
},
{
["enabled"] = true,
["criteria"] = "buff.leaping_flames.up & cooldown.fire_breath.up & ! boss",
["action"] = "living_flame",
},
{
["enabled"] = true,
["criteria"] = "cooldown.breath_of_eons.up & evoker.allied_cds_up = 0 & target.time_to_die > 15 & boss",
["action"] = "living_flame",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "( raid_event.adds.remains > 13 || raid_event.adds.in > 20 || evoker.allied_cds_up > 0 || solo || ! raid_event.adds.exists ) & ( ! talent.bombardments.enabled || variable.bombardment_clause || ! dot.fire_breath_damage.ticking & talent.molten_embers.enabled ) || empowering.fire_breath",
["list_name"] = "fb",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die > cast_time + 0.2 & buff.ebon_might_self.remains > cast_time & ( raid_event.adds.remains > 13 || ! raid_event.adds.exists || raid_event.adds.in > 20 ) & ( ! talent.bombardments.enabled || variable.bombardment_clause ) || empowering.upheaval",
["action"] = "upheaval",
["empower_to"] = "1",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.fire_breath.remains + cooldown.upheaval.remains + cooldown.prescience.full_recharge_time ) >= 35",
["action"] = "time_skip",
},
{
["enabled"] = true,
["criteria"] = "talent.dream_of_spring.enabled & buff.essence_burst.up & ( variable.spam_heal = 2 || variable.spam_heal = 1 & ! buff.ancient_flame.up ) & ( buff.ebon_might_self.up || essence.deficit = 0 || buff.essence_burst.stack = buff.essence_burst.max_stack & cooldown.ebon_might.remains > 4 )",
["action"] = "emerald_blossom",
},
{
["enabled"] = true,
["criteria"] = "buff.ebon_might_self.remains > execute_time || essence.deficit = 0 || buff.essence_burst.stack = buff.essence_burst.max_stack & cooldown.ebon_might.remains > 4",
["action"] = "eruption",
},
{
["enabled"] = true,
["criteria"] = "active_dot.blistering_scales = 0 & buff.ebon_might_self.down",
["action"] = "blistering_scales",
},
{
["enabled"] = true,
["criteria"] = "! buff.ebon_might_self.up & talent.ancient_flame.enabled & talent.scarlet_adaptation.enabled & ! talent.dream_of_spring.enabled & ! buff.ancient_flame.up & active_enemies = 1",
["action"] = "emerald_blossom",
},
{
["enabled"] = true,
["criteria"] = "! buff.ebon_might_self.up & talent.ancient_flame.enabled & talent.scarlet_adaptation.enabled & ! buff.ancient_flame.up & ( ! talent.dream_of_spring.enabled || mana >= 200000 ) & active_enemies = 1",
["action"] = "verdant_embrace",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "filler",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "spam_heal",
["default"] = "1",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "minimum_opener_delay",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.minimum_opener_delay",
["var_name"] = "opener_delay",
["criteria"] = "! talent.interwoven_threads.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.minimum_opener_delay + variable.opener_delay",
["var_name"] = "opener_delay",
["criteria"] = "talent.interwoven_threads.enabled",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "opener_cds_detected",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.nymues_unraveling_spindle || trinket.t1.is.spymasters_web",
["var_name"] = "trinket_1_manual",
["description"] = "Nymues is complicated, Manual Handle",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.nymues_unraveling_spindle || trinket.t2.is.spymasters_web",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.beacon_to_the_beyond || trinket.t1.is.belorrelos_the_suncaller",
["var_name"] = "trinket_1_ogcd_cast",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.beacon_to_the_beyond || trinket.t2.is.belorrelos_the_suncaller",
["var_name"] = "trinket_2_ogcd_cast",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff ) & ! variable.trinket_1_exclude",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff ) & ! variable.trinket_2_exclude",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % 120 = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % 120 = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t2.has_cooldown & ! variable.trinket_2_exclude || ! trinket.t1.has_cooldown ) || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 0.5 + trinket.t2.has_use_buff * 3 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 0.5 + trinket.t1.has_use_buff * 3 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Double on use - Priotize Intellect on use trinkets over Nymues, force overwriting the normal logic to guarantee it is correct.",
["value"] = "2",
["var_name"] = "trinket_priority",
["action"] = "variable",
["value_else"] = "1",
["criteria"] = "( trinket.t1.is.nymues_unraveling_spindle || trinket.t2.is.nymues_unraveling_spindle ) & ( variable.trinket_1_buffs & variable.trinket_2_buffs )",
},
{
["enabled"] = true,
["criteria"] = "active_dot.blistering_scales = 0",
["action"] = "blistering_scales",
},
{
["action"] = "living_flame",
["enabled"] = true,
},
},
["ebon_logic"] = {
{
["action"] = "ebon_might",
["enabled"] = true,
},
},
["fb"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.fire_breath.ready & buff.ebon_might_self.up & ! talent.molten_embers.enabled",
["action"] = "tip_the_scales",
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "1",
["criteria"] = "target.time_to_die > 16 & buff.ebon_might_self.remains > cast_time & ( equipped.neltharions_call_to_chaos || talent.molten_embers.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "2",
["criteria"] = "target.time_to_die > 12 & buff.ebon_might_self.remains > cast_time & ( equipped.neltharions_call_to_chaos || talent.molten_embers.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "3",
["criteria"] = "target.time_to_die > 8 & buff.ebon_might_self.remains > cast_time & ( equipped.neltharions_call_to_chaos || talent.molten_embers.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "4",
["criteria"] = "target.time_to_die > 4 & talent.font_of_magic.enabled & ( buff.ebon_might_self.remains > cast_time || buff.tip_the_scales.up )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "3",
["criteria"] = "target.time_to_die > 8 & ( buff.ebon_might_self.remains > cast_time || buff.tip_the_scales.up ) & ! equipped.neltharions_call_to_chaos",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "2",
["criteria"] = "target.time_to_die > 12 & buff.ebon_might_self.remains > cast_time & ! equipped.neltharions_call_to_chaos",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "1",
["criteria"] = "target.time_to_die > 16 & buff.ebon_might_self.remains > cast_time & ! equipped.neltharions_call_to_chaos || empowering.fire_breath",
["cycle_targets"] = 1,
},
},
["filler"] = {
{
["enabled"] = true,
["criteria"] = "( buff.ancient_flame.up || mana >= 200000 || ! talent.dream_of_spring.enabled || variable.spam_heal = 0 ) & ( active_enemies = 1 || talent.pupil_of_alexstrasza.enabled )",
["action"] = "living_flame",
},
{
["action"] = "azure_strike",
["enabled"] = true,
},
},
},
["version"] = 20240729,
["warnings"] = "The import for 'filler' required some automated changes.\nLine 1: Converted 'talent.dream_of_spring' to 'talent.dream_of_spring.enabled' (1x).\nLine 1: Converted 'talent.pupil_of_alexstrasza' to 'talent.pupil_of_alexstrasza.enabled' (1x).\n\nThe import for 'opener_filler' required some automated changes.\nLine 4: Converted 'talent.pupil_of_alexstrasza' to 'talent.pupil_of_alexstrasza.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 7: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 7: Converted 'talent.extended_battle' to 'talent.extended_battle.enabled' (1x).\nLine 7: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 9: Converted 'talent.threads_of_fate' to 'talent.threads_of_fate.enabled' (1x).\nLine 10: Converted 'talent.time_skip' to 'talent.time_skip.enabled' (1x).\nLine 10: Converted 'talent.interwoven_threads' to 'talent.interwoven_threads.enabled' (1x).\nLine 10: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 10: Converted 'talent.molten_embers' to 'talent.molten_embers.enabled' (1x).\nLine 11: Converted 'talent.molten_embers' to 'talent.molten_embers.enabled' (1x).\nLine 11: Converted 'talent.threads_of_fate' to 'talent.threads_of_fate.enabled' (1x).\nLine 12: Converted 'talent.time_skip' to 'talent.time_skip.enabled' (1x).\nLine 12: Converted 'talent.interwoven_threads' to 'talent.interwoven_threads.enabled' (1x).\nLine 12: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 13: Converted 'trinket.nymues_unraveling_spindle.cooldown.remains' to 'cooldown.nymues_unraveling_spindle.remains'.\nLine 13: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 13: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 14: Converted 'trinket.nymues_unraveling_spindle.cooldown.remains' to 'cooldown.nymues_unraveling_spindle.remains'.\nLine 14: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 14: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 17: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 17: Converted 'talent.molten_embers' to 'talent.molten_embers.enabled' (1x).\nLine 18: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 20: Converted 'talent.dream_of_spring' to 'talent.dream_of_spring.enabled' (1x).\nLine 23: Converted 'talent.ancient_flame' to 'talent.ancient_flame.enabled' (1x).\nLine 23: Converted 'talent.scarlet_adaptation' to 'talent.scarlet_adaptation.enabled' (1x).\nLine 23: Converted 'talent.dream_of_spring' to 'talent.dream_of_spring.enabled' (1x).\nLine 24: Converted 'talent.ancient_flame' to 'talent.ancient_flame.enabled' (1x).\nLine 24: Converted 'talent.scarlet_adaptation' to 'talent.scarlet_adaptation.enabled' (1x).\nLine 24: Converted 'talent.dream_of_spring' to 'talent.dream_of_spring.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.interwoven_threads' to 'talent.interwoven_threads.enabled' (1x).\nLine 4: Converted 'talent.interwoven_threads' to 'talent.interwoven_threads.enabled' (1x).\nLine 6: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 6: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 7: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 7: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 8: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 8: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 9: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 9: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 10: Converted 'trinket.1.is.beacon_to_the_beyond' to 'trinket.t1.is.beacon_to_the_beyond' (1x).\nLine 10: Converted 'trinket.1.is.belorrelos_the_suncaller' to 'trinket.t1.is.belorrelos_the_suncaller' (1x).\nLine 11: Converted 'trinket.2.is.beacon_to_the_beyond' to 'trinket.t2.is.beacon_to_the_beyond' (1x).\nLine 11: Converted 'trinket.2.is.belorrelos_the_suncaller' to 'trinket.t2.is.belorrelos_the_suncaller' (1x).\nLine 12: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 12: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 12: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 12: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 12: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 12: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 12: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 12: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 12: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 12: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 12: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 13: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 13: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 13: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 13: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 13: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 13: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 13: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 13: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 13: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 13: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 13: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 14: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%120=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%120=0)'.\nLine 15: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 15: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 15: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%120=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%120=0)'.\nLine 16: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 16: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 16: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 16: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 16: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 16: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 16: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 16: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 16: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 16: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 16: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 16: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 16: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 16: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 16: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 16: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 16: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 16: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 16: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 16: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 16: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(0.5+trinket.t2.has_use_buff*3+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(0.5+trinket.t1.has_use_buff*3+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(0.5+trinket.t2.has_use_buff*3+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(0.5+trinket.t1.has_use_buff*3+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\nLine 17: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 17: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 18: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 18: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 18: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 18: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 18: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 18: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 18: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 18: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'items' required some automated changes.\nLine 1: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 1: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 1: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 1: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 3: Converted 'trinket.2.cooldown.up' to 'trinket.t2.cooldown.up' (1x).\nLine 3: Converted 'trinket.2.cooldown.up' to 'trinket.t2.cooldown.up'.\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.up' to 'trinket.t1.cooldown.up' (1x).\nLine 4: Converted 'trinket.1.cooldown.up' to 'trinket.t1.cooldown.up'.\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\n\nThe import for 'fb' required some automated changes.\nLine 1: Converted 'talent.molten_embers' to 'talent.molten_embers.enabled' (1x).\nLine 2: Converted 'talent.molten_embers' to 'talent.molten_embers.enabled' (1x).\nLine 3: Converted 'talent.molten_embers' to 'talent.molten_embers.enabled' (1x).\nLine 4: Converted 'talent.molten_embers' to 'talent.molten_embers.enabled' (1x).\nLine 5: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/variable,name=spam_heal,default=1,op=reset\nactions.precombat+=/variable,name=minimum_opener_delay,op=reset,default=0\nactions.precombat+=/variable,name=opener_delay,value=variable.minimum_opener_delay,if=!talent.interwoven_threads\nactions.precombat+=/variable,name=opener_delay,value=variable.minimum_opener_delay+variable.opener_delay,if=talent.interwoven_threads\nactions.precombat+=/variable,name=opener_cds_detected,op=reset,default=0\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\n# Nymues is complicated, Manual Handle\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.nymues_unraveling_spindle||trinket.1.is.spymasters_web\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.nymues_unraveling_spindle||trinket.2.is.spymasters_web\nactions.precombat+=/variable,name=trinket_1_ogcd_cast,value=trinket.1.is.beacon_to_the_beyond||trinket.1.is.belorrelos_the_suncaller\nactions.precombat+=/variable,name=trinket_2_ogcd_cast,value=trinket.2.is.beacon_to_the_beyond||trinket.2.is.belorrelos_the_suncaller\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.intellect||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)&!variable.trinket_1_exclude\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.intellect||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)&!variable.trinket_2_exclude\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%120=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%120=0)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.2.has_cooldown&!variable.trinket_2_exclude||!trinket.1.has_cooldown)||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(0.5+trinket.2.has_buff.intellect*3+trinket.2.has_buff.mastery)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(0.5+trinket.1.has_buff.intellect*3+trinket.1.has_buff.mastery)*(variable.trinket_1_sync)*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl\n# Double on use - Priotize Intellect on use trinkets over Nymues, force overwriting the normal logic to guarantee it is correct.\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=trinket.1.is.nymues_unraveling_spindle&trinket.2.has_buff.intellect||trinket.2.is.nymues_unraveling_spindle&!trinket.1.has_buff.intellect,if=(trinket.1.is.nymues_unraveling_spindle||trinket.2.is.nymues_unraveling_spindle)&(variable.trinket_1_buffs&variable.trinket_2_buffs)\nactions.precombat+=/blistering_scales,if=active_dot.blistering_scales=0\nactions.precombat+=/living_flame\n\nactions+=/variable,name=temp_wound,value=debuff.temporal_wound.remains\nactions+=/prescience,cycle_targets=1,if=(active_dot.prescience<group_members||solo&buff.prescience.down)&((full_recharge_time<=gcd.max*3||cooldown.ebon_might.remains<=gcd.max*3&(buff.ebon_might_self.remains-gcd.max*3)<=buff.ebon_might_self.duration*0.4||variable.temp_wound>=(gcd.max+action.eruption.cast_time)||boss&fight_remains<=30)&(buff.trembling_earth.stack+evoker.prescience_buffs)<=(5+(full_recharge_time<=gcd.max*3)))\nactions+=/call_action_list,name=ebon_logic,if=(buff.ebon_might_self.remains-cast_time)<=buff.ebon_might_self.duration*0.4&(active_enemies>0||raid_event.adds.in<=3)&(evoker.prescience_buffs>=2&time<=10||evoker.prescience_buffs>=3||!group&!raid||buff.ebon_might_self.remains>=action.ebon_might.cast_time||group_members<=3)\nactions+=/run_action_list,name=opener_filler,if=variable.opener_delay>0&boss\nactions+=/potion,if=debuff.temporal_wound.up&buff.ebon_might_self.up\nactions+=/call_action_list,name=items\nactions+=/variable,name=bombardment_clause,value=(!talent.bombardments||talent.extended_battle||debuff.bombardments.remains<=7&!buff.mass_disintegrate_stacks.up),if=talent.bombardments\nactions+=/deep_breath\nactions+=/tip_the_scales,if=talent.threads_of_fate,line_cd=110\nactions+=/call_action_list,name=fb,if=cooldown.time_skip.up&talent.time_skip&!talent.interwoven_threads&(!talent.bombardments||variable.bombardment_clause||!dot.fire_breath_damage.ticking&talent.molten_embers)\nactions+=/tip_the_scales,if=cooldown.upheaval.ready&!cooldown.fire_breath.ready&talent.molten_embers&!talent.threads_of_fate,line_cd=110\nactions+=/upheaval,empower_to=1,if=target.time_to_die>cast_time+0.2&buff.ebon_might_self.remains>cast_time&cooldown.time_skip.up&talent.time_skip&!talent.interwoven_threads&(!talent.bombardments||variable.bombardment_clause)\nactions+=/breath_of_eons,if=((cooldown.ebon_might.remains<=4||buff.ebon_might_self.up)&target.time_to_die>15&raid_event.adds.in>15&(!equipped.nymues_unraveling_spindle||trinket.nymues_unraveling_spindle.cooldown.remains>=10||fight_remains<30||trinket.1.is.nymues_unraveling_spindle&variable.trinket_priority=2||trinket.2.is.nymues_unraveling_spindle&variable.trinket_priority=1)||boss&fight_remains<30)&boss,line_cd=117\nactions+=/breath_of_eons,if=((cooldown.ebon_might.remains<=4||buff.ebon_might_self.up)&target.time_to_die>15&(!equipped.nymues_unraveling_spindle||trinket.nymues_unraveling_spindle.cooldown.remains>=10||fight_remains<30||trinket.1.is.nymues_unraveling_spindle&variable.trinket_priority=2||trinket.2.is.nymues_unraveling_spindle&variable.trinket_priority=1)||fight_remains<30)&!boss\nactions+=/living_flame,if=buff.leaping_flames.up&cooldown.fire_breath.up&!boss\nactions+=/living_flame,if=cooldown.breath_of_eons.up&evoker.allied_cds_up=0&target.time_to_die>15&boss\nactions+=/call_action_list,name=fb,if=(raid_event.adds.remains>13||raid_event.adds.in>20||evoker.allied_cds_up>0||solo||!raid_event.adds.exists)&(!talent.bombardments||variable.bombardment_clause||!dot.fire_breath_damage.ticking&talent.molten_embers)||empowering.fire_breath\nactions+=/upheaval,empower_to=1,if=target.time_to_die>cast_time+0.2&buff.ebon_might_self.remains>cast_time&(raid_event.adds.remains>13||!raid_event.adds.exists||raid_event.adds.in>20)&(!talent.bombardments||variable.bombardment_clause)||empowering.upheaval\nactions+=/time_skip,if=(cooldown.fire_breath.remains+cooldown.upheaval.remains+cooldown.prescience.full_recharge_time)>=35\nactions+=/emerald_blossom,if=talent.dream_of_spring&buff.essence_burst.up&(variable.spam_heal=2||variable.spam_heal=1&!buff.ancient_flame.up)&(buff.ebon_might_self.up||essence.deficit=0||buff.essence_burst.stack=buff.essence_burst.max_stack&cooldown.ebon_might.remains>4)\nactions+=/eruption,if=buff.ebon_might_self.remains>execute_time||essence.deficit=0||buff.essence_burst.stack=buff.essence_burst.max_stack&cooldown.ebon_might.remains>4\nactions+=/blistering_scales,if=active_dot.blistering_scales=0&buff.ebon_might_self.down\nactions+=/emerald_blossom,if=!buff.ebon_might_self.up&talent.ancient_flame&talent.scarlet_adaptation&!talent.dream_of_spring&!buff.ancient_flame.up&active_enemies=1\nactions+=/verdant_embrace,if=!buff.ebon_might_self.up&talent.ancient_flame&talent.scarlet_adaptation&!buff.ancient_flame.up&(!talent.dream_of_spring||mana>=200000)&active_enemies=1\nactions+=/run_action_list,name=filler\n\nactions.ebon_logic+=/ebon_might\n\nactions.fb+=/tip_the_scales,if=cooldown.fire_breath.ready&buff.ebon_might_self.up&!talent.molten_embers\nactions.fb+=/fire_breath,empower_to=1,cycle_targets=1,if=target.time_to_die>16&buff.ebon_might_self.remains>cast_time&(equipped.neltharions_call_to_chaos||talent.molten_embers)\nactions.fb+=/fire_breath,empower_to=2,cycle_targets=1,if=target.time_to_die>12&buff.ebon_might_self.remains>cast_time&(equipped.neltharions_call_to_chaos||talent.molten_embers)\nactions.fb+=/fire_breath,empower_to=3,cycle_targets=1,if=target.time_to_die>8&buff.ebon_might_self.remains>cast_time&(equipped.neltharions_call_to_chaos||talent.molten_embers)\nactions.fb+=/fire_breath,empower_to=4,cycle_targets=1,if=target.time_to_die>4&talent.font_of_magic&(buff.ebon_might_self.remains>cast_time||buff.tip_the_scales.up)\nactions.fb+=/fire_breath,empower_to=3,cycle_targets=1,if=target.time_to_die>8&(buff.ebon_might_self.remains>cast_time||buff.tip_the_scales.up)&!equipped.neltharions_call_to_chaos\nactions.fb+=/fire_breath,empower_to=2,cycle_targets=1,if=target.time_to_die>12&buff.ebon_might_self.remains>cast_time&!equipped.neltharions_call_to_chaos\nactions.fb+=/fire_breath,empower_to=1,cycle_targets=1,if=target.time_to_die>16&buff.ebon_might_self.remains>cast_time&!equipped.neltharions_call_to_chaos||empowering.fire_breath\n\nactions.filler+=/living_flame,if=(buff.ancient_flame.up||mana>=200000||!talent.dream_of_spring||variable.spam_heal=0)&(active_enemies=1||talent.pupil_of_alexstrasza)\nactions.filler+=/azure_strike\n\nactions.items+=/use_item,name=nymues_unraveling_spindle,if=cooldown.breath_of_eons.remains<=3&(trinket.1.is.nymues_unraveling_spindle&variable.trinket_priority=1||trinket.2.is.nymues_unraveling_spindle&variable.trinket_priority=2)||(cooldown.fire_breath.remains<=4||cooldown.upheaval.remains<=4)&cooldown.breath_of_eons.remains>10&!debuff.temporal_wound.up&(trinket.1.is.nymues_unraveling_spindle&variable.trinket_priority=2||trinket.2.is.nymues_unraveling_spindle&variable.trinket_priority=1)\nactions.items+=/use_item,name=spymasters_web,if=buff.spymasters_report.stack=1&debuff.temporal_wound.up&!buff.spymasters_web.up||debuff.temporal_wound.up&(fight_remains<120)||(fight_remains<=20||evoker.allied_cds_up>0&fight_remains<=60||evoker.allied_cds_up>0&fight_remains<=30)&!buff.spymasters_web.up\nactions.items+=/use_item,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(debuff.temporal_wound.up||variable.trinket_2_buffs&!trinket.2.cooldown.up&(prev_gcd.1.fire_breath||prev_gcd.1.upheaval)&buff.ebon_might_self.up)&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.items+=/use_item,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(debuff.temporal_wound.up||variable.trinket_1_buffs&!trinket.1.cooldown.up&(prev_gcd.1.fire_breath||prev_gcd.1.upheaval)&buff.ebon_might_self.up)&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n## Azure Strike for OGCD trinkets. Ideally this would be Prescience casts in reality but this is simpler and seems to have no noticeable diferrence in DPS.\n## actions.items+=/azure_strike,if=cooldown.item_cd_1141.up&(variable.trinket_1_ogcd_cast&trinket.1.cooldown.up&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains)||variable.trinket_2_ogcd_cast&trinket.2.cooldown.up&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains))\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.items+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains)&(gcd.remains>0.1||!variable.trinket_1_ogcd_cast)\nactions.items+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains)&(gcd.remains>0.1||!variable.trinket_2_ogcd_cast)\n# Use on use weapons\nactions.items+=/use_item,slot=main_hand,use_off_gcd=1,if=gcd.remains>=gcd.max*0.6\n\nactions.opener_filler+=/variable,name=opener_delay,value=variable.opener_delay>?variable.minimum_opener_delay,if=!variable.opener_cds_detected&evoker.allied_cds_up>0\nactions.opener_filler+=/variable,name=opener_delay,value=variable.opener_delay-1\nactions.opener_filler+=/variable,name=opener_cds_detected,value=1,if=!variable.opener_cds_detected&evoker.allied_cds_up>0\nactions.opener_filler+=/living_flame,if=active_enemies=1||talent.pupil_of_alexstrasza\nactions.opener_filler+=/azure_strike",
["author"] = "Saeldur (Icy-Veins); SimC",
},
["Beast Mastery"] = {
["source"] = "# https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240727,
["author"] = "SimC",
["desc"] = "2024-07-27: Add Call of the Wild talent checks; use Counter Shot; use Hunter's Mark\n\n2024-07-23: The War Within",
["lists"] = {
["default"] = {
{
["action"] = "counter_shot",
["enabled"] = true,
},
{
["action"] = "tranquilizing_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "active_dot.hunters_mark = 0 & target.time_to_pct_80 > 20",
["action"] = "hunters_mark",
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 2 || ! talent.beast_cleave.enabled & active_enemies < 3",
["action"] = "call_action_list",
["list_name"] = "st",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 || talent.beast_cleave.enabled & active_enemies > 1",
["action"] = "call_action_list",
["list_name"] = "cleave",
},
},
["precombat"] = {
{
["action"] = "summon_pet",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! trinket.t2.has_cooldown || trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff || ! trinket.t1.is.mirror_of_fractured_tomorrows & ( trinket.t2.is.mirror_of_fractured_tomorrows || trinket.t2.cooldown.duration < trinket.t1.cooldown.duration || trinket.t2.cast_time < trinket.t1.cast_time || trinket.t2.cast_time = trinket.t1.cast_time & trinket.t2.cooldown.duration = trinket.t1.cooldown.duration ) ) || ! trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration < trinket.t1.cooldown.duration || trinket.t2.cast_time < trinket.t1.cast_time || trinket.t2.cast_time = trinket.t1.cast_time & trinket.t2.cooldown.duration = trinket.t1.cooldown.duration ) )",
["description"] = "Determine the stronger trinket to sync with cooldowns. In descending priority: buff effects > damage effects, longer > shorter cooldowns, longer > shorter cast times. Special case to consider Mirror of Fractured Tomorrows weaker than other buff effects since its power is split between the dmg effect and the buff effect.",
["var_name"] = "trinket_1_stronger",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! variable.trinket_1_stronger",
["var_name"] = "trinket_2_stronger",
},
{
["enabled"] = true,
["criteria"] = "active_dot.hunters_mark = 0",
["action"] = "hunters_mark",
},
},
["cleave"] = {
{
["enabled"] = true,
["action"] = "barbed_shot",
["criteria"] = "buff.frenzy.up & buff.frenzy.remains <= gcd.max + 0.25 || talent.scent_of_blood.enabled & cooldown.bestial_wrath.remains < 12 + gcd.max || buff.frenzy.stack < 3 & ( cooldown.bestial_wrath.ready || talent.call_of_the_wild.enabled & cooldown.call_of_the_wild.ready ) || full_recharge_time < gcd.max & cooldown.bestial_wrath.remains",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.beast_cleave.remains < 0.25 + gcd.max & ( ! talent.bloody_frenzy.enabled || cooldown.call_of_the_wild.remains )",
["action"] = "multishot",
},
{
["action"] = "bestial_wrath",
["enabled"] = true,
},
{
["action"] = "call_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.kill_cleave.enabled",
["action"] = "kill_command",
},
{
["action"] = "explosive_shot",
["enabled"] = true,
},
{
["action"] = "bloodshed",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "kill_shot",
["criteria"] = "talent.venoms_bite.enabled & dot.serpent_sting.remains < gcd.max & target.time_to_die > 10",
["cycle_targets"] = 1,
},
{
["action"] = "dire_beast",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "barbed_shot",
["criteria"] = "buff.call_of_the_wild.up || boss & fight_remains < 9 || talent.wild_call.enabled & charges_fractional > 1.2 || talent.savagery.enabled",
["cycle_targets"] = 1,
},
{
["action"] = "kill_command",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.beast_cleave.remains < gcd.max * 2",
["action"] = "multishot",
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || target.time_to_die < 5",
["action"] = "lights_judgment",
},
{
["action"] = "kill_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "focus.time_to_max < gcd.max * 2",
["action"] = "cobra_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || target.time_to_die < 5",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "( focus + focus.regen + 30 ) < focus.max",
["action"] = "arcane_torrent",
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 13",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 16",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 16",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 9",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 31",
["action"] = "potion",
},
},
["st"] = {
{
["enabled"] = true,
["action"] = "barbed_shot",
["criteria"] = "buff.frenzy.up & buff.frenzy.remains <= gcd.max + 0.25 || buff.frenzy.stack < 3 & ( talent.scent_of_blood.enabled & ( cooldown.bestial_wrath.ready || talent.call_of_the_wild.enabled & cooldown.call_of_the_wild.ready ) || ! cooldown.bestial_wrath.ready )",
["cycle_targets"] = 1,
},
{
["action"] = "bestial_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( full_recharge_time < gcd.max & talent.alpha_predator.enabled ) || talent.call_of_the_wild.enabled",
["action"] = "kill_command",
},
{
["enabled"] = true,
["criteria"] = "talent.huntmasters_call.enabled & ( ! buff.bestial_wrath.up & talent.killer_cobra.enabled || talent.call_of_the_wild.enabled & cooldown.call_of_the_wild.ready )",
["action"] = "dire_beast",
},
{
["enabled"] = true,
["action"] = "kill_shot",
["criteria"] = "talent.venoms_bite.enabled & dot.serpent_sting.refreshable",
["cycle_targets"] = 1,
},
{
["action"] = "call_of_the_wild",
["enabled"] = true,
},
{
["action"] = "bloodshed",
["enabled"] = true,
},
{
["action"] = "kill_command",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "barbed_shot",
["criteria"] = "talent.wild_call.enabled & charges_fractional > 1.4 || buff.call_of_the_wild.up || full_recharge_time < gcd.max & cooldown.bestial_wrath.remains || talent.scent_of_blood.enabled & ( cooldown.bestial_wrath.remains < 12 + gcd.max ) || talent.savagery.enabled || boss & fight_remains < 9",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.up & talent.killer_cobra.enabled",
["action"] = "cobra_shot",
},
{
["action"] = "dire_beast",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.bestial_wrath.up & talent.killer_cobra.enabled || ! talent.killer_cobra.enabled",
["action"] = "explosive_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.hunters_prey.remains < gcd.max * 2 & talent.venoms_bite.enabled || target.health.pct < 20",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || target.time_to_die < 5",
["action"] = "lights_judgment",
},
{
["action"] = "cobra_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || target.time_to_die < 5",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || target.time_to_die < 5",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "( focus + focus.regen + 15 ) < focus.max",
["action"] = "arcane_torrent",
},
},
["trinkets"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.call_of_the_wild.enabled & ( prev_gcd.1.call_of_the_wild ) || ! talent.call_of_the_wild.enabled & ( buff.bestial_wrath.up || cooldown.bestial_wrath.remains_guess < 5 )",
["description"] = "True if effects that are desirable to sync a trinket buff with are ready.",
["var_name"] = "sync_ready",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.call_of_the_wild.enabled & buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up",
["description"] = "True if effecs that are desirable to sync a trinket buff with are active.",
["var_name"] = "sync_active",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Time until the effects that are desirable to sync a trinket buff with will be ready.",
["criteria"] = "! talent.call_of_the_wild.enabled",
["var_name"] = "sync_remains",
["action"] = "variable",
["value_else"] = "cooldown.call_of_the_wild.remains",
["value"] = "cooldown.bestial_wrath.remains_guess",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "trinket.t1.has_use_buff & ( variable.sync_ready & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains ) || ! variable.sync_ready & ( variable.trinket_1_stronger & ( variable.sync_remains > trinket.t1.cooldown.duration / 3 & fight_remains > trinket.t1.cooldown.duration + 20 || trinket.t2.has_use_buff & trinket.t2.cooldown.remains > variable.sync_remains - 15 & trinket.t2.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains + 45 > fight_remains ) || variable.trinket_2_stronger & ( trinket.t2.cooldown.remains & ( trinket.t2.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains >= 20 || trinket.t2.cooldown.remains - 5 >= variable.sync_remains & ( variable.sync_remains > trinket.t1.cooldown.duration / 3 || trinket.t1.cooldown.duration < fight_remains & ( variable.sync_remains + trinket.t1.cooldown.duration > fight_remains ) ) ) || trinket.t2.cooldown.ready & variable.sync_remains > 20 & variable.sync_remains < trinket.t2.cooldown.duration / 3 ) ) ) || ! trinket.t1.has_use_buff & ( trinket.t1.cast_time = 0 || ! variable.sync_active ) & ( ! trinket.t2.has_use_buff & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains ) || trinket.t2.has_use_buff & ( ! variable.sync_active & variable.sync_remains > 20 || trinket.t2.cooldown.remains > 20 ) ) || boss & fight_remains < 25 & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains )",
["description"] = "Uses buff effect trinkets with cooldowns and is willing to delay usage up to half the trinket cooldown if it won't lose a usage in the fight. Fills in downtime with weaker buff effects if they won't also be saved for later cooldowns (happens if it won't delay over half the trinket cooldown and a stronger trinket won't be up in time) or damage effects if they won't inferfere with any buff effect usage. Intended to be slot-agnostic so that any order of the same trinket pair should result in the same usage.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "trinket.t2.has_use_buff & ( variable.sync_ready & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains ) || ! variable.sync_ready & ( variable.trinket_2_stronger & ( variable.sync_remains > trinket.t2.cooldown.duration / 3 & fight_remains > trinket.t2.cooldown.duration + 20 || trinket.t1.has_use_buff & trinket.t1.cooldown.remains > variable.sync_remains - 15 & trinket.t1.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains + 45 > fight_remains ) || variable.trinket_1_stronger & ( trinket.t1.cooldown.remains & ( trinket.t1.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains >= 20 || trinket.t1.cooldown.remains - 5 >= variable.sync_remains & ( variable.sync_remains > trinket.t2.cooldown.duration / 3 || trinket.t2.cooldown.duration < fight_remains & ( variable.sync_remains + trinket.t2.cooldown.duration > fight_remains ) ) ) || trinket.t1.cooldown.ready & variable.sync_remains > 20 & variable.sync_remains < trinket.t1.cooldown.duration / 3 ) ) ) || ! trinket.t2.has_use_buff & ( trinket.t2.cast_time = 0 || ! variable.sync_active ) & ( ! trinket.t1.has_use_buff & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains ) || trinket.t1.has_use_buff & ( ! variable.sync_active & variable.sync_remains > 20 || trinket.t1.cooldown.remains > 20 ) ) || boss & fight_remains < 25 & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains )",
},
},
},
["version"] = 20240727,
["warnings"] = "The import for 'default' required some automated changes.\nLine 6: Converted 'talent.beast_cleave' to 'talent.beast_cleave.enabled' (1x).\nLine 7: Converted 'talent.beast_cleave' to 'talent.beast_cleave.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 2: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 1: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 2: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 2: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 3: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted operations in 'trinket.t1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.t1.cooldown.duration%3&fight_remains>trinket.t1.cooldown.duration+20||trinket.t2.has_use_buff&trinket.t2.cooldown.remains>variable.sync_remains-15&trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.t2.cooldown.remains&(trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t1.cooldown.duration%3||trinket.t1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t1.cooldown.duration>fight_remains)))||trinket.t2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t2.cooldown.duration%3)))||!trinket.t1.has_use_buff&(trinket.t1.cast_time=0||!variable.sync_active)&(!trinket.t2.has_use_buff&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||trinket.t2.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.t2.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)' to 'trinket.t1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.t1.cooldown.duration/3&fight_remains>trinket.t1.cooldown.duration+20||trinket.t2.has_use_buff&trinket.t2.cooldown.remains>variable.sync_remains-15&trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.t2.cooldown.remains&(trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t1.cooldown.duration/3||trinket.t1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t1.cooldown.duration>fight_remains)))||trinket.t2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t2.cooldown.duration/3)))||!trinket.t1.has_use_buff&(trinket.t1.cast_time=0||!variable.sync_active)&(!trinket.t2.has_use_buff&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||trinket.t2.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.t2.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)'.\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 5: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted operations in 'trinket.t2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.t2.cooldown.duration%3&fight_remains>trinket.t2.cooldown.duration+20||trinket.t1.has_use_buff&trinket.t1.cooldown.remains>variable.sync_remains-15&trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.t1.cooldown.remains&(trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t2.cooldown.duration%3||trinket.t2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t2.cooldown.duration>fight_remains)))||trinket.t1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t1.cooldown.duration%3)))||!trinket.t2.has_use_buff&(trinket.t2.cast_time=0||!variable.sync_active)&(!trinket.t1.has_use_buff&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||trinket.t1.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.t1.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)' to 'trinket.t2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.t2.cooldown.duration/3&fight_remains>trinket.t2.cooldown.duration+20||trinket.t1.has_use_buff&trinket.t1.cooldown.remains>variable.sync_remains-15&trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.t1.cooldown.remains&(trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t2.cooldown.duration/3||trinket.t2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t2.cooldown.duration>fight_remains)))||trinket.t1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t1.cooldown.duration/3)))||!trinket.t2.has_use_buff&(trinket.t2.cast_time=0||!variable.sync_active)&(!trinket.t1.has_use_buff&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||trinket.t1.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.t1.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)'.\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 2: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 3: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 4: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 5: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 1: Converted 'talent.scent_of_blood' to 'talent.scent_of_blood.enabled' (1x).\nLine 1: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 3: Converted 'talent.alpha_predator' to 'talent.alpha_predator.enabled' (1x).\nLine 3: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 4: Converted 'talent.huntmasters_call' to 'talent.huntmasters_call.enabled' (1x).\nLine 4: Converted 'talent.killer_cobra' to 'talent.killer_cobra.enabled' (1x).\nLine 4: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 5: Converted 'talent.venoms_bite' to 'talent.venoms_bite.enabled' (1x).\nLine 9: Converted 'talent.wild_call' to 'talent.wild_call.enabled' (1x).\nLine 9: Converted 'talent.scent_of_blood' to 'talent.scent_of_blood.enabled' (1x).\nLine 9: Converted 'talent.savagery' to 'talent.savagery.enabled' (1x).\nLine 10: Converted 'talent.killer_cobra' to 'talent.killer_cobra.enabled' (1x).\nLine 12: Converted 'talent.killer_cobra' to 'talent.killer_cobra.enabled' (1x).\nLine 12: Converted 'talent.killer_cobra' to 'talent.killer_cobra.enabled' (1x).\nLine 13: Converted 'talent.venoms_bite' to 'talent.venoms_bite.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 1: Converted 'talent.scent_of_blood' to 'talent.scent_of_blood.enabled' (1x).\nLine 1: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 2: Converted 'talent.bloody_frenzy' to 'talent.bloody_frenzy.enabled' (1x).\nLine 5: Converted 'talent.kill_cleave' to 'talent.kill_cleave.enabled' (1x).\nLine 8: Converted 'talent.venoms_bite' to 'talent.venoms_bite.enabled' (1x).\nLine 10: Converted 'talent.wild_call' to 'talent.wild_call.enabled' (1x).\nLine 10: Converted 'talent.savagery' to 'talent.savagery.enabled' (1x).\n\nImported 6 action lists.\n",
["profile"] = "actions.precombat+=/summon_pet\n# Determine the stronger trinket to sync with cooldowns. In descending priority: buff effects > damage effects, longer > shorter cooldowns, longer > shorter cast times. Special case to consider Mirror of Fractured Tomorrows weaker than other buff effects since its power is split between the dmg effect and the buff effect.\nactions.precombat+=/variable,name=trinket_1_stronger,value=!trinket.2.has_cooldown||trinket.1.has_use_buff&(!trinket.2.has_use_buff||!trinket.1.is.mirror_of_fractured_tomorrows&(trinket.2.is.mirror_of_fractured_tomorrows||trinket.2.cooldown.duration<trinket.1.cooldown.duration||trinket.2.cast_time<trinket.1.cast_time||trinket.2.cast_time=trinket.1.cast_time&trinket.2.cooldown.duration=trinket.1.cooldown.duration))||!trinket.1.has_use_buff&(!trinket.2.has_use_buff&(trinket.2.cooldown.duration<trinket.1.cooldown.duration||trinket.2.cast_time<trinket.1.cast_time||trinket.2.cast_time=trinket.1.cast_time&trinket.2.cooldown.duration=trinket.1.cooldown.duration))\nactions.precombat+=/variable,name=trinket_2_stronger,value=!variable.trinket_1_stronger\nactions.precombat+=/hunters_mark,if=active_dot.hunters_mark=0\n\nactions+=/counter_shot\nactions+=/tranquilizing_shot\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=trinkets\nactions+=/hunters_mark,if=active_dot.hunters_mark=0&target.time_to_pct_80>20\nactions+=/call_action_list,name=st,if=active_enemies<2||!talent.beast_cleave&active_enemies<3\nactions+=/call_action_list,name=cleave,if=active_enemies>2||talent.beast_cleave&active_enemies>1\n\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&(buff.bestial_wrath.up||cooldown.bestial_wrath.remains<30)||boss&fight_remains<16\nactions.cds+=/berserking,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<13\nactions.cds+=/blood_fury,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<16\nactions.cds+=/ancestral_call,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<16\nactions.cds+=/fireblood,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<9\nactions.cds+=/potion,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<31\n\nactions.cleave+=/barbed_shot,cycle_targets=1,if=buff.frenzy.up&buff.frenzy.remains<=gcd+0.25||talent.scent_of_blood&cooldown.bestial_wrath.remains<12+gcd||buff.frenzy.stack<3&(cooldown.bestial_wrath.ready||talent.call_of_the_wild&cooldown.call_of_the_wild.ready)||full_recharge_time<gcd&cooldown.bestial_wrath.remains\nactions.cleave+=/multishot,if=buff.beast_cleave.remains<0.25+gcd&(!talent.bloody_frenzy||cooldown.call_of_the_wild.remains)\nactions.cleave+=/bestial_wrath\nactions.cleave+=/call_of_the_wild\nactions.cleave+=/kill_command,if=talent.kill_cleave\nactions.cleave+=/explosive_shot\nactions.cleave+=/bloodshed\nactions.cleave+=/kill_shot,cycle_targets=1,if=talent.venoms_bite&dot.serpent_sting.remains<gcd&target.time_to_die>10\nactions.cleave+=/dire_beast\nactions.cleave+=/barbed_shot,cycle_targets=1,if=buff.call_of_the_wild.up||boss&fight_remains<9||talent.wild_call&charges_fractional>1.2||talent.savagery\nactions.cleave+=/kill_command\nactions.cleave+=/multishot,if=buff.beast_cleave.remains<gcd*2\nactions.cleave+=/lights_judgment,if=buff.bestial_wrath.down||target.time_to_die<5\nactions.cleave+=/kill_shot\nactions.cleave+=/cobra_shot,if=focus.time_to_max<gcd*2\nactions.cleave+=/bag_of_tricks,if=buff.bestial_wrath.down||target.time_to_die<5\nactions.cleave+=/arcane_torrent,if=(focus+focus.regen+30)<focus.max\n\nactions.st+=/barbed_shot,cycle_targets=1,if=buff.frenzy.up&buff.frenzy.remains<=gcd+0.25||buff.frenzy.stack<3&(talent.scent_of_blood&(cooldown.bestial_wrath.ready||talent.call_of_the_wild&cooldown.call_of_the_wild.ready)||!cooldown.bestial_wrath.ready)\nactions.st+=/bestial_wrath\nactions.st+=/kill_command,if=(full_recharge_time<gcd&talent.alpha_predator)||talent.call_of_the_wild\nactions.st+=/dire_beast,if=talent.huntmasters_call&(!buff.bestial_wrath.up&talent.killer_cobra||talent.call_of_the_wild&cooldown.call_of_the_wild.ready)\nactions.st+=/kill_shot,cycle_targets=1,if=talent.venoms_bite&dot.serpent_sting.refreshable\nactions.st+=/call_of_the_wild\nactions.st+=/bloodshed\nactions.st+=/kill_command\nactions.st+=/barbed_shot,cycle_targets=1,if=talent.wild_call&charges_fractional>1.4||buff.call_of_the_wild.up||full_recharge_time<gcd&cooldown.bestial_wrath.remains||talent.scent_of_blood&(cooldown.bestial_wrath.remains<12+gcd)||talent.savagery||boss&fight_remains<9\nactions.st+=/cobra_shot,if=buff.bestial_wrath.up&talent.killer_cobra\nactions.st+=/dire_beast\nactions.st+=/explosive_shot,if=!buff.bestial_wrath.up&talent.killer_cobra||!talent.killer_cobra\nactions.st+=/kill_shot,if=buff.hunters_prey.remains<gcd*2&talent.venoms_bite||target.health.pct<20\nactions.st+=/lights_judgment,if=buff.bestial_wrath.down||target.time_to_die<5\nactions.st+=/cobra_shot\nactions.st+=/bag_of_tricks,if=buff.bestial_wrath.down||target.time_to_die<5\nactions.st+=/arcane_pulse,if=buff.bestial_wrath.down||target.time_to_die<5\nactions.st+=/arcane_torrent,if=(focus+focus.regen+15)<focus.max\n\n# True if effects that are desirable to sync a trinket buff with are ready.\nactions.trinkets+=/variable,name=sync_ready,value=talent.call_of_the_wild&(prev_gcd.1.call_of_the_wild)||!talent.call_of_the_wild&(buff.bestial_wrath.up||cooldown.bestial_wrath.remains_guess<5)\n# True if effecs that are desirable to sync a trinket buff with are active.\nactions.trinkets+=/variable,name=sync_active,value=talent.call_of_the_wild&buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up\n# Time until the effects that are desirable to sync a trinket buff with will be ready.\nactions.trinkets+=/variable,name=sync_remains,op=setif,value=cooldown.bestial_wrath.remains_guess,value_else=cooldown.call_of_the_wild.remains,condition=!talent.call_of_the_wild\n# Uses buff effect trinkets with cooldowns and is willing to delay usage up to half the trinket cooldown if it won't lose a usage in the fight. Fills in downtime with weaker buff effects if they won't also be saved for later cooldowns (happens if it won't delay over half the trinket cooldown and a stronger trinket won't be up in time) or damage effects if they won't inferfere with any buff effect usage. Intended to be slot-agnostic so that any order of the same trinket pair should result in the same usage.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=trinket.1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.1.cooldown.duration%3&fight_remains>trinket.1.cooldown.duration+20||trinket.2.has_use_buff&trinket.2.cooldown.remains>variable.sync_remains-15&trinket.2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.2.cooldown.remains&(trinket.2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.1.cooldown.duration%3||trinket.1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.1.cooldown.duration>fight_remains)))||trinket.2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.2.cooldown.duration%3)))||!trinket.1.has_use_buff&(trinket.1.cast_time=0||!variable.sync_active)&(!trinket.2.has_use_buff&(variable.trinket_1_stronger||trinket.2.cooldown.remains)||trinket.2.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.2.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_1_stronger||trinket.2.cooldown.remains)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=trinket.2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.2.cooldown.duration%3&fight_remains>trinket.2.cooldown.duration+20||trinket.1.has_use_buff&trinket.1.cooldown.remains>variable.sync_remains-15&trinket.1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.1.cooldown.remains&(trinket.1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.2.cooldown.duration%3||trinket.2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.2.cooldown.duration>fight_remains)))||trinket.1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.1.cooldown.duration%3)))||!trinket.2.has_use_buff&(trinket.2.cast_time=0||!variable.sync_active)&(!trinket.1.has_use_buff&(variable.trinket_2_stronger||trinket.1.cooldown.remains)||trinket.1.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.1.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_2_stronger||trinket.1.cooldown.remains)",
["spec"] = 253,
},
["Vengeance"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20270723,
["spec"] = 581,
["desc"] = "2024-07-23: The War Within",
["profile"] = "actions.precombat+=/variable,name=single_target,value=spell_targets.spirit_bomb=1\nactions.precombat+=/variable,name=small_aoe,value=spell_targets.spirit_bomb>=2&spell_targets.spirit_bomb<=5\nactions.precombat+=/variable,name=big_aoe,value=spell_targets.spirit_bomb>=6\nactions.precombat+=/arcane_torrent\nactions.precombat+=/sigil_of_flame,if=hero_tree.aldrachi_reaver||level<71||(hero_tree.felscarred&talent.student_of_suffering)\nactions.precombat+=/immolation_aura\n\nactions+=/variable,name=num_spawnable_souls,op=reset,default=0\nactions+=/variable,name=num_spawnable_souls,op=max,value=2,if=talent.fracture&cooldown.fracture.charges_fractional>=1&!buff.metamorphosis.up\nactions+=/variable,name=num_spawnable_souls,op=max,value=3,if=talent.fracture&cooldown.fracture.charges_fractional>=1&buff.metamorphosis.up\nactions+=/variable,name=num_spawnable_souls,op=max,value=1,if=talent.soul_sigils&cooldown.sigil_of_flame.up\nactions+=/variable,name=num_spawnable_souls,op=add,value=1,if=talent.soul_carver&(cooldown.soul_carver.remains>(cooldown.soul_carver.duration-3))\nactions+=/disrupt,if=target.debuff.casting.up\nactions+=/infernal_strike,use_off_gcd=1\nactions+=/demon_spikes,use_off_gcd=1,if=!buff.demon_spikes.up&tanking\nactions+=/run_action_list,name=ar,if=hero_tree.aldrachi_reaver||level<71\nactions+=/run_action_list,name=fs,if=hero_tree.felscarred\n\nactions.ar+=/variable,name=spb_threshold,op=setif,condition=talent.fiery_demise&dot.fiery_brand.ticking,value=(variable.single_target*5)+(variable.small_aoe*5)+(variable.big_aoe*4),value_else=(variable.single_target*5)+(variable.small_aoe*5)+(variable.big_aoe*4)\nactions.ar+=/variable,name=can_spb,value=soul_fragments>=variable.spb_threshold\nactions.ar+=/variable,name=can_spb_soon,value=soul_fragments>=variable.spb_threshold\nactions.ar+=/variable,name=can_spb_one_gcd,value=(soul_fragments+variable.num_spawnable_souls)>=variable.spb_threshold\nactions.ar+=/variable,name=dont_soul_cleave,value=variable.can_spb||variable.can_spb_soon||variable.can_spb_one_gcd||prev_gcd.1.fracture\nactions.ar+=/variable,name=rg_enhance_cleave,op=setif,condition=variable.big_aoe||fight_remains<10,value=1,value_else=0\nactions.ar+=/variable,name=cooldown_sync,value=(debuff.reavers_mark.up&buff.thrill_of_the_fight_damage.up)||fight_remains<20\nactions.ar+=/potion,use_off_gcd=1,if=variable.cooldown_sync\nactions.ar+=/use_items,use_off_gcd=1,if=variable.cooldown_sync\n## actions.ar+=/call_action_list,name=externals,if=variable.cooldown_sync\nactions.ar+=/run_action_list,name=rg_active,if=buff.glaive_flurry.up||buff.rending_strike.up\nactions.ar+=/call_action_list,name=ar_execute,if=fight_remains<20\nactions.ar+=/metamorphosis,use_off_gcd=1,if=!buff.metamorphosis.up&!(cooldown.the_hunt.up||buff.reavers_glaive.up)\nactions.ar+=/vengeful_retreat,use_off_gcd=1,if=talent.unhindered_assault&!cooldown.felblade.up&(((talent.spirit_bomb&(fury<40&(variable.can_spb||variable.can_spb_soon)))||(talent.spirit_bomb&(cooldown.sigil_of_spite.up||cooldown.soul_carver.up)&cooldown.fel_devastation.up&fury<50))||fury<30)\nactions.ar+=/immolation_aura\nactions.ar+=/sigil_of_flame,if=talent.ascending_flame||(!talent.ascending_flame&!prev_gcd.1.sigil_of_flame&(dot.sigil_of_flame.remains<(1+talent.quickened_sigils)))\nactions.ar+=/soul_cleave,if=(debuff.reavers_mark.remains<=(gcd.remains+execute_time+(gcd.max*2)))&(buff.art_of_the_glaive.stack+soul_fragments>=30&buff.art_of_the_glaive.stack>=28)&(fury<40||!variable.can_spb)\nactions.ar+=/spirit_bomb,if=(debuff.reavers_mark.remains<=(gcd.remains+execute_time+(gcd.max*2)))&(buff.art_of_the_glaive.stack+soul_fragments>=30)\nactions.ar+=/bulk_extraction,if=(debuff.reavers_mark.remains<=(gcd.remains+execute_time+(gcd.max*2)))&(buff.art_of_the_glaive.stack+(spell_targets>?5)>=30)\nactions.ar+=/reavers_glaive,if=(buff.art_of_the_glaive.stack+soul_fragments>=30)||(debuff.reavers_mark.remains<=(gcd.remains+execute_time+(gcd.max*4)))||cooldown.the_hunt.remains<(gcd.remains+execute_time+(gcd.max*4))||variable.rg_enhance_cleave\nactions.ar+=/the_hunt,if=!buff.reavers_glaive.up\nactions.ar+=/fiery_brand,if=!talent.fiery_demise||(talent.fiery_demise&((talent.down_in_flames&charges>=max_charges)||(active_dot.fiery_brand=0)))\nactions.ar+=/fel_devastation,if=talent.spirit_bomb&!variable.can_spb&(variable.can_spb_soon||soul_fragments>=2)\nactions.ar+=/spirit_bomb,if=variable.can_spb\nactions.ar+=/fracture,if=talent.spirit_bomb&((fury<40&(!cooldown.felblade.up&(!talent.unhindered_assault||!cooldown.vengeful_retreat.up)))||(fury<40&variable.can_spb_one_gcd))\nactions.ar+=/soul_carver,if=!talent.spirit_bomb||(((soul_fragments+3)<=6)&fury>=15&!prev_gcd.1.sigil_of_spite)\nactions.ar+=/sigil_of_spite,if=!talent.spirit_bomb||((variable.can_spb&fury>=40)||variable.can_spb_soon||soul_fragments<=1)\nactions.ar+=/fel_devastation,if=!variable.single_target||buff.thrill_of_the_fight_damage.up\nactions.ar+=/bulk_extraction,if=spell_targets>=5\nactions.ar+=/felblade,if=(((talent.spirit_bomb&(fury<40&(variable.can_spb||variable.can_spb_soon)))||(talent.spirit_bomb&(cooldown.sigil_of_spite.up||cooldown.soul_carver.up)&cooldown.fel_devastation.up&fury<50))||fury<30)\nactions.ar+=/soul_cleave,if=fury.deficit<=25||(!talent.spirit_bomb||!variable.dont_soul_cleave)\nactions.ar+=/fracture\nactions.ar+=/shear\nactions.ar+=/felblade\nactions.ar+=/throw_glaive\n\nactions.ar_execute+=/metamorphosis,use_off_gcd=1\nactions.ar_execute+=/reavers_glaive\nactions.ar_execute+=/the_hunt,if=!buff.reavers_glaive.up\nactions.ar_execute+=/bulk_extraction,if=spell_targets>=3&buff.art_of_the_glaive.stack>=20\nactions.ar_execute+=/sigil_of_flame\nactions.ar_execute+=/fiery_brand\nactions.ar_execute+=/sigil_of_spite\nactions.ar_execute+=/soul_carver\nactions.ar_execute+=/fel_devastation\n\n## actions.externals+=/invoke_external_buff,name=symbol_of_hope\n## actions.externals+=/invoke_external_buff,name=power_infusion\n\nactions.fel_dev+=/spirit_burst,if=talent.spirit_bomb&(variable.can_spburst||(buff.metamorphosis.remains<(gcd.remains+execute_time+1)&buff.demonsurge_spirit_burst.up))\nactions.fel_dev+=/soul_sunder,if=buff.demonsurge_soul_sunder.up||!variable.dont_soul_cleave||(buff.metamorphosis.remains<(gcd.remains+execute_time+1)&buff.demonsurge_soul_sunder.up)\nactions.fel_dev+=/sigil_of_spite,if=soul_fragments<=2&buff.demonsurge_spirit_burst.up\nactions.fel_dev+=/soul_carver,if=soul_fragments<=2&!prev_gcd.1.sigil_of_spite&buff.demonsurge_spirit_burst.up\nactions.fel_dev+=/immolation_aura\nactions.fel_dev+=/sigil_of_flame,if=!variable.hold_sof\nactions.fel_dev+=/felblade\nactions.fel_dev+=/fracture\n\nactions.fel_dev_prep+=/fiery_brand,if=talent.fiery_demise&((talent.darkglare_boon&fury>=70)||(!talent.darkglare_boon&fury>=100))&(variable.can_spburst||variable.can_spburst_soon)&active_dot.fiery_brand=0&(cooldown.metamorphosis.up||cooldown.metamorphosis.remains<(gcd.remains+execute_time+action.fel_devastation.execute_time+(gcd.max*2)))\nactions.fel_dev_prep+=/fel_devastation,if=((talent.darkglare_boon&fury>=70)||(!talent.darkglare_boon&fury>=100))&(variable.can_spburst||variable.can_spburst_soon)\nactions.fel_dev_prep+=/sigil_of_spite,if=!(variable.can_spburst||variable.can_spburst_soon)&soul_fragments<=2&((talent.darkglare_boon&fury>=70)||(!talent.darkglare_boon&fury>=100))\nactions.fel_dev_prep+=/felblade,if=!((talent.darkglare_boon&fury>=70)||(!talent.darkglare_boon&fury>=100))\nactions.fel_dev_prep+=/fracture,if=!(variable.can_spburst||variable.can_spburst_soon)||!((talent.darkglare_boon&fury>=70)||(!talent.darkglare_boon&fury>=100))\nactions.fel_dev_prep+=/felblade\nactions.fel_dev_prep+=/fracture\n\nactions.fs+=/variable,name=spbomb_threshold,op=setif,condition=talent.fiery_demise&dot.fiery_brand.ticking,value=(variable.single_target*5)+(variable.small_aoe*4)+(variable.big_aoe*3),value_else=(variable.single_target*5)+(variable.small_aoe*4)+(variable.big_aoe*4)\nactions.fs+=/variable,name=can_spbomb,value=soul_fragments>=variable.spbomb_threshold\nactions.fs+=/variable,name=can_spbomb_soon,value=soul_fragments>=variable.spbomb_threshold\nactions.fs+=/variable,name=can_spbomb_one_gcd,value=(soul_fragments+variable.num_spawnable_souls)>=variable.spbomb_threshold\nactions.fs+=/variable,name=spburst_threshold,op=setif,condition=talent.fiery_demise&dot.fiery_brand.ticking,value=(variable.single_target*4)+(variable.small_aoe*4)+(variable.big_aoe*3),value_else=(variable.single_target*5)+(variable.small_aoe*4)+(variable.big_aoe*3)\nactions.fs+=/variable,name=can_spburst,value=soul_fragments>=variable.spburst_threshold\nactions.fs+=/variable,name=can_spburst_soon,value=soul_fragments>=variable.spburst_threshold\nactions.fs+=/variable,name=can_spburst_one_gcd,value=(soul_fragments+variable.num_spawnable_souls)>=variable.spburst_threshold\nactions.fs+=/variable,name=dont_soul_cleave,op=setif,condition=buff.metamorphosis.up&buff.demonsurge_hardcast.up,value=((cooldown.fel_desolation.remains<=gcd.remains+execute_time)&fury<80)||(variable.can_spburst||variable.can_spburst_soon)||(prev_gcd.1.sigil_of_spite||prev_gcd.1.soul_carver),value_else=((cooldown.fel_devastation.remains<=gcd.remains+execute_time)&fury<80)||(variable.can_spbomb||variable.can_spbomb_soon)||(buff.metamorphosis.up&!buff.demonsurge_hardcast.up&buff.demonsurge_spirit_burst.up)||(prev_gcd.1.sigil_of_spite||prev_gcd.1.soul_carver)\nactions.fs+=/variable,name=fiery_brand_back_before_meta,op=setif,condition=talent.down_in_flames,value=charges>=max_charges||(charges_fractional>=1&cooldown.fiery_brand.full_recharge_time<=gcd.remains+execute_time)||(charges_fractional>=1&((max_charges-(charges_fractional-1))*cooldown.fiery_brand.duration)<=cooldown.metamorphosis.remains),value_else=cooldown.fiery_brand.duration<=cooldown.metamorphosis.remains\nactions.fs+=/variable,name=hold_sof,op=setif,condition=talent.student_of_suffering,value=(buff.student_of_suffering.remains>(1+talent.quickened_sigils))||(!talent.ascending_flame&(dot.sigil_of_flame.remains>(1+talent.quickened_sigils)))||prev_gcd.1.sigil_of_flame||(talent.illuminated_sigils&charges=1&time<(2-talent.quickened_sigils.rank))||cooldown.metamorphosis.up,value_else=cooldown.metamorphosis.up||(cooldown.sigil_of_flame.max_charges>1&talent.ascending_flame&((cooldown.sigil_of_flame.max_charges-(cooldown.sigil_of_flame.charges_fractional-1))*cooldown.sigil_of_flame.duration)>cooldown.metamorphosis.remains)||((prev_gcd.1.sigil_of_flame||dot.sigil_of_flame.remains>(1+talent.quickened_sigils)))\nactions.fs+=/cancel_buff,name=metamorphosis,if=(!buff.demonsurge_soul_sunder.up&!buff.demonsurge_spirit_burst.up&!buff.demonsurge_fel_desolation.up&!buff.demonsurge_consuming_fire.up&!buff.demonsurge_sigil_of_doom.up&cooldown.sigil_of_doom.charges<1)&(cooldown.fel_devastation.remains<(gcd.max*2)||cooldown.metamorphosis.remains<(gcd.max*2))\nactions.fs+=/immolation_aura,if=!(prev_gcd.1.sigil_of_flame&cooldown.metamorphosis.up)\nactions.fs+=/sigil_of_flame,if=!variable.hold_sof\nactions.fs+=/fiery_brand,if=!talent.fiery_demise||talent.fiery_demise&((talent.down_in_flames&charges>=max_charges)||(active_dot.fiery_brand=0&variable.fiery_brand_back_before_meta))\nactions.fs+=/use_items,use_off_gcd=1,if=!buff.metamorphosis.up\nactions.fs+=/call_action_list,name=fs_execute,if=fight_remains<20\nactions.fs+=/run_action_list,name=fel_dev,if=buff.metamorphosis.up&!buff.demonsurge_hardcast.up&(buff.demonsurge_soul_sunder.up||buff.demonsurge_spirit_burst.up)\nactions.fs+=/call_action_list,name=metamorphosis,if=buff.metamorphosis.up&buff.demonsurge_hardcast.up\nactions.fs+=/call_action_list,name=fel_dev_prep,if=!buff.demonsurge_hardcast.up&(cooldown.fel_devastation.up||(cooldown.fel_devastation.remains<=(gcd.max*2)))\nactions.fs+=/call_action_list,name=meta_prep,if=(cooldown.metamorphosis.up||cooldown.metamorphosis.remains<=(gcd.max*3))&!cooldown.fel_devastation.up&!buff.demonsurge_soul_sunder.up&!buff.demonsurge_spirit_burst.up\nactions.fs+=/the_hunt\nactions.fs+=/soul_carver,if=(!talent.fiery_demise||talent.fiery_demise&dot.fiery_brand.ticking)&(((soul_fragments+3)<=6)&fury>=15&!prev_gcd.1.sigil_of_spite)\nactions.fs+=/sigil_of_spite,if=(((variable.can_spbomb||(buff.metamorphosis.up&variable.can_spburst))&fury>=40))||((variable.can_spbomb_soon||(buff.metamorphosis.up&variable.can_spburst_soon))||soul_fragments<=1)\nactions.fs+=/bulk_extraction,if=spell_targets>=5\nactions.fs+=/spirit_burst,if=talent.spirit_bomb&variable.can_spburst\nactions.fs+=/spirit_bomb,if=variable.can_spbomb\nactions.fs+=/felblade,if=(fury<40&((buff.metamorphosis.up&(variable.can_spburst||variable.can_spburst_soon))||(!buff.metamorphosis.up&(variable.can_spbomb||variable.can_spbomb_soon))))||fury<30\nactions.fs+=/fracture,if=(fury<40&((buff.metamorphosis.up&(variable.can_spburst||variable.can_spburst_soon))||(!buff.metamorphosis.up&(variable.can_spbomb||variable.can_spbomb_soon))))||((buff.metamorphosis.up&variable.can_spburst_one_gcd)||(!buff.metamorphosis.up&variable.can_spbomb_one_gcd))\nactions.fs+=/soul_sunder,if=!variable.dont_soul_cleave\nactions.fs+=/soul_cleave,if=!variable.dont_soul_cleave\nactions.fs+=/fracture\nactions.fs+=/throw_glaive\n\nactions.fs_execute+=/metamorphosis,use_off_gcd=1\nactions.fs_execute+=/the_hunt\nactions.fs_execute+=/sigil_of_flame\nactions.fs_execute+=/fiery_brand\nactions.fs_execute+=/sigil_of_spite\nactions.fs_execute+=/soul_carver\nactions.fs_execute+=/fel_devastation\n\nactions.meta_prep+=/metamorphosis,use_off_gcd=1,if=cooldown.sigil_of_flame.charges<1\nactions.meta_prep+=/fiery_brand,if=talent.fiery_demise&active_dot.fiery_brand=0\nactions.meta_prep+=/potion,use_off_gcd=1\nactions.meta_prep+=/sigil_of_flame\n\n## actions.metamorphosis+=/call_action_list,name=externals\nactions.metamorphosis+=/spirit_burst,if=talent.spirit_bomb&(buff.metamorphosis.remains<(gcd.remains+execute_time+1))&buff.demonsurge_spirit_burst.up\nactions.metamorphosis+=/sigil_of_spite,if=((variable.can_spburst&fury>=40)||variable.can_spburst_soon)\nactions.metamorphosis+=/spirit_burst,if=talent.spirit_bomb&variable.can_spburst&buff.demonsurge_spirit_burst.up||soul_fragments>=5\nactions.metamorphosis+=/soul_carver,if=soul_fragments<=2&!prev_gcd.1.sigil_of_spite\nactions.metamorphosis+=/sigil_of_spite,if=soul_fragments<=1\nactions.metamorphosis+=/fel_desolation,if=prev_gcd.2.sigil_of_spite||prev_gcd.2.soul_carver||!variable.can_spburst&(variable.can_spburst_soon||soul_fragments>=2)||(!buff.demonsurge_soul_sunder.up&!buff.demonsurge_spirit_burst.up&!buff.demonsurge_consuming_fire.up&!buff.demonsurge_sigil_of_doom.up&cooldown.sigil_of_doom.charges<1&buff.demonsurge_fel_desolation.up)\nactions.metamorphosis+=/sigil_of_doom,if=talent.ascending_flame||(!talent.ascending_flame&(dot.sigil_of_doom.remains<(1+talent.quickened_sigils)&!prev_gcd.1.sigil_of_doom))\nactions.metamorphosis+=/bulk_extraction,if=(variable.can_spburst||variable.can_spburst_soon)&!buff.soul_furnace_damage_amp.up&buff.soul_furnace_stack.stack<=6&buff.soul_furnace_stack.stack+(spell_targets.bulk_extraction>?5)>=10\nactions.metamorphosis+=/spirit_burst,if=(talent.spirit_bomb&variable.can_spburst)\nactions.metamorphosis+=/fracture,if=variable.big_aoe&(soul_fragments>=2&soul_fragments<=3)\nactions.metamorphosis+=/felblade,if=(fury<40&(variable.can_spburst||variable.can_spburst_soon))||fury<30\nactions.metamorphosis+=/soul_sunder,if=!variable.dont_soul_cleave\nactions.metamorphosis+=/felblade\nactions.metamorphosis+=/fracture\n\nactions.rg_active+=/metamorphosis,use_off_gcd=1,if=!buff.metamorphosis.up&(buff.rending_strike.up&!buff.glaive_flurry.up)&soul_fragments<=1\nactions.rg_active+=/felblade,if=fury<30&!variable.rg_enhance_cleave&buff.rending_strike.up&buff.glaive_flurry.up\nactions.rg_active+=/the_hunt,if=!buff.reavers_glaive.up&(debuff.reavers_mark.remains>(gcd.remains+execute_time+action.soul_cleave.execute_time+(talent.fracture&action.fracture.execute_time||!talent.fracture&action.shear.execute_time)+gcd.max))\nactions.rg_active+=/fracture,if=variable.rg_enhance_cleave&buff.rending_strike.up&buff.glaive_flurry.up||!variable.rg_enhance_cleave&!buff.glaive_flurry.up\nactions.rg_active+=/shear,if=variable.rg_enhance_cleave&buff.rending_strike.up&buff.glaive_flurry.up||!variable.rg_enhance_cleave&!buff.glaive_flurry.up\nactions.rg_active+=/bulk_extraction,if=!buff.soul_furnace_damage_amp.up&buff.soul_furnace_stack.stack+(spell_targets>?5)>=10\nactions.rg_active+=/soul_cleave,if=!variable.rg_enhance_cleave&buff.glaive_flurry.up&buff.rending_strike.up||variable.rg_enhance_cleave&!buff.rending_strike.up\nactions.rg_active+=/felblade\nactions.rg_active+=/fracture,if=!buff.rending_strike.up",
["version"] = 20270723,
["warnings"] = "The import for 'fs' required some automated changes.\nLine 1: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 5: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 10: Converted 'talent.down_in_flames' to 'talent.down_in_flames.enabled' (1x).\nLine 11: Converted 'talent.student_of_suffering' to 'talent.student_of_suffering.enabled' (1x).\nLine 11: Converted 'talent.quickened_sigils' to 'talent.quickened_sigils.enabled' (1x).\nLine 11: Converted 'talent.ascending_flame' to 'talent.ascending_flame.enabled' (1x).\nLine 11: Converted 'talent.quickened_sigils' to 'talent.quickened_sigils.enabled' (1x).\nLine 11: Converted 'talent.illuminated_sigils' to 'talent.illuminated_sigils.enabled' (1x).\nLine 11: Converted 'talent.ascending_flame' to 'talent.ascending_flame.enabled' (1x).\nLine 11: Converted 'talent.quickened_sigils' to 'talent.quickened_sigils.enabled' (1x).\nLine 15: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 15: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 15: Converted 'talent.down_in_flames' to 'talent.down_in_flames.enabled' (1x).\nLine 23: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 23: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 26: Unsupported action 'spirit_burst'.\nLine 26: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 30: Unsupported action 'soul_sunder'.\nThe following auras were used in the action list but were not found in the addon database:\n - demonsurge_consuming_fire\n - demonsurge_fel_desolation\n - demonsurge_hardcast\n - demonsurge_sigil_of_doom\n - demonsurge_soul_sunder\n - demonsurge_spirit_burst\n\nThe import for 'fel_dev' required some automated changes.\nLine 1: Unsupported action 'spirit_burst'.\nLine 1: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 2: Unsupported action 'soul_sunder'.\nThe following auras were used in the action list but were not found in the addon database:\n - demonsurge_soul_sunder\n - demonsurge_spirit_burst\n\nThe import for 'meta_prep' required some automated changes.\nLine 2: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\n\nThe import for 'metamorphosis' required some automated changes.\nLine 1: Unsupported action 'spirit_burst'.\nLine 1: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 3: Unsupported action 'spirit_burst'.\nLine 3: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 6: Unsupported action 'fel_desolation'.\nLine 7: Unsupported action 'sigil_of_doom'.\nLine 7: Converted 'talent.ascending_flame' to 'talent.ascending_flame.enabled' (1x).\nLine 7: Converted 'talent.ascending_flame' to 'talent.ascending_flame.enabled' (1x).\nLine 7: Converted 'talent.quickened_sigils' to 'talent.quickened_sigils.enabled' (1x).\nLine 9: Unsupported action 'spirit_burst'.\nLine 9: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 12: Unsupported action 'soul_sunder'.\nThe following auras were used in the action list but were not found in the addon database:\n - demonsurge_consuming_fire\n - demonsurge_fel_desolation\n - demonsurge_sigil_of_doom\n - demonsurge_soul_sunder\n - demonsurge_spirit_burst\n - soul_furnace_damage_amp\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.fracture' to 'talent.fracture.enabled' (1x).\nLine 3: Converted 'talent.fracture' to 'talent.fracture.enabled' (1x).\nLine 4: Converted 'talent.soul_sigils' to 'talent.soul_sigils.enabled' (1x).\nLine 5: Converted 'talent.soul_carver' to 'talent.soul_carver.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 5: Converted 'talent.student_of_suffering' to 'talent.student_of_suffering.enabled' (1x).\n\nThe import for 'rg_active' required some automated changes.\nLine 3: Converted 'talent.fracture' to 'talent.fracture.enabled' (1x).\nLine 3: Converted 'talent.fracture' to 'talent.fracture.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - glaive_flurry\n - reavers_glaive\n - reavers_mark\n - rending_strike\n - soul_furnace_damage_amp\n\nThe import for 'ar' required some automated changes.\nLine 1: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 13: Converted 'talent.unhindered_assault' to 'talent.unhindered_assault.enabled' (1x).\nLine 13: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 13: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 15: Converted 'talent.ascending_flame' to 'talent.ascending_flame.enabled' (1x).\nLine 15: Converted 'talent.ascending_flame' to 'talent.ascending_flame.enabled' (1x).\nLine 15: Converted 'talent.quickened_sigils' to 'talent.quickened_sigils.enabled' (1x).\nLine 19: Unsupported action 'reavers_glaive'.\nLine 21: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 21: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 21: Converted 'talent.down_in_flames' to 'talent.down_in_flames.enabled' (1x).\nLine 22: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 24: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 24: Converted 'talent.unhindered_assault' to 'talent.unhindered_assault.enabled' (1x).\nLine 25: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 26: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 29: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 29: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nLine 30: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - glaive_flurry\n - reavers_glaive\n - reavers_mark\n - rending_strike\n - thrill_of_the_fight_damage\n\nThe import for 'fel_dev_prep' required some automated changes.\nLine 1: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 1: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\nLine 1: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\nLine 2: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\nLine 2: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\nLine 3: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\nLine 3: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\nLine 4: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\nLine 4: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\nLine 5: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\nLine 5: Converted 'talent.darkglare_boon' to 'talent.darkglare_boon.enabled' (1x).\n\nThe import for 'ar_execute' required some automated changes.\nLine 2: Unsupported action 'reavers_glaive'.\nThe following auras were used in the action list but were not found in the addon database:\n - reavers_glaive\n\nImported 11 action lists.\n",
["author"] = "SimC",
["lists"] = {
["fs"] = {
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "spbomb_threshold",
["criteria"] = "talent.fiery_demise.enabled & dot.fiery_brand.ticking",
["value_else"] = "( variable.single_target * 5 ) + ( variable.small_aoe * 4 ) + ( variable.big_aoe * 4 )",
["value"] = "( variable.single_target * 5 ) + ( variable.small_aoe * 4 ) + ( variable.big_aoe * 3 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "soul_fragments >= variable.spbomb_threshold",
["var_name"] = "can_spbomb",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "soul_fragments >= variable.spbomb_threshold",
["var_name"] = "can_spbomb_soon",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( soul_fragments + variable.num_spawnable_souls ) >= variable.spbomb_threshold",
["var_name"] = "can_spbomb_one_gcd",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "spburst_threshold",
["criteria"] = "talent.fiery_demise.enabled & dot.fiery_brand.ticking",
["value_else"] = "( variable.single_target * 5 ) + ( variable.small_aoe * 4 ) + ( variable.big_aoe * 3 )",
["value"] = "( variable.single_target * 4 ) + ( variable.small_aoe * 4 ) + ( variable.big_aoe * 3 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "soul_fragments >= variable.spburst_threshold",
["var_name"] = "can_spburst",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "soul_fragments >= variable.spburst_threshold",
["var_name"] = "can_spburst_soon",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( soul_fragments + variable.num_spawnable_souls ) >= variable.spburst_threshold",
["var_name"] = "can_spburst_one_gcd",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "dont_soul_cleave",
["criteria"] = "buff.metamorphosis.up & buff.demonsurge_hardcast.up",
["value_else"] = "( ( cooldown.fel_devastation.remains <= gcd.remains + execute_time ) & fury < 80 ) || ( variable.can_spbomb || variable.can_spbomb_soon ) || ( buff.metamorphosis.up & ! buff.demonsurge_hardcast.up & buff.demonsurge_spirit_burst.up ) || ( prev_gcd.1.sigil_of_spite || prev_gcd.1.soul_carver )",
["value"] = "( ( cooldown.fel_desolation.remains <= gcd.remains + execute_time ) & fury < 80 ) || ( variable.can_spburst || variable.can_spburst_soon ) || ( prev_gcd.1.sigil_of_spite || prev_gcd.1.soul_carver )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "fiery_brand_back_before_meta",
["criteria"] = "talent.down_in_flames.enabled",
["value_else"] = "cooldown.fiery_brand.duration <= cooldown.metamorphosis.remains",
["value"] = "charges >= max_charges || ( charges_fractional >= 1 & cooldown.fiery_brand.full_recharge_time <= gcd.remains + execute_time ) || ( charges_fractional >= 1 & ( ( max_charges - ( charges_fractional - 1 ) ) * cooldown.fiery_brand.duration ) <= cooldown.metamorphosis.remains )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "hold_sof",
["criteria"] = "talent.student_of_suffering.enabled",
["value_else"] = "cooldown.metamorphosis.up || ( cooldown.sigil_of_flame.max_charges > 1 & talent.ascending_flame.enabled & ( ( cooldown.sigil_of_flame.max_charges - ( cooldown.sigil_of_flame.charges_fractional - 1 ) ) * cooldown.sigil_of_flame.duration ) > cooldown.metamorphosis.remains ) || ( ( prev_gcd.1.sigil_of_flame || dot.sigil_of_flame.remains > ( 1 + talent.quickened_sigils.enabled ) ) )",
["value"] = "( buff.student_of_suffering.remains > ( 1 + talent.quickened_sigils.enabled ) ) || ( ! talent.ascending_flame.enabled & ( dot.sigil_of_flame.remains > ( 1 + talent.quickened_sigils.enabled ) ) ) || prev_gcd.1.sigil_of_flame || ( talent.illuminated_sigils.enabled & charges = 1 & time < ( 2 - talent.quickened_sigils.rank ) ) || cooldown.metamorphosis.up",
},
{
["enabled"] = true,
["criteria"] = "( ! buff.demonsurge_soul_sunder.up & ! buff.demonsurge_spirit_burst.up & ! buff.demonsurge_fel_desolation.up & ! buff.demonsurge_consuming_fire.up & ! buff.demonsurge_sigil_of_doom.up & cooldown.sigil_of_doom.charges < 1 ) & ( cooldown.fel_devastation.remains < ( gcd.max * 2 ) || cooldown.metamorphosis.remains < ( gcd.max * 2 ) )",
["action"] = "cancel_buff",
["buff_name"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "! ( prev_gcd.1.sigil_of_flame & cooldown.metamorphosis.up )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_sof",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "! talent.fiery_demise.enabled || talent.fiery_demise.enabled & ( ( talent.down_in_flames.enabled & charges >= max_charges ) || ( active_dot.fiery_brand = 0 & variable.fiery_brand_back_before_meta ) )",
["action"] = "fiery_brand",
},
{
["enabled"] = true,
["criteria"] = "! buff.metamorphosis.up",
["action"] = "use_items",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "call_action_list",
["list_name"] = "fs_execute",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.up & ! buff.demonsurge_hardcast.up & ( buff.demonsurge_soul_sunder.up || buff.demonsurge_spirit_burst.up )",
["action"] = "run_action_list",
["list_name"] = "fel_dev",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.up & buff.demonsurge_hardcast.up",
["action"] = "call_action_list",
["list_name"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "! buff.demonsurge_hardcast.up & ( cooldown.fel_devastation.up || ( cooldown.fel_devastation.remains <= ( gcd.max * 2 ) ) )",
["action"] = "call_action_list",
["list_name"] = "fel_dev_prep",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.metamorphosis.up || cooldown.metamorphosis.remains <= ( gcd.max * 3 ) ) & ! cooldown.fel_devastation.up & ! buff.demonsurge_soul_sunder.up & ! buff.demonsurge_spirit_burst.up",
["action"] = "call_action_list",
["list_name"] = "meta_prep",
},
{
["action"] = "the_hunt",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ! talent.fiery_demise.enabled || talent.fiery_demise.enabled & dot.fiery_brand.ticking ) & ( ( ( soul_fragments + 3 ) <= 6 ) & fury >= 15 & ! prev_gcd.1.sigil_of_spite )",
["action"] = "soul_carver",
},
{
["enabled"] = true,
["criteria"] = "( ( ( variable.can_spbomb || ( buff.metamorphosis.up & variable.can_spburst ) ) & fury >= 40 ) ) || ( ( variable.can_spbomb_soon || ( buff.metamorphosis.up & variable.can_spburst_soon ) ) || soul_fragments <= 1 )",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "spell_targets >= 5",
["action"] = "bulk_extraction",
},
{
["enabled"] = true,
["criteria"] = "talent.spirit_bomb.enabled & variable.can_spburst",
["action"] = "spirit_burst",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spbomb",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "( fury < 40 & ( ( buff.metamorphosis.up & ( variable.can_spburst || variable.can_spburst_soon ) ) || ( ! buff.metamorphosis.up & ( variable.can_spbomb || variable.can_spbomb_soon ) ) ) ) || fury < 30",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "( fury < 40 & ( ( buff.metamorphosis.up & ( variable.can_spburst || variable.can_spburst_soon ) ) || ( ! buff.metamorphosis.up & ( variable.can_spbomb || variable.can_spbomb_soon ) ) ) ) || ( ( buff.metamorphosis.up & variable.can_spburst_one_gcd ) || ( ! buff.metamorphosis.up & variable.can_spbomb_one_gcd ) )",
["action"] = "fracture",
},
{
["enabled"] = true,
["criteria"] = "! variable.dont_soul_cleave",
["action"] = "soul_sunder",
},
{
["enabled"] = true,
["criteria"] = "! variable.dont_soul_cleave",
["action"] = "soul_cleave",
},
{
["action"] = "fracture",
["enabled"] = true,
},
{
["action"] = "throw_glaive",
["enabled"] = true,
},
},
["fel_dev"] = {
{
["enabled"] = true,
["criteria"] = "talent.spirit_bomb.enabled & ( variable.can_spburst || ( buff.metamorphosis.remains < ( gcd.remains + execute_time + 1 ) & buff.demonsurge_spirit_burst.up ) )",
["action"] = "spirit_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_soul_sunder.up || ! variable.dont_soul_cleave || ( buff.metamorphosis.remains < ( gcd.remains + execute_time + 1 ) & buff.demonsurge_soul_sunder.up )",
["action"] = "soul_sunder",
},
{
["enabled"] = true,
["criteria"] = "soul_fragments <= 2 & buff.demonsurge_spirit_burst.up",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "soul_fragments <= 2 & ! prev_gcd.1.sigil_of_spite & buff.demonsurge_spirit_burst.up",
["action"] = "soul_carver",
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_sof",
["action"] = "sigil_of_flame",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["action"] = "fracture",
["enabled"] = true,
},
},
["fs_execute"] = {
{
["use_off_gcd"] = 1,
["action"] = "metamorphosis",
["enabled"] = true,
},
{
["action"] = "the_hunt",
["enabled"] = true,
},
{
["action"] = "sigil_of_flame",
["enabled"] = true,
},
{
["action"] = "fiery_brand",
["enabled"] = true,
},
{
["action"] = "sigil_of_spite",
["enabled"] = true,
},
{
["action"] = "soul_carver",
["enabled"] = true,
},
{
["action"] = "fel_devastation",
["enabled"] = true,
},
},
["meta_prep"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.sigil_of_flame.charges < 1",
["action"] = "metamorphosis",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.fiery_demise.enabled & active_dot.fiery_brand = 0",
["action"] = "fiery_brand",
},
{
["use_off_gcd"] = 1,
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "sigil_of_flame",
["enabled"] = true,
},
},
["metamorphosis"] = {
{
["enabled"] = true,
["criteria"] = "talent.spirit_bomb.enabled & ( buff.metamorphosis.remains < ( gcd.remains + execute_time + 1 ) ) & buff.demonsurge_spirit_burst.up",
["action"] = "spirit_burst",
},
{
["enabled"] = true,
["criteria"] = "( ( variable.can_spburst & fury >= 40 ) || variable.can_spburst_soon )",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "talent.spirit_bomb.enabled & variable.can_spburst & buff.demonsurge_spirit_burst.up || soul_fragments >= 5",
["action"] = "spirit_burst",
},
{
["enabled"] = true,
["criteria"] = "soul_fragments <= 2 & ! prev_gcd.1.sigil_of_spite",
["action"] = "soul_carver",
},
{
["enabled"] = true,
["criteria"] = "soul_fragments <= 1",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.2.sigil_of_spite || prev_gcd.2.soul_carver || ! variable.can_spburst & ( variable.can_spburst_soon || soul_fragments >= 2 ) || ( ! buff.demonsurge_soul_sunder.up & ! buff.demonsurge_spirit_burst.up & ! buff.demonsurge_consuming_fire.up & ! buff.demonsurge_sigil_of_doom.up & cooldown.sigil_of_doom.charges < 1 & buff.demonsurge_fel_desolation.up )",
["action"] = "fel_desolation",
},
{
["enabled"] = true,
["criteria"] = "talent.ascending_flame.enabled || ( ! talent.ascending_flame.enabled & ( dot.sigil_of_doom.remains < ( 1 + talent.quickened_sigils.enabled ) & ! prev_gcd.1.sigil_of_doom ) )",
["action"] = "sigil_of_doom",
},
{
["enabled"] = true,
["criteria"] = "( variable.can_spburst || variable.can_spburst_soon ) & ! buff.soul_furnace_damage_amp.up & buff.soul_furnace_stack.stack <= 6 & buff.soul_furnace_stack.stack + ( spell_targets.bulk_extraction >? 5 ) >= 10",
["action"] = "bulk_extraction",
},
{
["enabled"] = true,
["criteria"] = "( talent.spirit_bomb.enabled & variable.can_spburst )",
["action"] = "spirit_burst",
},
{
["enabled"] = true,
["criteria"] = "variable.big_aoe & ( soul_fragments >= 2 & soul_fragments <= 3 )",
["action"] = "fracture",
},
{
["enabled"] = true,
["criteria"] = "( fury < 40 & ( variable.can_spburst || variable.can_spburst_soon ) ) || fury < 30",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "! variable.dont_soul_cleave",
["action"] = "soul_sunder",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["action"] = "fracture",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "num_spawnable_souls",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "max",
["action"] = "variable",
["value"] = "2",
["criteria"] = "talent.fracture.enabled & cooldown.fracture.charges_fractional >= 1 & ! buff.metamorphosis.up",
["var_name"] = "num_spawnable_souls",
},
{
["enabled"] = true,
["op"] = "max",
["action"] = "variable",
["value"] = "3",
["criteria"] = "talent.fracture.enabled & cooldown.fracture.charges_fractional >= 1 & buff.metamorphosis.up",
["var_name"] = "num_spawnable_souls",
},
{
["enabled"] = true,
["op"] = "max",
["action"] = "variable",
["value"] = "1",
["criteria"] = "talent.soul_sigils.enabled & cooldown.sigil_of_flame.up",
["var_name"] = "num_spawnable_souls",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "1",
["criteria"] = "talent.soul_carver.enabled & ( cooldown.soul_carver.remains > ( cooldown.soul_carver.duration - 3 ) )",
["var_name"] = "num_spawnable_souls",
},
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.up",
["action"] = "disrupt",
},
{
["use_off_gcd"] = 1,
["action"] = "infernal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.demon_spikes.up & tanking",
["action"] = "demon_spikes",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "hero_tree.aldrachi_reaver || level < 71",
["action"] = "run_action_list",
["list_name"] = "ar",
},
{
["enabled"] = true,
["criteria"] = "hero_tree.felscarred",
["action"] = "run_action_list",
["list_name"] = "fs",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.spirit_bomb = 1",
["var_name"] = "single_target",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.spirit_bomb >= 2 & spell_targets.spirit_bomb <= 5",
["var_name"] = "small_aoe",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.spirit_bomb >= 6",
["var_name"] = "big_aoe",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "hero_tree.aldrachi_reaver || level < 71 || ( hero_tree.felscarred & talent.student_of_suffering.enabled )",
["action"] = "sigil_of_flame",
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
},
["rg_active"] = {
{
["enabled"] = true,
["criteria"] = "! buff.metamorphosis.up & ( buff.rending_strike.up & ! buff.glaive_flurry.up ) & soul_fragments <= 1",
["action"] = "metamorphosis",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "fury < 30 & ! variable.rg_enhance_cleave & buff.rending_strike.up & buff.glaive_flurry.up",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "! buff.reavers_glaive.up & ( debuff.reavers_mark.remains > ( gcd.remains + execute_time + action.soul_cleave.execute_time + ( talent.fracture.enabled & action.fracture.execute_time || ! talent.fracture.enabled & action.shear.execute_time ) + gcd.max ) )",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "variable.rg_enhance_cleave & buff.rending_strike.up & buff.glaive_flurry.up || ! variable.rg_enhance_cleave & ! buff.glaive_flurry.up",
["action"] = "fracture",
},
{
["enabled"] = true,
["criteria"] = "variable.rg_enhance_cleave & buff.rending_strike.up & buff.glaive_flurry.up || ! variable.rg_enhance_cleave & ! buff.glaive_flurry.up",
["action"] = "shear",
},
{
["enabled"] = true,
["criteria"] = "! buff.soul_furnace_damage_amp.up & buff.soul_furnace_stack.stack + ( spell_targets >? 5 ) >= 10",
["action"] = "bulk_extraction",
},
{
["enabled"] = true,
["criteria"] = "! variable.rg_enhance_cleave & buff.glaive_flurry.up & buff.rending_strike.up || variable.rg_enhance_cleave & ! buff.rending_strike.up",
["action"] = "soul_cleave",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.rending_strike.up",
["action"] = "fracture",
},
},
["ar"] = {
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "spb_threshold",
["criteria"] = "talent.fiery_demise.enabled & dot.fiery_brand.ticking",
["value_else"] = "( variable.single_target * 5 ) + ( variable.small_aoe * 5 ) + ( variable.big_aoe * 4 )",
["value"] = "( variable.single_target * 5 ) + ( variable.small_aoe * 5 ) + ( variable.big_aoe * 4 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "soul_fragments >= variable.spb_threshold",
["var_name"] = "can_spb",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "soul_fragments >= variable.spb_threshold",
["var_name"] = "can_spb_soon",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( soul_fragments + variable.num_spawnable_souls ) >= variable.spb_threshold",
["var_name"] = "can_spb_one_gcd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.can_spb || variable.can_spb_soon || variable.can_spb_one_gcd || prev_gcd.1.fracture",
["var_name"] = "dont_soul_cleave",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "rg_enhance_cleave",
["criteria"] = "variable.big_aoe || fight_remains < 10",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( debuff.reavers_mark.up & buff.thrill_of_the_fight_damage.up ) || fight_remains < 20",
["var_name"] = "cooldown_sync",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_sync",
["action"] = "potion",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_sync",
["action"] = "use_items",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.glaive_flurry.up || buff.rending_strike.up",
["action"] = "run_action_list",
["list_name"] = "rg_active",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "call_action_list",
["list_name"] = "ar_execute",
},
{
["enabled"] = true,
["criteria"] = "! buff.metamorphosis.up & ! ( cooldown.the_hunt.up || buff.reavers_glaive.up )",
["action"] = "metamorphosis",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.unhindered_assault.enabled & ! cooldown.felblade.up & ( ( ( talent.spirit_bomb.enabled & ( fury < 40 & ( variable.can_spb || variable.can_spb_soon ) ) ) || ( talent.spirit_bomb.enabled & ( cooldown.sigil_of_spite.up || cooldown.soul_carver.up ) & cooldown.fel_devastation.up & fury < 50 ) ) || fury < 30 )",
["action"] = "vengeful_retreat",
["use_off_gcd"] = 1,
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.ascending_flame.enabled || ( ! talent.ascending_flame.enabled & ! prev_gcd.1.sigil_of_flame & ( dot.sigil_of_flame.remains < ( 1 + talent.quickened_sigils.enabled ) ) )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "( debuff.reavers_mark.remains <= ( gcd.remains + execute_time + ( gcd.max * 2 ) ) ) & ( buff.art_of_the_glaive.stack + soul_fragments >= 30 & buff.art_of_the_glaive.stack >= 28 ) & ( fury < 40 || ! variable.can_spb )",
["action"] = "soul_cleave",
},
{
["enabled"] = true,
["criteria"] = "( debuff.reavers_mark.remains <= ( gcd.remains + execute_time + ( gcd.max * 2 ) ) ) & ( buff.art_of_the_glaive.stack + soul_fragments >= 30 )",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "( debuff.reavers_mark.remains <= ( gcd.remains + execute_time + ( gcd.max * 2 ) ) ) & ( buff.art_of_the_glaive.stack + ( spell_targets >? 5 ) >= 30 )",
["action"] = "bulk_extraction",
},
{
["enabled"] = true,
["criteria"] = "( buff.art_of_the_glaive.stack + soul_fragments >= 30 ) || ( debuff.reavers_mark.remains <= ( gcd.remains + execute_time + ( gcd.max * 4 ) ) ) || cooldown.the_hunt.remains < ( gcd.remains + execute_time + ( gcd.max * 4 ) ) || variable.rg_enhance_cleave",
["action"] = "reavers_glaive",
},
{
["enabled"] = true,
["criteria"] = "! buff.reavers_glaive.up",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "! talent.fiery_demise.enabled || ( talent.fiery_demise.enabled & ( ( talent.down_in_flames.enabled & charges >= max_charges ) || ( active_dot.fiery_brand = 0 ) ) )",
["action"] = "fiery_brand",
},
{
["enabled"] = true,
["criteria"] = "talent.spirit_bomb.enabled & ! variable.can_spb & ( variable.can_spb_soon || soul_fragments >= 2 )",
["action"] = "fel_devastation",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spb",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "talent.spirit_bomb.enabled & ( ( fury < 40 & ( ! cooldown.felblade.up & ( ! talent.unhindered_assault.enabled || ! cooldown.vengeful_retreat.up ) ) ) || ( fury < 40 & variable.can_spb_one_gcd ) )",
["action"] = "fracture",
},
{
["enabled"] = true,
["criteria"] = "! talent.spirit_bomb.enabled || ( ( ( soul_fragments + 3 ) <= 6 ) & fury >= 15 & ! prev_gcd.1.sigil_of_spite )",
["action"] = "soul_carver",
},
{
["enabled"] = true,
["criteria"] = "! talent.spirit_bomb.enabled || ( ( variable.can_spb & fury >= 40 ) || variable.can_spb_soon || soul_fragments <= 1 )",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "! variable.single_target || buff.thrill_of_the_fight_damage.up",
["action"] = "fel_devastation",
},
{
["enabled"] = true,
["criteria"] = "spell_targets >= 5",
["action"] = "bulk_extraction",
},
{
["enabled"] = true,
["criteria"] = "( ( ( talent.spirit_bomb.enabled & ( fury < 40 & ( variable.can_spb || variable.can_spb_soon ) ) ) || ( talent.spirit_bomb.enabled & ( cooldown.sigil_of_spite.up || cooldown.soul_carver.up ) & cooldown.fel_devastation.up & fury < 50 ) ) || fury < 30 )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit <= 25 || ( ! talent.spirit_bomb.enabled || ! variable.dont_soul_cleave )",
["action"] = "soul_cleave",
},
{
["action"] = "fracture",
["enabled"] = true,
},
{
["action"] = "shear",
["enabled"] = true,
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["action"] = "throw_glaive",
["enabled"] = true,
},
},
["fel_dev_prep"] = {
{
["enabled"] = true,
["criteria"] = "talent.fiery_demise.enabled & ( ( talent.darkglare_boon.enabled & fury >= 70 ) || ( ! talent.darkglare_boon.enabled & fury >= 100 ) ) & ( variable.can_spburst || variable.can_spburst_soon ) & active_dot.fiery_brand = 0 & ( cooldown.metamorphosis.up || cooldown.metamorphosis.remains < ( gcd.remains + execute_time + action.fel_devastation.execute_time + ( gcd.max * 2 ) ) )",
["action"] = "fiery_brand",
},
{
["enabled"] = true,
["criteria"] = "( ( talent.darkglare_boon.enabled & fury >= 70 ) || ( ! talent.darkglare_boon.enabled & fury >= 100 ) ) & ( variable.can_spburst || variable.can_spburst_soon )",
["action"] = "fel_devastation",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.can_spburst || variable.can_spburst_soon ) & soul_fragments <= 2 & ( ( talent.darkglare_boon.enabled & fury >= 70 ) || ( ! talent.darkglare_boon.enabled & fury >= 100 ) )",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "! ( ( talent.darkglare_boon.enabled & fury >= 70 ) || ( ! talent.darkglare_boon.enabled & fury >= 100 ) )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.can_spburst || variable.can_spburst_soon ) || ! ( ( talent.darkglare_boon.enabled & fury >= 70 ) || ( ! talent.darkglare_boon.enabled & fury >= 100 ) )",
["action"] = "fracture",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["action"] = "fracture",
["enabled"] = true,
},
},
["ar_execute"] = {
{
["use_off_gcd"] = 1,
["action"] = "metamorphosis",
["enabled"] = true,
},
{
["action"] = "reavers_glaive",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.reavers_glaive.up",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "spell_targets >= 3 & buff.art_of_the_glaive.stack >= 20",
["action"] = "bulk_extraction",
},
{
["action"] = "sigil_of_flame",
["enabled"] = true,
},
{
["action"] = "fiery_brand",
["enabled"] = true,
},
{
["action"] = "sigil_of_spite",
["enabled"] = true,
},
{
["action"] = "soul_carver",
["enabled"] = true,
},
{
["action"] = "fel_devastation",
["enabled"] = true,
},
},
},
},
["Balance"] = {
["source"] = "https://balance-simc.github.io/Balance-SimC/md.html?file=balance.txt",
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimC",
["desc"] = "2024-05-08: SimC update.\n\n2024-03-10: Minor update from sim.\n\n2023-12-06 & 07: Resync variables; restore fallthru priority.\n\n2023-11-13: Sim updates.\n\n2023-11-05: Patch 10.2.\n\n2023-09-10: Minor update to trinket and flow.\n\n2023-08-08: Minor SimC update.\n\n2023-07-11: Patch 10.1.5 update.\n\n2023-06-24:  Adjust AOE variable, Solar Eclipse ST variable, AOE Starfire/Wrath usage in Eclipses.\n\n2023-05-28:  Minor update for Spoils trinket.\n\n2023-05-22:  Tweak Fury of Elune.\n\n2023-05-20:  Starlord canceling is a thing again.\n\n2023-05-13:  Use new action.X.energize_amount syntax from SimC.\n\n2023-05-08:  Updates from SimC impacting Starsurge usage.\n\n2023-05-06:  Minor updates.\n\n2023-05-02:  Updates for 10.1 from SimC.\n\n2023-04-17:  Adjust on_use_trinket variable.\n\n2023-02-25:  Added single-target use of Starfall with Touch the Cosmos.",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "solar_beam",
},
{
["action"] = "soothe",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "wrath",
["criteria"] = "time < gcd.max & ( eclipse.any_next || eclipse.lunar_next )",
["line_cd"] = "5",
},
{
["enabled"] = true,
["action"] = "stellar_flare",
["criteria"] = "refreshable & time < 2 * gcd.max & buff.eclipse_lunar.up",
["line_cd"] = "5",
},
{
["enabled"] = true,
["action"] = "starfire",
["criteria"] = "! talent.stellar_flare.enabled & time < 2 * gcd.max & buff.eclipse_lunar.up",
["line_cd"] = "5",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.starfall > ( 1 + ( ! talent.aetherial_kindling.enabled & ! talent.starweaver.enabled ) ) & talent.starfall.enabled",
["var_name"] = "is_aoe",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "6 / spell_haste + talent.natures_balance.enabled + talent.orbit_breaker.enabled * dot.moonfire.ticking * ( buff.orbit_breaker.stack > ( 27 - 2 * buff.solstice.up ) ) * 40",
["var_name"] = "passive_asp",
},
{
["enabled"] = true,
["criteria"] = "buff.ca_inc.remains >= 20 || variable.no_cd_talent || boss & fight_remains < 15",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "! druid.no_cds & ( buff.ca_inc.remains >= 20 || variable.no_cd_talent || boss & fight_remains < 30 )",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "variable.on_use_trinket != 1 & ! trinket.t2.ready_cooldown || ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & buff.ca_inc.up || variable.no_cd_talent || boss & fight_remains < 20 || variable.on_use_trinket = 0",
["slots"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "variable.on_use_trinket != 2 & ! trinket.t1.ready_cooldown || variable.on_use_trinket = 2 & buff.ca_inc.up || variable.no_cd_talent || boss & fight_remains < 20 || variable.on_use_trinket = 0",
["slots"] = "trinket2",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "natures_vigil",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "variable.is_aoe",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! variable.is_aoe",
["list_name"] = "st",
},
},
["precombat"] = {
{
["action"] = "moonkin_form",
["enabled"] = true,
},
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.celestial_alignment.enabled & ! talent.incarnation_chosen_of_elune.enabled || druid.no_cds",
["var_name"] = "no_cd_talent",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "on_use_trinket",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "1",
["var_name"] = "on_use_trinket",
["criteria"] = "trinket.t1.has_use_buff & trinket.t1.cooldown.duration > 0 || trinket.t1.is.spoils_of_neltharus || trinket.t1.is.mirror_of_fractured_tomorrows",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "2",
["var_name"] = "on_use_trinket",
["criteria"] = "trinket.t2.has_use_buff & trinket.t2.cooldown.duration > 0 || trinket.t2.is.spoils_of_neltharus || trinket.t2.is.mirror_of_fractured_tomorrows",
},
{
["enabled"] = true,
["criteria"] = "( eclipse.any_next || eclipse.lunar_next )",
["action"] = "wrath",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "! boss & refreshable & ( target.time_to_die - remains ) > 6 & astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! druid.no_cds & ( cooldown.ca_inc.remains < 5 & ! buff.ca_inc.up & ( target.time_to_die > 10 & buff.primordial_arcanic_pulsar.value < 500 || fight_remains < 25 + 10 * talent.incarnation_chosen_of_elune.enabled ) )",
["var_name"] = "cd_condition_aoe",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 - ( spell_targets / 2 ) & astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "boss & refreshable & ( target.time_to_die - remains ) > 6 & astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( target.time_to_die - remains - spell_targets.starfire ) > 8 + spell_targets.starfire & astral_power.deficit > variable.passive_asp + energize_amount & spell_targets.starfire < ( 11 - talent.umbral_intensity.rank - talent.astral_smolder.rank ) & variable.cd_condition_aoe",
["action"] = "stellar_flare",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.cd_condition_aoe & ( talent.orbital_strike.enabled & astral_power.deficit < variable.passive_asp + 8 * spell_targets || buff.touch_the_cosmos.up ) || astral_power.deficit < ( variable.passive_asp + 8 + 12 * ( buff.eclipse_lunar.remains < 4 || buff.eclipse_solar.remains < 4 ) )",
["var_name"] = "starfall_condition1",
},
{
["enabled"] = true,
["buff_name"] = "starlord",
["criteria"] = "buff.starlord.remains < 2 & variable.starfall_condition1",
["action"] = "cancel_buff",
},
{
["enabled"] = true,
["criteria"] = "variable.starfall_condition1",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition_aoe",
["action"] = "celestial_alignment",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition_aoe",
["action"] = "incarnation",
},
{
["action"] = "warrior_of_elune",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.starfire < 3",
["var_name"] = "enter_solar",
},
{
["enabled"] = true,
["criteria"] = "variable.enter_solar & ( eclipse.any_next || buff.eclipse_solar.remains < action.starfire.cast_time )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_solar & ( eclipse.any_next || buff.eclipse_lunar.remains < action.wrath.cast_time )",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + 20 & ( ! talent.waning_twilight.enabled || dot.fungal_growth.remains < 2 & target.time_to_die > 7 & ! prev_gcd.1.wild_mushroom )",
["action"] = "wild_mushroom",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die > 2 & ( buff.ca_inc.remains > 3 || cooldown.ca_inc.remains > 30 & buff.primordial_arcanic_pulsar.value <= 280 || buff.primordial_arcanic_pulsar.value >= 560 & astral_power > 50 ) || boss & fight_remains < 10",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "target.time_to_die > 4 & ( buff.starweavers_warp.up || talent.starlord.enabled & buff.starlord.stack < 3 )",
["var_name"] = "starfall_condition2",
},
{
["enabled"] = true,
["buff_name"] = "starlord",
["criteria"] = "buff.starlord.remains < 2 & variable.starfall_condition2",
["action"] = "cancel_buff",
},
{
["enabled"] = true,
["criteria"] = "variable.starfall_condition2",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) & ( buff.ca_inc.up || charges_fractional > 2.5 & buff.primordial_arcanic_pulsar.value <= 520 & cooldown.ca_inc.remains > 10 || fight_remains < 10 )",
["action"] = "full_moon",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_weft.up & spell_targets.starfire < 3",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( target.time_to_die - remains - spell_targets.starfire ) > 8 + spell_targets.starfire & astral_power.deficit > variable.passive_asp + energize_amount & spell_targets.starfire < ( 11 - talent.umbral_intensity.rank - talent.astral_smolder.rank )",
["action"] = "stellar_flare",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "astral_communion",
},
{
["enabled"] = true,
["criteria"] = "astral_power < 50 & spell_targets.starfall < 3 + talent.elunes_guidance.enabled & ( buff.eclipse_lunar.remains > 4 || buff.eclipse_solar.remains > 4 )",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "new_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time )",
["action"] = "half_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + 10",
["action"] = "new_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + 20 & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time )",
["action"] = "half_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + 20",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_weft.up & spell_targets.starfire < 17",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "spell_targets > ( 3 - ( buff.dreamstate.up || buff.balance_t31_4pc_buff_lunar.stack > buff.balance_t31_4pc_buff_solar.stack ) ) & buff.eclipse_lunar.up || eclipse.in_lunar",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "fallthru",
},
},
["fallthru"] = {
{
["enabled"] = true,
["criteria"] = "variable.is_aoe",
["action"] = "starfall",
},
{
["action"] = "starsurge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! variable.is_aoe",
["action"] = "wild_mushroom",
},
{
["enabled"] = true,
["criteria"] = "dot.moonfire.remains > remains * 22 / 18",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["action"] = "moonfire",
["enabled"] = true,
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "refreshable & remains < 2 & ( target.time_to_die - remains ) > 6",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! druid.no_cds & ( cooldown.ca_inc.remains < 5 & ! buff.ca_inc.up & ( target.time_to_die > 15 & buff.primordial_arcanic_pulsar.value < 480 || boss & fight_remains < 25 + 10 * talent.incarnation_chosen_of_elune.enabled ) )",
["var_name"] = "cd_condition_st",
},
{
["enabled"] = true,
["criteria"] = "refreshable & remains < 2 & ( target.time_to_die - remains ) > 6",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & astral_power.deficit > variable.passive_asp + energize_amount & remains < 2 & ( target.time_to_die - remains ) > 8",
["action"] = "stellar_flare",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["buff_name"] = "starlord",
["criteria"] = "buff.starlord.remains < 2 & ( buff.primordial_arcanic_pulsar.value >= 550 & ! buff.ca_inc.up & buff.starweavers_warp.up || buff.primordial_arcanic_pulsar.value >= 560 & buff.starweavers_weft.up )",
["action"] = "cancel_buff",
},
{
["enabled"] = true,
["criteria"] = "buff.primordial_arcanic_pulsar.value >= 550 & ! buff.ca_inc.up & buff.starweavers_warp.up & ! buff.starweavers_weft.up",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "buff.primordial_arcanic_pulsar.value >= 560 & buff.starweavers_weft.up",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "buff.dreamstate.up & variable.cd_condition_st & eclipse.in_lunar",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "buff.dreamstate.up & variable.cd_condition_st & buff.eclipse_solar.up",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "buff.touch_the_cosmos.up & variable.cd_condition_st",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition_st",
["action"] = "celestial_alignment",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition_st",
["action"] = "incarnation",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.primordial_arcanic_pulsar.value < 520 & cooldown.ca_inc.remains > 5 & spell_targets.starfire < 3 || set_bonus.tier31_2pc",
["var_name"] = "solar_eclipse_st",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "eclipse.any_next || variable.solar_eclipse_st & buff.eclipse_solar.up & ( buff.eclipse_solar.remains < action.starfire.cast_time ) || ! variable.solar_eclipse_st & buff.eclipse_lunar.up & ( buff.eclipse_lunar.remains < action.wrath.cast_time )",
["var_name"] = "enter_eclipse",
},
{
["enabled"] = true,
["criteria"] = "variable.solar_eclipse_st & ( variable.enter_eclipse || buff.eclipse_solar.remains < 7 )",
["action"] = "warrior_of_elune",
},
{
["enabled"] = true,
["criteria"] = "variable.enter_eclipse & ( variable.solar_eclipse_st || buff.warrior_of_elune.up )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "variable.enter_eclipse",
["action"] = "wrath",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.ca_inc.remains > 4 || ( cooldown.ca_inc.remains > 30 || variable.no_cd_talent ) & ( buff.eclipse_lunar.remains > 4 || buff.eclipse_solar.remains > 4 )",
["var_name"] = "convoke_condition",
},
{
["enabled"] = true,
["criteria"] = "action.convoke_the_spirits.known & cooldown.convoke_the_spirits.ready & variable.convoke_condition",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "variable.convoke_condition",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "astral_communion",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die > 2 & ( buff.ca_inc.remains > 3 || cooldown.ca_inc.remains > 30 & buff.primordial_arcanic_pulsar.value <= 280 || buff.primordial_arcanic_pulsar.value >= 560 & astral_power > 50 ) || boss & fight_remains < 10",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_warp.up & ! buff.starweavers_weft.up",
["action"] = "starfall",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.starlord.enabled & buff.starlord.stack < 3 || ( buff.balance_of_all_things_arcane.stack + buff.balance_of_all_things_nature.stack ) > 2 & buff.starlord.remains > 4",
["var_name"] = "starsurge_condition1",
},
{
["enabled"] = true,
["criteria"] = "buff.gathering_starstuff.stack = 3 & astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "wrath",
},
{
["enabled"] = true,
["buff_name"] = "starlord",
["criteria"] = "buff.starlord.remains < 2 & variable.starsurge_condition1",
["action"] = "cancel_buff",
},
{
["enabled"] = true,
["criteria"] = "variable.starsurge_condition1",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "refreshable & astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & astral_power.deficit > variable.passive_asp + energize_amount",
["action"] = "stellar_flare",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.ca_inc.up || charges_fractional > 2.5 & buff.primordial_arcanic_pulsar.value <= 520 & cooldown.ca_inc.remains > 10 || fight_remains < 10 )",
["action"] = "new_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) & ( buff.ca_inc.up || charges_fractional > 2.5 & buff.primordial_arcanic_pulsar.value <= 520 & cooldown.ca_inc.remains > 10 || fight_remains < 10 )",
["action"] = "half_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) & ( buff.ca_inc.up || charges_fractional > 2.5 & buff.primordial_arcanic_pulsar.value <= 520 & cooldown.ca_inc.remains > 10 || fight_remains < 10 )",
["action"] = "full_moon",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.starweavers_weft.up || astral_power.deficit < variable.passive_asp + action.wrath.energize_amount + ( action.starfire.energize_amount + variable.passive_asp ) * ( buff.eclipse_solar.remains < ( gcd.max * 3 ) ) || talent.astral_communion.enabled & cooldown.astral_communion.remains < 3 || buff.ca_inc.up & cooldown.full_moon.ready & astral_power.deficit + variable.passive_asp < action.full_moon.energize_amount || fight_remains < 5",
["var_name"] = "starsurge_condition2",
},
{
["enabled"] = true,
["buff_name"] = "starlord",
["criteria"] = "buff.starlord.remains < 2 & variable.starsurge_condition2",
["action"] = "cancel_buff",
},
{
["enabled"] = true,
["criteria"] = "variable.starsurge_condition2",
["action"] = "starsurge",
},
{
["action"] = "wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "fallthru",
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'default' required some automated changes.\nLine 5: Converted 'talent.stellar_flare' to 'talent.stellar_flare.enabled' (1x).\nLine 6: Converted 'talent.aetherial_kindling' to 'talent.aetherial_kindling.enabled' (1x).\nLine 6: Converted 'talent.starweaver' to 'talent.starweaver.enabled' (1x).\nLine 6: Converted 'talent.starfall' to 'talent.starfall.enabled' (1x).\nLine 7: Converted 'talent.natures_balance' to 'talent.natures_balance.enabled' (1x).\nLine 7: Converted 'talent.orbit_breaker' to 'talent.orbit_breaker.enabled' (1x).\nLine 7: Converted operations in '6%spell_haste+talent.natures_balance.enabled+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*40' to '6/spell_haste+talent.natures_balance.enabled+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*40'.\nLine 10: Converted 'trinket.2.ready_cooldown' to 'trinket.t2.ready_cooldown' (1x).\nLine 11: Converted 'trinket.1.ready_cooldown' to 'trinket.t1.ready_cooldown' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.celestial_alignment' to 'talent.celestial_alignment.enabled' (1x).\nLine 3: Converted 'talent.incarnation_chosen_of_elune' to 'talent.incarnation_chosen_of_elune.enabled' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.is.spoils_of_neltharus' to 'trinket.t1.is.spoils_of_neltharus' (1x).\nLine 5: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.is.spoils_of_neltharus' to 'trinket.t2.is.spoils_of_neltharus' (1x).\nLine 6: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 2: Converted 'talent.incarnation_chosen_of_elune' to 'talent.incarnation_chosen_of_elune.enabled' (1x).\nLine 3: Converted operations in 'refreshable&(target.time_to_die-remains)>6-(spell_targets%2)&astral_power.deficit>variable.passive_asp+energize_amount' to 'refreshable&(target.time_to_die-remains)>6-(spell_targets/2)&astral_power.deficit>variable.passive_asp+energize_amount'.\nLine 6: Converted 'talent.orbital_strike' to 'talent.orbital_strike.enabled' (1x).\nLine 15: Converted 'talent.waning_twilight' to 'talent.waning_twilight.enabled' (1x).\nLine 17: Converted 'talent.starlord' to 'talent.starlord.enabled' (1x).\nLine 24: Converted 'talent.elunes_guidance' to 'talent.elunes_guidance.enabled' (1x).\n\nThe import for 'fallthru' required some automated changes.\nLine 4: Converted operations in 'dot.moonfire.remains>remains*22%18' to 'dot.moonfire.remains>remains*22/18'.\n\nThe import for 'st' required some automated changes.\nLine 2: Converted 'talent.incarnation_chosen_of_elune' to 'talent.incarnation_chosen_of_elune.enabled' (1x).\nLine 25: Converted 'talent.starlord' to 'talent.starlord.enabled' (1x).\nLine 35: Converted 'talent.astral_communion' to 'talent.astral_communion.enabled' (1x).\n\nImported 5 action lists.\n",
["spec"] = 102,
["profile"] = "actions.precombat+=/moonkin_form\nactions.precombat+=/mark_of_the_wild\nactions.precombat+=/variable,name=no_cd_talent,value=!talent.celestial_alignment&!talent.incarnation_chosen_of_elune||druid.no_cds\nactions.precombat+=/variable,name=on_use_trinket,value=0\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=1,if=trinket.1.has_use_buff&trinket.1.cooldown.duration>0||trinket.1.is.spoils_of_neltharus||trinket.1.is.mirror_of_fractured_tomorrows\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=2,if=trinket.2.has_use_buff&trinket.2.cooldown.duration>0||trinket.2.is.spoils_of_neltharus||trinket.2.is.mirror_of_fractured_tomorrows\nactions.precombat+=/wrath,if=(eclipse.any_next||eclipse.lunar_next)\n\n# Executed every time the actor is available.\nactions+=/solar_beam\nactions+=/soothe\nactions+=/wrath,if=time<gcd.max&(eclipse.any_next||eclipse.lunar_next),line_cd=5\nactions+=/stellar_flare,if=refreshable&time<2*gcd.max&buff.eclipse_lunar.up,line_cd=5\nactions+=/starfire,if=!talent.stellar_flare&time<2*gcd.max&buff.eclipse_lunar.up,line_cd=5\nactions+=/variable,name=is_aoe,value=spell_targets.starfall>(1+(!talent.aetherial_kindling&!talent.starweaver))&talent.starfall\nactions+=/variable,name=passive_asp,value=6%spell_haste+talent.natures_balance+talent.orbit_breaker*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*40\nactions+=/berserking,if=buff.ca_inc.remains>=20||variable.no_cd_talent||boss&fight_remains<15\nactions+=/potion,if=!druid.no_cds&(buff.ca_inc.remains>=20||variable.no_cd_talent||boss&fight_remains<30)\nactions+=/use_items,slots=trinket1,if=variable.on_use_trinket!=1&!trinket.2.ready_cooldown||(variable.on_use_trinket=1||variable.on_use_trinket=3)&buff.ca_inc.up||variable.no_cd_talent||boss&fight_remains<20||variable.on_use_trinket=0\nactions+=/use_items,slots=trinket2,if=variable.on_use_trinket!=2&!trinket.1.ready_cooldown||variable.on_use_trinket=2&buff.ca_inc.up||variable.no_cd_talent||boss&fight_remains<20||variable.on_use_trinket=0\nactions+=/use_items\nactions+=/natures_vigil\n## actions+=/invoke_external_buff,name=power_infusion\nactions+=/run_action_list,name=aoe,strict=1,if=variable.is_aoe\nactions+=/run_action_list,name=st,strict=1,if=!variable.is_aoe\n\nactions.aoe+=/moonfire,cycle_targets=1,if=!boss&refreshable&(target.time_to_die-remains)>6&astral_power.deficit>variable.passive_asp+energize_amount\nactions.aoe+=/variable,name=cd_condition_aoe,value=!druid.no_cds&(cooldown.ca_inc.remains<5&!buff.ca_inc.up&(target.time_to_die>10&buff.primordial_arcanic_pulsar.value<500||fight_remains<25+10*talent.incarnation_chosen_of_elune))\nactions.aoe+=/sunfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6-(spell_targets%2)&astral_power.deficit>variable.passive_asp+energize_amount\nactions.aoe+=/moonfire,cycle_targets=1,if=boss&refreshable&(target.time_to_die-remains)>6&astral_power.deficit>variable.passive_asp+energize_amount\nactions.aoe+=/stellar_flare,cycle_targets=1,if=refreshable&(target.time_to_die-remains-spell_targets.starfire)>8+spell_targets.starfire&astral_power.deficit>variable.passive_asp+energize_amount&spell_targets.starfire<(11-talent.umbral_intensity.rank-talent.astral_smolder.rank)&variable.cd_condition_aoe\nactions.aoe+=/variable,name=starfall_condition1,value=variable.cd_condition_aoe&(talent.orbital_strike&astral_power.deficit<variable.passive_asp+8*spell_targets||buff.touch_the_cosmos.up)||astral_power.deficit<(variable.passive_asp+8+12*(buff.eclipse_lunar.remains<4||buff.eclipse_solar.remains<4))\nactions.aoe+=/cancel_buff,name=starlord,if=buff.starlord.remains<2&variable.starfall_condition1\nactions.aoe+=/starfall,if=variable.starfall_condition1\nactions.aoe+=/celestial_alignment,if=variable.cd_condition_aoe\nactions.aoe+=/incarnation,if=variable.cd_condition_aoe\nactions.aoe+=/warrior_of_elune\nactions.aoe+=/variable,name=enter_solar,value=spell_targets.starfire<3\nactions.aoe+=/starfire,if=variable.enter_solar&(eclipse.any_next||buff.eclipse_solar.remains<action.starfire.cast_time)\nactions.aoe+=/wrath,if=!variable.enter_solar&(eclipse.any_next||buff.eclipse_lunar.remains<action.wrath.cast_time)\nactions.aoe+=/wild_mushroom,if=astral_power.deficit>variable.passive_asp+20&(!talent.waning_twilight||dot.fungal_growth.remains<2&target.time_to_die>7&!prev_gcd.1.wild_mushroom)\nactions.aoe+=/fury_of_elune,if=target.time_to_die>2&(buff.ca_inc.remains>3||cooldown.ca_inc.remains>30&buff.primordial_arcanic_pulsar.value<=280||buff.primordial_arcanic_pulsar.value>=560&astral_power>50)||boss&fight_remains<10\nactions.aoe+=/variable,name=starfall_condition2,value=target.time_to_die>4&(buff.starweavers_warp.up||talent.starlord&buff.starlord.stack<3)\nactions.aoe+=/cancel_buff,name=starlord,if=buff.starlord.remains<2&variable.starfall_condition2\nactions.aoe+=/starfall,if=variable.starfall_condition2\nactions.aoe+=/full_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)&(buff.ca_inc.up||charges_fractional>2.5&buff.primordial_arcanic_pulsar.value<=520&cooldown.ca_inc.remains>10||fight_remains<10)\nactions.aoe+=/starsurge,if=buff.starweavers_weft.up&spell_targets.starfire<3\nactions.aoe+=/stellar_flare,cycle_targets=1,if=refreshable&(target.time_to_die-remains-spell_targets.starfire)>8+spell_targets.starfire&astral_power.deficit>variable.passive_asp+energize_amount&spell_targets.starfire<(11-talent.umbral_intensity.rank-talent.astral_smolder.rank)\nactions.aoe+=/astral_communion,if=astral_power.deficit>variable.passive_asp+energize_amount\nactions.aoe+=/convoke_the_spirits,if=astral_power<50&spell_targets.starfall<3+talent.elunes_guidance&(buff.eclipse_lunar.remains>4||buff.eclipse_solar.remains>4)\nactions.aoe+=/new_moon,if=astral_power.deficit>variable.passive_asp+energize_amount\nactions.aoe+=/half_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)\nactions.aoe+=/force_of_nature,if=astral_power.deficit>variable.passive_asp+energize_amount\nactions.aoe+=/new_moon,if=astral_power.deficit>variable.passive_asp+10\nactions.aoe+=/half_moon,if=astral_power.deficit>variable.passive_asp+20&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)\nactions.aoe+=/force_of_nature,if=astral_power.deficit>variable.passive_asp+20\nactions.aoe+=/starsurge,if=buff.starweavers_weft.up&spell_targets.starfire<17\nactions.aoe+=/starfire,if=spell_targets>(3-(buff.dreamstate.up||buff.balance_t31_4pc_buff_lunar.stack>buff.balance_t31_4pc_buff_solar.stack))&buff.eclipse_lunar.up||eclipse.in_lunar\nactions.aoe+=/wrath\nactions.aoe+=/run_action_list,name=fallthru\n\nactions.fallthru+=/starfall,if=variable.is_aoe\nactions.fallthru+=/starsurge\nactions.fallthru+=/wild_mushroom,if=!variable.is_aoe\nactions.fallthru+=/sunfire,cycle_targets=1,if=dot.moonfire.remains>remains*22%18\nactions.fallthru+=/moonfire\n\nactions.st+=/sunfire,cycle_targets=1,if=refreshable&remains<2&(target.time_to_die-remains)>6\nactions.st+=/variable,name=cd_condition_st,value=!druid.no_cds&(cooldown.ca_inc.remains<5&!buff.ca_inc.up&(target.time_to_die>15&buff.primordial_arcanic_pulsar.value<480||boss&fight_remains<25+10*talent.incarnation_chosen_of_elune))\nactions.st+=/moonfire,cycle_targets=1,if=refreshable&remains<2&(target.time_to_die-remains)>6\nactions.st+=/stellar_flare,cycle_targets=1,if=refreshable&astral_power.deficit>variable.passive_asp+energize_amount&remains<2&(target.time_to_die-remains)>8\nactions.st+=/cancel_buff,name=starlord,if=buff.starlord.remains<2&(buff.primordial_arcanic_pulsar.value>=550&!buff.ca_inc.up&buff.starweavers_warp.up||buff.primordial_arcanic_pulsar.value>=560&buff.starweavers_weft.up)\nactions.st+=/starfall,if=buff.primordial_arcanic_pulsar.value>=550&!buff.ca_inc.up&buff.starweavers_warp.up&!buff.starweavers_weft.up\nactions.st+=/starsurge,if=buff.primordial_arcanic_pulsar.value>=560&buff.starweavers_weft.up\nactions.st+=/starfire,if=buff.dreamstate.up&variable.cd_condition_st&eclipse.in_lunar\nactions.st+=/wrath,if=buff.dreamstate.up&variable.cd_condition_st&buff.eclipse_solar.up\nactions.st+=/starsurge,if=buff.touch_the_cosmos.up&variable.cd_condition_st\nactions.st+=/celestial_alignment,if=variable.cd_condition_st\nactions.st+=/incarnation,if=variable.cd_condition_st\nactions.st+=/variable,name=solar_eclipse_st,value=buff.primordial_arcanic_pulsar.value<520&cooldown.ca_inc.remains>5&spell_targets.starfire<3||set_bonus.tier31_2pc\nactions.st+=/variable,name=enter_eclipse,value=eclipse.any_next||variable.solar_eclipse_st&buff.eclipse_solar.up&(buff.eclipse_solar.remains<action.starfire.cast_time)||!variable.solar_eclipse_st&buff.eclipse_lunar.up&(buff.eclipse_lunar.remains<action.wrath.cast_time)\nactions.st+=/warrior_of_elune,if=variable.solar_eclipse_st&(variable.enter_eclipse||buff.eclipse_solar.remains<7)\nactions.st+=/starfire,if=variable.enter_eclipse&(variable.solar_eclipse_st||buff.warrior_of_elune.up)\nactions.st+=/wrath,if=variable.enter_eclipse\nactions.st+=/variable,name=convoke_condition,value=buff.ca_inc.remains>4||(cooldown.ca_inc.remains>30||variable.no_cd_talent)&(buff.eclipse_lunar.remains>4||buff.eclipse_solar.remains>4)\nactions.st+=/starsurge,if=action.convoke_the_spirits.known&cooldown.convoke_the_spirits.ready&variable.convoke_condition\nactions.st+=/convoke_the_spirits,if=variable.convoke_condition\nactions.st+=/astral_communion,if=astral_power.deficit>variable.passive_asp+energize_amount\nactions.st+=/force_of_nature,if=astral_power.deficit>variable.passive_asp+energize_amount\nactions.st+=/fury_of_elune,if=target.time_to_die>2&(buff.ca_inc.remains>3||cooldown.ca_inc.remains>30&buff.primordial_arcanic_pulsar.value<=280||buff.primordial_arcanic_pulsar.value>=560&astral_power>50)||boss&fight_remains<10\nactions.st+=/starfall,if=buff.starweavers_warp.up&!buff.starweavers_weft.up\nactions.st+=/variable,name=starsurge_condition1,value=talent.starlord&buff.starlord.stack<3||(buff.balance_of_all_things_arcane.stack+buff.balance_of_all_things_nature.stack)>2&buff.starlord.remains>4\nactions.st+=/wrath,if=buff.gathering_starstuff.stack=3&astral_power.deficit>variable.passive_asp+energize_amount\nactions.st+=/cancel_buff,name=starlord,if=buff.starlord.remains<2&variable.starsurge_condition1\nactions.st+=/starsurge,if=variable.starsurge_condition1\nactions.st+=/sunfire,cycle_targets=1,if=refreshable&astral_power.deficit>variable.passive_asp+energize_amount\nactions.st+=/moonfire,cycle_targets=1,if=refreshable&astral_power.deficit>variable.passive_asp+energize_amount\nactions.st+=/stellar_flare,cycle_targets=1,if=refreshable&astral_power.deficit>variable.passive_asp+energize_amount\nactions.st+=/new_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.ca_inc.up||charges_fractional>2.5&buff.primordial_arcanic_pulsar.value<=520&cooldown.ca_inc.remains>10||fight_remains<10)\nactions.st+=/half_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)&(buff.ca_inc.up||charges_fractional>2.5&buff.primordial_arcanic_pulsar.value<=520&cooldown.ca_inc.remains>10||fight_remains<10)\nactions.st+=/full_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)&(buff.ca_inc.up||charges_fractional>2.5&buff.primordial_arcanic_pulsar.value<=520&cooldown.ca_inc.remains>10||fight_remains<10)\nactions.st+=/variable,name=starsurge_condition2,value=buff.starweavers_weft.up||astral_power.deficit<variable.passive_asp+action.wrath.energize_amount+(action.starfire.energize_amount+variable.passive_asp)*(buff.eclipse_solar.remains<(gcd.max*3))||talent.astral_communion&cooldown.astral_communion.remains<3||buff.ca_inc.up&cooldown.full_moon.ready&astral_power.deficit+variable.passive_asp<action.full_moon.energize_amount||fight_remains<5\nactions.st+=/cancel_buff,name=starlord,if=buff.starlord.remains<2&variable.starsurge_condition2\nactions.st+=/starsurge,if=variable.starsurge_condition2\nactions.st+=/wrath\nactions.st+=/run_action_list,name=fallthru",
},
["Survival"] = {
["source"] = "# https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240727,
["author"] = "SimC",
["desc"] = "2024-07-27: Minor sim update; use Hunter's Mark\n\n2024-07-23: The War Within",
["lists"] = {
["default"] = {
{
["action"] = "muzzle",
["enabled"] = true,
},
{
["action"] = "tranquilizing_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["criteria"] = "active_dot.hunters_mark = 0 & target.time_to_pct_80 > 20",
["action"] = "hunters_mark",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2",
["action"] = "call_action_list",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 3",
["action"] = "call_action_list",
["list_name"] = "st",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["cleave"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.coordinated_assault.remains",
["action"] = "spearhead",
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack > 0 & cooldown.wildfire_bomb.charges_fractional > 1.7 || cooldown.wildfire_bomb.charges_fractional > 1.9 || cooldown.coordinated_assault.remains < 2 * gcd.max",
["action"] = "wildfire_bomb",
},
{
["enabled"] = true,
["criteria"] = "! talent.bombardier.enabled || talent.bombardier.enabled & cooldown.wildfire_bomb.charges_fractional < 1",
["action"] = "coordinated_assault",
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack < 2",
["action"] = "flanking_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack > 0",
["action"] = "explosive_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack > 0",
["action"] = "fury_of_the_eagle",
},
{
["enabled"] = true,
["action"] = "kill_command",
["criteria"] = "focus + cast_regen < focus.max",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack > 0",
["action"] = "wildfire_bomb",
},
{
["enabled"] = true,
["criteria"] = "buff.merciless_blows.up",
["action"] = "mongoose_bite",
},
{
["enabled"] = true,
["criteria"] = "buff.merciless_blows.up",
["action"] = "raptor_strike",
},
{
["action"] = "butchery",
["enabled"] = true,
},
{
["action"] = "kill_shot",
["enabled"] = true,
},
{
["action"] = "mongoose_bite",
["enabled"] = true,
},
{
["action"] = "raptor_strike",
["enabled"] = true,
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault.up || ! talent.coordinated_assault.enabled & cooldown.spearhead.remains || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "prev.kill_command",
["action"] = "harpoon",
},
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault.up || ! talent.coordinated_assault.enabled & cooldown.spearhead.remains || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault.up || ! talent.coordinated_assault.enabled & cooldown.spearhead.remains || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
["action"] = "fireblood",
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault.up || ! talent.coordinated_assault.enabled & cooldown.spearhead.remains || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled || time_to_die < 13",
["action"] = "berserking",
},
{
["action"] = "muzzle",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 25 || buff.coordinated_assault.up || ! talent.coordinated_assault.enabled & cooldown.spearhead.remains || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["name"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["name"] = "manic_grieftorch",
["action"] = "manic_grieftorch",
},
{
["enabled"] = true,
["name"] = "beacon_to_the_beyond",
["action"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["criteria"] = "cooldown.coordinated_assault.remains || cooldown.spearhead.remains",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "target.distance >= 6",
["action"] = "aspect_of_the_eagle",
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.coordinated_assault.remains",
["action"] = "spearhead",
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack > 0 & cooldown.wildfire_bomb.charges_fractional > 1.7 || cooldown.wildfire_bomb.charges_fractional > 1.9 || cooldown.coordinated_assault.remains < 2 * gcd.max",
["action"] = "wildfire_bomb",
},
{
["enabled"] = true,
["criteria"] = "! talent.bombardier.enabled || talent.bombardier.enabled & cooldown.wildfire_bomb.charges_fractional < 1",
["action"] = "coordinated_assault",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier31_2pc",
["action"] = "fury_of_the_eagle",
["interrupt"] = "1",
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack < 2",
["action"] = "flanking_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack > 0 || talent.sic_em.enabled",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack > 0",
["action"] = "explosive_shot",
},
{
["enabled"] = true,
["action"] = "kill_command",
["criteria"] = "focus + cast_regen < focus.max",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.tip_of_the_spear.stack > 0",
["action"] = "wildfire_bomb",
},
{
["action"] = "mongoose_bite",
["enabled"] = true,
},
{
["action"] = "raptor_strike",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "summon_pet",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.hunters_mark = 0",
["action"] = "hunters_mark",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
},
},
["version"] = 20240727,
["warnings"] = "The import for 'cds' required some automated changes.\nLine 1: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 1: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 1: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 3: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 3: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 3: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 4: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 4: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 4: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 6: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 6: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 6: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 8: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 8: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 8: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 3: Converted 'talent.bombardier' to 'talent.bombardier.enabled' (1x).\nLine 3: Converted 'talent.bombardier' to 'talent.bombardier.enabled' (1x).\nLine 6: Converted 'talent.sic_em' to 'talent.sic_em.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 3: Converted 'talent.bombardier' to 'talent.bombardier.enabled' (1x).\nLine 3: Converted 'talent.bombardier' to 'talent.bombardier.enabled' (1x).\n\nImported 5 action lists.\n",
["spec"] = 255,
["profile"] = "actions.precombat+=/summon_pet\nactions.precombat+=/hunters_mark,if=active_dot.hunters_mark=0\nactions.precombat+=/use_item,name=algethar_puzzle_box\n\nactions+=/muzzle\nactions+=/tranquilizing_shot\nactions+=/call_action_list,name=cds\nactions+=/hunters_mark,if=active_dot.hunters_mark=0&target.time_to_pct_80>20\nactions+=/call_action_list,name=cleave,if=active_enemies>2\nactions+=/call_action_list,name=st,if=active_enemies<3\nactions+=/arcane_torrent\nactions+=/bag_of_tricks\n\nactions.cds+=/blood_fury,if=buff.coordinated_assault.up||!talent.coordinated_assault&cooldown.spearhead.remains||!talent.spearhead&!talent.coordinated_assault\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.coordinated_assault.up||!talent.coordinated_assault&cooldown.spearhead.remains||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/harpoon,if=prev.kill_command\nactions.cds+=/ancestral_call,if=buff.coordinated_assault.up||!talent.coordinated_assault&cooldown.spearhead.remains||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/fireblood,if=buff.coordinated_assault.up||!talent.coordinated_assault&cooldown.spearhead.remains||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/lights_judgment\nactions.cds+=/berserking,if=buff.coordinated_assault.up||!talent.coordinated_assault&cooldown.spearhead.remains||!talent.spearhead&!talent.coordinated_assault||time_to_die<13\nactions.cds+=/muzzle\nactions.cds+=/potion,if=boss&fight_remains<25||buff.coordinated_assault.up||!talent.coordinated_assault&cooldown.spearhead.remains||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/use_item,name=algethar_puzzle_box,use_off_gcd=1\nactions.cds+=/use_item,name=manic_grieftorch\nactions.cds+=/use_item,name=beacon_to_the_beyond\nactions.cds+=/use_items,if=cooldown.coordinated_assault.remains||cooldown.spearhead.remains\nactions.cds+=/aspect_of_the_eagle,if=target.distance>=6\n\nactions.cleave+=/spearhead,if=cooldown.coordinated_assault.remains\nactions.cleave+=/wildfire_bomb,if=buff.tip_of_the_spear.stack>0&cooldown.wildfire_bomb.charges_fractional>1.7||cooldown.wildfire_bomb.charges_fractional>1.9||cooldown.coordinated_assault.remains<2*gcd\nactions.cleave+=/coordinated_assault,if=!talent.bombardier||talent.bombardier&cooldown.wildfire_bomb.charges_fractional<1\nactions.cleave+=/flanking_strike,if=buff.tip_of_the_spear.stack<2\nactions.cleave+=/explosive_shot,if=buff.tip_of_the_spear.stack>0\nactions.cleave+=/fury_of_the_eagle,if=buff.tip_of_the_spear.stack>0\nactions.cleave+=/kill_command,cycle_targets=1,if=focus+cast_regen<focus.max\nactions.cleave+=/wildfire_bomb,if=buff.tip_of_the_spear.stack>0\nactions.cleave+=/mongoose_bite,if=buff.merciless_blows.up\nactions.cleave+=/raptor_strike,if=buff.merciless_blows.up\nactions.cleave+=/butchery\nactions.cleave+=/kill_shot\nactions.cleave+=/mongoose_bite\nactions.cleave+=/raptor_strike\n\nactions.st+=/spearhead,if=cooldown.coordinated_assault.remains\nactions.st+=/wildfire_bomb,if=buff.tip_of_the_spear.stack>0&cooldown.wildfire_bomb.charges_fractional>1.7||cooldown.wildfire_bomb.charges_fractional>1.9||cooldown.coordinated_assault.remains<2*gcd\nactions.st+=/coordinated_assault,if=!talent.bombardier||talent.bombardier&cooldown.wildfire_bomb.charges_fractional<1\nactions.st+=/fury_of_the_eagle,interrupt=1,if=set_bonus.tier31_2pc\nactions.st+=/flanking_strike,if=buff.tip_of_the_spear.stack<2\nactions.st+=/kill_shot,if=buff.tip_of_the_spear.stack>0||talent.sic_em\nactions.st+=/explosive_shot,if=buff.tip_of_the_spear.stack>0\nactions.st+=/kill_command,cycle_targets=1,if=focus+cast_regen<focus.max\nactions.st+=/wildfire_bomb,if=buff.tip_of_the_spear.stack>0\nactions.st+=/mongoose_bite\nactions.st+=/raptor_strike",
},
["Demonology"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/engine/class_modules/apl/warlock.cpp",
["builtIn"] = true,
["date"] = 20240724,
["spec"] = 266,
["desc"] = "2024-07-23: The War Within (sort of)",
["lists"] = {
["tyrant"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.pet_expire < action.summon_demonic_tyrant.execute_time + ( buff.demonic_core.down * action.shadow_bolt.execute_time + buff.demonic_core.up * gcd.max ) + gcd.max",
["var_name"] = "dummyvar",
},
{
["enabled"] = true,
["criteria"] = "variable.pet_expire > gcd.max + action.summon_demonic_tyrant.cast_time & variable.pet_expire < gcd.max * 4",
["action"] = "hand_of_guldan",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "potion",
["criteria"] = "variable.pet_expire > 0 & variable.pet_expire < action.summon_demonic_tyrant.execute_time + ( buff.demonic_core.down * action.shadow_bolt.execute_time + buff.demonic_core.up * gcd.max ) + gcd.max",
},
{
["enabled"] = true,
["criteria"] = "variable.pet_expire > 0 & variable.pet_expire < action.summon_demonic_tyrant.execute_time + ( buff.demonic_core.down * action.shadow_bolt.execute_time + buff.demonic_core.up * gcd.max ) + gcd.max",
["action"] = "summon_demonic_tyrant",
},
{
["enabled"] = true,
["criteria"] = "pet_count > 2 & ( buff.dreadstalkers.down & buff.grimoire_felguard.down & buff.vilefiend.down ) & ( active_enemies > 3 || active_enemies > 2 & talent.grand_warlocks_design.enabled ) & ! prev_gcd.1.implosion",
["action"] = "implosion",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.grimoire_felguard & time > 30 & buff.demonic_core.down",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.demonic_core.stack < 4 & ( ! buff.vilefiend.up || ! talent.summon_vilefiend.enabled & ( ! buff.dreadstalkers.up ) )",
["action"] = "power_siphon",
},
{
["enabled"] = true,
["criteria"] = "buff.vilefiend.down & buff.dreadstalkers.down & soul_shard < 5 - buff.demonic_core.stack",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "( soul_shard = 5 ) & cooldown.summon_demonic_tyrant.remains < 13 & variable.np",
["action"] = "summon_vilefiend",
},
{
["enabled"] = true,
["criteria"] = "( buff.vilefiend.up || ! talent.summon_vilefiend.enabled & ( ! talent.nether_portal.enabled ) & ( buff.grimoire_felguard.up || soul_shard = 5 ) ) & cooldown.summon_demonic_tyrant.remains < 11 & variable.np",
["action"] = "call_dreadstalkers",
},
{
["enabled"] = true,
["criteria"] = "buff.vilefiend.up || ! talent.summon_vilefiend.enabled & ( ! talent.nether_portal.enabled ) & ( buff.dreadstalkers.up || soul_shard = 5 ) & variable.np",
["action"] = "grimoire_felguard",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 2 & ( buff.vilefiend.up || ! talent.summon_vilefiend.enabled & buff.dreadstalkers.up ) & ( soul_shard > 2 || buff.vilefiend.remains < gcd.max * 2 + 2 / spell_haste ) || ( ! buff.dreadstalkers.up & soul_shard = 5 )",
["action"] = "hand_of_guldan",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4 & ( buff.demonic_core.stack > 1 ) & ( buff.vilefiend.up || ! talent.summon_vilefiend.enabled & buff.dreadstalkers.up )",
["action"] = "demonbolt",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.demonic_core.stack < 3 & variable.pet_expire > action.summon_demonic_tyrant.execute_time + gcd.max * 3 || variable.pet_expire = 0",
["action"] = "power_siphon",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
},
["fight_end"] = {
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "grimoire_felguard",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "call_dreadstalkers",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "summon_vilefiend",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "summon_demonic_tyrant",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 10",
["action"] = "demonic_strength",
},
{
["enabled"] = true,
["criteria"] = "buff.demonic_core.stack < 3 & fight_remains < 20",
["action"] = "power_siphon",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 2 * gcd.max",
["action"] = "implosion",
},
},
["default"] = {
{
["action"] = "axe_toss",
["enabled"] = true,
},
{
["action"] = "spell_lock",
["enabled"] = true,
},
{
["action"] = "devour_magic",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.dreadstalkers.remains >? buff.vilefiend.remains ) - gcd.max * 0.5",
["var_name"] = "pet_expire",
["criteria"] = "buff.vilefiend.up & buff.dreadstalkers.up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.dreadstalkers.remains >? buff.grimoire_felguard.remains ) - gcd.max * 0.5",
["var_name"] = "pet_expire",
["criteria"] = "! talent.summon_vilefiend.enabled & talent.grimoire_felguard.enabled & buff.grimoire_felguard.up & buff.dreadstalkers.up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.dreadstalkers.remains ) - gcd.max",
["var_name"] = "pet_expire",
["criteria"] = "! talent.summon_vilefiend.enabled & ! talent.grimoire_felguard.enabled & buff.dreadstalkers.up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "pet_expire",
["criteria"] = "! buff.vilefiend.up & talent.summon_vilefiend.enabled || ! buff.dreadstalkers.up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! talent.nether_portal.enabled )",
["var_name"] = "np",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.tyrant.down",
["var_name"] = "impl",
["criteria"] = "active_enemies > 1 + ( talent.sacrificed_souls.enabled )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.tyrant.remains < 6",
["var_name"] = "impl",
["criteria"] = "active_enemies > 2 + ( talent.sacrificed_souls.enabled ) & active_enemies < 5 + ( talent.sacrificed_souls.enabled )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.tyrant.remains < 8",
["var_name"] = "impl",
["criteria"] = "active_enemies > 4 + ( talent.sacrificed_souls.enabled )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.summon_demonic_tyrant.remains < 20 & cooldown.summon_demonic_tyrant.remains_expected < 20 & ( buff.demonic_core.stack <= 2 || ! buff.demonic_core.up ) & cooldown.summon_vilefiend.remains < gcd.max * 5 & cooldown.call_dreadstalkers.remains < gcd.max * 5",
["var_name"] = "pool_cores_for_tyrant",
},
{
["use_off_gcd"] = 1,
["action"] = "berserking",
["enabled"] = true,
},
{
["use_off_gcd"] = 1,
["action"] = "blood_fury",
["enabled"] = true,
},
{
["use_off_gcd"] = 1,
["action"] = "fireblood",
["enabled"] = true,
},
{
["use_off_gcd"] = 1,
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! pet.demonic_tyrant.active & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & ( pet.demonic_tyrant.active ) & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 & ! variable.trinket_2_manual ) || variable.trinket_1_buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! pet.demonic_tyrant.active & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & ( pet.demonic_tyrant.active ) & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 & ! variable.trinket_1_manual ) || variable.trinket_2_buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains ) & ( trinket.t1.cast_time > 0 & ! pet.demonic_tyrant.active || ! trinket.t1.cast_time > 0 ) || ( time < 20 & variable.trinket_2_buffs ) || cooldown.summon_demonic_tyrant.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains ) & ( trinket.t2.cast_time > 0 & ! pet.demonic_tyrant.active || ! trinket.t2.cast_time > 0 ) || ( time < 20 & variable.trinket_1_buffs ) || cooldown.summon_demonic_tyrant.remains_expected > 20 )",
},
{
["use_off_gcd"] = 1,
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
},
{
["enabled"] = true,
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
["criteria"] = "trinket.t1.is.nymues_unraveling_spindle & ( ( pet.demonic_tyrant.active & ( ! cooldown.demonic_strength.ready || ! talent.demonic_strength.enabled ) & ! variable.trinket_2_buffs ) || ( variable.trinket_2_buffs ) ) || trinket.t2.is.nymues_unraveling_spindle & ( ( pet.demonic_tyrant.active & ( ! cooldown.demonic_strength.ready || ! talent.demonic_strength.enabled ) & ! variable.trinket_1_buffs ) || ( variable.trinket_1_buffs ) ) || fight_remains < 22",
},
{
["enabled"] = true,
["name"] = "mirror_of_fractured_tomorrows",
["action"] = "mirror_of_fractured_tomorrows",
["criteria"] = "trinket.t1.is.mirror_of_fractured_tomorrows & variable.trinket_priority = 2 || trinket.t2.is.mirror_of_fractured_tomorrows & variable.trinket_priority = 1",
},
{
["enabled"] = true,
["name"] = "timethiefs_gambit",
["action"] = "timethiefs_gambit",
["criteria"] = "pet.demonic_tyrant.active",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "boss & fight_remains < 30",
["list_name"] = "fight_end",
},
{
["enabled"] = true,
["criteria"] = "time < 0.5 & ( fight_remains % 95 > 40 || fight_remains % 95 < 15 ) & ( talent.reign_of_tyranny.enabled || active_enemies > 2 )",
["action"] = "hand_of_guldan",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "( cooldown.summon_demonic_tyrant.remains < 15 & cooldown.summon_vilefiend.remains < gcd.max * 5 & cooldown.call_dreadstalkers.remains < gcd.max * 5 & ( cooldown.grimoire_felguard.remains < 10 || cooldown.grimoire_felguard.remains > cooldown.summon_demonic_tyrant.remains + 60 || ! talent.grimoire_felguard.enabled || ! set_bonus.tier30_2pc ) & ( cooldown.summon_demonic_tyrant.remains_expected < 15 || fight_remains < 40 || buff.power_infusion.up ) & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 20 ) || talent.summon_vilefiend.enabled & cooldown.summon_demonic_tyrant.remains < 15 & cooldown.summon_vilefiend.remains < gcd.max * 5 & cooldown.call_dreadstalkers.remains < gcd.max * 5 & ( cooldown.grimoire_felguard.remains < 10 || cooldown.grimoire_felguard.remains > cooldown.summon_demonic_tyrant.remains + 60 || ! talent.grimoire_felguard.enabled || ! set_bonus.tier30_2pc ) & ( cooldown.summon_demonic_tyrant.remains_expected < 15 || fight_remains < 40 || buff.power_infusion.up ) & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 20 ) ) || ( cooldown.summon_demonic_tyrant.remains < 15 & ( buff.vilefiend.up || ! talent.summon_vilefiend.enabled & ( buff.grimoire_felguard.up || cooldown.grimoire_felguard.up || ! set_bonus.tier30_2pc ) ) & ( cooldown.summon_demonic_tyrant.remains_expected < 15 || buff.grimoire_felguard.up || fight_remains < 40 || buff.power_infusion.up ) & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 20 ) )",
["list_name"] = "tyrant",
},
{
["enabled"] = true,
["criteria"] = "buff.vilefiend.up || buff.grimoire_felguard.up || cooldown.grimoire_felguard.remains > 90",
["action"] = "summon_demonic_tyrant",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_demonic_tyrant.remains > 45",
["action"] = "summon_vilefiend",
},
{
["enabled"] = true,
["criteria"] = "( ! debuff.doom_brand.up || action.hand_of_guldan.in_flight & debuff.doom_brand.remains <= 3 ) & buff.demonic_core.up & ( ( ( ! talent.soul_strike.enabled || cooldown.soul_strike.remains > gcd.max * 2 ) & soul_shard < 4 ) || soul_shard < ( 4 - ( active_enemies > 2 ) ) || buff.demonic_core.remains < 1 + buff.demonic_core.stack * gcd.max ) & ! prev_gcd.1.demonbolt & set_bonus.tier31_2pc",
["action"] = "demonbolt",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.demonic_core.up & ( ! debuff.doom_brand.up || ( ! action.hand_of_guldan.in_flight & debuff.doom_brand.remains < gcd.max + action.demonbolt.travel_time ) || ( action.hand_of_guldan.in_flight & debuff.doom_brand.remains < gcd.max + action.demonbolt.travel_time + 3 ) ) & set_bonus.tier31_2pc",
["action"] = "power_siphon",
},
{
["enabled"] = true,
["criteria"] = "! ( raid_event.adds.in < 45 - raid_event.add.duration )",
["action"] = "demonic_strength",
},
{
["action"] = "bilescourge_bombers",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( cooldown.demonic_strength.remains || ! talent.demonic_strength.enabled ) & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 6 )",
["action"] = "guillotine",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_demonic_tyrant.remains > 25 || cooldown.summon_demonic_tyrant.remains_expected > 25",
["action"] = "call_dreadstalkers",
},
{
["enabled"] = true,
["criteria"] = "two_cast_imps > 0 & variable.impl & ! prev_gcd.1.implosion & ! raid_event.adds.exists || two_cast_imps > 0 & variable.impl & ! prev_gcd.1.implosion & raid_event.adds.exists & ( active_enemies > 3 || active_enemies <= 3 & last_cast_imps > 0 )",
["action"] = "implosion",
["description"] = "If Tyrant is not up, it Implodes naturally. On 3-4t it waits till <6s left on Tyrant. On 5t+ it waits till <8s left on Tyrant",
},
{
["enabled"] = true,
["criteria"] = "( fight_remains > 63 & ! ( fight_remains > cooldown.summon_demonic_tyrant.remains + 69 ) || cooldown.summon_demonic_tyrant.remains > 30 || buff.rite_of_ruvaraad.up || 1 || ! talent.summon_demonic_tyrant.enabled || ! talent.grimoire_felguard.enabled )",
["action"] = "demonic_strength",
},
{
["enabled"] = true,
["criteria"] = "( ( soul_shard > 2 & cooldown.call_dreadstalkers.remains > gcd.max * 4 & cooldown.summon_demonic_tyrant.remains > 17 ) || soul_shard = 5 || soul_shard = 4 & talent.soul_strike.enabled & cooldown.soul_strike.remains < gcd.max * 2 ) & ( active_enemies = 1 & talent.grand_warlocks_design.enabled )",
["action"] = "hand_of_guldan",
["description"] = "Uses HoG as long as you will have 2 shards ready for Dogs or are capped on Shards (1T and Wilf only)",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 2 & ! ( active_enemies = 1 & talent.grand_warlocks_design.enabled )",
["action"] = "hand_of_guldan",
},
{
["enabled"] = true,
["action"] = "demonbolt",
["cycle_targets"] = 1,
["description"] = "Demonbolt if we have more than one core",
["criteria"] = "( ( ! debuff.doom_brand.up ) || active_enemies < 4 ) & buff.demonic_core.stack > 1 & ( ( soul_shard < 4 & ! talent.soul_strike.enabled || cooldown.soul_strike.remains > gcd.max * 2 ) || soul_shard < 3 ) & ! variable.pool_cores_for_tyrant",
},
{
["enabled"] = true,
["action"] = "demonbolt",
["cycle_targets"] = 1,
["description"] = "Demonbolt if 2pc is safe",
["criteria"] = "( ( ! debuff.doom_brand.up ) || active_enemies < 4 ) & set_bonus.tier31_2pc & ( debuff.doom_brand.remains > 10 & buff.demonic_core.up & soul_shard < 4 ) & ! variable.pool_cores_for_tyrant",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < buff.demonic_core.stack * gcd.max || buff.demonic_core.up & buff.demonic_core.remains < 1 + buff.demonic_core.stack * gcd.max",
["action"] = "demonbolt",
},
{
["enabled"] = true,
["action"] = "demonbolt",
["cycle_targets"] = 1,
["description"] = "Aggressive Core usage if PS is coming off CD",
["criteria"] = "( ( ! debuff.doom_brand.up ) || active_enemies < 4 ) & buff.demonic_core.up & ( cooldown.power_siphon.remains < 4 ) & ( soul_shard < 4 ) & ! variable.pool_cores_for_tyrant",
},
{
["enabled"] = true,
["criteria"] = "! buff.demonic_core.up",
["action"] = "power_siphon",
},
{
["enabled"] = true,
["criteria"] = "! buff.demonic_core.up",
["action"] = "power_siphon",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < cooldown.summon_demonic_tyrant.remains + 5",
["action"] = "summon_vilefiend",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "time > 0 & ! pet.alive & ! buff.grimoire_of_sacrifice.up",
["action"] = "fel_domination",
},
{
["enabled"] = true,
["criteria"] = "! pet.alive & ! buff.grimoire_of_sacrifice.up",
["action"] = "summon_pet",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "shadow_timings",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon || trinket.t1.is.timethiefs_gambit",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon || trinket.t2.is.timethiefs_gambit",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.nymues_unraveling_spindle",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.nymues_unraveling_spindle",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.buff_duration + ( trinket.t1.is.mirror_of_fractured_tomorrows * 20 ) + ( trinket.t1.is.nymues_unraveling_spindle * 2 )",
["var_name"] = "trinket_1_buff_duration",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.buff_duration + ( trinket.t2.is.mirror_of_fractured_tomorrows * 20 ) + ( trinket.t2.is.nymues_unraveling_spindle * 2 )",
["var_name"] = "trinket_2_buff_duration",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.summon_demonic_tyrant.duration = 0 || cooldown.summon_demonic_tyrant.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.summon_demonic_tyrant.duration = 0 || cooldown.summon_demonic_tyrant.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl > trinket.t1.ilvl",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) * ( 1 - 0.5 * trinket.t2.is.mirror_of_fractured_tomorrows ) ) > ( ( ( trinket.t1.cooldown.duration / variable.trinket_1_buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 - 0.5 * trinket.t1.is.mirror_of_fractured_tomorrows ) ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 5",
["action"] = "shadow_bolt",
},
},
},
["version"] = 20240724,
["warnings"] = "The import for 'tyrant' required some automated changes.\nLine 5: Converted 'talent.grand_warlocks_design' to 'talent.grand_warlocks_design.enabled' (1x).\nLine 7: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\nLine 10: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\nLine 10: Converted 'talent.nether_portal' to 'talent.nether_portal.enabled' (1x).\nLine 11: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\nLine 11: Converted 'talent.nether_portal' to 'talent.nether_portal.enabled' (1x).\nLine 12: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\nLine 12: Converted operations in 'soul_shard>2&(buff.vilefiend.up||!talent.summon_vilefiend.enabled&buff.dreadstalkers.up)&(soul_shard>2||buff.vilefiend.remains<gcd.max*2+2%spell_haste)||(!buff.dreadstalkers.up&soul_shard=5)' to 'soul_shard>2&(buff.vilefiend.up||!talent.summon_vilefiend.enabled&buff.dreadstalkers.up)&(soul_shard>2||buff.vilefiend.remains<gcd.max*2+2/spell_haste)||(!buff.dreadstalkers.up&soul_shard=5)'.\nLine 13: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 5: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\nLine 5: Converted 'talent.grimoire_felguard' to 'talent.grimoire_felguard.enabled' (1x).\nLine 6: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\nLine 6: Converted 'talent.grimoire_felguard' to 'talent.grimoire_felguard.enabled' (1x).\nLine 7: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\nLine 8: Converted 'talent.nether_portal' to 'talent.nether_portal.enabled' (1x).\nLine 17: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 17: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 17: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 18: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 18: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 18: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 19: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 19: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 19: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 19: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 20: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 20: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 22: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 22: Converted 'talent.demonic_strength' to 'talent.demonic_strength.enabled' (1x).\nLine 22: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 22: Converted 'talent.demonic_strength' to 'talent.demonic_strength.enabled' (1x).\nLine 23: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 23: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 25: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 25: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 26: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 26: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 28: Converted 'talent.reign_of_tyranny' to 'talent.reign_of_tyranny.enabled' (1x).\nLine 28: Converted operations in 'time<0.5&(fight_remains%%95>40||fight_remains%%95<15)&(talent.reign_of_tyranny.enabled||active_enemies>2)' to 'time<0.5&(fight_remains%95>40||fight_remains%95<15)&(talent.reign_of_tyranny.enabled||active_enemies>2)'.\nLine 29: Converted 'talent.grimoire_felguard' to 'talent.grimoire_felguard.enabled' (1x).\nLine 29: Converted 'talent.grimoire_felguard' to 'talent.grimoire_felguard.enabled' (1x).\nLine 29: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\nLine 32: Converted 'talent.soul_strike' to 'talent.soul_strike.enabled' (1x).\nLine 36: Converted 'talent.demonic_strength' to 'talent.demonic_strength.enabled' (1x).\nLine 39: Converted 'talent.summon_demonic_tyrant' to 'talent.summon_demonic_tyrant.enabled' (1x).\nLine 39: Converted 'talent.grimoire_felguard' to 'talent.grimoire_felguard.enabled' (1x).\nLine 40: Converted 'talent.soul_strike' to 'talent.soul_strike.enabled' (1x).\nLine 40: Converted 'talent.grand_warlocks_design' to 'talent.grand_warlocks_design.enabled' (1x).\nLine 41: Converted 'talent.grand_warlocks_design' to 'talent.grand_warlocks_design.enabled' (1x).\nLine 42: Converted 'talent.soul_strike' to 'talent.soul_strike.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 6: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 6: Converted 'trinket.1.is.timethiefs_gambit' to 'trinket.t1.is.timethiefs_gambit' (1x).\nLine 7: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 7: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 7: Converted 'trinket.2.is.timethiefs_gambit' to 'trinket.t2.is.timethiefs_gambit' (1x).\nLine 8: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 9: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 10: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 10: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 10: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 10: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 11: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 11: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 11: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 11: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 12: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 12: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 12: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 12: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 12: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%trinket.t1.cooldown.duration=0)'.\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 13: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%trinket.t2.cooldown.duration=0)'.\nLine 14: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 14: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 15: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 15: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 15: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 15: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 15: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 15: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 15: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 15: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 15: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 15: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 15: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 15: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 15: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1-0.5*trinket.t2.is.mirror_of_fractured_tomorrows))>(((trinket.t1.cooldown.duration%variable.trinket_1_buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1-0.5*trinket.t1.is.mirror_of_fractured_tomorrows))*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1-0.5*trinket.t2.is.mirror_of_fractured_tomorrows))>(((trinket.t1.cooldown.duration/variable.trinket_1_buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1-0.5*trinket.t1.is.mirror_of_fractured_tomorrows))*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\n\nImported 4 action lists.\n",
["profile"] = "actions.precombat+=/fel_domination,if=time>0&!pet.alive&!buff.grimoire_of_sacrifice.up\nactions.precombat+=/summon_pet,if=!pet.alive&!buff.grimoire_of_sacrifice.up\nactions.precombat+=/variable,name=shadow_timings,default=0,op=reset\n## actions.precombat+=/variable,name=shadow_timings,op=set,value=0,if=cooldown.invoke_power_infusion_0.duration!=120\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon||trinket.1.is.timethiefs_gambit\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon||trinket.2.is.timethiefs_gambit\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.nymues_unraveling_spindle\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.nymues_unraveling_spindle\nactions.precombat+=/variable,name=trinket_1_buff_duration,value=trinket.1.proc.any_dps.duration+(trinket.1.is.mirror_of_fractured_tomorrows*20)+(trinket.1.is.nymues_unraveling_spindle*2)\nactions.precombat+=/variable,name=trinket_2_buff_duration,value=trinket.2.proc.any_dps.duration+(trinket.2.is.mirror_of_fractured_tomorrows*20)+(trinket.2.is.nymues_unraveling_spindle*2)\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%%trinket.2.cooldown.duration=0)\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>trinket.1.ilvl\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_buff_duration)*(1.5+trinket.2.has_buff.intellect)*(variable.trinket_2_sync)*(1-0.5*trinket.2.is.mirror_of_fractured_tomorrows))>(((trinket.1.cooldown.duration%variable.trinket_1_buff_duration)*(1.5+trinket.1.has_buff.intellect)*(variable.trinket_1_sync)*(1-0.5*trinket.1.is.mirror_of_fractured_tomorrows))*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\n## actions.precombat+=/power_siphon,if=buff.wild_imps.stack>1&(buff.demonic_core.stack<3||buff.demonic_core.remains<gcd.max*3)\n## actions.precombat+=/demonbolt,if=soul_shard<5&(boss||cast_time=0)\nactions.precombat+=/shadow_bolt,if=soul_shard<5\n\nactions+=/axe_toss\nactions+=/spell_lock\nactions+=/devour_magic\n## Variables\nactions+=/variable,name=pet_expire,op=set,value=(buff.dreadstalkers.remains>?buff.vilefiend.remains)-gcd*0.5,if=buff.vilefiend.up&buff.dreadstalkers.up\nactions+=/variable,name=pet_expire,op=set,value=(buff.dreadstalkers.remains>?buff.grimoire_felguard.remains)-gcd*0.5,if=!talent.summon_vilefiend&talent.grimoire_felguard&buff.grimoire_felguard.up&buff.dreadstalkers.up\nactions+=/variable,name=pet_expire,op=set,value=(buff.dreadstalkers.remains)-gcd,if=!talent.summon_vilefiend&!talent.grimoire_felguard&buff.dreadstalkers.up\nactions+=/variable,name=pet_expire,op=set,value=0,if=!buff.vilefiend.up&talent.summon_vilefiend||!buff.dreadstalkers.up\nactions+=/variable,name=np,op=set,value=(!talent.nether_portal)\nactions+=/variable,name=impl,op=set,value=buff.tyrant.down,if=active_enemies>1+(talent.sacrificed_souls.enabled)\nactions+=/variable,name=impl,op=set,value=buff.tyrant.remains<6,if=active_enemies>2+(talent.sacrificed_souls.enabled)&active_enemies<5+(talent.sacrificed_souls.enabled)\nactions+=/variable,name=impl,op=set,value=buff.tyrant.remains<8,if=active_enemies>4+(talent.sacrificed_souls.enabled)\nactions+=/variable,name=pool_cores_for_tyrant,op=set,value=cooldown.summon_demonic_tyrant.remains<20&cooldown.summon_demonic_tyrant.remains_expected<20&(buff.demonic_core.stack<=2||!buff.demonic_core.up)&cooldown.summon_vilefiend.remains<gcd.max*5&cooldown.call_dreadstalkers.remains<gcd.max*5\n## Racials\nactions+=/berserking,use_off_gcd=1\nactions+=/blood_fury,use_off_gcd=1\nactions+=/fireblood,use_off_gcd=1\nactions+=/ancestral_call,use_off_gcd=1\n## Items\nactions+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!pet.demonic_tyrant.active&trinket.1.cast_time>0||!trinket.1.cast_time>0)&(pet.demonic_tyrant.active)&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1&!variable.trinket_2_manual)||variable.trinket_1_buff_duration>=fight_remains\nactions+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!pet.demonic_tyrant.active&trinket.2.cast_time>0||!trinket.2.cast_time>0)&(pet.demonic_tyrant.active)&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2&!variable.trinket_1_manual)||variable.trinket_2_buff_duration>=fight_remains\nactions+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&((variable.damage_trinket_priority=1||trinket.2.cooldown.remains)&(trinket.1.cast_time>0&!pet.demonic_tyrant.active||!trinket.1.cast_time>0)||(time<20&variable.trinket_2_buffs)||cooldown.summon_demonic_tyrant.remains_expected>20)\nactions+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&((variable.damage_trinket_priority=2||trinket.1.cooldown.remains)&(trinket.2.cast_time>0&!pet.demonic_tyrant.active||!trinket.2.cast_time>0)||(time<20&variable.trinket_1_buffs)||cooldown.summon_demonic_tyrant.remains_expected>20)\nactions+=/use_item,use_off_gcd=1,slot=main_hand\nactions+=/use_item,name=nymues_unraveling_spindle,if=trinket.1.is.nymues_unraveling_spindle&((pet.demonic_tyrant.active&(!cooldown.demonic_strength.ready||!talent.demonic_strength)&!variable.trinket_2_buffs)||(variable.trinket_2_buffs))||trinket.2.is.nymues_unraveling_spindle&((pet.demonic_tyrant.active&(!cooldown.demonic_strength.ready||!talent.demonic_strength)&!variable.trinket_1_buffs)||(variable.trinket_1_buffs))||fight_remains<22\nactions+=/use_item,name=mirror_of_fractured_tomorrows,if=trinket.1.is.mirror_of_fractured_tomorrows&variable.trinket_priority=2||trinket.2.is.mirror_of_fractured_tomorrows&variable.trinket_priority=1\nactions+=/use_item,name=timethiefs_gambit,if=pet.demonic_tyrant.active\nactions+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains)\nactions+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains)\n## actions+=/invoke_external_buff,name=power_infusion,if=(buff.nether_portal.up&buff.nether_portal.remains<3&talent.nether_portal)||fight_remains<20||pet.demonic_tyrant.active&fight_remains<100||fight_remains<25||(pet.demonic_tyrant.active||!talent.summon_demonic_tyrant&buff.dreadstalkers.up)\nactions+=/call_action_list,name=fight_end,if=boss&fight_remains<30\nactions+=/hand_of_guldan,if=time<0.5&(fight_remains%%95>40||fight_remains%%95<15)&(talent.reign_of_tyranny||active_enemies>2)\nactions+=/call_action_list,name=tyrant,if=(cooldown.summon_demonic_tyrant.remains<15&cooldown.summon_vilefiend.remains<gcd.max*5&cooldown.call_dreadstalkers.remains<gcd.max*5&(cooldown.grimoire_felguard.remains<10||cooldown.grimoire_felguard.remains>cooldown.summon_demonic_tyrant.remains+60||!talent.grimoire_felguard||!set_bonus.tier30_2pc)&(cooldown.summon_demonic_tyrant.remains_expected<15||fight_remains<40||buff.power_infusion.up)&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>20)||talent.summon_vilefiend.enabled&cooldown.summon_demonic_tyrant.remains<15&cooldown.summon_vilefiend.remains<gcd.max*5&cooldown.call_dreadstalkers.remains<gcd.max*5&(cooldown.grimoire_felguard.remains<10||cooldown.grimoire_felguard.remains>cooldown.summon_demonic_tyrant.remains+60||!talent.grimoire_felguard||!set_bonus.tier30_2pc)&(cooldown.summon_demonic_tyrant.remains_expected<15||fight_remains<40||buff.power_infusion.up)&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>20))||(cooldown.summon_demonic_tyrant.remains<15&(buff.vilefiend.up||!talent.summon_vilefiend&(buff.grimoire_felguard.up||cooldown.grimoire_felguard.up||!set_bonus.tier30_2pc))&(cooldown.summon_demonic_tyrant.remains_expected<15||buff.grimoire_felguard.up||fight_remains<40||buff.power_infusion.up)&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>20))\nactions+=/summon_demonic_tyrant,if=buff.vilefiend.up||buff.grimoire_felguard.up||cooldown.grimoire_felguard.remains>90\nactions+=/summon_vilefiend,if=cooldown.summon_demonic_tyrant.remains>45\nactions+=/demonbolt,cycle_targets=1,if=(!debuff.doom_brand.up||action.hand_of_guldan.in_flight&debuff.doom_brand.remains<=3)&buff.demonic_core.up&(((!talent.soul_strike||cooldown.soul_strike.remains>gcd.max*2)&soul_shard<4)||soul_shard<(4-(active_enemies>2))||buff.demonic_core.remains<1+buff.demonic_core.stack*gcd.max)&!prev_gcd.1.demonbolt&set_bonus.tier31_2pc\nactions+=/power_siphon,if=!buff.demonic_core.up&(!debuff.doom_brand.up||(!action.hand_of_guldan.in_flight&debuff.doom_brand.remains<gcd.max+action.demonbolt.travel_time)||(action.hand_of_guldan.in_flight&debuff.doom_brand.remains<gcd.max+action.demonbolt.travel_time+3))&set_bonus.tier31_2pc\nactions+=/demonic_strength,if=!(raid_event.adds.in<45-raid_event.add.duration)\nactions+=/bilescourge_bombers\nactions+=/guillotine,if=(cooldown.demonic_strength.remains||!talent.demonic_strength)&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>6)\nactions+=/call_dreadstalkers,if=cooldown.summon_demonic_tyrant.remains>25||cooldown.summon_demonic_tyrant.remains_expected>25\n# If Tyrant is not up, it Implodes naturally. On 3-4t it waits till <6s left on Tyrant. On 5t+ it waits till <8s left on Tyrant\nactions+=/implosion,if=two_cast_imps>0&variable.impl&!prev_gcd.1.implosion&!raid_event.adds.exists||two_cast_imps>0&variable.impl&!prev_gcd.1.implosion&raid_event.adds.exists&(active_enemies>3||active_enemies<=3&last_cast_imps>0)\nactions+=/demonic_strength,if=(fight_remains>63&!(fight_remains>cooldown.summon_demonic_tyrant.remains+69)||cooldown.summon_demonic_tyrant.remains>30||buff.rite_of_ruvaraad.up||1||!talent.summon_demonic_tyrant||!talent.grimoire_felguard)\n# Uses HoG as long as you will have 2 shards ready for Dogs or are capped on Shards (1T and Wilf only)\nactions+=/hand_of_guldan,if=((soul_shard>2&cooldown.call_dreadstalkers.remains>gcd.max*4&cooldown.summon_demonic_tyrant.remains>17)||soul_shard=5||soul_shard=4&talent.soul_strike&cooldown.soul_strike.remains<gcd.max*2)&(active_enemies=1&talent.grand_warlocks_design)\nactions+=/hand_of_guldan,if=soul_shard>2&!(active_enemies=1&talent.grand_warlocks_design)\n# Demonbolt if we have more than one core\nactions+=/demonbolt,cycle_targets=1,if=((!debuff.doom_brand.up)||active_enemies<4)&buff.demonic_core.stack>1&((soul_shard<4&!talent.soul_strike||cooldown.soul_strike.remains>gcd.max*2)||soul_shard<3)&!variable.pool_cores_for_tyrant\n# Demonbolt if 2pc is safe\nactions+=/demonbolt,cycle_targets=1,if=((!debuff.doom_brand.up)||active_enemies<4)&set_bonus.tier31_2pc&(debuff.doom_brand.remains>10&buff.demonic_core.up&soul_shard<4)&!variable.pool_cores_for_tyrant\nactions+=/demonbolt,if=fight_remains<buff.demonic_core.stack*gcd.max||buff.demonic_core.up&buff.demonic_core.remains<1+buff.demonic_core.stack*gcd.max\n# Aggressive Core usage if PS is coming off CD\nactions+=/demonbolt,cycle_targets=1,if=((!debuff.doom_brand.up)||active_enemies<4)&buff.demonic_core.up&(cooldown.power_siphon.remains<4)&(soul_shard<4)&!variable.pool_cores_for_tyrant\nactions+=/power_siphon,if=!buff.demonic_core.up\nactions+=/power_siphon,if=!buff.demonic_core.up\nactions+=/summon_vilefiend,if=boss&fight_remains<cooldown.summon_demonic_tyrant.remains+5\nactions+=/shadow_bolt\n\nactions.fight_end+=/grimoire_felguard,if=fight_remains<20\nactions.fight_end+=/call_dreadstalkers,if=fight_remains<20\nactions.fight_end+=/summon_vilefiend,if=fight_remains<20\nactions.fight_end+=/summon_demonic_tyrant,if=fight_remains<20\nactions.fight_end+=/demonic_strength,if=fight_remains<10\nactions.fight_end+=/power_siphon,if=buff.demonic_core.stack<3&fight_remains<20\nactions.fight_end+=/implosion,if=fight_remains<2*gcd.max\n\n## actions.tyrant+=/invoke_external_buff,name=power_infusion,if=variable.pet_expire>0&variable.pet_expire<action.summon_demonic_tyrant.execute_time+(buff.demonic_core.down*action.shadow_bolt.execute_time+buff.demonic_core.up*gcd.max)+gcd.max\nactions.tyrant+=/variable,name=dummyvar,value=variable.pet_expire<action.summon_demonic_tyrant.execute_time+(buff.demonic_core.down*action.shadow_bolt.execute_time+buff.demonic_core.up*gcd.max)+gcd.max\nactions.tyrant+=/hand_of_guldan,if=variable.pet_expire>gcd.max+action.summon_demonic_tyrant.cast_time&variable.pet_expire<gcd.max*4\n## actions.tyrant+=/call_action_list,name=items,if=variable.pet_expire>0&variable.pet_expire<action.summon_demonic_tyrant.execute_time+(buff.demonic_core.down*action.shadow_bolt.execute_time+buff.demonic_core.up*gcd.max)+gcd.max,use_off_gcd=1\n## actions.tyrant+=/call_action_list,name=racials,if=variable.pet_expire>0&variable.pet_expire<action.summon_demonic_tyrant.execute_time+(buff.demonic_core.down*action.shadow_bolt.execute_time+buff.demonic_core.up*gcd.max)+gcd.max,use_off_gcd=1\nactions.tyrant+=/potion,if=variable.pet_expire>0&variable.pet_expire<action.summon_demonic_tyrant.execute_time+(buff.demonic_core.down*action.shadow_bolt.execute_time+buff.demonic_core.up*gcd.max)+gcd.max,use_off_gcd=1\nactions.tyrant+=/summon_demonic_tyrant,if=variable.pet_expire>0&variable.pet_expire<action.summon_demonic_tyrant.execute_time+(buff.demonic_core.down*action.shadow_bolt.execute_time+buff.demonic_core.up*gcd.max)+gcd.max\nactions.tyrant+=/implosion,if=pet_count>2&(buff.dreadstalkers.down&buff.grimoire_felguard.down&buff.vilefiend.down)&(active_enemies>3||active_enemies>2&talent.grand_warlocks_design)&!prev_gcd.1.implosion\nactions.tyrant+=/shadow_bolt,if=prev_gcd.1.grimoire_felguard&time>30&buff.demonic_core.down\nactions.tyrant+=/power_siphon,if=buff.demonic_core.stack<4&(!buff.vilefiend.up||!talent.summon_vilefiend&(!buff.dreadstalkers.up))\nactions.tyrant+=/shadow_bolt,if=buff.vilefiend.down&buff.dreadstalkers.down&soul_shard<5-buff.demonic_core.stack\nactions.tyrant+=/summon_vilefiend,if=(soul_shard=5)&cooldown.summon_demonic_tyrant.remains<13&variable.np\nactions.tyrant+=/call_dreadstalkers,if=(buff.vilefiend.up||!talent.summon_vilefiend&(!talent.nether_portal)&(buff.grimoire_felguard.up||soul_shard=5))&cooldown.summon_demonic_tyrant.remains<11&variable.np\nactions.tyrant+=/grimoire_felguard,if=buff.vilefiend.up||!talent.summon_vilefiend&(!talent.nether_portal)&(buff.dreadstalkers.up||soul_shard=5)&variable.np\nactions.tyrant+=/hand_of_guldan,if=soul_shard>2&(buff.vilefiend.up||!talent.summon_vilefiend&buff.dreadstalkers.up)&(soul_shard>2||buff.vilefiend.remains<gcd.max*2+2%spell_haste)||(!buff.dreadstalkers.up&soul_shard=5)\nactions.tyrant+=/demonbolt,cycle_targets=1,if=soul_shard<4&(buff.demonic_core.stack>1)&(buff.vilefiend.up||!talent.summon_vilefiend&buff.dreadstalkers.up)\nactions.tyrant+=/power_siphon,if=buff.demonic_core.stack<3&variable.pet_expire>action.summon_demonic_tyrant.execute_time+gcd.max*3||variable.pet_expire=0\nactions.tyrant+=/shadow_bolt",
["author"] = "SimC",
},
["Assassination"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240729,
["author"] = "SimC",
["desc"] = "2024-07-27: The War Within",
["lists"] = {
["stealthed"] = {
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
["description"] = "Stealthed Actions",
},
{
["enabled"] = true,
["criteria"] = "! debuff.deathstalkers_mark.up & talent.deathstalkers_mark.enabled & ! buff.darkest_night.up",
["action"] = "ambush",
["description"] = "Apply Deathstalkers Mark if it has fallen off and we have no way to reapply otherwise",
},
{
["enabled"] = true,
["criteria"] = "talent.kingsbane.enabled & ( dot.kingsbane.ticking || cooldown.kingsbane.up ) & ( ! debuff.shiv.up & debuff.shiv.remains < 1 ) & buff.envenom.up",
["action"] = "shiv",
["description"] = "Make sure to have Shiv up during Kingsbane as a final check",
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & dot.kingsbane.ticking & buff.envenom.remains <= 3",
["action"] = "envenom",
["description"] = "Envenom to maintain the buff during Subterfuge",
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & buff.master_assassin_aura.up & variable.single_target",
["action"] = "envenom",
["description"] = "Envenom during Master Assassin in single target",
},
{
["enabled"] = true,
["action"] = "garrote",
["cycle_targets"] = 1,
["criteria"] = "stealthed.improved_garrote & ( remains < 12 || pmultiplier <= 1 || ( buff.indiscriminate_carnage.up & active_dot.garrote < cycle_enemies ) ) & ! variable.single_target & target.time_to_die - remains > 2",
["description"] = "Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Indiscriminate Carnage",
},
{
["enabled"] = true,
["criteria"] = "stealthed.improved_garrote & ( pmultiplier <= 1 || remains < 14 || ! variable.single_target & buff.master_assassin_aura.up & buff.master_assassin_aura.remains < 3 ) & combo_points.deficit >= 1 + 2 * talent.shrouded_suffocation.enabled",
["action"] = "garrote",
},
},
["vanish"] = {
{
["enabled"] = true,
["for_next"] = 1,
["description"] = "Stealth Cooldowns   Vanish Sync for Improved Garrote with Deathmark",
["extra_amount"] = "45",
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "! buff.fatebound_lucky_coin.up & ( buff.fatebound_coin_tails.stack >= 5 || buff.fatebound_coin_heads.stack >= 5 )",
["action"] = "vanish",
["description"] = "Vanish to fish for Fateful Ending if possible",
},
{
["enabled"] = true,
["criteria"] = "! talent.master_assassin.enabled & ! talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 ) & combo_points.deficit >= ( spell_targets.fan_of_knives >? 4 )",
["action"] = "vanish",
["description"] = "Vanish to spread Garrote during Deathmark without Indiscriminate Carnage",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
["extra_amount"] = "45",
},
{
["enabled"] = true,
["criteria"] = "! talent.master_assassin.enabled & talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & spell_targets.fan_of_knives > 2",
["action"] = "vanish",
["description"] = "Vanish for cleaving Garrotes with Indiscriminate Carnage",
},
{
["enabled"] = true,
["criteria"] = "talent.master_assassin.enabled & talent.kingsbane.enabled & dot.kingsbane.remains <= 3 & dot.kingsbane.ticking & debuff.deathmark.remains <= 3 & dot.deathmark.ticking",
["action"] = "vanish",
["description"] = "Vanish for Master Assassin during Kingsbane",
},
{
["enabled"] = true,
["criteria"] = "! talent.improved_garrote.enabled & talent.master_assassin.enabled & ! dot.rupture.refreshable & dot.garrote.remains > 3 & debuff.deathmark.up & ( debuff.shiv.up || debuff.deathmark.remains < 4 )",
["action"] = "vanish",
["description"] = "Vanish fallback for Master Assassin",
},
},
["shiv"] = {
{
["enabled"] = true,
["criteria"] = "talent.kingsbane.enabled & ! talent.lightweight_shiv.enabled & buff.envenom.up & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & ( dot.kingsbane.ticking & dot.kingsbane.remains < 8 || cooldown.kingsbane.remains >= 24 ) & ( ! talent.crimson_tempest.enabled || variable.single_target || dot.crimson_tempest.ticking ) || boss & fight_remains <= charges * 8",
["action"] = "shiv",
["description"] = "Shiv Handling  Shiv if talented into Kingsbane, Always sync, or prioritize the last 8 seconds",
},
{
["enabled"] = true,
["criteria"] = "talent.kingsbane.enabled & talent.lightweight_shiv.enabled & buff.envenom.up & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & ( dot.kingsbane.ticking || cooldown.kingsbane.remains <= 1 ) || boss & fight_remains <= charges * 8",
["action"] = "shiv",
},
{
["enabled"] = true,
["criteria"] = "talent.arterial_precision.enabled & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & debuff.deathmark.up || boss & fight_remains <= charges * 8",
["action"] = "shiv",
["description"] = "Shiv cases for Arterial in special circumstances",
},
{
["enabled"] = true,
["criteria"] = "! talent.kingsbane.enabled & ! talent.arterial_precision.enabled & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & ( ! talent.crimson_tempest.enabled || variable.single_target || dot.crimson_tempest.ticking ) || boss & fight_remains <= charges * 8",
["action"] = "shiv",
["description"] = "Fallback if no special cases apply",
},
},
["misc_cds"] = {
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.react || boss & fight_remains < 30 || debuff.deathmark.up",
["action"] = "potion",
["description"] = "Miscellaneous Cooldowns Potion",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "blood_fury",
["description"] = "Various special racials to be synced with cooldowns",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.kingsbane.enabled & debuff.deathmark.up & debuff.shiv.up ) || ( talent.kingsbane.enabled & debuff.deathmark.up & dot.kingsbane.ticking & dot.kingsbane.remains < 8 )",
["action"] = "ancestral_call",
},
},
["items"] = {
{
["enabled"] = true,
["action"] = "ashes_of_the_embersoul",
["use_off_gcd"] = 1,
["name"] = "ashes_of_the_embersoul",
["criteria"] = "( dot.kingsbane.ticking & dot.kingsbane.remains <= 11 ) || boss & fight_remains <= 22",
["description"] = "Special Case Trinkets",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["name"] = "algethar_puzzle_box",
["criteria"] = "dot.rupture.ticking & cooldown.deathmark.remains < 2 || boss & fight_remains <= 22",
},
{
["enabled"] = true,
["criteria"] = "( variable.trinket_sync_slot = 1 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot )",
["description"] = "Fallback case for using stat trinkets",
["slots"] = "trinket1",
["action"] = "trinket1",
},
{
["enabled"] = true,
["slots"] = "trinket2",
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot )",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.fan_of_knives < 2",
["description"] = "Conditional to check if there is only one enemy",
["var_name"] = "single_target",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy.regen_combined > 35",
["description"] = "Combined Energy Regen needed to saturate",
["var_name"] = "regen_saturated",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( dot.deathmark.ticking || dot.kingsbane.ticking || debuff.shiv.up ) || ( buff.envenom.up & buff.envenom.remains <= 1 & energy.pct >= 40 ) || energy.pct >= 50 || boss & fight_remains <= 20",
["description"] = "Check if we should be using our energy",
["var_name"] = "not_pooling",
},
{
["enabled"] = true,
["criteria"] = "stealthed.rogue || stealthed.improved_garrote || master_assassin_remains > 0",
["action"] = "call_action_list",
["list_name"] = "stealthed",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["criteria"] = "! buff.slice_and_dice.up & dot.rupture.ticking & combo_points >= 1",
["action"] = "slice_and_dice",
["description"] = "Put SnD up initially for Cut to the Chase, refresh with Envenom if at low duration",
},
{
["enabled"] = true,
["criteria"] = "buff.slice_and_dice.up & buff.slice_and_dice.remains < 5 & combo_points >= 5",
["action"] = "envenom",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "dot",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "direct",
},
{
["enabled"] = true,
["criteria"] = "energy.deficit >= 15 + energy.regen_combined",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration ) & ! trinket.t2.is.witherbarks_branch || trinket.t1.is.witherbarks_branch",
["description"] = "Check which trinket slots have Stat Values",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration ) & ! trinket.t1.is.witherbarks_branch || trinket.t2.is.witherbarks_branch",
["var_name"] = "trinket_sync_slot",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cp_max_spend - 2 <? 5 * talent.hand_of_fate.enabled",
["description"] = "Determine combo point finish condition",
["var_name"] = "effective_spend_cp",
},
{
["enabled"] = true,
["description"] = "Pre-cast Slice and Dice if possible",
["action"] = "stealth",
},
{
["enabled"] = true,
["action"] = "slice_and_dice",
["criteria"] = "refreshable",
["precombat_seconds"] = "1",
},
},
["direct"] = {
{
["enabled"] = true,
["criteria"] = "! buff.darkest_night.up & effective_combo_points >= variable.effective_spend_cp & ( variable.not_pooling || debuff.amplifying_poison.stack >= 20 || effective_combo_points > cp_max_spend || ! variable.single_target ) & ! buff.vanish.up",
["action"] = "envenom",
["description"] = "Direct Damage Abilities   Envenom at applicable cp if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe.",
},
{
["enabled"] = true,
["criteria"] = "buff.darkest_night.up & effective_combo_points >= cp_max_spend",
["action"] = "envenom",
["description"] = "Special Envenom handling for Darkest Night",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points.deficit > 1 || variable.not_pooling || ! variable.single_target",
["description"] = "Check if we should be using a filler",
["var_name"] = "use_filler",
},
{
["enabled"] = true,
["criteria"] = "talent.caustic_spatter.enabled & dot.rupture.ticking & ( ! debuff.caustic_spatter.up || debuff.caustic_spatter.remains <= 2 ) & variable.use_filler & ! variable.single_target",
["action"] = "mutilate",
["description"] = "Maintain Caustic Spatter",
},
{
["enabled"] = true,
["criteria"] = "talent.caustic_spatter.enabled & dot.rupture.ticking & ( ! debuff.caustic_spatter.up || debuff.caustic_spatter.remains <= 2 ) & variable.use_filler & ! variable.single_target",
["action"] = "ambush",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler || fight_remains < 20",
["action"] = "echoing_reprimand",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler & ( ! priority_rotation & spell_targets.fan_of_knives >= 2 + stealthed.rogue + talent.dragontempered_blades.enabled )",
["action"] = "fan_of_knives",
["description"] = "Fan of Knives at 2+ targets or 3+ with DTB",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler & spell_targets.fan_of_knives >= 3",
["action"] = "fan_of_knives",
["description"] = "Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler & ( buff.blindside.up || stealthed.rogue ) & ( ! dot.kingsbane.ticking || debuff.deathmark.down || buff.blindside.up )",
["action"] = "ambush",
["description"] = "Ambush on Blindside/Subterfuge. Do not use Ambush from stealth during Kingsbane & Deathmark.",
},
{
["enabled"] = true,
["action"] = "mutilate",
["cycle_targets"] = 1,
["criteria"] = "! dot.deadly_poison_dot.ticking & ! debuff.amplifying_poison.up & variable.use_filler & spell_targets.fan_of_knives = 2",
["description"] = "Tab-Mutilate to apply Deadly Poison at 2 targets",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler",
["action"] = "mutilate",
["description"] = "Fallback Mutilate",
},
},
["cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.master_assassin.enabled || dot.garrote.ticking",
["description"] = "Cooldowns  Wait on Deathmark for Garrote with MA and check for Kingsbane",
["var_name"] = "deathmark_ma_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.kingsbane.enabled || cooldown.kingsbane.remains <= 2",
["var_name"] = "deathmark_kingsbane_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! stealthed.rogue & dot.rupture.ticking & buff.envenom.up & ! debuff.deathmark.up & variable.deathmark_ma_condition & variable.deathmark_kingsbane_condition",
["description"] = "Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied",
["var_name"] = "deathmark_condition",
},
{
["enabled"] = true,
["description"] = "Usages for various special-case Trinkets and other Cantrips if applicable",
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["enabled"] = true,
["criteria"] = "variable.deathmark_condition || boss & fight_remains <= 20",
["action"] = "deathmark",
},
{
["enabled"] = true,
["description"] = "Check for Applicable Shiv usage",
["action"] = "call_action_list",
["list_name"] = "shiv",
},
{
["enabled"] = true,
["criteria"] = "( debuff.shiv.up || cooldown.shiv.remains < 6 ) & buff.envenom.up & ( cooldown.deathmark.remains >= 50 || dot.deathmark.ticking ) || boss & fight_remains <= 15",
["action"] = "kingsbane",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & ( ( ( energy.deficit >= 100 + energy.regen_combined || charges >= 3 ) & debuff.shiv.remains >= 4 ) ) || boss & fight_remains < charges * 6",
["action"] = "thistle_tea",
["description"] = "Avoid overcapped energy, use with shiv, or dump charges at the end of a fight",
},
{
["enabled"] = true,
["description"] = "Potion/Racials/Other misc cooldowns",
["action"] = "call_action_list",
["list_name"] = "misc_cds",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.all & master_assassin_remains = 0",
["action"] = "call_action_list",
["list_name"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "combo_points >= 4",
["action"] = "cold_blood",
},
},
["dot"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( spell_targets.fan_of_knives * talent.scent_of_blood.rank * 2 ) >? 20",
["description"] = "Damage over time abilities   Check what the maximum Scent of Blood stacks is currently",
["var_name"] = "scent_effective_max_stacks",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.scent_of_blood.stack >= variable.scent_effective_max_stacks",
["description"] = "We are Scent Saturated when our stack count is hitting the maximum",
["var_name"] = "scent_saturation",
},
{
["enabled"] = true,
["criteria"] = "spell_targets >= 3 & refreshable & pmultiplier <= 1 & effective_combo_points >= variable.effective_spend_cp & ! cooldown.deathmark.ready & target.time_to_die - remains > 6",
["action"] = "crimson_tempest",
["description"] = "Crimson Tempest on 3+ Targets if we have enough energy regen",
},
{
["enabled"] = true,
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > 12",
["action"] = "garrote",
["description"] = "Garrote upkeep, also uses it in AoE to reach energy saturation",
},
{
["enabled"] = true,
["action"] = "garrote",
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & ! variable.regen_saturated & cycle_enemies >= 2 & target.time_to_die - remains > 12",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ! buff.darkest_night.up",
["action"] = "rupture",
["description"] = "Rupture upkeep, also uses it in AoE to reach energy saturation",
},
{
["enabled"] = true,
["action"] = "rupture",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & ( pmultiplier <= 1 ) & refreshable & ( ! variable.regen_saturated || ! variable.scent_saturation ) & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ! buff.darkest_night.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & combo_points.deficit >= 1 & ( pmultiplier <= 1 || remains <= tick_time & spell_targets.fan_of_knives >= 3 ) & ( remains <= tick_time * 2 & spell_targets.fan_of_knives >= 3 ) & ( target.time_to_die - remains ) > 4 & master_assassin_remains = 0",
["action"] = "garrote",
["description"] = "Garrote as a special generator for the last CP before a finisher for edge case handling",
},
},
},
["version"] = 20240729,
["warnings"] = "The import for 'stealthed' required some automated changes.\nLine 2: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 3: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 7: Converted 'talent.shrouded_suffocation' to 'talent.shrouded_suffocation.enabled' (1x).\n\nThe import for 'vanish' required some automated changes.\nLine 3: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 3: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 3: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 5: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 5: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 5: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 6: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 6: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 7: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 7: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\n\nThe import for 'shiv' required some automated changes.\nLine 1: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 2: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 3: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\nLine 4: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 4: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\n\nThe import for 'misc_cds' required some automated changes.\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\n\nThe import for 'items' required some automated changes.\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nThe import for 'dot' required some automated changes.\nLine 6: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\nLine 7: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\n\nThe import for 'direct' required some automated changes.\nLine 4: Converted 'talent.caustic_spatter' to 'talent.caustic_spatter.enabled' (1x).\nLine 5: Converted 'talent.caustic_spatter' to 'talent.caustic_spatter.enabled' (1x).\nLine 7: Converted 'talent.dragontempered_blades' to 'talent.dragontempered_blades.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 2: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 2: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 3: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 3: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 4: Converted 'talent.hand_of_fate' to 'talent.hand_of_fate.enabled' (1x).\n\nImported 10 action lists.\n",
["profile"] = "actions.precombat+=/apply_poison\n# Check which trinket slots have Stat Values\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)&!trinket.2.is.witherbarks_branch||trinket.1.is.witherbarks_branch\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)&!trinket.1.is.witherbarks_branch||trinket.2.is.witherbarks_branch\n# Determine combo point finish condition\nactions.precombat+=/variable,name=effective_spend_cp,value=cp_max_spend-2<?5*talent.hand_of_fate\n# Pre-cast Slice and Dice if possible\nactions.precombat+=/stealth\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Conditional to check if there is only one enemy\nactions+=/variable,name=single_target,value=spell_targets.fan_of_knives<2\n# Combined Energy Regen needed to saturate\nactions+=/variable,name=regen_saturated,value=energy.regen_combined>35\n# Check if we should be using our energy\nactions+=/variable,name=not_pooling,value=(dot.deathmark.ticking||dot.kingsbane.ticking||debuff.shiv.up)||(buff.envenom.up&buff.envenom.remains<=1&energy.pct>=40)||energy.pct>=50||boss&fight_remains<=20\nactions+=/call_action_list,name=stealthed,if=stealthed.rogue||stealthed.improved_garrote||master_assassin_remains>0\nactions+=/call_action_list,name=cds\n# Put SnD up initially for Cut to the Chase, refresh with Envenom if at low duration\nactions+=/slice_and_dice,if=!buff.slice_and_dice.up&dot.rupture.ticking&combo_points>=1\nactions+=/envenom,if=buff.slice_and_dice.up&buff.slice_and_dice.remains<5&combo_points>=5\nactions+=/call_action_list,name=dot\nactions+=/call_action_list,name=direct\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen_combined\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Cooldowns  Wait on Deathmark for Garrote with MA and check for Kingsbane\nactions.cds+=/variable,name=deathmark_ma_condition,value=!talent.master_assassin.enabled||dot.garrote.ticking\nactions.cds+=/variable,name=deathmark_kingsbane_condition,value=!talent.kingsbane||cooldown.kingsbane.remains<=2\n# Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied\nactions.cds+=/variable,name=deathmark_condition,value=!stealthed.rogue&dot.rupture.ticking&buff.envenom.up&!debuff.deathmark.up&variable.deathmark_ma_condition&variable.deathmark_kingsbane_condition\n# Usages for various special-case Trinkets and other Cantrips if applicable\nactions.cds+=/call_action_list,name=items\n## Invoke Externals to Deathmark\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=dot.deathmark.ticking\nactions.cds+=/deathmark,if=variable.deathmark_condition||boss&fight_remains<=20\n# Check for Applicable Shiv usage\nactions.cds+=/call_action_list,name=shiv\nactions.cds+=/kingsbane,if=(debuff.shiv.up||cooldown.shiv.remains<6)&buff.envenom.up&(cooldown.deathmark.remains>=50||dot.deathmark.ticking)||boss&fight_remains<=15\n# Avoid overcapped energy, use with shiv, or dump charges at the end of a fight\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(((energy.deficit>=100+energy.regen_combined||charges>=3)&debuff.shiv.remains>=4))||boss&fight_remains<charges*6\n# Potion/Racials/Other misc cooldowns\nactions.cds+=/call_action_list,name=misc_cds\nactions.cds+=/call_action_list,name=vanish,if=!stealthed.all&master_assassin_remains=0\nactions.cds+=/cold_blood,if=combo_points>=4\n\n# Direct Damage Abilities   Envenom at applicable cp if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe.\nactions.direct+=/envenom,if=!buff.darkest_night.up&effective_combo_points>=variable.effective_spend_cp&(variable.not_pooling||debuff.amplifying_poison.stack>=20||effective_combo_points>cp_max_spend||!variable.single_target)&!buff.vanish.up\n# Special Envenom handling for Darkest Night\nactions.direct+=/envenom,if=buff.darkest_night.up&effective_combo_points>=cp_max_spend\n# Check if we should be using a filler\nactions.direct+=/variable,name=use_filler,value=combo_points.deficit>1||variable.not_pooling||!variable.single_target\n# Maintain Caustic Spatter\nactions.direct+=/mutilate,if=talent.caustic_spatter&dot.rupture.ticking&(!debuff.caustic_spatter.up||debuff.caustic_spatter.remains<=2)&variable.use_filler&!variable.single_target\nactions.direct+=/ambush,if=talent.caustic_spatter&dot.rupture.ticking&(!debuff.caustic_spatter.up||debuff.caustic_spatter.remains<=2)&variable.use_filler&!variable.single_target\nactions.direct+=/echoing_reprimand,if=variable.use_filler||fight_remains<20\n# Fan of Knives at 2+ targets or 3+ with DTB\nactions.direct+=/fan_of_knives,if=variable.use_filler&(!priority_rotation&spell_targets.fan_of_knives>=2+stealthed.rogue+talent.dragontempered_blades)\n# Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T\nactions.direct+=/fan_of_knives,if=variable.use_filler&spell_targets.fan_of_knives>=3\n# Ambush on Blindside/Subterfuge. Do not use Ambush from stealth during Kingsbane & Deathmark.\nactions.direct+=/ambush,if=variable.use_filler&(buff.blindside.up||stealthed.rogue)&(!dot.kingsbane.ticking||debuff.deathmark.down||buff.blindside.up)\n# Tab-Mutilate to apply Deadly Poison at 2 targets\nactions.direct+=/mutilate,cycle_targets=1,if=!dot.deadly_poison_dot.ticking&!debuff.amplifying_poison.up&variable.use_filler&spell_targets.fan_of_knives=2\n# Fallback Mutilate\nactions.direct+=/mutilate,if=variable.use_filler\n\n# Damage over time abilities   Check what the maximum Scent of Blood stacks is currently\nactions.dot+=/variable,name=scent_effective_max_stacks,value=(spell_targets.fan_of_knives*talent.scent_of_blood.rank*2)>?20\n# We are Scent Saturated when our stack count is hitting the maximum\nactions.dot+=/variable,name=scent_saturation,value=buff.scent_of_blood.stack>=variable.scent_effective_max_stacks\n# Crimson Tempest on 3+ Targets if we have enough energy regen\nactions.dot+=/crimson_tempest,if=spell_targets>=3&refreshable&pmultiplier<=1&effective_combo_points>=variable.effective_spend_cp&!cooldown.deathmark.ready&target.time_to_die-remains>6\n# Garrote upkeep, also uses it in AoE to reach energy saturation\nactions.dot+=/garrote,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&target.time_to_die-remains>12\nactions.dot+=/garrote,cycle_targets=1,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&!variable.regen_saturated&cycle_enemies>=2&target.time_to_die-remains>12\n# Rupture upkeep, also uses it in AoE to reach energy saturation\nactions.dot+=/rupture,if=effective_combo_points>=variable.effective_spend_cp&(pmultiplier<=1)&refreshable&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&!buff.darkest_night.up\nactions.dot+=/rupture,cycle_targets=1,if=effective_combo_points>=variable.effective_spend_cp&(pmultiplier<=1)&refreshable&(!variable.regen_saturated||!variable.scent_saturation)&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&!buff.darkest_night.up\n# Garrote as a special generator for the last CP before a finisher for edge case handling\nactions.dot+=/garrote,if=refreshable&combo_points.deficit>=1&(pmultiplier<=1||remains<=tick_time&spell_targets.fan_of_knives>=3)&(remains<=tick_time*2&spell_targets.fan_of_knives>=3)&(target.time_to_die-remains)>4&master_assassin_remains=0\n\n# Special Case Trinkets\nactions.items+=/use_item,name=ashes_of_the_embersoul,use_off_gcd=1,if=(dot.kingsbane.ticking&dot.kingsbane.remains<=11)||boss&fight_remains<=22\nactions.items+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=dot.rupture.ticking&cooldown.deathmark.remains<2||boss&fight_remains<=22\n# Fallback case for using stat trinkets\nactions.items+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready||!debuff.deathmark.up&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot)\nactions.items+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready||!debuff.deathmark.up&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot)\n\n# Miscellaneous Cooldowns Potion\nactions.misc_cds+=/potion,if=buff.bloodlust.react||boss&fight_remains<30||debuff.deathmark.up\n# Various special racials to be synced with cooldowns\nactions.misc_cds+=/blood_fury,if=debuff.deathmark.up\nactions.misc_cds+=/berserking,if=debuff.deathmark.up\nactions.misc_cds+=/fireblood,if=debuff.deathmark.up\nactions.misc_cds+=/ancestral_call,if=(!talent.kingsbane&debuff.deathmark.up&debuff.shiv.up)||(talent.kingsbane&debuff.deathmark.up&dot.kingsbane.ticking&dot.kingsbane.remains<8)\n\n# Shiv Handling  Shiv if talented into Kingsbane; Always sync, or prioritize the last 8 seconds\nactions.shiv+=/shiv,if=talent.kingsbane&!talent.lightweight_shiv.enabled&buff.envenom.up&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&(dot.kingsbane.ticking&dot.kingsbane.remains<8||cooldown.kingsbane.remains>=24)&(!talent.crimson_tempest.enabled||variable.single_target||dot.crimson_tempest.ticking)||boss&fight_remains<=charges*8\nactions.shiv+=/shiv,if=talent.kingsbane&talent.lightweight_shiv.enabled&buff.envenom.up&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&(dot.kingsbane.ticking||cooldown.kingsbane.remains<=1)||boss&fight_remains<=charges*8\n# Shiv cases for Arterial in special circumstances\nactions.shiv+=/shiv,if=talent.arterial_precision&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&debuff.deathmark.up||boss&fight_remains<=charges*8\n# Fallback if no special cases apply\nactions.shiv+=/shiv,if=!talent.kingsbane&!talent.arterial_precision&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&(!talent.crimson_tempest.enabled||variable.single_target||dot.crimson_tempest.ticking)||boss&fight_remains<=charges*8\n\n# Stealthed Actions\nactions.stealthed+=/pool_resource,for_next=1\n# Apply Deathstalkers Mark if it has fallen off and we have no way to reapply otherwise\nactions.stealthed+=/ambush,if=!debuff.deathstalkers_mark.up&talent.deathstalkers_mark&!buff.darkest_night.up\n# Make sure to have Shiv up during Kingsbane as a final check\nactions.stealthed+=/shiv,if=talent.kingsbane&(dot.kingsbane.ticking||cooldown.kingsbane.up)&(!debuff.shiv.up&debuff.shiv.remains<1)&buff.envenom.up\n# Envenom to maintain the buff during Subterfuge\nactions.stealthed+=/envenom,if=effective_combo_points>=variable.effective_spend_cp&dot.kingsbane.ticking&buff.envenom.remains<=3\n# Envenom during Master Assassin in single target\nactions.stealthed+=/envenom,if=effective_combo_points>=variable.effective_spend_cp&buff.master_assassin_aura.up&variable.single_target\n# Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Indiscriminate Carnage\nactions.stealthed+=/garrote,cycle_targets=1,if=stealthed.improved_garrote&(remains<12||pmultiplier<=1||(buff.indiscriminate_carnage.up&active_dot.garrote<cycle_enemies))&!variable.single_target&target.time_to_die-remains>2\nactions.stealthed+=/garrote,if=stealthed.improved_garrote&(pmultiplier<=1||remains<14||!variable.single_target&buff.master_assassin_aura.up&buff.master_assassin_aura.remains<3)&combo_points.deficit>=1+2*talent.shrouded_suffocation\n\n# Stealth Cooldowns   Vanish Sync for Improved Garrote with Deathmark\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish to fish for Fateful Ending if possible\nactions.vanish+=/vanish,if=!buff.fatebound_lucky_coin.up&(buff.fatebound_coin_tails.stack>=5||buff.fatebound_coin_heads.stack>=5)\n# Vanish to spread Garrote during Deathmark without Indiscriminate Carnage\nactions.vanish+=/vanish,if=!talent.master_assassin&!talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&(debuff.deathmark.up||cooldown.deathmark.remains<4)&combo_points.deficit>=(spell_targets.fan_of_knives>?4)\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish for cleaving Garrotes with Indiscriminate Carnage\nactions.vanish+=/vanish,if=!talent.master_assassin&talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&spell_targets.fan_of_knives>2\n# Vanish for Master Assassin during Kingsbane\nactions.vanish+=/vanish,if=talent.master_assassin&talent.kingsbane&dot.kingsbane.remains<=3&dot.kingsbane.ticking&debuff.deathmark.remains<=3&dot.deathmark.ticking\n# Vanish fallback for Master Assassin\nactions.vanish+=/vanish,if=!talent.improved_garrote&talent.master_assassin&!dot.rupture.refreshable&dot.garrote.remains>3&debuff.deathmark.up&(debuff.shiv.up||debuff.deathmark.remains<4)",
["spec"] = 259,
},
["Enhancement"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/engine/class_modules/sc_shaman.cpp",
["builtIn"] = true,
["date"] = 20231221,
["spec"] = 263,
["desc"] = "2023-11-10:  Incremental sim update.\n\n2023-11-05:  Update for 10.2.\n\n2023-08-08: Add Funnel option and priority from SimC.\n\n2023-07-11: Patch 10.1.5 update.\n\n2023-07-02: Assume Flame Shocks on other targets are potentially out of range; manually apply Flame Shock after target swapping, if needed.\n\n2023-06-26: Updates to Ice Strike / Frost Shock.\n\n2023-05-30: Update Lava Lash usage with Ashen Catalyst.\n\n2023-05-20: Updates to trinkets.\n\n2023-05-14: Fix premature Lightning Bolt with PWave in AOE.\n\n2023-05-12: Add alpha_wolf_min_remains and Flame Shock if PWave is on CD.\n\n2023-05-06: More incremental SimC updates.\n\n2023-05-02: More incremental SimC updates.\n\n2023-04-30: More SimC updates.\n\n2023-04-29: Additional SimC updates.\n\n2023-04-26: Update from SimulationCraft for 10.1.\n\n2023-03-05:  In multi-target scenarios, filler Flame Shock should only be used if Flame Shock is refreshable.",
["lists"] = {
["single"] = {
{
["enabled"] = true,
["criteria"] = "! dot.flame_shock.ticking & talent.lashing_flames.enabled & ( raid_event.adds.in > ( action.primordial_wave.cooldown / ( 1 + set_bonus.tier31_4pc ) ) || raid_event.adds.in < 6 )",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "! ticking & talent.lashing_flames.enabled",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & talent.elemental_spirits.enabled & feral_spirit.active >= 4",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc & raid_event.adds.in >= action.sundering.cooldown",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.crackling_thunder.down & buff.ascendance.up & ti_chain_lightning & ( buff.ascendance.remains > ( cooldown.strike.remains + gcd.max ) )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || talent.deeply_rooted_elements.enabled || ( talent.stormblast.enabled & buff.stormbringer.up )",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_hand.up",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "! buff.windfury_totem.up",
["action"] = "windfury_totem",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & charges = max_charges",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 8 & buff.primordial_wave.up & raid_event.adds.in > buff.primordial_wave.remains & ( ! buff.splintered_elements.up || fight_remains <= 12 )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 8 & buff.crackling_thunder.up & talent.elemental_spirits.enabled",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 8 & ( feral_spirit.active >= 2 || ! talent.elemental_spirits.enabled )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "! talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack >= 5",
["action"] = "lava_burst",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.maelstrom_weapon.stack >= 8 ) || ( talent.static_accumulation.enabled & buff.maelstrom_weapon.stack >= 5 ) ) & buff.primordial_wave.down",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "talent.alpha_wolf.enabled & feral_spirit.active & alpha_wolf_min_remains = 0",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > ( action.primordial_wave.cooldown / ( 1 + set_bonus.tier31_4pc ) ) || raid_event.adds.in < 6",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "talent.elemental_assault.enabled & talent.swirling_maelstrom.enabled",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.lashing_flames.enabled",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in >= action.sundering.cooldown",
["action"] = "sundering",
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.swirling_maelstrom.enabled & active_dot.flame_shock & buff.maelstrom_weapon.stack < buff.maelstrom_weapon.max_stack",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.maelstrom_weapon.stack >= 5 & buff.primordial_wave.down",
["action"] = "lightning_bolt",
},
{
["action"] = "frost_shock",
["enabled"] = true,
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock",
["action"] = "fire_nova",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "settings.filler_shock",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.crackling_thunder.up & talent.elemental_spirits.enabled",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.primordial_wave.down",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.windfury_totem.remains < 30",
["action"] = "windfury_totem",
},
},
["funnel"] = {
{
["enabled"] = true,
["criteria"] = "( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 ) & buff.primordial_wave.up & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( ! buff.splintered_elements.up || fight_remains <= 12 || raid_event.adds.remains <= gcd.max )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "( talent.molten_assault.enabled & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6 ) || ( talent.ashen_catalyst.enabled & buff.ashen_catalyst.stack = buff.ashen_catalyst.max_stack )",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["criteria"] = "! buff.primordial_wave.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "flame_shock",
["description"] = "In game, you might not have Primordial Wave ready on pull but you want Flame Shock out for LL, FN, and PWave when it comes available.  Also, existing Flame Shocks may not be close enough to spread.",
["criteria"] = "( talent.primordial_wave.enabled || talent.fire_nova.enabled ) & ! ticking",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) ) ) & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "( talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack > 1 ) || buff.converging_storms.stack = buff.converging_storms.max_stack",
["action"] = "windstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.converging_storms.stack = buff.converging_storms.max_stack",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & buff.crackling_thunder.up",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "( buff.molten_weapon.stack + buff.volcanic_strength.up > buff.crackling_surge.stack ) & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "lava_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || ! buff.crash_lightning.up || ( talent.alpha_wolf.enabled & feral_spirit.active & alpha_wolf_min_remains = 0 ) || ( talent.converging_storms.enabled & buff.converging_storms.stack < buff.converging_storms.max_stack )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || set_bonus.tier30_2pc",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock = 6 || ( active_dot.flame_shock >= 4 & active_dot.flame_shock >= cycle_enemies )",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & ! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "sundering",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "( talent.fire_nova.enabled || talent.primordial_wave.enabled ) & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 3",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "buff.crash_lightning.up & talent.deeply_rooted_elements.enabled",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled & buff.cl_crash_lightning.up & active_enemies >= 4",
["action"] = "crash_lightning",
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 2",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) ) ) & buff.maelstrom_weapon.stack >= 5",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.molten_weapon.stack + buff.volcanic_strength.up > buff.crackling_surge.stack ) & buff.maelstrom_weapon.stack >= 5",
["action"] = "lava_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.windfury_totem.remains < 30",
["action"] = "windfury_totem",
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "! talent.hailstorm.enabled",
["action"] = "frost_shock",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "interrupt of casts.",
["action"] = "wind_shear",
},
{
["enabled"] = true,
["criteria"] = "settings.hostile_dispel",
["action"] = "purge",
},
{
["enabled"] = true,
["criteria"] = "settings.hostile_dispel",
["action"] = "greater_purge",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & fight_remains <= 30 || ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled )",
["action"] = "potion",
},
{
["enabled"] = true,
["name"] = "elementium_pocket_anvil",
["action"] = "elementium_pocket_anvil",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["name"] = "algethar_puzzle_box",
["criteria"] = "( ! buff.ascendance.up & ! buff.feral_spirit.up & ! buff.doom_winds.up ) || ( talent.ascendance.enabled & ( cooldown.ascendance.remains < 2 * action.stormstrike.gcd ) ) || boss & ( fight_remains % 180 <= 30 )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! variable.trinket1_is_weird & trinket.t1.has_use_buff & ( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % trinket.t1.cooldown.duration <= trinket.t1.buff_duration ) || ( variable.min_talented_cd_remains >= trinket.t1.cooldown.duration ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket2_is_weird & trinket.t2.has_use_buff & ( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % trinket.t2.cooldown.duration <= trinket.t2.buff_duration ) || ( variable.min_talented_cd_remains >= trinket.t2.cooldown.duration ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "beacon_to_the_beyond",
["use_off_gcd"] = 1,
["name"] = "beacon_to_the_beyond",
["criteria"] = "( ! buff.ascendance.up & ! buff.feral_spirit.up & ! buff.doom_winds.up ) || boss & ( fight_remains % 150 <= 5 )",
},
{
["enabled"] = true,
["action"] = "manic_grieftorch",
["use_off_gcd"] = 1,
["name"] = "manic_grieftorch",
["criteria"] = "( ! buff.ascendance.up & ! buff.feral_spirit.up & ! buff.doom_winds.up ) || boss & ( fight_remains % 120 <= 5 )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! variable.trinket1_is_weird & ! trinket.t1.has_use_buff",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket2_is_weird & ! trinket.t2.has_use_buff",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.blood_fury.cooldown <= action.blood_fury.duration ) || ( variable.min_talented_cd_remains >= action.blood_fury.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.berserking.cooldown <= action.berserking.duration ) || ( variable.min_talented_cd_remains >= action.berserking.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.fireblood.cooldown <= action.fireblood.duration ) || ( variable.min_talented_cd_remains >= action.fireblood.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.ancestral_call.cooldown <= action.ancestral_call.duration ) || ( variable.min_talented_cd_remains >= action.ancestral_call.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack > 1 & ( active_enemies = 1 & ti_lightning_bolt ) || ( active_enemies > 1 & ti_chain_lightning )",
["action"] = "windstrike",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier31_2pc & ( raid_event.adds.in > ( action.primordial_wave.cooldown / ( 1 + set_bonus.tier31_4pc ) ) || raid_event.adds.in < 6 )",
["action"] = "primordial_wave",
},
{
["action"] = "feral_spirit",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.flame_shock.ticking & ( ( ti_lightning_bolt & active_enemies = 1 & raid_event.adds.in >= action.ascendance.cooldown / 2 ) || ( ti_chain_lightning & active_enemies > 1 ) )",
["action"] = "ascendance",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in >= action.doom_winds.cooldown || active_enemies > 1",
["action"] = "doom_winds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1",
["list_name"] = "single",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 1 & ! funnel",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 1 & funnel",
["list_name"] = "funnel",
},
},
["precombat"] = {
{
["action"] = "windfury_weapon",
["enabled"] = true,
},
{
["action"] = "flametongue_weapon",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.lightning_shield.down & ( buff.earth_shield.down || talent.elemental_orbit.enabled )",
["action"] = "lightning_shield",
},
{
["enabled"] = true,
["criteria"] = "buff.lightning_shield.up & buff.earth_shield.down & talent.elemental_orbit.enabled",
["action"] = "earth_shield",
},
{
["enabled"] = true,
["criteria"] = "project_windfury_totem",
["action"] = "totemic_projection",
},
{
["enabled"] = true,
["criteria"] = "time = 0 || buff.windfury_totem.down",
["action"] = "windfury_totem",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box || trinket.t1.is.manic_grieftorch || trinket.t1.is.elementium_pocket_anvil || trinket.t1.is.beacon_to_the_beyond",
["var_name"] = "trinket1_is_weird",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box || trinket.t2.is.manic_grieftorch || trinket.t2.is.elementium_pocket_anvil || trinket.t2.is.beacon_to_the_beyond",
["var_name"] = "trinket2_is_weird",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( cooldown.feral_spirit.remains / ( 1 + 1.5 * talent.witch_doctors_ancestry.rank ) ) + 1000 * ! talent.feral_spirit.enabled ) <? ( cooldown.doom_winds.remains + 1000 * ! talent.doom_winds.enabled ) <? ( cooldown.ascendance.remains + 1000 * ! talent.ascendance.enabled )",
["var_name"] = "min_talented_cd_remains",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled & ( ( talent.unruly_winds.enabled & active_enemies >= 10 ) || active_enemies >= 15 )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.flame_shock >= active_enemies || buff.primordial_wave.remains < gcd.max * settings.pwave_gcds || active_dot.flame_shock >= 6 ) & buff.primordial_wave.up & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( ! buff.splintered_elements.up || fight_remains <= 12 || raid_event.adds.remains <= gcd.max )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ( talent.primordial_wave.enabled || talent.fire_nova.enabled ) & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["criteria"] = "! buff.primordial_wave.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "flame_shock",
["description"] = "In game, you might not have Primordial Wave ready on pull but you want Flame Shock out for LL, FN, and PWave when it comes available.  Also, existing Flame Shocks may not be close enough to spread.",
["criteria"] = "( talent.primordial_wave.enabled || talent.fire_nova.enabled ) & ! ticking",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || feral_spirit.active >= 2 ) ) ) & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( ! talent.crashing_storms.enabled || active_enemies <= 3 )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || ! buff.crash_lightning.up || ( talent.alpha_wolf.enabled & feral_spirit.active & alpha_wolf_min_remains = 0 )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || set_bonus.tier30_2pc",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 6 || ( active_dot.flame_shock >= 4 & active_dot.flame_shock >= cycle_enemies )",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["action"] = "lava_lash",
["criteria"] = "talent.lashing_flames.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( talent.molten_assault.enabled & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6 ) || ( talent.ashen_catalyst.enabled & buff.ashen_catalyst.stack = buff.ashen_catalyst.max_stack )",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "sundering",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "refreshable & ( talent.fire_nova.enabled || talent.primordial_wave.enabled ) & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 3",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "buff.crash_lightning.up & ( talent.deeply_rooted_elements.enabled || buff.converging_storms.stack = 6 )",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled & buff.cl_crash_lightning.up & active_enemies >= 4",
["action"] = "crash_lightning",
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 2",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || feral_spirit.active >= 2 ) ) ) & buff.maelstrom_weapon.stack >= 5 & ( ! talent.crashing_storms.enabled || active_enemies <= 3 )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.windfury_totem.remains < 30",
["action"] = "windfury_totem",
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "! talent.hailstorm.enabled",
["action"] = "frost_shock",
},
},
},
["version"] = 20231221,
["warnings"] = "The import for 'single' required some automated changes.\nLine 1: Converted operations in '!dot.flame_shock.ticking&talent.lashing_flames.enabled&(raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)' to '!dot.flame_shock.ticking&talent.lashing_flames.enabled&(raid_event.adds.in>(action.primordial_wave.cooldown/(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)'.\nLine 16: Converted operations in 'raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6' to 'raid_event.adds.in>(action.primordial_wave.cooldown/(1+set_bonus.tier31_4pc))||raid_event.adds.in<6'.\n\nThe import for 'default' required some automated changes.\nLine 6: Converted operations in '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||(talent.ascendance.enabled&(cooldown.ascendance.remains<2*action.stormstrike.gcd))||boss&(fight_remains%%180<=30)' to '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||(talent.ascendance.enabled&(cooldown.ascendance.remains<2*action.stormstrike.gcd))||boss&(fight_remains%180<=30)'.\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.buff.duration' to 'trinket.t1.buff.duration' (1x).\nLine 7: Converted 'trinket.1.buff.duration' to 'trinket.t1.buff_duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted operations in '!variable.trinket1_is_weird&trinket.t1.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.t1.cooldown.duration<=trinket.t1.buff_duration)||(variable.min_talented_cd_remains>=trinket.t1.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '!variable.trinket1_is_weird&trinket.t1.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%trinket.t1.cooldown.duration<=trinket.t1.buff_duration)||(variable.min_talented_cd_remains>=trinket.t1.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted 'trinket.2.buff.duration' to 'trinket.t2.buff.duration' (1x).\nLine 8: Converted 'trinket.2.buff.duration' to 'trinket.t2.buff_duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted operations in '!variable.trinket2_is_weird&trinket.t2.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.t2.cooldown.duration<=trinket.t2.buff_duration)||(variable.min_talented_cd_remains>=trinket.t2.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '!variable.trinket2_is_weird&trinket.t2.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%trinket.t2.cooldown.duration<=trinket.t2.buff_duration)||(variable.min_talented_cd_remains>=trinket.t2.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 9: Converted operations in '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%150<=5)' to '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%150<=5)'.\nLine 10: Converted operations in '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%120<=5)' to '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%120<=5)'.\nLine 11: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 12: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 13: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.blood_fury.cooldown<=action.blood_fury.duration)||(variable.min_talented_cd_remains>=action.blood_fury.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.blood_fury.cooldown<=action.blood_fury.duration)||(variable.min_talented_cd_remains>=action.blood_fury.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 14: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.berserking.cooldown<=action.berserking.duration)||(variable.min_talented_cd_remains>=action.berserking.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.berserking.cooldown<=action.berserking.duration)||(variable.min_talented_cd_remains>=action.berserking.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 15: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.fireblood.cooldown<=action.fireblood.duration)||(variable.min_talented_cd_remains>=action.fireblood.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.fireblood.cooldown<=action.fireblood.duration)||(variable.min_talented_cd_remains>=action.fireblood.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 16: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.ancestral_call.cooldown<=action.ancestral_call.duration)||(variable.min_talented_cd_remains>=action.ancestral_call.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.ancestral_call.cooldown<=action.ancestral_call.duration)||(variable.min_talented_cd_remains>=action.ancestral_call.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 18: Converted operations in 'set_bonus.tier31_2pc&(raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)' to 'set_bonus.tier31_2pc&(raid_event.adds.in>(action.primordial_wave.cooldown/(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)'.\nLine 20: Converted operations in 'dot.flame_shock.ticking&((ti_lightning_bolt&active_enemies=1&raid_event.adds.in>=action.ascendance.cooldown%2)||(ti_chain_lightning&active_enemies>1))' to 'dot.flame_shock.ticking&((ti_lightning_bolt&active_enemies=1&raid_event.adds.in>=action.ascendance.cooldown/2)||(ti_chain_lightning&active_enemies>1))'.\nThe following auras were used in the action list but were not found in the addon database:\n - duration\n\nThe import for 'precombat' required some automated changes.\nLine 7: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 7: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 7: Converted 'trinket.1.is.elementium_pocket_anvil' to 'trinket.t1.is.elementium_pocket_anvil' (1x).\nLine 7: Converted 'trinket.1.is.beacon_to_the_beyond' to 'trinket.t1.is.beacon_to_the_beyond' (1x).\nLine 8: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 8: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 8: Converted 'trinket.2.is.elementium_pocket_anvil' to 'trinket.t2.is.elementium_pocket_anvil' (1x).\nLine 8: Converted 'trinket.2.is.beacon_to_the_beyond' to 'trinket.t2.is.beacon_to_the_beyond' (1x).\nLine 9: Converted operations in '((cooldown.feral_spirit.remains%(1+1.5*talent.witch_doctors_ancestry.rank))+1000*!talent.feral_spirit.enabled)<?(cooldown.doom_winds.remains+1000*!talent.doom_winds.enabled)<?(cooldown.ascendance.remains+1000*!talent.ascendance.enabled)' to '((cooldown.feral_spirit.remains/(1+1.5*talent.witch_doctors_ancestry.rank))+1000*!talent.feral_spirit.enabled)<?(cooldown.doom_winds.remains+1000*!talent.doom_winds.enabled)<?(cooldown.ascendance.remains+1000*!talent.ascendance.enabled)'.\n\nImported 5 action lists.\n",
["author"] = "SimC",
["profile"] = "actions.precombat+=/windfury_weapon\nactions.precombat+=/flametongue_weapon\nactions.precombat+=/lightning_shield,if=buff.lightning_shield.down&(buff.earth_shield.down||talent.elemental_orbit.enabled)\nactions.precombat+=/earth_shield,if=buff.lightning_shield.up&buff.earth_shield.down&talent.elemental_orbit.enabled\nactions.precombat+=/totemic_projection,if=project_windfury_totem\nactions.precombat+=/windfury_totem,if=time=0||buff.windfury_totem.down\nactions.precombat+=/variable,name=trinket1_is_weird,value=trinket.1.is.algethar_puzzle_box||trinket.1.is.manic_grieftorch||trinket.1.is.elementium_pocket_anvil||trinket.1.is.beacon_to_the_beyond\nactions.precombat+=/variable,name=trinket2_is_weird,value=trinket.2.is.algethar_puzzle_box||trinket.2.is.manic_grieftorch||trinket.2.is.elementium_pocket_anvil||trinket.2.is.beacon_to_the_beyond\nactions.precombat+=/variable,name=min_talented_cd_remains,value=((cooldown.feral_spirit.remains%(1+1.5*talent.witch_doctors_ancestry.rank))+1000*!talent.feral_spirit.enabled)<?(cooldown.doom_winds.remains+1000*!talent.doom_winds.enabled)<?(cooldown.ascendance.remains+1000*!talent.ascendance.enabled)\n\n# interrupt of casts.\nactions+=/wind_shear\nactions+=/purge,if=settings.hostile_dispel\nactions+=/greater_purge,if=settings.hostile_dispel\nactions+=/potion,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&fight_remains<=30||!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled)\nactions+=/use_item,name=elementium_pocket_anvil,use_off_gcd=1\nactions+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||(talent.ascendance.enabled&(cooldown.ascendance.remains<2*action.stormstrike.gcd))||boss&(fight_remains%%180<=30)\nactions+=/use_item,slot=trinket1,if=!variable.trinket1_is_weird&trinket.1.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.1.cooldown.duration<=trinket.1.buff.duration)||(variable.min_talented_cd_remains>=trinket.1.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/use_item,slot=trinket2,if=!variable.trinket2_is_weird&trinket.2.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.2.cooldown.duration<=trinket.2.buff.duration)||(variable.min_talented_cd_remains>=trinket.2.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/use_item,name=beacon_to_the_beyond,use_off_gcd=1,if=(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%150<=5)\nactions+=/use_item,name=manic_grieftorch,use_off_gcd=1,if=(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%120<=5)\nactions+=/use_item,slot=trinket1,if=!variable.trinket1_is_weird&!trinket.1.has_use_buff\nactions+=/use_item,slot=trinket2,if=!variable.trinket2_is_weird&!trinket.2.has_use_buff\nactions+=/blood_fury,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.blood_fury.cooldown<=action.blood_fury.duration)||(variable.min_talented_cd_remains>=action.blood_fury.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/berserking,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.berserking.cooldown<=action.berserking.duration)||(variable.min_talented_cd_remains>=action.berserking.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/fireblood,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.fireblood.cooldown<=action.fireblood.duration)||(variable.min_talented_cd_remains>=action.fireblood.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/ancestral_call,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.ancestral_call.cooldown<=action.ancestral_call.duration)||(variable.min_talented_cd_remains>=action.ancestral_call.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\n## actions+=/invoke_external_buff,name=power_infusion,if=(talent.ascendance.enabled&talent.thorims_invocation.enabled&buff.ascendance.up)||(!talent.thorims_invocation.enabled&talent.feral_spirit.enabled&buff.feral_spirit.up)||(!talent.thorims_invocation.enabled&!talent.feral_spirit.enabled)||fight_remains<=20\nactions+=/windstrike,if=talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>1&(active_enemies=1&ti_lightning_bolt)||(active_enemies>1&ti_chain_lightning)\nactions+=/primordial_wave,if=set_bonus.tier31_2pc&(raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)\nactions+=/feral_spirit\nactions+=/ascendance,if=dot.flame_shock.ticking&((ti_lightning_bolt&active_enemies=1&raid_event.adds.in>=action.ascendance.cooldown%2)||(ti_chain_lightning&active_enemies>1))\nactions+=/doom_winds,if=raid_event.adds.in>=action.doom_winds.cooldown||active_enemies>1\nactions+=/call_action_list,name=single,strict=1,if=active_enemies=1\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>1&!funnel\nactions+=/call_action_list,name=funnel,strict=1,if=active_enemies>1&funnel\n\nactions.single+=/primordial_wave,if=!dot.flame_shock.ticking&talent.lashing_flames.enabled&(raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)\nactions.single+=/flame_shock,if=!ticking&talent.lashing_flames.enabled\nactions.single+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5&talent.elemental_spirits.enabled&feral_spirit.active>=4\nactions.single+=/sundering,if=set_bonus.tier30_2pc&raid_event.adds.in>=action.sundering.cooldown\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&buff.crackling_thunder.down&buff.ascendance.up&ti_chain_lightning&(buff.ascendance.remains>(cooldown.strike.remains+gcd))\nactions.single+=/stormstrike,if=buff.doom_winds.up||talent.deeply_rooted_elements.enabled||(talent.stormblast.enabled&buff.stormbringer.up)\nactions.single+=/lava_lash,if=buff.hot_hand.up\nactions.single+=/windfury_totem,if=!buff.windfury_totem.up\nactions.single+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5&charges=max_charges\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=8&buff.primordial_wave.up&raid_event.adds.in>buff.primordial_wave.remains&(!buff.splintered_elements.up||fight_remains<=12)\nactions.single+=/chain_lightning,if=buff.maelstrom_weapon.stack>=8&buff.crackling_thunder.up&talent.elemental_spirits.enabled\nactions.single+=/elemental_blast,if=buff.maelstrom_weapon.stack>=8&(feral_spirit.active>=2||!talent.elemental_spirits.enabled)\nactions.single+=/lava_burst,if=!talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>=5\nactions.single+=/lightning_bolt,if=((buff.maelstrom_weapon.stack>=8)||(talent.static_accumulation.enabled&buff.maelstrom_weapon.stack>=5))&buff.primordial_wave.down\nactions.single+=/crash_lightning,if=talent.alpha_wolf.enabled&feral_spirit.active&alpha_wolf_min_remains=0\nactions.single+=/primordial_wave,if=raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6\nactions.single+=/flame_shock,if=!ticking\nactions.single+=/ice_strike,if=talent.elemental_assault.enabled&talent.swirling_maelstrom.enabled\nactions.single+=/lava_lash,if=talent.lashing_flames.enabled\nactions.single+=/ice_strike,if=!buff.ice_strike.up\nactions.single+=/frost_shock,if=buff.hailstorm.up\nactions.single+=/lava_lash\nactions.single+=/ice_strike\nactions.single+=/windstrike\nactions.single+=/stormstrike\nactions.single+=/sundering,if=raid_event.adds.in>=action.sundering.cooldown\nactions.single+=/bag_of_tricks\nactions.single+=/fire_nova,if=talent.swirling_maelstrom.enabled&active_dot.flame_shock&buff.maelstrom_weapon.stack<buff.maelstrom_weapon.max_stack\nactions.single+=/lightning_bolt,if=talent.hailstorm.enabled&buff.maelstrom_weapon.stack>=5&buff.primordial_wave.down\nactions.single+=/frost_shock\nactions.single+=/crash_lightning\nactions.single+=/fire_nova,if=active_dot.flame_shock\nactions.single+=/earth_elemental\nactions.single+=/flame_shock,if=settings.filler_shock\nactions.single+=/chain_lightning,if=buff.maelstrom_weapon.stack>=5&buff.crackling_thunder.up&talent.elemental_spirits.enabled\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&buff.primordial_wave.down\nactions.single+=/windfury_totem,if=buff.windfury_totem.remains<30\n\nactions.aoe+=/crash_lightning,if=talent.crashing_storms.enabled&((talent.unruly_winds.enabled&active_enemies>=10)||active_enemies>=15)\nactions.aoe+=/lightning_bolt,if=(active_dot.flame_shock>=active_enemies||buff.primordial_wave.remains<gcd*settings.pwave_gcds||active_dot.flame_shock>=6)&buff.primordial_wave.up&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(!buff.splintered_elements.up||fight_remains<=12||raid_event.adds.remains<=gcd)\nactions.aoe+=/lava_lash,if=talent.molten_assault.enabled&(talent.primordial_wave.enabled||talent.fire_nova.enabled)&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up\n# In game, you might not have Primordial Wave ready on pull but you want Flame Shock out for LL, FN, and PWave when it comes available.  Also, existing Flame Shocks may not be close enough to spread.\nactions.aoe+=/flame_shock,if=(talent.primordial_wave.enabled||talent.fire_nova.enabled)&!ticking\nactions.aoe+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||feral_spirit.active>=2)))&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(!talent.crashing_storms.enabled||active_enemies<=3)\nactions.aoe+=/chain_lightning,if=buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.aoe+=/crash_lightning,if=buff.doom_winds.up||!buff.crash_lightning.up||(talent.alpha_wolf.enabled&feral_spirit.active&alpha_wolf_min_remains=0)\nactions.aoe+=/sundering,if=buff.doom_winds.up||set_bonus.tier30_2pc\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=6||(active_dot.flame_shock>=4&active_dot.flame_shock>=cycle_enemies)\nactions.aoe+=/lava_lash,cycle_targets=1,if=talent.lashing_flames.enabled\nactions.aoe+=/lava_lash,if=(talent.molten_assault.enabled&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6)||(talent.ashen_catalyst.enabled&buff.ashen_catalyst.stack=buff.ashen_catalyst.max_stack)\nactions.aoe+=/ice_strike,if=talent.hailstorm.enabled\nactions.aoe+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.aoe+=/sundering\nactions.aoe+=/flame_shock,if=talent.molten_assault.enabled&!ticking\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&(talent.fire_nova.enabled||talent.primordial_wave.enabled)&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=3\nactions.aoe+=/stormstrike,if=buff.crash_lightning.up&(talent.deeply_rooted_elements.enabled||buff.converging_storms.stack=6)\nactions.aoe+=/crash_lightning,if=talent.crashing_storms.enabled&buff.cl_crash_lightning.up&active_enemies>=4\nactions.aoe+=/windstrike\nactions.aoe+=/stormstrike\nactions.aoe+=/ice_strike\nactions.aoe+=/lava_lash\nactions.aoe+=/crash_lightning\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=2\nactions.aoe+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||feral_spirit.active>=2)))&buff.maelstrom_weapon.stack>=5&(!talent.crashing_storms.enabled||active_enemies<=3)\nactions.aoe+=/chain_lightning,if=buff.maelstrom_weapon.stack>=5\nactions.aoe+=/windfury_totem,if=buff.windfury_totem.remains<30\nactions.aoe+=/flame_shock,if=!ticking\nactions.aoe+=/frost_shock,if=!talent.hailstorm.enabled\n\nactions.funnel+=/lightning_bolt,if=(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)&buff.primordial_wave.up&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(!buff.splintered_elements.up||fight_remains<=12||raid_event.adds.remains<=gcd)\nactions.funnel+=/lava_lash,if=(talent.molten_assault.enabled&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6)||(talent.ashen_catalyst.enabled&buff.ashen_catalyst.stack=buff.ashen_catalyst.max_stack)\nactions.funnel+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up\n# In game, you might not have Primordial Wave ready on pull but you want Flame Shock out for LL, FN, and PWave when it comes available.  Also, existing Flame Shocks may not be close enough to spread.\nactions.funnel+=/flame_shock,if=(talent.primordial_wave.enabled||talent.fire_nova.enabled)&!ticking\nactions.funnel+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)))&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.funnel+=/windstrike,if=(talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>1)||buff.converging_storms.stack=buff.converging_storms.max_stack\nactions.funnel+=/stormstrike,if=buff.converging_storms.stack=buff.converging_storms.max_stack\nactions.funnel+=/chain_lightning,if=buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&buff.crackling_thunder.up\nactions.funnel+=/lava_burst,if=(buff.molten_weapon.stack+buff.volcanic_strength.up>buff.crackling_surge.stack)&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.funnel+=/lightning_bolt,if=buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.funnel+=/crash_lightning,if=buff.doom_winds.up||!buff.crash_lightning.up||(talent.alpha_wolf.enabled&feral_spirit.active&alpha_wolf_min_remains=0)||(talent.converging_storms.enabled&buff.converging_storms.stack<buff.converging_storms.max_stack)\nactions.funnel+=/sundering,if=buff.doom_winds.up||set_bonus.tier30_2pc\nactions.funnel+=/fire_nova,if=active_dot.flame_shock=6||(active_dot.flame_shock>=4&active_dot.flame_shock>=cycle_enemies)\nactions.funnel+=/ice_strike,if=talent.hailstorm.enabled&!buff.ice_strike.up\nactions.funnel+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.funnel+=/sundering\nactions.funnel+=/flame_shock,if=talent.molten_assault.enabled&!ticking\nactions.funnel+=/flame_shock,cycle_targets=1,if=(talent.fire_nova.enabled||talent.primordial_wave.enabled)&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.funnel+=/fire_nova,if=active_dot.flame_shock>=3\nactions.funnel+=/stormstrike,if=buff.crash_lightning.up&talent.deeply_rooted_elements.enabled\nactions.funnel+=/crash_lightning,if=talent.crashing_storms.enabled&buff.cl_crash_lightning.up&active_enemies>=4\nactions.funnel+=/windstrike\nactions.funnel+=/stormstrike\nactions.funnel+=/ice_strike\nactions.funnel+=/lava_lash\nactions.funnel+=/crash_lightning\nactions.funnel+=/fire_nova,if=active_dot.flame_shock>=2\nactions.funnel+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)))&buff.maelstrom_weapon.stack>=5\nactions.funnel+=/lava_burst,if=(buff.molten_weapon.stack+buff.volcanic_strength.up>buff.crackling_surge.stack)&buff.maelstrom_weapon.stack>=5\nactions.funnel+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5\nactions.funnel+=/windfury_totem,if=buff.windfury_totem.remains<30\nactions.funnel+=/flame_shock,if=!ticking\nactions.funnel+=/frost_shock,if=!talent.hailstorm.enabled",
},
["Holy Paladin"] = {
["builtIn"] = true,
["date"] = 20240805,
["spec"] = 65,
["desc"] = "Healer priorities are DPS-focused only\n\n2024-07-30: The War Within",
["lists"] = {
["spenders"] = {
{
["enabled"] = true,
["criteria"] = "solo & ( health.pct < 70 || ! equipped.shield ) & buff.shining_righteousness_ready.up || buff.empyrean_legacy.up",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "group & buff.shining_righteousness_ready.up",
["action"] = "light_of_dawn",
},
{
["action"] = "shield_of_the_righteous",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["action"] = "avenging_wrath",
["enabled"] = true,
},
{
["action"] = "avenging_crusader",
["enabled"] = true,
},
{
["action"] = "blessing_of_summer",
["enabled"] = true,
},
{
["action"] = "blessing_of_autumn",
["enabled"] = true,
},
{
["action"] = "blessing_of_winter",
["enabled"] = true,
},
{
["action"] = "blessing_of_spring",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up || buff.avenging_wrath.up || buff.avenging_crusader.up",
["action"] = "fireblood",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.avenging_crusader.enabled || cooldown.avenging_crusader.remains > gcd.max || holy_power.deficit = 0",
["list_name"] = "spenders",
},
{
["action"] = "divine_toll",
["enabled"] = true,
},
{
["action"] = "holy_prism",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "group",
["action"] = "beacon_of_virtue",
},
{
["enabled"] = true,
["criteria"] = "! consecration.up & action.crusader_strike.in_range",
["action"] = "consecration",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["action"] = "judgment",
["enabled"] = true,
},
{
["action"] = "holy_shock",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.holy_shock.remains > gcd.max",
["action"] = "crusader_strike",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "buff.paladin_aura.down",
["action"] = "devotion_aura",
},
{
["enabled"] = true,
["criteria"] = "active_dot.beacon_of_light = 0",
["action"] = "beacon_of_light",
},
{
["enabled"] = true,
["criteria"] = "group & active_dot.beacon_of_faith = 0",
["action"] = "beacon_of_faith",
},
},
},
["version"] = 20240805,
["warnings"] = "The import for 'default' required some automated changes.\nLine 12: Converted 'talent.avenging_crusader' to 'talent.avenging_crusader.enabled' (1x).\n\nImported 3 action lists.\n",
["author"] = "Kaleokalani",
["profile"] = "actions.precombat+=/devotion_aura,if=buff.paladin_aura.down\nactions.precombat+=/beacon_of_light,if=active_dot.beacon_of_light=0\nactions.precombat+=/beacon_of_faith,if=group&active_dot.beacon_of_faith=0\n\nactions+=/rebuke\nactions+=/avenging_wrath\nactions+=/avenging_crusader\nactions+=/blessing_of_summer\nactions+=/blessing_of_autumn\nactions+=/blessing_of_winter\nactions+=/blessing_of_spring\nactions+=/lights_judgment\nactions+=/potion\nactions+=/fireblood,if=buff.bloodlust.up||buff.avenging_wrath.up||buff.avenging_crusader.up\nactions+=/use_items\nactions+=/call_action_list,name=spenders,strict=1,if=!talent.avenging_crusader||cooldown.avenging_crusader.remains>gcd.max||holy_power.deficit=0\nactions+=/divine_toll\nactions+=/holy_prism\nactions+=/beacon_of_virtue,if=group\nactions+=/consecration,if=!consecration.up&action.crusader_strike.in_range\nactions+=/hammer_of_wrath\nactions+=/judgment\nactions+=/holy_shock\nactions+=/crusader_strike,if=cooldown.holy_shock.remains>gcd.max\nactions+=/arcane_torrent\n\nactions.spenders+=/word_of_glory,if=solo&(health.pct<70||!equipped.shield)&buff.shining_righteousness_ready.up||buff.empyrean_legacy.up\nactions.spenders+=/light_of_dawn,if=group&buff.shining_righteousness_ready.up\nactions.spenders+=/shield_of_the_righteous",
},
["Arms"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240805,
["author"] = "SimulationCraft",
["desc"] = "2024-07-23: The War Within",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & active_enemies >= 2 & buff.sweeping_strikes.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & ( buff.sweeping_strikes.up || talent.dreadnaught.enabled ) & charges = 2",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.fervor_of_battle.enabled",
["action"] = "cleave",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 5",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & debuff.colossus_smash.remains > 8 || boss & fight_remains < 25",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "pummel",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "cooldown.mortal_strike.remains > 1.5 & rage < 50",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 180 & buff.avatar.up || boss & target.time_to_die < 180 & variable.execute_phase & buff.avatar.up || boss & fight_remains < 20",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2 || talent.fervor_of_battle.enabled & variable.execute_phase & ! raid_event.adds.up & active_enemies > 1",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "variable.execute_phase",
["list_name"] = "execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 )",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["description"] = "Variables",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["description"] = "Trinkets",
["criteria"] = "dot.mark_of_fyralath.ticking & ! talent.blademasters_torment.enabled || dot.mark_of_fyralath.ticking & cooldown.avatar.remains > 3 & cooldown.bladestorm.remains > 3 & ! debuff.colossus_smash.up",
["action"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["action"] = "algethar_puzzle_box",
["criteria"] = "cooldown.avatar.remains <= 3",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["execute"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "sweeping_strikes",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "rage < 60",
["action"] = "overpower",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "buff.strike_vulnerabilities.down || buff.collateral_damage.up & buff.merciless_bonegrinder.up",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.duration < 3 & active_enemies >= 3",
["action"] = "thunder_clap",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.sweeping_strikes.remains <= 1 || buff.sweeping_strikes.up",
["action"] = "ravager",
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.unhinged.enabled || talent.merciless_bonegrinder.enabled",
["action"] = "bladestorm",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & charges = 2",
["action"] = "overpower",
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "execute",
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
},
["version"] = 20240805,
["warnings"] = "The import for 'single_target' required some automated changes.\nLine 11: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 17: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 1: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 2: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 2: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 5: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 5: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 5: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 5: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 5: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 6: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 6: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 6: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 6: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 8: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 9: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'aoe' required some automated changes.\nLine 9: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 9: Converted 'talent.merciless_bonegrinder' to 'talent.merciless_bonegrinder.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'talent.blademasters_torment' to 'talent.blademasters_torment.enabled' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\n# Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\nactions.precombat+=/battle_shout\nactions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/use_item,name=algethar_puzzle_box\n\nactions+=/charge,if=time<=0.5||movement.distance>5\nactions+=/potion,if=gcd.remains=0&debuff.colossus_smash.remains>8||boss&fight_remains<25\nactions+=/pummel,if=target.debuff.casting.react\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=trinkets\nactions+=/arcane_torrent,if=cooldown.mortal_strike.remains>1.5&rage<50\nactions+=/lights_judgment,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/bag_of_tricks,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/berserking,if=fight_remains>180&buff.avatar.up||boss&target.time_to_die<180&variable.execute_phase&buff.avatar.up||boss&fight_remains<20\nactions+=/blood_fury,if=debuff.colossus_smash.up\nactions+=/fireblood,if=debuff.colossus_smash.up\nactions+=/ancestral_call,if=debuff.colossus_smash.up\n## actions+=/invoke_external_buff,name=power_infusion,if=debuff.colossus_smash.up&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2||talent.fervor_of_battle.enabled&variable.execute_phase&!raid_event.adds.up&active_enemies>1\nactions+=/run_action_list,name=execute,strict=1,cycle_targets=1,if=variable.execute_phase\nactions+=/run_action_list,name=single_target\n\nactions.execute+=/sweeping_strikes,if=active_enemies>1\nactions.execute+=/thunderous_roar\nactions.execute+=/champions_spear\nactions.execute+=/skullsplitter\nactions.execute+=/ravager\nactions.execute+=/avatar\nactions.execute+=/colossus_smash\nactions.execute+=/warbreaker\nactions.execute+=/mortal_strike,if=debuff.executioners_precision.stack=2\nactions.execute+=/overpower,if=rage<60\nactions.execute+=/execute\nactions.execute+=/bladestorm\nactions.execute+=/overpower\n\nactions.aoe+=/cleave,if=buff.strike_vulnerabilities.down||buff.collateral_damage.up&buff.merciless_bonegrinder.up\nactions.aoe+=/thunder_clap,if=dot.rend.duration<3&active_enemies>=3\nactions.aoe+=/thunderous_roar\nactions.aoe+=/avatar\nactions.aoe+=/ravager,if=cooldown.sweeping_strikes.remains<=1||buff.sweeping_strikes.up\nactions.aoe+=/sweeping_strikes\nactions.aoe+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.aoe+=/warbreaker\nactions.aoe+=/bladestorm,if=talent.unhinged||talent.merciless_bonegrinder\nactions.aoe+=/champions_spear\nactions.aoe+=/colossus_smash\nactions.aoe+=/overpower,if=buff.sweeping_strikes.up&charges=2\nactions.aoe+=/cleave\nactions.aoe+=/mortal_strike,if=buff.sweeping_strikes.up\nactions.aoe+=/overpower,if=buff.sweeping_strikes.up\nactions.aoe+=/execute,if=buff.sweeping_strikes.up\nactions.aoe+=/bladestorm\nactions.aoe+=/overpower\nactions.aoe+=/thunder_clap\nactions.aoe+=/mortal_strike\nactions.aoe+=/execute\nactions.aoe+=/whirlwind\n\nactions.single_target+=/thunder_clap,if=dot.rend.remains<=gcd&active_enemies>=2&buff.sweeping_strikes.down\nactions.single_target+=/sweeping_strikes,if=active_enemies>1\nactions.single_target+=/rend,if=dot.rend.remains<=gcd\nactions.single_target+=/thunderous_roar\nactions.single_target+=/champions_spear\nactions.single_target+=/ravager\nactions.single_target+=/avatar\nactions.single_target+=/colossus_smash\nactions.single_target+=/warbreaker\nactions.single_target+=/cleave,if=active_enemies>=3\nactions.single_target+=/overpower,if=active_enemies>1&(buff.sweeping_strikes.up||talent.dreadnaught)&charges=2\nactions.single_target+=/mortal_strike\nactions.single_target+=/skullsplitter\nactions.single_target+=/execute\nactions.single_target+=/overpower\nactions.single_target+=/rend,if=dot.rend.remains<=8\nactions.single_target+=/cleave,if=active_enemies>=2&talent.fervor_of_battle\nactions.single_target+=/slam\n\n# Trinkets\nactions.trinkets+=/use_item,name=fyralath_the_dreamrender,,if=dot.mark_of_fyralath.ticking&!talent.blademasters_torment||dot.mark_of_fyralath.ticking&cooldown.avatar.remains>3&cooldown.bladestorm.remains>3&!debuff.colossus_smash.up\nactions.trinkets+=/use_item,use_off_gcd=1,name=algethar_puzzle_box,if=cooldown.avatar.remains<=3\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&buff.avatar.up&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&buff.avatar.up&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions.variables+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20",
["spec"] = 71,
},
["Protection Paladin"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20270811,
["author"] = "SimC",
["desc"] = "2024-08-11: Update from SimC\n\n2024-07-23: The War Within",
["lists"] = {
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "standard",
},
},
["precombat"] = {
{
["action"] = "devotion_aura",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "consecration",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t1.has_cooldown & trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration ) || ! trinket.t2.has_cooldown",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.has_cooldown & trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration ) || ! trinket.t1.has_cooldown",
},
},
["standard"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "talent.lights_guidance.enabled & ( cooldown.eye_of_tyr.remains < 2 || buff.hammer_of_light_ready.up ) & ( buff.redoubt.stack >= 2 || ! talent.bastion_of_light.enabled ) & talent.of_dusk_and_dawn.enabled",
["list_name"] = "hammer_of_light",
},
{
["enabled"] = true,
["criteria"] = "buff.redoubt.stack = 3 & ( buff.blessing_of_dawn.stack >= 1 || ! talent.of_dusk_and_dawn.enabled )",
["action"] = "hammer_of_light",
},
{
["enabled"] = true,
["criteria"] = "( ( ( ! talent.righteous_protector.enabled || cooldown.righteous_protector_icd.remains = 0 ) & holy_power > 2 ) || buff.bastion_of_light.up || buff.divine_purpose.up ) & ! ( ( buff.hammer_of_light_ready.up || buff.hammer_of_light_free.up ) )",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "next_armament = sacred_weapon & ( ! buff.sacred_weapon.up || ( buff.sacred_weapon.remains < 6 & ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains <= 30 ) )",
["action"] = "holy_armaments",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shield_of_the_righteous > 3 & buff.bulwark_of_righteous_fury.stack >= 3 & holy_power < 3",
["action"] = "judgment",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "avengers_shield",
["description"] = "The following line has been edited for your own sanity, it is technically a dps gain to only use AS to refresh barricade of faith and strength in adversary as templar in large aoe However, it is very cursed, and nobody should actually do this, but if you REALLY wanted to, uncomment this line and comment out the next avenger's shield line. actions.standard+=/avengers_shield,if=!buff.bulwark_of_righteous_fury.up&talent.bulwark_of_righteous_fury.enabled&spell_targets.shield_of_the_righteous>=3&!((talent.lights_guidance.enabled&spell_targets.shield_of_the_righteous>=10)||!buff.barricade_of_faith.up)",
["criteria"] = "! buff.bulwark_of_righteous_fury.up & talent.bulwark_of_righteous_fury.enabled & spell_targets.shield_of_the_righteous >= 3",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "charges >= 2 || full_recharge_time <= gcd.max",
["action"] = "judgment",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "next_armament = holy_bulwark & charges = 2",
["action"] = "holy_armaments",
},
{
["enabled"] = true,
["criteria"] = "( ! raid_event.adds.exists || raid_event.adds.in > 10 )",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["action"] = "judgment",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "avengers_shield",
["description"] = "In single target, Templar should prioritize maintaining Shake the Heavens by casting spells listed in Higher Calling.",
["criteria"] = "! talent.lights_guidance.enabled",
},
{
["enabled"] = true,
["criteria"] = "! consecration.up",
["action"] = "consecration",
},
{
["enabled"] = true,
["criteria"] = "( talent.inmost_light.enabled & raid_event.adds.in >= 45 || spell_targets.shield_of_the_righteous >= 3 ) & ! talent.lights_deliverance.enabled",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "next_armament = holy_bulwark",
["action"] = "holy_armaments",
},
{
["action"] = "blessed_hammer",
["enabled"] = true,
},
{
["action"] = "hammer_of_the_righteous",
["enabled"] = true,
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.shining_light_free.up & talent.lights_guidance.enabled",
["action"] = "word_of_glory",
},
{
["action"] = "avengers_shield",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.lights_deliverance.enabled",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "buff.shining_light_free.up",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "holy_power < 5",
["action"] = "arcane_torrent",
},
{
["action"] = "consecration",
["enabled"] = true,
},
},
["trinkets"] = {
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "( variable.trinket_sync_slot = 1 & ( buff.avenging_wrath.up || fight_remains <= 40 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready || ! buff.avenging_wrath.up ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( buff.avenging_wrath.up || fight_remains <= 40 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready || ! buff.avenging_wrath.up ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket2",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.lights_judgment >= 2 || ! raid_event.adds.exists || raid_event.adds.in > 75 || raid_event.adds.up",
["action"] = "lights_judgment",
},
{
["action"] = "avenging_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( buff.avenging_wrath.remains < 15 || ( time > 10 ) )",
["action"] = "moment_of_glory",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shield_of_the_righteous >= 3",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || cooldown.avenging_wrath.remains <= 30",
["action"] = "bastion_of_light",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.remains > 8",
["action"] = "fireblood",
},
},
["hammer_of_light"] = {
{
["enabled"] = true,
["criteria"] = "buff.blessing_of_dawn.stack > 0 || spell_targets.shield_of_the_righteous >= 5",
["action"] = "hammer_of_light",
},
{
["enabled"] = true,
["criteria"] = "hpg_to_2dawn = 5",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "hpg_to_2dawn = 4",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "hpg_to_2dawn = 1 || buff.blessing_of_dawn.stack > 0",
["action"] = "eye_of_tyr",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["action"] = "judgment",
["enabled"] = true,
},
{
["action"] = "blessed_hammer",
["enabled"] = true,
},
{
["action"] = "hammer_of_the_righteous",
["enabled"] = true,
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["action"] = "divine_toll",
["enabled"] = true,
},
},
},
["version"] = 20270811,
["warnings"] = "The import for 'precombat' required some automated changes.\nLine 5: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 5: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 6: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 1: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 2: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 2: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nImported 6 action lists.\n",
["profile"] = "## actions.precombat+=/rite_of_sanctification\n## actions.precombat+=/rite_of_adjuration\nactions.precombat+=/devotion_aura\nactions.precombat+=/lights_judgment\nactions.precombat+=/arcane_torrent\nactions.precombat+=/consecration\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_cooldown&trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)||!trinket.2.has_cooldown\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_cooldown&trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)||!trinket.1.has_cooldown\n\nactions+=/rebuke\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=standard\n\nactions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2||!raid_event.adds.exists||raid_event.adds.in>75||raid_event.adds.up\nactions.cooldowns+=/avenging_wrath\nactions.cooldowns+=/potion,if=buff.avenging_wrath.up\nactions.cooldowns+=/moment_of_glory,if=(buff.avenging_wrath.remains<15||(time>10))\nactions.cooldowns+=/divine_toll,if=spell_targets.shield_of_the_righteous>=3\nactions.cooldowns+=/bastion_of_light,if=buff.avenging_wrath.up||cooldown.avenging_wrath.remains<=30\n## actions.cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.avenging_wrath.up\nactions.cooldowns+=/fireblood,if=buff.avenging_wrath.remains>8\n\nactions.standard+=/call_action_list,name=hammer_of_light,if=talent.lights_guidance.enabled&(cooldown.eye_of_tyr.remains<2||buff.hammer_of_light_ready.up)&(buff.redoubt.stack>=2||!talent.bastion_of_light.enabled)&talent.of_dusk_and_dawn.enabled\nactions.standard+=/hammer_of_light,if=buff.redoubt.stack=3&(buff.blessing_of_dawn.stack>=1||!talent.of_dusk_and_dawn.enabled)\nactions.standard+=/shield_of_the_righteous,if=(((!talent.righteous_protector.enabled||cooldown.righteous_protector_icd.remains=0)&holy_power>2)||buff.bastion_of_light.up||buff.divine_purpose.up)&!((buff.hammer_of_light_ready.up||buff.hammer_of_light_free.up))\nactions.standard+=/holy_armaments,if=next_armament=sacred_weapon&(!buff.sacred_weapon.up||(buff.sacred_weapon.remains<6&!buff.avenging_wrath.up&cooldown.avenging_wrath.remains<=30))\nactions.standard+=/judgment,cycle_targets=1,if=spell_targets.shield_of_the_righteous>3&buff.bulwark_of_righteous_fury.stack>=3&holy_power<3\n# The following line has been edited for your own sanity, it is technically a dps gain to only use AS to refresh barricade of faith and strength in adversary as templar in large aoe However, it is very cursed, and nobody should actually do this, but if you REALLY wanted to, uncomment this line and comment out the next avenger's shield line. actions.standard+=/avengers_shield,if=!buff.bulwark_of_righteous_fury.up&talent.bulwark_of_righteous_fury.enabled&spell_targets.shield_of_the_righteous>=3&!((talent.lights_guidance.enabled&spell_targets.shield_of_the_righteous>=10)||!buff.barricade_of_faith.up)\nactions.standard+=/avengers_shield,if=!buff.bulwark_of_righteous_fury.up&talent.bulwark_of_righteous_fury.enabled&spell_targets.shield_of_the_righteous>=3\nactions.standard+=/hammer_of_wrath\nactions.standard+=/judgment,cycle_targets=1,if=charges>=2||full_recharge_time<=gcd.max\nactions.standard+=/holy_armaments,if=next_armament=holy_bulwark&charges=2\nactions.standard+=/divine_toll,if=(!raid_event.adds.exists||raid_event.adds.in>10)\nactions.standard+=/judgment,cycle_targets=1\n# In single target, Templar should prioritize maintaining Shake the Heavens by casting spells listed in Higher Calling.\nactions.standard+=/avengers_shield,if=!talent.lights_guidance.enabled\nactions.standard+=/consecration,if=!consecration.up\nactions.standard+=/eye_of_tyr,if=(talent.inmost_light.enabled&raid_event.adds.in>=45||spell_targets.shield_of_the_righteous>=3)&!talent.lights_deliverance.enabled\nactions.standard+=/holy_armaments,if=next_armament=holy_bulwark\nactions.standard+=/blessed_hammer\nactions.standard+=/hammer_of_the_righteous\nactions.standard+=/crusader_strike\nactions.standard+=/word_of_glory,if=buff.shining_light_free.up&talent.lights_guidance.enabled\nactions.standard+=/avengers_shield\nactions.standard+=/eye_of_tyr,if=!talent.lights_deliverance.enabled\nactions.standard+=/word_of_glory,if=buff.shining_light_free.up\nactions.standard+=/arcane_torrent,if=holy_power<5\nactions.standard+=/consecration\n\nactions.hammer_of_light+=/hammer_of_light,if=buff.blessing_of_dawn.stack>0||spell_targets.shield_of_the_righteous>=5\nactions.hammer_of_light+=/eye_of_tyr,if=hpg_to_2dawn=5\nactions.hammer_of_light+=/shield_of_the_righteous,if=hpg_to_2dawn=4\nactions.hammer_of_light+=/eye_of_tyr,if=hpg_to_2dawn=1||buff.blessing_of_dawn.stack>0\nactions.hammer_of_light+=/hammer_of_wrath\nactions.hammer_of_light+=/judgment\nactions.hammer_of_light+=/blessed_hammer\nactions.hammer_of_light+=/hammer_of_the_righteous\nactions.hammer_of_light+=/crusader_strike\nactions.hammer_of_light+=/divine_toll\n\nactions.trinkets+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(buff.avenging_wrath.up||fight_remains<=40)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready||!buff.avenging_wrath.up))||!variable.trinket_sync_slot)\nactions.trinkets+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(buff.avenging_wrath.up||fight_remains<=40)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready||!buff.avenging_wrath.up))||!variable.trinket_sync_slot)",
["spec"] = 66,
},
["Subtlety"] = {
["builtIn"] = true,
["date"] = 20240728,
["spec"] = 261,
["desc"] = "2024-07-28: The War Within",
["lists"] = {
["stealthed"] = {
{
["enabled"] = true,
["criteria"] = "buff.stealth.up & ( spell_targets.shuriken_storm < 4 || priority_rotation )",
["action"] = "shadowstrike",
["description"] = "Stealthed Rotation  Always Strike from Stealth",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Finish when on Animacharged combo points or max combo points.",
["criteria"] = "effective_combo_points >= cp_max_spend",
["list_name"] = "finish",
},
{
["enabled"] = true,
["criteria"] = "buff.shuriken_tornado.up & combo_points.deficit <= 2",
["action"] = "call_action_list",
["list_name"] = "finish",
},
{
["enabled"] = true,
["criteria"] = "combo_points.deficit <= 1 + ( talent.deeper_stratagem.enabled || talent.secret_stratagem.enabled )",
["action"] = "call_action_list",
["list_name"] = "finish",
},
{
["enabled"] = true,
["criteria"] = "! buff.premeditation.up & buff.shadow_dance.remains >= 3 & buff.shadow_blades.up & ! used_for_danse & talent.danse_macabre.enabled & spell_targets.shuriken_storm <= 3 & ! buff.the_rotten.up",
["action"] = "backstab",
["description"] = "Backstab for Danse Macabre stack generation during Shadowblades.",
},
{
["enabled"] = true,
["criteria"] = "! buff.premeditation.up & buff.shadow_dance.remains >= 3 & buff.shadow_blades.up & ! used_for_danse & talent.danse_macabre.enabled & spell_targets.shuriken_storm <= 4",
["action"] = "gloomblade",
["description"] = "Gloomblade for Danse Macabre stack generation during Shadowblades.",
},
{
["enabled"] = true,
["criteria"] = "! used_for_danse & buff.shadow_blades.up",
["action"] = "shadowstrike",
["description"] = "Shadow Strike for Danse Macabre stack generation during Shadowblades.",
},
{
["enabled"] = true,
["criteria"] = "! buff.premeditation.up & spell_targets >= 4",
["action"] = "shuriken_storm",
},
{
["action"] = "shadowstrike",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.slice_and_dice.up || spell_targets.shuriken_storm >= cp_max_spend",
["description"] = "Used to determine whether cooldowns wait for SnD based on targets.",
["var_name"] = "snd_condition",
},
{
["enabled"] = true,
["description"] = "Check CDs at first",
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shuriken_storm < cp_max_spend & buff.slice_and_dice.remains < gcd.max & fight_remains > 6 & combo_points >= 4",
["action"] = "slice_and_dice",
["description"] = "Apply Slice and Dice at 4+ CP if it expires within the next GCD or is not up",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run fully switches to the Stealthed Rotation (by doing so, it forces pooling if nothing is available).",
["criteria"] = "stealthed.all",
["list_name"] = "stealthed",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "20 + talent.vigor.rank * 25 + talent.thistle_tea.enabled * 20 + talent.shadowcraft.enabled * 20",
["description"] = "Used to define when to use stealth CDs or builders",
["var_name"] = "stealth_threshold",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy >= variable.stealth_threshold",
["var_name"] = "stealth_helper",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy.deficit <= variable.stealth_threshold",
["criteria"] = "! talent.vigor.enabled || talent.shadowcraft.enabled",
["var_name"] = "stealth_helper",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Consider using a Stealth CD when reaching the energy threshold",
["criteria"] = "variable.stealth_helper || talent.invigorating_shadowdust.enabled",
["list_name"] = "stealth_cds",
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= cp_max_spend",
["action"] = "call_action_list",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Finish at maximum or close to maximum combo point value",
["criteria"] = "combo_points.deficit <= 1 || fight_remains <= 1 & effective_combo_points >= 3",
["list_name"] = "finish",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shuriken_storm >= 4 & effective_combo_points >= 4",
["action"] = "call_action_list",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use a builder when reaching the energy threshold",
["criteria"] = "energy.deficit <= variable.stealth_threshold",
["list_name"] = "build",
},
{
["enabled"] = true,
["criteria"] = "energy.deficit >= 15 + energy.regen",
["action"] = "arcane_torrent",
["description"] = "Lowest priority in all of the APL because it causes a GCD",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "stealth",
["enabled"] = true,
},
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "3",
["var_name"] = "algethar_puzzle_box_precombat_cast",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "slice_and_dice",
["precombat_seconds"] = "1",
},
},
["finish"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( action.gloomblade.used_for_danse || action.shadowstrike.used_for_danse || action.backstab.used_for_danse || action.shuriken_storm.used_for_danse ) & ( action.eviscerate.used_for_danse || action.black_powder.used_for_danse || action.rupture.used_for_danse ) || ! talent.danse_macabre.enabled",
["description"] = "Finisher  Defines what abilities need to be used for DM stacks before casting Secret Technique.",
["var_name"] = "secret_condition",
},
{
["enabled"] = true,
["criteria"] = "! dot.rupture.ticking & target.time_to_die - remains > 6",
["action"] = "rupture",
["description"] = "Apply Rupture if its not up.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.premeditation.enabled & spell_targets.shuriken_storm < 5",
["var_name"] = "premed_snd_condition",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.all & ! variable.premed_snd_condition & spell_targets.shuriken_storm < 6 & ! buff.shadow_dance.up & buff.slice_and_dice.remains < fight_remains & refreshable",
["action"] = "slice_and_dice",
["description"] = "Refresh Slice and Dice outside of Shadow Dance.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.thistle_tea.up & spell_targets.shuriken_storm = 1 || buff.shadow_dance.up & ( spell_targets.shuriken_storm = 1 || dot.rupture.ticking & spell_targets.shuriken_storm >= 2 )",
["description"] = "Variable to decide when not to use Rupture.",
["var_name"] = "skip_rupture",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.skip_rupture || priority_rotation ) & target.time_to_die - remains > 6 & refreshable",
["action"] = "rupture",
},
{
["enabled"] = true,
["criteria"] = "buff.finality_rupture.up & buff.shadow_dance.up & spell_targets.shuriken_storm <= 4 & ! action.rupture.used_for_danse",
["action"] = "rupture",
["description"] = "Refresh Rupture during Shadow Dance with Finality.",
},
{
["enabled"] = true,
["criteria"] = "variable.secret_condition & cooldown.secret_technique.ready",
["action"] = "cold_blood",
},
{
["enabled"] = true,
["criteria"] = "variable.secret_condition & ( ! talent.cold_blood.enabled || cooldown.cold_blood.remains > buff.shadow_dance.remains - 2 || ! talent.improved_shadow_dance.enabled )",
["action"] = "secret_technique",
["description"] = "Synchronizes Secret to Cold Blood if possible. Defaults to use once a builder and finisher is used.",
},
{
["enabled"] = true,
["action"] = "rupture",
["cycle_targets"] = 1,
["criteria"] = "! variable.skip_rupture & ! priority_rotation & spell_targets.shuriken_storm >= 2 & target.time_to_die >= ( 2 * combo_points ) & refreshable",
["description"] = "Multidotting targets that will live long enough, refresh during pandemic.",
},
{
["enabled"] = true,
["criteria"] = "! variable.skip_rupture & remains < cooldown.symbols_of_death.remains + 10 & cooldown.symbols_of_death.remains <= 5 & target.time_to_die - remains > cooldown.symbols_of_death.remains + 5",
["action"] = "rupture",
["description"] = "Refresh Rupture early if it will expire during Symbols. Do that refresh if SoD gets ready in the next 5s.",
},
{
["enabled"] = true,
["criteria"] = "! priority_rotation & spell_targets >= 3",
["action"] = "black_powder",
},
{
["action"] = "dispatch",
["enabled"] = true,
},
{
["action"] = "eviscerate",
["enabled"] = true,
},
},
["cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! equipped.witherbarks_branch || equipped.witherbarks_branch & cooldown.witherbarks_branch.remains <= 8 || equipped.bandolier_of_twisted_blades || talent.invigorating_shadowdust.enabled )",
["description"] = "Cooldowns  Helper Variable for Flagellation for trinket synchronisation",
["var_name"] = "trinket_conditions",
},
{
["enabled"] = true,
["criteria"] = "! talent.secret_technique.enabled & combo_points >= 5",
["action"] = "cold_blood",
["description"] = "Cold Blood on 5 combo points when not playing Secret Technique",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & target.time_to_die >= 16 & ( buff.perforated_veins.up || ! talent.perforated_veins.enabled )",
["action"] = "sepsis",
},
{
["enabled"] = true,
["action"] = "flagellation",
["cycle_targets"] = 1,
["criteria"] = "variable.snd_condition & combo_points >= 5 & target.time_to_die > 10 & ( variable.trinket_conditions & cooldown.shadow_blades.remains <= 3 || boss & fight_remains <= 28 || cooldown.shadow_blades.remains >= 14 & talent.invigorating_shadowdust.enabled & talent.double_dance.enabled ) & ( ! talent.invigorating_shadowdust.enabled || talent.sepsis.enabled || ! talent.double_dance.enabled || talent.invigorating_shadowdust.rank = 2 & spell_targets.shuriken_storm >= 2 || cooldown.symbols_of_death.remains <= 3 || buff.symbols_of_death.remains > 3 )",
["description"] = "Defines Flagellation use in a stacked manner with trinkets and Shadow Blades",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & ( ! buff.the_rotten.up || ! set_bonus.tier30_2pc ) & buff.symbols_of_death.remains <= 3 & ( ! talent.flagellation.enabled || cooldown.flagellation.remains > 10 || buff.shadow_dance.remains >= 2 & talent.invigorating_shadowdust.enabled || cooldown.flagellation.up & combo_points >= 5 & ! talent.invigorating_shadowdust.enabled )",
["action"] = "symbols_of_death",
["description"] = "Align Symbols of Death to Flagellation.",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & ( combo_points <= 1 || set_bonus.tier31_4pc ) & ( buff.flagellation_buff.up || buff.flagellation_persist.up || ! talent.flagellation.enabled )",
["action"] = "shadow_blades",
["description"] = "Align Shadow Blades to Flagellation.",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & combo_points.deficit >= 3",
["action"] = "echoing_reprimand",
["description"] = "ER during Shadow Dance.",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & buff.symbols_of_death.up & combo_points <= 2 & ! buff.premeditation.up & ( ! talent.flagellation.enabled || cooldown.flagellation.remains > 20 ) & spell_targets.shuriken_storm >= 3",
["action"] = "shuriken_tornado",
["description"] = "Shuriken Tornado with Symbols of Death on 3 and more targets",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & ! buff.shadow_dance.up & ! buff.flagellation_buff.up & ! buff.flagellation_persist.up & ! buff.shadow_blades.up & spell_targets.shuriken_storm <= 2 & ! raid_event.adds.up",
["action"] = "shuriken_tornado",
["description"] = "Shuriken Tornado only outside of cooldowns",
},
{
["enabled"] = true,
["criteria"] = "! buff.shadow_dance.up & boss & fight_remains <= 8 + talent.subterfuge.enabled",
["action"] = "shadow_dance",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & combo_points.deficit >= 3 & ( ! cooldown.shadow_dance.up || talent.double_dance.enabled & buff.shadow_dance.up & ! talent.invigorating_shadowdust.enabled || spell_targets.shuriken_storm < 4 & ! talent.invigorating_shadowdust.enabled || talent.the_rotten.enabled || raid_event.adds.up )",
["action"] = "goremaws_bite",
["description"] = "Goremaws Bite during Shadow Dance if possible.",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & cooldown.thistle_tea.charges_fractional >= 2.5 & buff.shadow_dance.remains >= 4",
["action"] = "thistle_tea",
["description"] = "Thistle Tea during Shadow Dance when close to max stacks.",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & buff.shadow_dance.remains >= 4 & cooldown.secret_technique.remains <= 10",
["action"] = "thistle_tea",
["description"] = "Thistle Tea during Shadow Dance when Secret Techniques is up.",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & ( energy.deficit >= ( 100 ) || ! buff.thistle_tea.up & boss & fight_remains <= ( 6 * cooldown.thistle_tea.charges ) ) & ( cooldown.symbols_of_death.remains >= 3 || buff.symbols_of_death.up ) & combo_points.deficit >= 2",
["action"] = "thistle_tea",
["description"] = "Thistle Tea for energy",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.react || boss & fight_remains < 30 || buff.symbols_of_death.up & ( buff.shadow_blades.up || cooldown.shadow_blades.remains <= 10 )",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.shadow_blades.up || ! talent.shadow_blades.enabled & buff.symbols_of_death.up || boss & fight_remains < 20",
["var_name"] = "racial_sync",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["name"] = "ashes_of_the_embersoul",
["description"] = "Sync specific trinkets to Flagellation or Shadow Dance.",
["criteria"] = "( buff.cold_blood.up || ( ! talent.danse_macabre.enabled & buff.shadow_dance.up || buff.danse_macabre.stack >= 3 ) & ! talent.cold_blood.enabled ) || boss & fight_remains < 10",
["action"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["name"] = "witherbarks_branch",
["action"] = "witherbarks_branch",
["criteria"] = "buff.flagellation_buff.up & talent.invigorating_shadowdust.enabled || buff.shadow_blades.up || equipped.bandolier_of_twisted_blades & raid_event.adds.up",
},
{
["enabled"] = true,
["name"] = "mirror_of_fractured_tomorrows",
["action"] = "mirror_of_fractured_tomorrows",
["criteria"] = "buff.shadow_dance.up & ( target.time_to_die >= 15 || equipped.ashes_of_the_embersoul )",
},
{
["enabled"] = true,
["action"] = "beacon_to_the_beyond",
["use_off_gcd"] = 1,
["name"] = "beacon_to_the_beyond",
["criteria"] = "! stealthed.all & ( buff.deeper_daggers.up || ! talent.deeper_daggers.enabled ) & ( ! raid_event.adds.up || ! equipped.stormeaters_boon || cooldown.stormeaters_boon.remains > 20 )",
},
{
["enabled"] = true,
["action"] = "manic_grieftorch",
["use_off_gcd"] = 1,
["name"] = "manic_grieftorch",
["criteria"] = "! stealthed.all & ( ! raid_event.adds.up || ! equipped.stormeaters_boon || cooldown.stormeaters_boon.remains > 20 )",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.all & ( ! cooldown.mirror_of_fractured_tomorrows.ready || ! equipped.mirror_of_fractured_tomorrows ) & ( ! cooldown.ashes_of_the_embersoul.ready || ! equipped.ashes_of_the_embersoul ) || boss & fight_remains < 10",
["action"] = "use_items",
["description"] = "Default fallback for usable items: Use outside of Stealth/Shadow Dance.",
},
},
["stealth_cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadow_dance.charges_fractional >= 0.75 + talent.double_dance.enabled",
["description"] = "Stealth Cooldowns  Helper Variable for Shadow Dance.",
["var_name"] = "shd_threshold",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! buff.the_rotten.up || ! set_bonus.tier30_2pc ) & ( ! talent.cold_blood.enabled || cooldown.cold_blood.remains < 4 || cooldown.cold_blood.remains > 10 )",
["description"] = "Helper variable to check for Cold Blood and The Rotten buff.",
["var_name"] = "rotten_cb",
},
{
["enabled"] = true,
["criteria"] = "( combo_points.deficit > 1 || buff.shadow_blades.up & talent.invigorating_shadowdust.enabled ) & ! variable.shd_threshold & ( cooldown.flagellation.remains >= 60 || ! talent.flagellation.enabled || boss & fight_remains <= ( 30 * cooldown.vanish.charges ) ) & ( cooldown.symbols_of_death.remains > 3 || ! set_bonus.tier30_2pc ) & ( cooldown.secret_technique.remains >= 10 || ! talent.secret_technique.enabled || cooldown.vanish.charges >= 2 & talent.invigorating_shadowdust.enabled & ( buff.the_rotten.up || ! talent.the_rotten.enabled ) & ! raid_event.adds.up )",
["action"] = "vanish",
["description"] = "Consider Flagellation, Symbols and Secret Technique cooldown when using Vanish with Shadow Dust.",
},
{
["enabled"] = true,
["for_next"] = 1,
["description"] = "Pool for Shadowmeld unless we are about to cap on Dance charges.",
["criteria"] = "race.night_elf",
["extra_amount"] = "40",
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "energy >= 40 & energy.deficit >= 10 & ! variable.shd_threshold & combo_points.deficit > 4",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points.deficit >= 3",
["var_name"] = "shd_combo_points",
},
{
["enabled"] = true,
["criteria"] = "( dot.rupture.ticking || talent.invigorating_shadowdust.enabled ) & variable.rotten_cb & ( ! talent.the_first_dance.enabled || combo_points.deficit >= 4 || buff.shadow_blades.up ) & ( variable.shd_combo_points & variable.shd_threshold || ( buff.shadow_blades.up || cooldown.symbols_of_death.up & ! talent.sepsis.enabled || buff.symbols_of_death.remains >= 4 & ! set_bonus.tier30_2pc || ! buff.symbols_of_death.remains & set_bonus.tier30_2pc ) & cooldown.secret_technique.remains < 10 + 12 * ( ! talent.invigorating_shadowdust.enabled || set_bonus.tier30_2pc ) )",
["action"] = "shadow_dance",
["description"] = "Shadow dance when Rupture is up and synchronize depending on talent choice.",
},
},
["build"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets >= 2 + ( talent.gloomblade.enabled & buff.lingering_shadow.remains >= 6 || buff.perforated_veins.up )",
["action"] = "shuriken_storm",
["description"] = "Builders  Keep using Shuriken Storm for Lingering Shadows on high stacks.",
},
{
["action"] = "gloomblade",
["enabled"] = true,
},
{
["action"] = "backstab",
["enabled"] = true,
},
},
},
["version"] = 20240728,
["warnings"] = "The import for 'stealthed' required some automated changes.\nLine 4: Converted 'talent.deeper_stratagem' to 'talent.deeper_stratagem.enabled' (1x).\nLine 4: Converted 'talent.secret_stratagem' to 'talent.secret_stratagem.enabled' (1x).\nLine 5: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 6: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 7: Converted 'talent.thistle_tea' to 'talent.thistle_tea.enabled' (1x).\nLine 7: Converted 'talent.shadowcraft' to 'talent.shadowcraft.enabled' (1x).\nLine 9: Converted 'talent.vigor' to 'talent.vigor.enabled' (1x).\nLine 9: Converted 'talent.shadowcraft' to 'talent.shadowcraft.enabled' (1x).\nLine 10: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\n\nThe import for 'finish' required some automated changes.\nLine 1: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 9: Converted 'talent.cold_blood' to 'talent.cold_blood.enabled' (1x).\nLine 9: Converted 'talent.improved_shadow_dance' to 'talent.improved_shadow_dance.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'trinket.witherbarks_branch.cooldown.remains' to 'cooldown.witherbarks_branch.remains'.\nLine 1: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 2: Converted 'talent.secret_technique' to 'talent.secret_technique.enabled' (1x).\nLine 3: Converted 'talent.perforated_veins' to 'talent.perforated_veins.enabled' (1x).\nLine 4: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 4: Converted 'talent.double_dance' to 'talent.double_dance.enabled' (1x).\nLine 4: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 4: Converted 'talent.sepsis' to 'talent.sepsis.enabled' (1x).\nLine 4: Converted 'talent.double_dance' to 'talent.double_dance.enabled' (1x).\nLine 5: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 5: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 5: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 6: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 8: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 11: Converted 'talent.double_dance' to 'talent.double_dance.enabled' (1x).\nLine 11: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 11: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 11: Converted 'talent.the_rotten' to 'talent.the_rotten.enabled' (1x).\nLine 16: Converted 'talent.shadow_blades' to 'talent.shadow_blades.enabled' (1x).\nLine 21: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 21: Converted 'talent.cold_blood' to 'talent.cold_blood.enabled' (1x).\nLine 22: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 24: Converted 'talent.deeper_daggers' to 'talent.deeper_daggers.enabled' (1x).\nLine 24: Converted 'trinket.stormeaters_boon.cooldown.remains' to 'cooldown.stormeaters_boon.remains'.\nLine 25: Converted 'trinket.stormeaters_boon.cooldown.remains' to 'cooldown.stormeaters_boon.remains'.\nLine 26: Converted 'trinket.mirror_of_fractured_tomorrows.cooldown.ready' to 'cooldown.mirror_of_fractured_tomorrows.ready'.\nLine 26: Converted 'trinket.ashes_of_the_embersoul.cooldown.ready' to 'cooldown.ashes_of_the_embersoul.ready'.\n\nThe import for 'stealth_cds' required some automated changes.\nLine 1: Converted 'talent.double_dance' to 'talent.double_dance.enabled' (1x).\nLine 2: Converted 'talent.cold_blood' to 'talent.cold_blood.enabled' (1x).\nLine 3: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 3: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 3: Converted 'talent.secret_technique' to 'talent.secret_technique.enabled' (1x).\nLine 3: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 3: Converted 'talent.the_rotten' to 'talent.the_rotten.enabled' (1x).\nLine 7: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 7: Converted 'talent.the_first_dance' to 'talent.the_first_dance.enabled' (1x).\nLine 7: Converted 'talent.sepsis' to 'talent.sepsis.enabled' (1x).\nLine 7: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 1: Converted 'talent.gloomblade' to 'talent.gloomblade.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/stealth\nactions.precombat+=/apply_poison\nactions.precombat+=/variable,name=algethar_puzzle_box_precombat_cast,value=3\nactions.precombat+=/use_item,name=algethar_puzzle_box\nactions.precombat+=/slice_and_dice,precombat_seconds=1\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Used to determine whether cooldowns wait for SnD based on targets.\nactions+=/variable,name=snd_condition,value=buff.slice_and_dice.up||spell_targets.shuriken_storm>=cp_max_spend\n# Check CDs at first\nactions+=/call_action_list,name=cds\n# Apply Slice and Dice at 4+ CP if it expires within the next GCD or is not up\nactions+=/slice_and_dice,if=spell_targets.shuriken_storm<cp_max_spend&buff.slice_and_dice.remains<gcd.max&fight_remains>6&combo_points>=4\n# Run fully switches to the Stealthed Rotation (by doing so, it forces pooling if nothing is available).\nactions+=/run_action_list,name=stealthed,if=stealthed.all\n# Used to define when to use stealth CDs or builders\nactions+=/variable,name=stealth_threshold,value=20+talent.vigor.rank*25+talent.thistle_tea*20+talent.shadowcraft*20\nactions+=/variable,name=stealth_helper,value=energy>=variable.stealth_threshold\nactions+=/variable,name=stealth_helper,value=energy.deficit<=variable.stealth_threshold,if=!talent.vigor||talent.shadowcraft\n# Consider using a Stealth CD when reaching the energy threshold\nactions+=/call_action_list,name=stealth_cds,if=variable.stealth_helper||talent.invigorating_shadowdust\nactions+=/call_action_list,name=finish,if=effective_combo_points>=cp_max_spend\n# Finish at maximum or close to maximum combo point value\nactions+=/call_action_list,name=finish,if=combo_points.deficit<=1||fight_remains<=1&effective_combo_points>=3\nactions+=/call_action_list,name=finish,if=spell_targets.shuriken_storm>=4&effective_combo_points>=4\n# Use a builder when reaching the energy threshold\nactions+=/call_action_list,name=build,if=energy.deficit<=variable.stealth_threshold\n# Lowest priority in all of the APL because it causes a GCD\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Builders  Keep using Shuriken Storm for Lingering Shadows on high stacks.\nactions.build+=/shuriken_storm,if=spell_targets>=2+(talent.gloomblade&buff.lingering_shadow.remains>=6||buff.perforated_veins.up)\nactions.build+=/gloomblade\nactions.build+=/backstab\n\n# Cooldowns  Helper Variable for Flagellation for trinket synchronisation\nactions.cds+=/variable,name=trinket_conditions,value=(!equipped.witherbarks_branch||equipped.witherbarks_branch&trinket.witherbarks_branch.cooldown.remains<=8||equipped.bandolier_of_twisted_blades||talent.invigorating_shadowdust)\n# Cold Blood on 5 combo points when not playing Secret Technique\nactions.cds+=/cold_blood,if=!talent.secret_technique&combo_points>=5\nactions.cds+=/sepsis,if=variable.snd_condition&target.time_to_die>=16&(buff.perforated_veins.up||!talent.perforated_veins)\n# Defines Flagellation use in a stacked manner with trinkets and Shadow Blades\nactions.cds+=/flagellation,cycle_targets=1,if=variable.snd_condition&combo_points>=5&target.time_to_die>10&(variable.trinket_conditions&cooldown.shadow_blades.remains<=3||boss&fight_remains<=28||cooldown.shadow_blades.remains>=14&talent.invigorating_shadowdust&talent.double_dance)&(!talent.invigorating_shadowdust||talent.sepsis||!talent.double_dance||talent.invigorating_shadowdust.rank=2&spell_targets.shuriken_storm>=2||cooldown.symbols_of_death.remains<=3||buff.symbols_of_death.remains>3)\n# Align Symbols of Death to Flagellation.\nactions.cds+=/symbols_of_death,if=variable.snd_condition&(!buff.the_rotten.up||!set_bonus.tier30_2pc)&buff.symbols_of_death.remains<=3&(!talent.flagellation||cooldown.flagellation.remains>10||buff.shadow_dance.remains>=2&talent.invigorating_shadowdust||cooldown.flagellation.up&combo_points>=5&!talent.invigorating_shadowdust)\n# Align Shadow Blades to Flagellation.\nactions.cds+=/shadow_blades,if=variable.snd_condition&(combo_points<=1||set_bonus.tier31_4pc)&(buff.flagellation_buff.up||buff.flagellation_persist.up||!talent.flagellation)\n# ER during Shadow Dance.\nactions.cds+=/echoing_reprimand,if=variable.snd_condition&combo_points.deficit>=3\n# Shuriken Tornado with Symbols of Death on 3 and more targets\nactions.cds+=/shuriken_tornado,if=variable.snd_condition&buff.symbols_of_death.up&combo_points<=2&!buff.premeditation.up&(!talent.flagellation||cooldown.flagellation.remains>20)&spell_targets.shuriken_storm>=3\n# Shuriken Tornado only outside of cooldowns\nactions.cds+=/shuriken_tornado,if=variable.snd_condition&!buff.shadow_dance.up&!buff.flagellation_buff.up&!buff.flagellation_persist.up&!buff.shadow_blades.up&spell_targets.shuriken_storm<=2&!raid_event.adds.up\nactions.cds+=/shadow_dance,if=!buff.shadow_dance.up&boss&fight_remains<=8+talent.subterfuge.enabled\n# Goremaws Bite during Shadow Dance if possible.\nactions.cds+=/goremaws_bite,if=variable.snd_condition&combo_points.deficit>=3&(!cooldown.shadow_dance.up||talent.double_dance&buff.shadow_dance.up&!talent.invigorating_shadowdust||spell_targets.shuriken_storm<4&!talent.invigorating_shadowdust||talent.the_rotten||raid_event.adds.up)\n# Thistle Tea during Shadow Dance when close to max stacks.\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&cooldown.thistle_tea.charges_fractional>=2.5&buff.shadow_dance.remains>=4\n# Thistle Tea during Shadow Dance when Secret Techniques is up.\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&buff.shadow_dance.remains>=4&cooldown.secret_technique.remains<=10\n# Thistle Tea for energy\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(energy.deficit>=(100)||!buff.thistle_tea.up&boss&fight_remains<=(6*cooldown.thistle_tea.charges))&(cooldown.symbols_of_death.remains>=3||buff.symbols_of_death.up)&combo_points.deficit>=2\nactions.cds+=/potion,if=buff.bloodlust.react||boss&fight_remains<30||buff.symbols_of_death.up&(buff.shadow_blades.up||cooldown.shadow_blades.remains<=10)\nactions.cds+=/variable,name=racial_sync,value=buff.shadow_blades.up||!talent.shadow_blades&buff.symbols_of_death.up||boss&fight_remains<20\nactions.cds+=/blood_fury,if=variable.racial_sync\nactions.cds+=/berserking,if=variable.racial_sync\nactions.cds+=/fireblood,if=variable.racial_sync\nactions.cds+=/ancestral_call,if=variable.racial_sync\n# Sync specific trinkets to Flagellation or Shadow Dance.\nactions.cds+=/use_item,name=ashes_of_the_embersoul,if=(buff.cold_blood.up||(!talent.danse_macabre&buff.shadow_dance.up||buff.danse_macabre.stack>=3)&!talent.cold_blood)||boss&fight_remains<10\nactions.cds+=/use_item,name=witherbarks_branch,if=buff.flagellation_buff.up&talent.invigorating_shadowdust||buff.shadow_blades.up||equipped.bandolier_of_twisted_blades&raid_event.adds.up\nactions.cds+=/use_item,name=mirror_of_fractured_tomorrows,if=buff.shadow_dance.up&(target.time_to_die>=15||equipped.ashes_of_the_embersoul)\nactions.cds+=/use_item,name=beacon_to_the_beyond,use_off_gcd=1,if=!stealthed.all&(buff.deeper_daggers.up||!talent.deeper_daggers)&(!raid_event.adds.up||!equipped.stormeaters_boon||trinket.stormeaters_boon.cooldown.remains>20)\nactions.cds+=/use_item,name=manic_grieftorch,use_off_gcd=1,if=!stealthed.all&(!raid_event.adds.up||!equipped.stormeaters_boon||trinket.stormeaters_boon.cooldown.remains>20)\n## PI\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.shadow_dance.up\n# Default fallback for usable items: Use outside of Stealth/Shadow Dance.\nactions.cds+=/use_items,if=!stealthed.all&(!trinket.mirror_of_fractured_tomorrows.cooldown.ready||!equipped.mirror_of_fractured_tomorrows)&(!trinket.ashes_of_the_embersoul.cooldown.ready||!equipped.ashes_of_the_embersoul)||boss&fight_remains<10\n\n# Finisher  Defines what abilities need to be used for DM stacks before casting Secret Technique.\nactions.finish+=/variable,name=secret_condition,value=(action.gloomblade.used_for_danse||action.shadowstrike.used_for_danse||action.backstab.used_for_danse||action.shuriken_storm.used_for_danse)&(action.eviscerate.used_for_danse||action.black_powder.used_for_danse||action.rupture.used_for_danse)||!talent.danse_macabre\n# Apply Rupture if its not up.\nactions.finish+=/rupture,if=!dot.rupture.ticking&target.time_to_die-remains>6\nactions.finish+=/variable,name=premed_snd_condition,value=talent.premeditation.enabled&spell_targets.shuriken_storm<5\n# Refresh Slice and Dice outside of Shadow Dance.\nactions.finish+=/slice_and_dice,if=!stealthed.all&!variable.premed_snd_condition&spell_targets.shuriken_storm<6&!buff.shadow_dance.up&buff.slice_and_dice.remains<fight_remains&refreshable\n# Variable to decide when not to use Rupture.\nactions.finish+=/variable,name=skip_rupture,value=buff.thistle_tea.up&spell_targets.shuriken_storm=1||buff.shadow_dance.up&(spell_targets.shuriken_storm=1||dot.rupture.ticking&spell_targets.shuriken_storm>=2)\nactions.finish+=/rupture,if=(!variable.skip_rupture||priority_rotation)&target.time_to_die-remains>6&refreshable\n# Refresh Rupture during Shadow Dance with Finality.\nactions.finish+=/rupture,if=buff.finality_rupture.up&buff.shadow_dance.up&spell_targets.shuriken_storm<=4&!action.rupture.used_for_danse\nactions.finish+=/cold_blood,if=variable.secret_condition&cooldown.secret_technique.ready\n# Synchronizes Secret to Cold Blood if possible. Defaults to use once a builder and finisher is used.\nactions.finish+=/secret_technique,if=variable.secret_condition&(!talent.cold_blood||cooldown.cold_blood.remains>buff.shadow_dance.remains-2||!talent.improved_shadow_dance)\n# Multidotting targets that will live long enough, refresh during pandemic.\nactions.finish+=/rupture,cycle_targets=1,if=!variable.skip_rupture&!priority_rotation&spell_targets.shuriken_storm>=2&target.time_to_die>=(2*combo_points)&refreshable\n# Refresh Rupture early if it will expire during Symbols. Do that refresh if SoD gets ready in the next 5s.\nactions.finish+=/rupture,if=!variable.skip_rupture&remains<cooldown.symbols_of_death.remains+10&cooldown.symbols_of_death.remains<=5&target.time_to_die-remains>cooldown.symbols_of_death.remains+5\nactions.finish+=/black_powder,if=!priority_rotation&spell_targets>=3\nactions.finish+=/coup_de_grace\nactions.finish+=/eviscerate\n\n# Stealth Cooldowns  Helper Variable for Shadow Dance.\nactions.stealth_cds+=/variable,name=shd_threshold,value=cooldown.shadow_dance.charges_fractional>=0.75+talent.double_dance\n# Helper variable to check for Cold Blood and The Rotten buff.\nactions.stealth_cds+=/variable,name=rotten_cb,value=(!buff.the_rotten.up||!set_bonus.tier30_2pc)&(!talent.cold_blood||cooldown.cold_blood.remains<4||cooldown.cold_blood.remains>10)\n# Consider Flagellation, Symbols and Secret Technique cooldown when using Vanish with Shadow Dust.\nactions.stealth_cds+=/vanish,if=(combo_points.deficit>1||buff.shadow_blades.up&talent.invigorating_shadowdust)&!variable.shd_threshold&(cooldown.flagellation.remains>=60||!talent.flagellation||boss&fight_remains<=(30*cooldown.vanish.charges))&(cooldown.symbols_of_death.remains>3||!set_bonus.tier30_2pc)&(cooldown.secret_technique.remains>=10||!talent.secret_technique||cooldown.vanish.charges>=2&talent.invigorating_shadowdust&(buff.the_rotten.up||!talent.the_rotten)&!raid_event.adds.up)\n# Pool for Shadowmeld unless we are about to cap on Dance charges.\nactions.stealth_cds+=/pool_resource,for_next=1,extra_amount=40,if=race.night_elf\nactions.stealth_cds+=/shadowmeld,if=energy>=40&energy.deficit>=10&!variable.shd_threshold&combo_points.deficit>4\nactions.stealth_cds+=/variable,name=shd_combo_points,value=combo_points.deficit>=3\n# Shadow dance when Rupture is up and synchronize depending on talent choice.\nactions.stealth_cds+=/shadow_dance,if=(dot.rupture.ticking||talent.invigorating_shadowdust)&variable.rotten_cb&(!talent.the_first_dance||combo_points.deficit>=4||buff.shadow_blades.up)&(variable.shd_combo_points&variable.shd_threshold||(buff.shadow_blades.up||cooldown.symbols_of_death.up&!talent.sepsis||buff.symbols_of_death.remains>=4&!set_bonus.tier30_2pc||!buff.symbols_of_death.remains&set_bonus.tier30_2pc)&cooldown.secret_technique.remains<10+12*(!talent.invigorating_shadowdust||set_bonus.tier30_2pc))\n\n# Stealthed Rotation  Always Strike from Stealth\nactions.stealthed+=/shadowstrike,if=buff.stealth.up&(spell_targets.shuriken_storm<4||priority_rotation)\n# Finish when on Animacharged combo points or max combo points.\nactions.stealthed+=/call_action_list,name=finish,if=effective_combo_points>=cp_max_spend\nactions.stealthed+=/call_action_list,name=finish,if=buff.shuriken_tornado.up&combo_points.deficit<=2\nactions.stealthed+=/call_action_list,name=finish,if=combo_points.deficit<=1+(talent.deeper_stratagem||talent.secret_stratagem)\n# Backstab for Danse Macabre stack generation during Shadowblades.\nactions.stealthed+=/backstab,if=!buff.premeditation.up&buff.shadow_dance.remains>=3&buff.shadow_blades.up&!used_for_danse&talent.danse_macabre&spell_targets.shuriken_storm<=3&!buff.the_rotten.up\n# Gloomblade for Danse Macabre stack generation during Shadowblades.\nactions.stealthed+=/gloomblade,if=!buff.premeditation.up&buff.shadow_dance.remains>=3&buff.shadow_blades.up&!used_for_danse&talent.danse_macabre&spell_targets.shuriken_storm<=4\n# Shadow Strike for Danse Macabre stack generation during Shadowblades.\nactions.stealthed+=/shadowstrike,if=!used_for_danse&buff.shadow_blades.up\nactions.stealthed+=/shuriken_storm,if=!buff.premeditation.up&spell_targets>=4\nactions.stealthed+=/shadowstrike",
["author"] = "SimC",
},
["Havoc"] = {
["source"] = "SimulationCraft",
["builtIn"] = true,
["date"] = 20270723,
["spec"] = 577,
["desc"] = "2024-07-23: The War Within",
["profile"] = "actions.precombat+=/variable,name=major_trinket,value=trinket.1.cooldown.duration=180||trinket.2.cooldown.duration=180\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)\nactions.precombat+=/arcane_torrent\nactions.precombat+=/immolation_aura\n\n## actions+=/retarget_auto_attack,line_cd=1,target_if=mindebuff.burning_wound.remains,if=talent.burning_wound&talent.demon_blades&active_dot.burning_wound<(spell_targets>?3)\n## actions+=/retarget_auto_attack,line_cd=1,target_if=min!target.is_boss,if=talent.burning_wound&talent.demon_blades&active_dot.burning_wound=(spell_targets>?3)\nactions+=/variable,name=fel_barrage,op=set,value=talent.fel_barrage&(cooldown.fel_barrage.remains<gcd.max*7&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in<gcd.max*7||raid_event.adds.in>90)&(cooldown.metamorphosis.remains||active_enemies>2)||buff.fel_barrage.up)&!(active_enemies=1&!raid_event.adds.exists)\nactions+=/disrupt\nactions+=/call_action_list,name=cooldown\nactions+=/fel_rush,if=buff.unbound_chaos.up&buff.unbound_chaos.remains<gcd.max*2\n## actions+=/pick_up_fragment,mode=nearest,type=lesser,if=fury.deficit>=45&(!cooldown.eye_beam.ready||fury<30)\nactions+=/run_action_list,name=opener,if=(cooldown.eye_beam.up||cooldown.metamorphosis.up)&time<15&(raid_event.adds.in>40)\nactions+=/run_action_list,name=fel_barrage,if=variable.fel_barrage&raid_event.adds.up\nactions+=/immolation_aura,if=active_enemies>2&talent.ragefire&buff.unbound_chaos.down&(!talent.fel_barrage||cooldown.fel_barrage.remains>recharge_time)&debuff.essence_break.down\nactions+=/immolation_aura,if=active_enemies>2&talent.ragefire&raid_event.adds.up&raid_event.adds.remains<15&raid_event.adds.remains>5&debuff.essence_break.down\nactions+=/fel_rush,if=buff.unbound_chaos.up&active_enemies>2&(!talent.inertia||cooldown.eye_beam.remains+2>buff.unbound_chaos.remains)\nactions+=/vengeful_retreat,use_off_gcd=1,if=talent.initiative&(cooldown.eye_beam.remains>15&gcd.remains<0.3||gcd.remains<0.1&cooldown.eye_beam.remains<=gcd.remains&(cooldown.metamorphosis.remains>10||cooldown.blade_dance.remains<gcd.max*2))&time>4\nactions+=/run_action_list,name=fel_barrage,if=variable.fel_barrage||!talent.demon_blades&talent.fel_barrage&(buff.fel_barrage.up||cooldown.fel_barrage.up)&buff.metamorphosis.down\nactions+=/run_action_list,name=meta,if=buff.metamorphosis.up\nactions+=/fel_rush,if=buff.unbound_chaos.up&talent.inertia&buff.inertia.down&cooldown.blade_dance.remains<4&cooldown.eye_beam.remains>5&(action.immolation_aura.charges>0||action.immolation_aura.recharge_time+2<cooldown.eye_beam.remains||cooldown.eye_beam.remains>buff.unbound_chaos.remains-2)\nactions+=/fel_rush,if=talent.momentum&cooldown.eye_beam.remains<gcd.max*2\nactions+=/immolation_aura,if=buff.unbound_chaos.down&full_recharge_time<gcd.max*2&(raid_event.adds.in>full_recharge_time||active_enemies>desired_targets)\nactions+=/immolation_aura,if=immolation_aura,if=active_enemies>desired_targets&buff.unbound_chaos.down&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions+=/immolation_aura,if=talent.inertia&buff.unbound_chaos.down&cooldown.eye_beam.remains<5&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions+=/immolation_aura,if=talent.inertia&buff.inertia.down&buff.unbound_chaos.down&recharge_time+5<cooldown.eye_beam.remains&cooldown.blade_dance.remains&cooldown.blade_dance.remains<4&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)&charges_fractional>1.00\nactions+=/immolation_aura,if=boss&fight_remains<15&cooldown.blade_dance.remains\nactions+=/eye_beam,if=!talent.essence_break&(!talent.chaotic_transformation||cooldown.metamorphosis.remains<5+3*talent.shattered_destiny||cooldown.metamorphosis.remains>15)&(active_enemies>desired_targets*2||raid_event.adds.in>30-talent.cycle_of_hatred.rank*13)\nactions+=/eye_beam,if=talent.essence_break&(cooldown.essence_break.remains<gcd.max*2+5*talent.shattered_destiny||talent.shattered_destiny&cooldown.essence_break.remains>10)&(cooldown.blade_dance.remains<7||raid_event.adds.up)&(!talent.initiative||cooldown.vengeful_retreat.remains>10||raid_event.adds.up)&(active_enemies+3>=desired_targets+raid_event.adds.count||raid_event.adds.in>30-talent.cycle_of_hatred.rank*6)&(!talent.inertia||buff.unbound_chaos.up||action.immolation_aura.charges=0&action.immolation_aura.recharge_time>5)&(!raid_event.adds.up||raid_event.adds.remains>8)||boss&fight_remains<10\nactions+=/blade_dance,if=cooldown.eye_beam.remains>gcd.max||cooldown.eye_beam.up\nactions+=/glaive_tempest,if=active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>10\nactions+=/sigil_of_flame,if=active_enemies>3\nactions+=/chaos_strike,if=debuff.essence_break.up\nactions+=/felblade\nactions+=/throw_glaive,if=full_recharge_time<=cooldown.blade_dance.remains&cooldown.metamorphosis.remains>5&talent.soulscar&set_bonus.tier31_2pc\nactions+=/throw_glaive,if=!set_bonus.tier31_2pc&(active_enemies>1||talent.soulscar)\nactions+=/chaos_strike,if=cooldown.eye_beam.remains>gcd.max*2||fury>80\nactions+=/immolation_aura,if=!talent.inertia&(raid_event.adds.in>full_recharge_time||active_enemies>desired_targets&active_enemies>2)\nactions+=/sigil_of_flame,if=buff.out_of_range.down&debuff.essence_break.down&(!talent.fel_barrage||cooldown.fel_barrage.remains>25||(active_enemies=1&!raid_event.adds.exists))\nactions+=/demons_bite\nactions+=/fel_rush,if=buff.unbound_chaos.down&recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)\nactions+=/arcane_torrent,if=buff.out_of_range.down&debuff.essence_break.down&fury<100\n\nactions.meta+=/death_sweep,if=buff.metamorphosis.remains<gcd.max\nactions.meta+=/annihilation,if=buff.metamorphosis.remains<gcd.max\nactions.meta+=/fel_rush,if=buff.unbound_chaos.up&talent.inertia\nactions.meta+=/fel_rush,if=talent.momentum&buff.momentum.remains<gcd.max*2\nactions.meta+=/annihilation,if=buff.inner_demon.up&(cooldown.eye_beam.remains<gcd.max*3&cooldown.blade_dance.remains||cooldown.metamorphosis.remains<gcd.max*3)\nactions.meta+=/essence_break,if=fury>20&(cooldown.metamorphosis.remains>10||cooldown.blade_dance.remains<gcd.max*2)&(buff.unbound_chaos.down||buff.inertia.up||!talent.inertia)||boss&fight_remains<10\nactions.meta+=/immolation_aura,if=debuff.essence_break.down&cooldown.blade_dance.remains>gcd.max+0.5&buff.unbound_chaos.down&talent.inertia&buff.inertia.down&full_recharge_time+3<cooldown.eye_beam.remains&buff.metamorphosis.remains>5\nactions.meta+=/death_sweep\nactions.meta+=/eye_beam,if=debuff.essence_break.down&buff.inner_demon.down\nactions.meta+=/glaive_tempest,if=debuff.essence_break.down&(cooldown.blade_dance.remains>gcd.max*2||fury>60)&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>10)\nactions.meta+=/sigil_of_flame,if=active_enemies>2\nactions.meta+=/annihilation,if=cooldown.blade_dance.remains>gcd.max*2||fury>60||buff.metamorphosis.remains<5&cooldown.felblade.up\nactions.meta+=/sigil_of_flame,if=buff.metamorphosis.remains>5\nactions.meta+=/felblade\nactions.meta+=/sigil_of_flame,if=debuff.essence_break.down\nactions.meta+=/immolation_aura,if=buff.out_of_range.down&recharge_time<(cooldown.eye_beam.remains<?buff.metamorphosis.remains)&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions.meta+=/fel_rush,if=talent.momentum\nactions.meta+=/fel_rush,if=buff.unbound_chaos.down&recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&buff.out_of_range.down\nactions.meta+=/demons_bite\n\nactions.cooldown+=/metamorphosis,if=(!talent.initiative||cooldown.vengeful_retreat.remains)&((!talent.demonic||prev_gcd.1.death_sweep||prev_gcd.2.death_sweep||prev_gcd.3.death_sweep)&cooldown.eye_beam.remains&(!talent.essence_break||debuff.essence_break.up)&buff.fel_barrage.down&(raid_event.adds.in>40||(raid_event.adds.remains>8||!talent.fel_barrage)&active_enemies>2)||!talent.chaotic_transformation||boss&fight_remains<30)\nactions.cooldown+=/potion,if=boss&fight_remains<35||buff.metamorphosis.up\n## actions.cooldown+=/invoke_external_buff,name=power_infusion,if=buff.metamorphosis.up||boss&fight_remains<=20\nactions.cooldown+=/use_item,slot=trinket1,use_off_gcd=1,if=((cooldown.eye_beam.remains<gcd.max&active_enemies>1||buff.metamorphosis.up)&(raid_event.adds.in>trinket.1.cooldown.duration-15||raid_event.adds.remains>8)||!trinket.1.has_buff.any||boss&fight_remains<25)&(!equipped.witherbarks_branch||trinket.2.cooldown.remains>20)&time>0\nactions.cooldown+=/use_item,slot=trinket2,use_off_gcd=1,if=((cooldown.eye_beam.remains<gcd.max&active_enemies>1||buff.metamorphosis.up)&(raid_event.adds.in>trinket.2.cooldown.duration-15||raid_event.adds.remains>8)||!trinket.2.has_buff.any||boss&fight_remains<25)&(!equipped.witherbarks_branch||trinket.1.cooldown.remains>20)&time>0\nactions.cooldown+=/use_item,name=witherbarks_branch,if=(talent.essence_break&cooldown.essence_break.remains<gcd.max||!talent.essence_break)&(active_enemies+3>=desired_targets+raid_event.adds.count||raid_event.adds.in>105)||boss&fight_remains<25\nactions.cooldown+=/the_hunt,if=debuff.essence_break.down&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>(1+!set_bonus.tier31_2pc)*45)&time>5\nactions.cooldown+=/sigil_of_spite,if=debuff.essence_break.down\n\nactions.opener+=/use_items\nactions.opener+=/vengeful_retreat,if=prev_gcd.1.death_sweep\nactions.opener+=/metamorphosis,if=prev_gcd.1.death_sweep||(!talent.chaotic_transformation)&(!talent.initiative||cooldown.vengeful_retreat.remains>2)||!talent.demonic\nactions.opener+=/felblade,if=debuff.essence_break.down,line_cd=60\nactions.opener+=/potion\nactions.opener+=/immolation_aura,if=charges=2&buff.unbound_chaos.down&(buff.inertia.down||active_enemies>2)\nactions.opener+=/annihilation,if=buff.inner_demon.up&(!talent.chaotic_transformation||cooldown.metamorphosis.up)\nactions.opener+=/eye_beam,if=debuff.essence_break.down&buff.inner_demon.down&(!buff.metamorphosis.up||cooldown.blade_dance.remains)\nactions.opener+=/fel_rush,if=talent.inertia&(buff.inertia.down||active_enemies>2)&buff.unbound_chaos.up\nactions.opener+=/the_hunt,if=active_enemies>desired_targets||raid_event.adds.in>40+50*!set_bonus.tier31_2pc\nactions.opener+=/essence_break\nactions.opener+=/death_sweep\nactions.opener+=/annihilation\nactions.opener+=/demons_bite\n\nactions.fel_barrage+=/variable,name=generator_up,op=set,value=cooldown.felblade.remains<gcd.max||cooldown.sigil_of_flame.remains<gcd.max\nactions.fel_barrage+=/variable,name=fury_gen,op=set,value=1%(2.6*attack_haste)*12+buff.immolation_aura.stack*6+buff.tactical_retreat.up*10\nactions.fel_barrage+=/variable,name=gcd_drain,op=set,value=gcd.max*32\nactions.fel_barrage+=/annihilation,if=buff.inner_demon.up\nactions.fel_barrage+=/eye_beam,if=buff.fel_barrage.down&(active_enemies>1&raid_event.adds.up||raid_event.adds.in>40)\nactions.fel_barrage+=/essence_break,if=buff.fel_barrage.down&buff.metamorphosis.up\nactions.fel_barrage+=/death_sweep,if=buff.fel_barrage.down\nactions.fel_barrage+=/immolation_aura,if=buff.unbound_chaos.down&(active_enemies>2||buff.fel_barrage.up)\nactions.fel_barrage+=/glaive_tempest,if=buff.fel_barrage.down&active_enemies>1\nactions.fel_barrage+=/blade_dance,if=buff.fel_barrage.down\nactions.fel_barrage+=/fel_barrage,if=fury>100&(raid_event.adds.in>90||raid_event.adds.in<gcd.max||raid_event.adds.remains>4&active_enemies>2)\nactions.fel_barrage+=/fel_rush,if=buff.unbound_chaos.up&fury>20&buff.fel_barrage.up\nactions.fel_barrage+=/sigil_of_flame,if=fury.deficit>40&buff.fel_barrage.up\nactions.fel_barrage+=/felblade,if=buff.fel_barrage.up&fury.deficit>40\nactions.fel_barrage+=/death_sweep,if=fury-variable.gcd_drain-35>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fel_barrage+=/glaive_tempest,if=fury-variable.gcd_drain-30>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fel_barrage+=/blade_dance,if=fury-variable.gcd_drain-35>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fel_barrage+=/arcane_torrent,if=fury.deficit>40&buff.fel_barrage.up\nactions.fel_barrage+=/fel_rush,if=buff.unbound_chaos.up\nactions.fel_barrage+=/the_hunt,if=fury>40&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>(1+set_bonus.tier31_2pc)*40)\nactions.fel_barrage+=/demons_bite",
["version"] = 20270723,
["warnings"] = "The import for 'opener' required some automated changes.\nLine 3: Converted 'talent.chaotic_transformation' to 'talent.chaotic_transformation.enabled' (1x).\nLine 3: Converted 'talent.initiative' to 'talent.initiative.enabled' (1x).\nLine 3: Converted 'talent.demonic' to 'talent.demonic.enabled' (1x).\nLine 7: Converted 'talent.chaotic_transformation' to 'talent.chaotic_transformation.enabled' (1x).\nLine 9: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 1: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\nLine 7: Converted 'talent.ragefire' to 'talent.ragefire.enabled' (1x).\nLine 7: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\nLine 8: Converted 'talent.ragefire' to 'talent.ragefire.enabled' (1x).\nLine 9: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 10: Converted 'talent.initiative' to 'talent.initiative.enabled' (1x).\nLine 11: Converted 'talent.demon_blades' to 'talent.demon_blades.enabled' (1x).\nLine 11: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\nLine 13: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 14: Converted 'talent.momentum' to 'talent.momentum.enabled' (1x).\nLine 17: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 18: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 20: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nLine 20: Converted 'talent.chaotic_transformation' to 'talent.chaotic_transformation.enabled' (1x).\nLine 20: Converted 'talent.shattered_destiny' to 'talent.shattered_destiny.enabled' (1x).\nLine 21: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nLine 21: Converted 'talent.shattered_destiny' to 'talent.shattered_destiny.enabled' (1x).\nLine 21: Converted 'talent.shattered_destiny' to 'talent.shattered_destiny.enabled' (1x).\nLine 21: Converted 'talent.initiative' to 'talent.initiative.enabled' (1x).\nLine 21: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 27: Converted 'talent.soulscar' to 'talent.soulscar.enabled' (1x).\nLine 28: Converted 'talent.soulscar' to 'talent.soulscar.enabled' (1x).\nLine 30: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 31: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 1: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 1: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\n\nThe import for 'meta' required some automated changes.\nLine 3: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 4: Converted 'talent.momentum' to 'talent.momentum.enabled' (1x).\nLine 6: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 7: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 17: Converted 'talent.momentum' to 'talent.momentum.enabled' (1x).\n\nThe import for 'cooldown' required some automated changes.\nLine 1: Converted 'talent.initiative' to 'talent.initiative.enabled' (1x).\nLine 1: Converted 'talent.demonic' to 'talent.demonic.enabled' (1x).\nLine 1: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nLine 1: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\nLine 1: Converted 'talent.chaotic_transformation' to 'talent.chaotic_transformation.enabled' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 3: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 4: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nLine 5: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - any\n\nThe import for 'fel_barrage' required some automated changes.\nLine 2: Converted operations in '1%(2.6*attack_haste)*12+buff.immolation_aura.stack*6+buff.tactical_retreat.up*10' to '1/(2.6*attack_haste)*12+buff.immolation_aura.stack*6+buff.tactical_retreat.up*10'.\n\nImported 6 action lists.\n",
["lists"] = {
["opener"] = {
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.death_sweep",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.death_sweep || ( ! talent.chaotic_transformation.enabled ) & ( ! talent.initiative.enabled || cooldown.vengeful_retreat.remains > 2 ) || ! talent.demonic.enabled",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["action"] = "felblade",
["criteria"] = "debuff.essence_break.down",
["line_cd"] = "60",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "charges = 2 & buff.unbound_chaos.down & ( buff.inertia.down || active_enemies > 2 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up & ( ! talent.chaotic_transformation.enabled || cooldown.metamorphosis.up )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & buff.inner_demon.down & ( ! buff.metamorphosis.up || cooldown.blade_dance.remains )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & ( buff.inertia.down || active_enemies > 2 ) & buff.unbound_chaos.up",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > desired_targets || raid_event.adds.in > 40 + 50 * ! set_bonus.tier31_2pc",
["action"] = "the_hunt",
},
{
["action"] = "essence_break",
["enabled"] = true,
},
{
["action"] = "death_sweep",
["enabled"] = true,
},
{
["action"] = "annihilation",
["enabled"] = true,
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.fel_barrage.enabled & ( cooldown.fel_barrage.remains < gcd.max * 7 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in < gcd.max * 7 || raid_event.adds.in > 90 ) & ( cooldown.metamorphosis.remains || active_enemies > 2 ) || buff.fel_barrage.up ) & ! ( active_enemies = 1 & ! raid_event.adds.exists )",
["var_name"] = "fel_barrage",
},
{
["action"] = "disrupt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldown",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & buff.unbound_chaos.remains < gcd.max * 2",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "( cooldown.eye_beam.up || cooldown.metamorphosis.up ) & time < 15 & ( raid_event.adds.in > 40 )",
["list_name"] = "opener",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.fel_barrage & raid_event.adds.up",
["list_name"] = "fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.ragefire.enabled & buff.unbound_chaos.down & ( ! talent.fel_barrage.enabled || cooldown.fel_barrage.remains > recharge_time ) & debuff.essence_break.down",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.ragefire.enabled & raid_event.adds.up & raid_event.adds.remains < 15 & raid_event.adds.remains > 5 & debuff.essence_break.down",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & active_enemies > 2 & ( ! talent.inertia.enabled || cooldown.eye_beam.remains + 2 > buff.unbound_chaos.remains )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "talent.initiative.enabled & ( cooldown.eye_beam.remains > 15 & gcd.remains < 0.3 || gcd.remains < 0.1 & cooldown.eye_beam.remains <= gcd.remains & ( cooldown.metamorphosis.remains > 10 || cooldown.blade_dance.remains < gcd.max * 2 ) ) & time > 4",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.fel_barrage || ! talent.demon_blades.enabled & talent.fel_barrage.enabled & ( buff.fel_barrage.up || cooldown.fel_barrage.up ) & buff.metamorphosis.down",
["list_name"] = "fel_barrage",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "buff.metamorphosis.up",
["list_name"] = "meta",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & talent.inertia.enabled & buff.inertia.down & cooldown.blade_dance.remains < 4 & cooldown.eye_beam.remains > 5 & ( action.immolation_aura.charges > 0 || action.immolation_aura.recharge_time + 2 < cooldown.eye_beam.remains || cooldown.eye_beam.remains > buff.unbound_chaos.remains - 2 )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "talent.momentum.enabled & cooldown.eye_beam.remains < gcd.max * 2",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & full_recharge_time < gcd.max * 2 & ( raid_event.adds.in > full_recharge_time || active_enemies > desired_targets )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > desired_targets & buff.unbound_chaos.down & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.unbound_chaos.down & cooldown.eye_beam.remains < 5 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia.down & buff.unbound_chaos.down & recharge_time + 5 < cooldown.eye_beam.remains & cooldown.blade_dance.remains & cooldown.blade_dance.remains < 4 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time ) & charges_fractional > 1.00",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 15 & cooldown.blade_dance.remains",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "! talent.essence_break.enabled & ( ! talent.chaotic_transformation.enabled || cooldown.metamorphosis.remains < 5 + 3 * talent.shattered_destiny.enabled || cooldown.metamorphosis.remains > 15 ) & ( active_enemies > desired_targets * 2 || raid_event.adds.in > 30 - talent.cycle_of_hatred.rank * 13 )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "talent.essence_break.enabled & ( cooldown.essence_break.remains < gcd.max * 2 + 5 * talent.shattered_destiny.enabled || talent.shattered_destiny.enabled & cooldown.essence_break.remains > 10 ) & ( cooldown.blade_dance.remains < 7 || raid_event.adds.up ) & ( ! talent.initiative.enabled || cooldown.vengeful_retreat.remains > 10 || raid_event.adds.up ) & ( active_enemies + 3 >= desired_targets + raid_event.adds.count || raid_event.adds.in > 30 - talent.cycle_of_hatred.rank * 6 ) & ( ! talent.inertia.enabled || buff.unbound_chaos.up || action.immolation_aura.charges = 0 & action.immolation_aura.recharge_time > 5 ) & ( ! raid_event.adds.up || raid_event.adds.remains > 8 ) || boss & fight_remains < 10",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "cooldown.eye_beam.remains > gcd.max || cooldown.eye_beam.up",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 10",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.up",
["action"] = "chaos_strike",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "full_recharge_time <= cooldown.blade_dance.remains & cooldown.metamorphosis.remains > 5 & talent.soulscar.enabled & set_bonus.tier31_2pc",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "! set_bonus.tier31_2pc & ( active_enemies > 1 || talent.soulscar.enabled )",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "cooldown.eye_beam.remains > gcd.max * 2 || fury > 80",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "! talent.inertia.enabled & ( raid_event.adds.in > full_recharge_time || active_enemies > desired_targets & active_enemies > 2 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & debuff.essence_break.down & ( ! talent.fel_barrage.enabled || cooldown.fel_barrage.remains > 25 || ( active_enemies = 1 & ! raid_event.adds.exists ) )",
["action"] = "sigil_of_flame",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & debuff.essence_break.down & fury < 100",
["action"] = "arcane_torrent",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.cooldown.duration = 180 || trinket.t2.cooldown.duration = 180",
["var_name"] = "major_trinket",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration )",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
},
["meta"] = {
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < gcd.max",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < gcd.max",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & talent.inertia.enabled",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "talent.momentum.enabled & buff.momentum.remains < gcd.max * 2",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up & ( cooldown.eye_beam.remains < gcd.max * 3 & cooldown.blade_dance.remains || cooldown.metamorphosis.remains < gcd.max * 3 )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "fury > 20 & ( cooldown.metamorphosis.remains > 10 || cooldown.blade_dance.remains < gcd.max * 2 ) & ( buff.unbound_chaos.down || buff.inertia.up || ! talent.inertia.enabled ) || boss & fight_remains < 10",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & cooldown.blade_dance.remains > gcd.max + 0.5 & buff.unbound_chaos.down & talent.inertia.enabled & buff.inertia.down & full_recharge_time + 3 < cooldown.eye_beam.remains & buff.metamorphosis.remains > 5",
["action"] = "immolation_aura",
},
{
["action"] = "death_sweep",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & buff.inner_demon.down",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & ( cooldown.blade_dance.remains > gcd.max * 2 || fury > 60 ) & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 10 )",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "cooldown.blade_dance.remains > gcd.max * 2 || fury > 60 || buff.metamorphosis.remains < 5 & cooldown.felblade.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains > 5",
["action"] = "sigil_of_flame",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & recharge_time < ( cooldown.eye_beam.remains <? buff.metamorphosis.remains ) & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.momentum.enabled",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & buff.out_of_range.down",
["action"] = "fel_rush",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
["cooldown"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.initiative.enabled || cooldown.vengeful_retreat.remains ) & ( ( ! talent.demonic.enabled || prev_gcd.1.death_sweep || prev_gcd.2.death_sweep || prev_gcd.3.death_sweep ) & cooldown.eye_beam.remains & ( ! talent.essence_break.enabled || debuff.essence_break.up ) & buff.fel_barrage.down & ( raid_event.adds.in > 40 || ( raid_event.adds.remains > 8 || ! talent.fel_barrage.enabled ) & active_enemies > 2 ) || ! talent.chaotic_transformation.enabled || boss & fight_remains < 30 )",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 35 || buff.metamorphosis.up",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & active_enemies > 1 || buff.metamorphosis.up ) & ( raid_event.adds.in > trinket.t1.cooldown.duration - 15 || raid_event.adds.remains > 8 ) || ! trinket.t1.has_use_buff || boss & fight_remains < 25 ) & ( ! equipped.witherbarks_branch || trinket.t2.cooldown.remains > 20 ) & time > 0",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & active_enemies > 1 || buff.metamorphosis.up ) & ( raid_event.adds.in > trinket.t2.cooldown.duration - 15 || raid_event.adds.remains > 8 ) || ! trinket.t2.has_use_buff || boss & fight_remains < 25 ) & ( ! equipped.witherbarks_branch || trinket.t1.cooldown.remains > 20 ) & time > 0",
},
{
["enabled"] = true,
["criteria"] = "( talent.essence_break.enabled & cooldown.essence_break.remains < gcd.max || ! talent.essence_break.enabled ) & ( active_enemies + 3 >= desired_targets + raid_event.adds.count || raid_event.adds.in > 105 ) || boss & fight_remains < 25",
["name"] = "witherbarks_branch",
["action"] = "witherbarks_branch",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > ( 1 + ! set_bonus.tier31_2pc ) * 45 ) & time > 5",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down",
["action"] = "sigil_of_spite",
},
},
["fel_barrage"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.felblade.remains < gcd.max || cooldown.sigil_of_flame.remains < gcd.max",
["var_name"] = "generator_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1 / ( 2.6 * attack_haste ) * 12 + buff.immolation_aura.stack * 6 + buff.tactical_retreat.up * 10",
["var_name"] = "fury_gen",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "gcd.max * 32",
["var_name"] = "gcd_drain",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & ( active_enemies > 1 & raid_event.adds.up || raid_event.adds.in > 40 )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & buff.metamorphosis.up",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & ( active_enemies > 2 || buff.fel_barrage.up )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & active_enemies > 1",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "fury > 100 & ( raid_event.adds.in > 90 || raid_event.adds.in < gcd.max || raid_event.adds.remains > 4 & active_enemies > 2 )",
["action"] = "fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & fury > 20 & buff.fel_barrage.up",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit > 40 & buff.fel_barrage.up",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.up & fury.deficit > 40",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 35 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 30 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 35 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit > 40 & buff.fel_barrage.up",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "fury > 40 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > ( 1 + set_bonus.tier31_2pc ) * 40 )",
["action"] = "the_hunt",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
},
["author"] = "SimC",
},
["Affliction"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240723,
["spec"] = 265,
["desc"] = "2024-07-23: The War Within (sort of)",
["profile"] = "actions.precombat=fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/variable,name=cleave_apl,default=0,op=reset\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%%trinket.2.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.belorrelos_the_suncaller||trinket.1.is.timethiefs_gambit\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.belorrelos_the_suncaller||trinket.2.is.timethiefs_gambit\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_1_buff_duration,value=trinket.1.proc.any_dps.duration+(trinket.1.is.mirror_of_fractured_tomorrows*20)+(trinket.1.is.nymues_unraveling_spindle*2)\nactions.precombat+=/variable,name=trinket_2_buff_duration,value=trinket.2.proc.any_dps.duration+(trinket.2.is.mirror_of_fractured_tomorrows*20)+(trinket.2.is.nymues_unraveling_spindle*2)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_buff_duration)*(1+0.5*trinket.2.has_buff.intellect)*(variable.trinket_2_sync)*(1-0.5*(trinket.2.is.mirror_of_fractured_tomorrows||trinket.2.is.ashes_of_the_embersoul)))>((trinket.1.cooldown.duration%variable.trinket_1_buff_duration)*(1+0.5*trinket.1.has_buff.intellect)*(variable.trinket_1_sync)*(1-0.5*(trinket.1.is.mirror_of_fractured_tomorrows||trinket.1.is.ashes_of_the_embersoul)))\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/seed_of_corruption,if=spell_targets.seed_of_corruption_aoe>2||talent.sow_the_seeds&spell_targets.seed_of_corruption_aoe>1\nactions.precombat+=/haunt\nactions.precombat+=/unstable_affliction,if=!talent.soul_swap\nactions.precombat+=/shadow_bolt\n\nactions+=/spell_lock\nactions+=/call_action_list,name=ogcd\nactions+=/call_action_list,name=items\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=cleave,if=active_enemies=2||variable.cleave_apl\nactions+=/call_action_list,name=aoe,if=active_enemies>2\nactions+=/malefic_rapture,if=boss&fight_remains<4\nactions+=/vile_taint,if=!talent.soul_rot||(variable.min_agony<1.5||cooldown.soul_rot.remains<=execute_time+gcd.max)||talent.souleaters_gluttony.rank<1&cooldown.soul_rot.remains>=12\nactions+=/phantom_singularity,if=(cooldown.soul_rot.remains<=execute_time||talent.souleaters_gluttony.rank<1&(!talent.soul_rot||cooldown.soul_rot.remains<=execute_time||cooldown.soul_rot.remains>=25))&dot.agony.ticking\nactions+=/soul_rot,if=(variable.vt_up&(variable.ps_up||talent.souleaters_gluttony.rank!=1))&dot.agony.ticking\nactions+=/agony,if=(remains<cooldown.vile_taint.remains+action.vile_taint.cast_time||!talent.vile_taint)&remains<5&fight_remains>5\nactions+=/unstable_affliction,if=remains<5&fight_remains>3\nactions+=/haunt,if=debuff.haunt.remains<5\nactions+=/corruption,if=refreshable&fight_remains>5\nactions+=/siphon_life,if=refreshable&fight_remains>5\nactions+=/summon_darkglare,if=(!talent.shadow_embrace||debuff.shadow_embrace.stack=3)&variable.ps_up&variable.vt_up&variable.sr_up||cooldown.invoke_power_infusion_0.duration>0&cooldown.invoke_power_infusion_0.up&!talent.soul_rot\nactions+=/drain_soul,interrupt=1,if=talent.shadow_embrace&(debuff.shadow_embrace.stack<3||debuff.shadow_embrace.remains<3)\nactions+=/shadow_bolt,if=talent.shadow_embrace&(debuff.shadow_embrace.stack<3||debuff.shadow_embrace.remains<3)\nactions+=/malefic_rapture,if=soul_shard>4||(talent.tormented_crescendo&buff.tormented_crescendo.stack=1&soul_shard>3)\nactions+=/malefic_rapture,if=talent.tormented_crescendo&buff.tormented_crescendo.up\nactions+=/malefic_rapture,if=talent.tormented_crescendo&buff.tormented_crescendo.stack=2\nactions+=/malefic_rapture,if=variable.cd_dots_up||variable.vt_ps_up&soul_shard>1\nactions+=/malefic_rapture,if=talent.tormented_crescendo&talent.nightfall&buff.tormented_crescendo.up&buff.nightfall.up\nactions+=/drain_life,if=buff.inevitable_demise.stack>48||buff.inevitable_demise.stack>20&boss&fight_remains<4\nactions+=/drain_soul,if=buff.nightfall.up\nactions+=/shadow_bolt,if=buff.nightfall.up\nactions+=/drain_soul,interrupt=1\nactions+=/shadow_bolt\n\nactions.aoe+=/variable,name=min_agony,op=set,value=dot.agony.remains+(99*!dot.agony.ticking)\nactions.aoe+=/variable,name=min_vt,op=set,default=10,value=dot.vile_taint.remains+(99*!dot.vile_taint.ticking)\nactions.aoe+=/variable,name=min_ps,op=set,default=16,value=dot.phantom_singularity.remains+(99*!dot.phantom_singularity.ticking)\nactions.aoe+=/variable,name=min_ps1,op=set,value=(variable.min_vt*talent.vile_taint<?variable.min_ps*talent.phantom_singularity)\nactions.aoe+=/haunt,if=debuff.haunt.remains<3\nactions.aoe+=/vile_taint,if=(talent.souleaters_gluttony.rank=2&(variable.min_agony<1.5||cooldown.soul_rot.remains<=execute_time))||((talent.souleaters_gluttony.rank=1&cooldown.soul_rot.remains<=execute_time))||(talent.souleaters_gluttony.rank=0&(cooldown.soul_rot.remains<=execute_time||cooldown.vile_taint.remains>25))\nactions.aoe+=/phantom_singularity,if=(cooldown.soul_rot.remains<=execute_time||talent.souleaters_gluttony.rank<1&(!talent.soul_rot||cooldown.soul_rot.remains<=execute_time||cooldown.soul_rot.remains>=25))&dot.agony.ticking\nactions.aoe+=/unstable_affliction,if=remains<5\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony<8&(remains<cooldown.vile_taint.remains+action.vile_taint.cast_time||!talent.vile_taint)&(gcd.max+action.soul_rot.cast_time+gcd.max)<((variable.min_vt*talent.vile_taint)<?(variable.min_ps*talent.phantom_singularity))&remains<5\nactions.aoe+=/siphon_life,cycle_targets=1,if=active_dot.siphon_life<6&cooldown.summon_darkglare.up&time<20&(gcd.max+action.soul_rot.cast_time+gcd.max)<((variable.min_vt*talent.vile_taint)<?(variable.min_ps*talent.phantom_singularity))&dot.agony.ticking\nactions.aoe+=/soul_rot,if=variable.vt_up&(variable.ps_up||talent.souleaters_gluttony.rank!=1)&dot.agony.ticking\nactions.aoe+=/seed_of_corruption,if=dot.corruption.remains<5&!(action.seed_of_corruption.in_flight||dot.seed_of_corruption.remains>0)\nactions.aoe+=/corruption,cycle_targets=1,if=remains<5&!talent.seed_of_corruption\nactions.aoe+=/summon_darkglare,if=variable.ps_up&variable.vt_up&variable.sr_up||cooldown.invoke_power_infusion_0.duration>0&cooldown.invoke_power_infusion_0.up&!talent.soul_rot\nactions.aoe+=/drain_life,cycle_targets=1,if=buff.inevitable_demise.stack>30&buff.soul_rot.up&buff.soul_rot.remains<=gcd.max&active_enemies>3\nactions.aoe+=/malefic_rapture,if=buff.umbrafire_kindling.up&(((active_enemies<6||time<30)&pet.darkglare.active)||!talent.doom_blossom)\nactions.aoe+=/seed_of_corruption,if=talent.sow_the_seeds\nactions.aoe+=/malefic_rapture,if=((cooldown.summon_darkglare.remains>15||soul_shard>3)&!talent.sow_the_seeds)||buff.tormented_crescendo.up\nactions.aoe+=/drain_life,cycle_targets=1,if=(buff.soul_rot.up||!talent.soul_rot)&buff.inevitable_demise.stack>30\nactions.aoe+=/drain_soul,cycle_targets=1,if=buff.nightfall.up&talent.shadow_embrace&(debuff.shadow_embrace.stack<3||debuff.shadow_embrace.remains<3)\nactions.aoe+=/siphon_life,cycle_targets=1,if=remains<5&active_dot.siphon_life<5&(active_enemies<8||!talent.doom_blossom)\nactions.aoe+=/drain_soul,cycle_targets=1,interrupt_global=1,if=(talent.shadow_embrace&(debuff.shadow_embrace.stack<3||debuff.shadow_embrace.remains<3))||!talent.shadow_embrace\nactions.aoe+=/shadow_bolt\n\nactions.cleave+=/vile_taint,if=!talent.soul_rot||(variable.min_agony<1.5||cooldown.soul_rot.remains<=execute_time+gcd.max)||talent.souleaters_gluttony.rank<1&cooldown.soul_rot.remains>=12\nactions.cleave+=/phantom_singularity,if=(cooldown.soul_rot.remains<=execute_time||talent.souleaters_gluttony.rank<1&(!talent.soul_rot||cooldown.soul_rot.remains<=execute_time||cooldown.soul_rot.remains>=25))&active_dot.agony=2\nactions.cleave+=/soul_rot,if=(variable.vt_up&(variable.ps_up||talent.souleaters_gluttony.rank!=1))&active_dot.agony=2\nactions.cleave+=/agony,cycle_targets=1,if=(remains<cooldown.vile_taint.remains+action.vile_taint.cast_time||!talent.vile_taint)&remains<5&fight_remains>5\nactions.cleave+=/unstable_affliction,if=remains<5&fight_remains>3\nactions.cleave+=/seed_of_corruption,if=!talent.absolute_corruption&dot.corruption.remains<5&talent.sow_the_seeds&can_seed\nactions.cleave+=/haunt,if=debuff.haunt.remains<3\nactions.cleave+=/corruption,cycle_targets=1,if=remains<5&!(action.seed_of_corruption.in_flight||dot.seed_of_corruption.remains>0)&fight_remains>5\nactions.cleave+=/siphon_life,cycle_targets=1,if=refreshable&fight_remains>5\nactions.cleave+=/summon_darkglare,if=(!talent.shadow_embrace||debuff.shadow_embrace.stack=3)&variable.ps_up&variable.vt_up&variable.sr_up||cooldown.invoke_power_infusion_0.duration>0&cooldown.invoke_power_infusion_0.up&!talent.soul_rot\nactions.cleave+=/malefic_rapture,if=talent.tormented_crescendo&buff.tormented_crescendo.stack=1&soul_shard>3\nactions.cleave+=/drain_soul,interrupt=1,if=talent.shadow_embrace&(debuff.shadow_embrace.stack<3||debuff.shadow_embrace.remains<3)\nactions.cleave+=/drain_soul,cycle_targets=1,if=buff.nightfall.up&(talent.shadow_embrace&(debuff.shadow_embrace.stack<3||debuff.shadow_embrace.remains<3)||!talent.shadow_embrace)\nactions.cleave+=/shadow_bolt,cycle_targets=1,if=buff.nightfall.up&(talent.shadow_embrace&(debuff.shadow_embrace.stack<3||debuff.shadow_embrace.remains<3)||!talent.shadow_embrace)\nactions.cleave+=/malefic_rapture,if=buff.tormented_crescendo.up\nactions.cleave+=/malefic_rapture,if=variable.cd_dots_up||variable.vt_ps_up\nactions.cleave+=/malefic_rapture,if=soul_shard>3\nactions.cleave+=/drain_life,if=buff.inevitable_demise.stack>48||buff.inevitable_demise.stack>20&boss&fight_remains<4\nactions.cleave+=/drain_life,if=buff.soul_rot.up&buff.inevitable_demise.stack>30\nactions.cleave+=/agony,target_if=refreshable\nactions.cleave+=/corruption,target_if=refreshable\nactions.cleave+=/malefic_rapture,if=soul_shard>1\nactions.cleave+=/drain_soul,interrupt_global=1\nactions.cleave+=/shadow_bolt\n\nactions.items+=/use_item,use_off_gcd=1,name=belorrelos_the_suncaller,if=((time>20&cooldown.summon_darkglare.remains>20)||(trinket.1.is.belorrelos_the_suncaller&(trinket.2.cooldown.remains||!variable.trinket_2_buffs||trinket.1.is.time_thiefs_gambit))||(trinket.2.is.belorrelos_the_suncaller&(trinket.1.cooldown.remains||!variable.trinket_1_buffs||trinket.2.is.time_thiefs_gambit)))&(!raid_event.adds.exists||raid_event.adds.up||spell_targets.belorrelos_the_suncaller>=5)||boss&fight_remains<20\n# We want to use trinkets with Darkglare. The trinket with highest estimated value, will be used first.\nactions.items+=/use_item,slot=trinket1,if=(variable.cds_active)&(variable.trinket_priority=1||variable.trinket_2_exclude||!trinket.2.has_cooldown||(trinket.2.cooldown.remains||variable.trinket_priority=2&cooldown.summon_darkglare.remains>20&!pet.darkglare.active&trinket.2.cooldown.remains<cooldown.summon_darkglare.remains))&variable.trinket_1_buffs&!variable.trinket_1_manual||(variable.trinket_1_buff_duration+1>=fight_remains)\nactions.items+=/use_item,slot=trinket2,if=(variable.cds_active)&(variable.trinket_priority=2||variable.trinket_1_exclude||!trinket.1.has_cooldown||(trinket.1.cooldown.remains||variable.trinket_priority=1&cooldown.summon_darkglare.remains>20&!pet.darkglare.active&trinket.1.cooldown.remains<cooldown.summon_darkglare.remains))&variable.trinket_2_buffs&!variable.trinket_2_manual||(variable.trinket_2_buff_duration+1>=fight_remains)\nactions.items+=/use_item,name=time_thiefs_gambit,if=variable.cds_active||boss&fight_remains<15||((trinket.1.cooldown.duration<cooldown.summon_darkglare.remains_expected+5)&active_enemies=1)||(active_enemies>1&havoc_active)\n# If only one on use trinket provied a buff, use the other on cooldown, Or if neither trinket provied a buff, use both on cooldown.\nactions.items+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||talent.summon_darkglare&cooldown.summon_darkglare.remains_expected>20||!talent.summon_darkglare)\nactions.items+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||talent.summon_darkglare&cooldown.summon_darkglare.remains_expected>20||!talent.summon_darkglare)\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand\n\nactions.ogcd+=/potion,if=variable.cds_active\nactions.ogcd+=/berserking,if=variable.cds_active\nactions.ogcd+=/blood_fury,if=variable.cds_active\n### Uses Power Infusion together with Cooldown windows like Summon Darkglare, Soul Rot, Phantom Singularity or Vile Taint\n## actions.ogcd+=/invoke_external_buff,name=power_infusion,if=variable.cds_active&(trinket.1.is.nymues_unraveling_spindle&trinket.1.cooldown.remains||trinket.2.is.nymues_unraveling_spindle&trinket.2.cooldown.remains||!equipped.nymues_unraveling_spindle)\nactions.ogcd+=/fireblood,if=variable.cds_active\nactions.ogcd+=/ancestral_call,if=variable.cds_active\n\nactions.variables+=/variable,name=ps_up,op=set,value=dot.phantom_singularity.ticking||!talent.phantom_singularity\nactions.variables+=/variable,name=vt_up,op=set,value=dot.vile_taint_dot.ticking||!talent.vile_taint\nactions.variables+=/variable,name=vt_ps_up,op=set,value=dot.vile_taint_dot.ticking||dot.phantom_singularity.ticking||(!talent.vile_taint&!talent.phantom_singularity)\nactions.variables+=/variable,name=sr_up,op=set,value=dot.soul_rot.ticking||!talent.soul_rot\nactions.variables+=/variable,name=cd_dots_up,op=set,value=variable.ps_up&variable.vt_up&variable.sr_up\nactions.variables+=/variable,name=has_cds,op=set,value=talent.phantom_singularity||talent.vile_taint||talent.soul_rot||talent.summon_darkglare\nactions.variables+=/variable,name=cds_active,op=set,value=!variable.has_cds||(variable.cd_dots_up&(cooldown.summon_darkglare.remains>20||!talent.summon_darkglare))\nactions.variables+=/variable,name=min_vt,op=reset,default=10,if=variable.min_vt\nactions.variables+=/variable,name=min_ps,op=reset,default=16,if=variable.min_ps",
["version"] = 20240723,
["warnings"] = "The import for 'items' required some automated changes.\nLine 1: Converted 'trinket.1.is.belorrelos_the_suncaller' to 'trinket.t1.is.belorrelos_the_suncaller' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 1: Converted 'trinket.1.is.time_thiefs_gambit' to 'trinket.t1.is.time_thiefs_gambit' (1x).\nLine 1: Converted 'trinket.2.is.belorrelos_the_suncaller' to 'trinket.t2.is.belorrelos_the_suncaller' (1x).\nLine 1: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 1: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 1: Converted 'trinket.2.is.time_thiefs_gambit' to 'trinket.t2.is.time_thiefs_gambit' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Unsupported use_item action [ time_thiefs_gambit]; entry disabled.\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\nLine 5: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\nLine 6: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 8: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 9: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 11: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 16: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 16: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 17: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 18: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 19: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 20: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 21: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 23: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 23: Converted 'talent.nightfall' to 'talent.nightfall.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%trinket.t1.cooldown.duration=0)'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%trinket.t2.cooldown.duration=0)'.\nLine 8: Converted 'trinket.1.is.belorrelos_the_suncaller' to 'trinket.t1.is.belorrelos_the_suncaller' (1x).\nLine 8: Converted 'trinket.1.is.timethiefs_gambit' to 'trinket.t1.is.timethiefs_gambit' (1x).\nLine 9: Converted 'trinket.2.is.belorrelos_the_suncaller' to 'trinket.t2.is.belorrelos_the_suncaller' (1x).\nLine 9: Converted 'trinket.2.is.timethiefs_gambit' to 'trinket.t2.is.timethiefs_gambit' (1x).\nLine 10: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 10: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 11: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 11: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 12: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 12: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 13: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 13: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 14: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 14: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 14: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 14: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 14: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 14: Converted 'trinket.2.is.ashes_of_the_embersoul' to 'trinket.t2.is.ashes_of_the_embersoul' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 14: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 14: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 14: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 14: Converted 'trinket.1.is.ashes_of_the_embersoul' to 'trinket.t1.is.ashes_of_the_embersoul' (1x).\nLine 14: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_buff_duration)*(1+0.5*trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1-0.5*(trinket.t2.is.mirror_of_fractured_tomorrows||trinket.t2.is.ashes_of_the_embersoul)))>((trinket.t1.cooldown.duration%variable.trinket_1_buff_duration)*(1+0.5*trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1-0.5*(trinket.t1.is.mirror_of_fractured_tomorrows||trinket.t1.is.ashes_of_the_embersoul)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_buff_duration)*(1+0.5*trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1-0.5*(trinket.t2.is.mirror_of_fractured_tomorrows||trinket.t2.is.ashes_of_the_embersoul)))>((trinket.t1.cooldown.duration/variable.trinket_1_buff_duration)*(1+0.5*trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1-0.5*(trinket.t1.is.mirror_of_fractured_tomorrows||trinket.t1.is.ashes_of_the_embersoul)))'.\nLine 16: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 18: Converted 'talent.soul_swap' to 'talent.soul_swap.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 4: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 4: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 7: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 9: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 9: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 9: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 10: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 10: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 13: Converted 'talent.seed_of_corruption' to 'talent.seed_of_corruption.enabled' (1x).\nLine 14: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 16: Converted 'talent.doom_blossom' to 'talent.doom_blossom.enabled' (1x).\nLine 17: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 18: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 19: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 20: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 21: Converted 'talent.doom_blossom' to 'talent.doom_blossom.enabled' (1x).\nLine 22: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 22: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\n\nThe import for 'variables' required some automated changes.\nLine 1: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 2: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 3: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 3: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 4: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 6: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 6: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 6: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 6: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\nLine 7: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 1: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 2: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 4: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 6: Converted 'talent.absolute_corruption' to 'talent.absolute_corruption.enabled' (1x).\nLine 6: Converted 'talent.sow_the_seeds' to 'talent.sow_the_seeds.enabled' (1x).\nLine 10: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 10: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 11: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 12: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 13: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 13: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 14: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 14: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\n\nImported 7 action lists.\n",
["author"] = "SimC",
["lists"] = {
["items"] = {
{
["enabled"] = true,
["name"] = "belorrelos_the_suncaller",
["use_off_gcd"] = 1,
["criteria"] = "( ( time > 20 & cooldown.summon_darkglare.remains > 20 ) || ( trinket.t1.is.belorrelos_the_suncaller & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs || trinket.t1.is.time_thiefs_gambit ) ) || ( trinket.t2.is.belorrelos_the_suncaller & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs || trinket.t2.is.time_thiefs_gambit ) ) ) & ( ! raid_event.adds.exists || raid_event.adds.up || spell_targets.belorrelos_the_suncaller >= 5 ) || boss & fight_remains < 20",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "We want to use trinkets with Darkglare. The trinket with highest estimated value, will be used first.",
["criteria"] = "( variable.cds_active ) & ( variable.trinket_priority = 1 || variable.trinket_2_exclude || ! trinket.t2.has_cooldown || ( trinket.t2.cooldown.remains || variable.trinket_priority = 2 & cooldown.summon_darkglare.remains > 20 & ! pet.darkglare.active & trinket.t2.cooldown.remains < cooldown.summon_darkglare.remains ) ) & variable.trinket_1_buffs & ! variable.trinket_1_manual || ( variable.trinket_1_buff_duration + 1 >= fight_remains )",
},
{
["enabled"] = true,
["criteria"] = "( variable.cds_active ) & ( variable.trinket_priority = 2 || variable.trinket_1_exclude || ! trinket.t1.has_cooldown || ( trinket.t1.cooldown.remains || variable.trinket_priority = 1 & cooldown.summon_darkglare.remains > 20 & ! pet.darkglare.active & trinket.t1.cooldown.remains < cooldown.summon_darkglare.remains ) ) & variable.trinket_2_buffs & ! variable.trinket_2_manual || ( variable.trinket_2_buff_duration + 1 >= fight_remains )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = false,
["criteria"] = "variable.cds_active || boss & fight_remains < 15 || ( ( trinket.t1.cooldown.duration < cooldown.summon_darkglare.remains_expected + 5 ) & active_enemies = 1 ) || ( active_enemies > 1 & havoc_active )",
["name"] = "time_thiefs_gambit",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "If only one on use trinket provied a buff, use the other on cooldown, Or if neither trinket provied a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || talent.summon_darkglare.enabled & cooldown.summon_darkglare.remains_expected > 20 || ! talent.summon_darkglare.enabled )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || talent.summon_darkglare.enabled & cooldown.summon_darkglare.remains_expected > 20 || ! talent.summon_darkglare.enabled )",
},
{
["use_off_gcd"] = 1,
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
},
},
["default"] = {
{
["action"] = "spell_lock",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "ogcd",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "active_enemies = 2 || variable.cleave_apl",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "active_enemies > 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 4",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "! talent.soul_rot.enabled || ( variable.min_agony < 1.5 || cooldown.soul_rot.remains <= execute_time + gcd.max ) || talent.souleaters_gluttony.rank < 1 & cooldown.soul_rot.remains >= 12",
["action"] = "vile_taint",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.soul_rot.remains <= execute_time || talent.souleaters_gluttony.rank < 1 & ( ! talent.soul_rot.enabled || cooldown.soul_rot.remains <= execute_time || cooldown.soul_rot.remains >= 25 ) ) & dot.agony.ticking",
["action"] = "phantom_singularity",
},
{
["enabled"] = true,
["criteria"] = "( variable.vt_up & ( variable.ps_up || talent.souleaters_gluttony.rank != 1 ) ) & dot.agony.ticking",
["action"] = "soul_rot",
},
{
["enabled"] = true,
["criteria"] = "( remains < cooldown.vile_taint.remains + action.vile_taint.cast_time || ! talent.vile_taint.enabled ) & remains < 5 & fight_remains > 5",
["action"] = "agony",
},
{
["enabled"] = true,
["criteria"] = "remains < 5 & fight_remains > 3",
["action"] = "unstable_affliction",
},
{
["enabled"] = true,
["criteria"] = "debuff.haunt.remains < 5",
["action"] = "haunt",
},
{
["enabled"] = true,
["criteria"] = "refreshable & fight_remains > 5",
["action"] = "corruption",
},
{
["enabled"] = true,
["criteria"] = "refreshable & fight_remains > 5",
["action"] = "siphon_life",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_embrace.enabled || debuff.shadow_embrace.stack = 3 ) & variable.ps_up & variable.vt_up & variable.sr_up || cooldown.invoke_power_infusion_0.duration > 0 & cooldown.invoke_power_infusion_0.up & ! talent.soul_rot.enabled",
["action"] = "summon_darkglare",
},
{
["enabled"] = true,
["interrupt"] = "1",
["criteria"] = "talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 3 || debuff.shadow_embrace.remains < 3 )",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 3 || debuff.shadow_embrace.remains < 3 )",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 4 || ( talent.tormented_crescendo.enabled & buff.tormented_crescendo.stack = 1 & soul_shard > 3 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & buff.tormented_crescendo.up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & buff.tormented_crescendo.stack = 2",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_dots_up || variable.vt_ps_up & soul_shard > 1",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & talent.nightfall.enabled & buff.tormented_crescendo.up & buff.nightfall.up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "buff.inevitable_demise.stack > 48 || buff.inevitable_demise.stack > 20 & boss & fight_remains < 4",
["action"] = "drain_life",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up",
["action"] = "shadow_bolt",
},
{
["interrupt"] = "1",
["action"] = "drain_soul",
["enabled"] = true,
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "time > 0 & ! pet.alive",
["action"] = "fel_domination",
},
{
["action"] = "summon_pet",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "cleave_apl",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.soul_rot.duration = 0 || cooldown.soul_rot.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.soul_rot.duration = 0 || cooldown.soul_rot.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.belorrelos_the_suncaller || trinket.t1.is.timethiefs_gambit",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.belorrelos_the_suncaller || trinket.t2.is.timethiefs_gambit",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.buff_duration + ( trinket.t1.is.mirror_of_fractured_tomorrows * 20 ) + ( trinket.t1.is.nymues_unraveling_spindle * 2 )",
["var_name"] = "trinket_1_buff_duration",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.buff_duration + ( trinket.t2.is.mirror_of_fractured_tomorrows * 20 ) + ( trinket.t2.is.nymues_unraveling_spindle * 2 )",
["var_name"] = "trinket_2_buff_duration",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_buff_duration ) * ( 1 + 0.5 * trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) * ( 1 - 0.5 * ( trinket.t2.is.mirror_of_fractured_tomorrows || trinket.t2.is.ashes_of_the_embersoul ) ) ) > ( ( trinket.t1.cooldown.duration / variable.trinket_1_buff_duration ) * ( 1 + 0.5 * trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 - 0.5 * ( trinket.t1.is.mirror_of_fractured_tomorrows || trinket.t1.is.ashes_of_the_embersoul ) ) )",
},
{
["enabled"] = true,
["criteria"] = "talent.grimoire_of_sacrifice.enabled",
["action"] = "grimoire_of_sacrifice",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.seed_of_corruption_aoe > 2 || talent.sow_the_seeds.enabled & spell_targets.seed_of_corruption_aoe > 1",
["action"] = "seed_of_corruption",
},
{
["action"] = "haunt",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.soul_swap.enabled",
["action"] = "unstable_affliction",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
},
["aoe"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.agony.remains + ( 99 * ! dot.agony.ticking )",
["var_name"] = "min_agony",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.vile_taint.remains + ( 99 * ! dot.vile_taint.ticking )",
["var_name"] = "min_vt",
["default"] = "10",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.phantom_singularity.remains + ( 99 * ! dot.phantom_singularity.ticking )",
["var_name"] = "min_ps",
["default"] = "16",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.min_vt * talent.vile_taint.enabled <? variable.min_ps * talent.phantom_singularity.enabled )",
["var_name"] = "min_ps1",
},
{
["enabled"] = true,
["criteria"] = "debuff.haunt.remains < 3",
["action"] = "haunt",
},
{
["enabled"] = true,
["criteria"] = "( talent.souleaters_gluttony.rank = 2 & ( variable.min_agony < 1.5 || cooldown.soul_rot.remains <= execute_time ) ) || ( ( talent.souleaters_gluttony.rank = 1 & cooldown.soul_rot.remains <= execute_time ) ) || ( talent.souleaters_gluttony.rank = 0 & ( cooldown.soul_rot.remains <= execute_time || cooldown.vile_taint.remains > 25 ) )",
["action"] = "vile_taint",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.soul_rot.remains <= execute_time || talent.souleaters_gluttony.rank < 1 & ( ! talent.soul_rot.enabled || cooldown.soul_rot.remains <= execute_time || cooldown.soul_rot.remains >= 25 ) ) & dot.agony.ticking",
["action"] = "phantom_singularity",
},
{
["enabled"] = true,
["criteria"] = "remains < 5",
["action"] = "unstable_affliction",
},
{
["enabled"] = true,
["criteria"] = "active_dot.agony < 8 & ( remains < cooldown.vile_taint.remains + action.vile_taint.cast_time || ! talent.vile_taint.enabled ) & ( gcd.max + action.soul_rot.cast_time + gcd.max ) < ( ( variable.min_vt * talent.vile_taint.enabled ) <? ( variable.min_ps * talent.phantom_singularity.enabled ) ) & remains < 5",
["action"] = "agony",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_dot.siphon_life < 6 & cooldown.summon_darkglare.up & time < 20 & ( gcd.max + action.soul_rot.cast_time + gcd.max ) < ( ( variable.min_vt * talent.vile_taint.enabled ) <? ( variable.min_ps * talent.phantom_singularity.enabled ) ) & dot.agony.ticking",
["action"] = "siphon_life",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.vt_up & ( variable.ps_up || talent.souleaters_gluttony.rank != 1 ) & dot.agony.ticking",
["action"] = "soul_rot",
},
{
["enabled"] = true,
["criteria"] = "dot.corruption.remains < 5 & ! ( action.seed_of_corruption.in_flight || dot.seed_of_corruption.remains > 0 )",
["action"] = "seed_of_corruption",
},
{
["enabled"] = true,
["criteria"] = "remains < 5 & ! talent.seed_of_corruption.enabled",
["action"] = "corruption",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.ps_up & variable.vt_up & variable.sr_up || cooldown.invoke_power_infusion_0.duration > 0 & cooldown.invoke_power_infusion_0.up & ! talent.soul_rot.enabled",
["action"] = "summon_darkglare",
},
{
["enabled"] = true,
["criteria"] = "buff.inevitable_demise.stack > 30 & buff.soul_rot.up & buff.soul_rot.remains <= gcd.max & active_enemies > 3",
["action"] = "drain_life",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.umbrafire_kindling.up & ( ( ( active_enemies < 6 || time < 30 ) & pet.darkglare.active ) || ! talent.doom_blossom.enabled )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.sow_the_seeds.enabled",
["action"] = "seed_of_corruption",
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.summon_darkglare.remains > 15 || soul_shard > 3 ) & ! talent.sow_the_seeds.enabled ) || buff.tormented_crescendo.up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "( buff.soul_rot.up || ! talent.soul_rot.enabled ) & buff.inevitable_demise.stack > 30",
["action"] = "drain_life",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up & talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 3 || debuff.shadow_embrace.remains < 3 )",
["action"] = "drain_soul",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "remains < 5 & active_dot.siphon_life < 5 & ( active_enemies < 8 || ! talent.doom_blossom.enabled )",
["action"] = "siphon_life",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "drain_soul",
["cycle_targets"] = 1,
["criteria"] = "( talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 3 || debuff.shadow_embrace.remains < 3 ) ) || ! talent.shadow_embrace.enabled",
["interrupt_global"] = "1",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled",
["var_name"] = "ps_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.vile_taint_dot.ticking || ! talent.vile_taint.enabled",
["var_name"] = "vt_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.vile_taint_dot.ticking || dot.phantom_singularity.ticking || ( ! talent.vile_taint.enabled & ! talent.phantom_singularity.enabled )",
["var_name"] = "vt_ps_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.soul_rot.ticking || ! talent.soul_rot.enabled",
["var_name"] = "sr_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.ps_up & variable.vt_up & variable.sr_up",
["var_name"] = "cd_dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.phantom_singularity.enabled || talent.vile_taint.enabled || talent.soul_rot.enabled || talent.summon_darkglare.enabled",
["var_name"] = "has_cds",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! variable.has_cds || ( variable.cd_dots_up & ( cooldown.summon_darkglare.remains > 20 || ! talent.summon_darkglare.enabled ) )",
["var_name"] = "cds_active",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "min_vt",
["criteria"] = "variable.min_vt",
["default"] = "10",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "min_ps",
["criteria"] = "variable.min_ps",
["default"] = "16",
},
},
["cleave"] = {
{
["enabled"] = true,
["criteria"] = "! talent.soul_rot.enabled || ( variable.min_agony < 1.5 || cooldown.soul_rot.remains <= execute_time + gcd.max ) || talent.souleaters_gluttony.rank < 1 & cooldown.soul_rot.remains >= 12",
["action"] = "vile_taint",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.soul_rot.remains <= execute_time || talent.souleaters_gluttony.rank < 1 & ( ! talent.soul_rot.enabled || cooldown.soul_rot.remains <= execute_time || cooldown.soul_rot.remains >= 25 ) ) & active_dot.agony = 2",
["action"] = "phantom_singularity",
},
{
["enabled"] = true,
["criteria"] = "( variable.vt_up & ( variable.ps_up || talent.souleaters_gluttony.rank != 1 ) ) & active_dot.agony = 2",
["action"] = "soul_rot",
},
{
["enabled"] = true,
["criteria"] = "( remains < cooldown.vile_taint.remains + action.vile_taint.cast_time || ! talent.vile_taint.enabled ) & remains < 5 & fight_remains > 5",
["action"] = "agony",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "remains < 5 & fight_remains > 3",
["action"] = "unstable_affliction",
},
{
["enabled"] = true,
["criteria"] = "! talent.absolute_corruption.enabled & dot.corruption.remains < 5 & talent.sow_the_seeds.enabled & can_seed",
["action"] = "seed_of_corruption",
},
{
["enabled"] = true,
["criteria"] = "debuff.haunt.remains < 3",
["action"] = "haunt",
},
{
["enabled"] = true,
["criteria"] = "remains < 5 & ! ( action.seed_of_corruption.in_flight || dot.seed_of_corruption.remains > 0 ) & fight_remains > 5",
["action"] = "corruption",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & fight_remains > 5",
["action"] = "siphon_life",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_embrace.enabled || debuff.shadow_embrace.stack = 3 ) & variable.ps_up & variable.vt_up & variable.sr_up || cooldown.invoke_power_infusion_0.duration > 0 & cooldown.invoke_power_infusion_0.up & ! talent.soul_rot.enabled",
["action"] = "summon_darkglare",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & buff.tormented_crescendo.stack = 1 & soul_shard > 3",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["interrupt"] = "1",
["criteria"] = "talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 3 || debuff.shadow_embrace.remains < 3 )",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up & ( talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 3 || debuff.shadow_embrace.remains < 3 ) || ! talent.shadow_embrace.enabled )",
["action"] = "drain_soul",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up & ( talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 3 || debuff.shadow_embrace.remains < 3 ) || ! talent.shadow_embrace.enabled )",
["action"] = "shadow_bolt",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.tormented_crescendo.up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_dots_up || variable.vt_ps_up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 3",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "buff.inevitable_demise.stack > 48 || buff.inevitable_demise.stack > 20 & boss & fight_remains < 4",
["action"] = "drain_life",
},
{
["enabled"] = true,
["criteria"] = "buff.soul_rot.up & buff.inevitable_demise.stack > 30",
["action"] = "drain_life",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "agony",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "corruption",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 1",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["action"] = "drain_soul",
["interrupt_global"] = "1",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
},
["ogcd"] = {
{
["enabled"] = true,
["criteria"] = "variable.cds_active",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "variable.cds_active",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.cds_active",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "variable.cds_active",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "variable.cds_active",
["action"] = "ancestral_call",
},
},
},
},
["Blood"] = {
["source"] = "SimulationCraft",
["builtIn"] = true,
["date"] = 20240321,
["spec"] = 250,
["desc"] = "2024-03-21: Update settings for Death Strike.\n\n2023-12-28: Minor SimC update.\n\n2023-11-27: There's this axe...\n\n2023-11-17: Trinket updates.\n\n2023-05-06:  Removed Death's Caress during DRW.\n\n2023-04-30:  Updated for 10.1 from SimC.\n\n2023-04-04:  Minor update from SimC (Vampiric Blood usage).\n\n2023-03-08:  Adjust Tombstone logic for Shattering Bones / Death and Decay.",
["lists"] = {
["drw_up"] = {
{
["enabled"] = true,
["description"] = "Use Blood Boil if Blood Plague is not active.",
["criteria"] = "! dot.blood_plague.ticking",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["description"] = "Use Tombstone if you have 5+ Bone Shield stacks, 2+ runes, 30+ Runic Power, and Shattering Bones is not talented or Death and Decay is not ticking.",
["criteria"] = "buff.bone_shield.stack > 5 & rune >= 2 & runic_power.deficit >= 30 & ! talent.shattering_bone.enabled || ( talent.shattering_bone.enabled & death_and_decay.ticking )",
["action"] = "tombstone",
},
{
["enabled"] = true,
["description"] = "Use Death Strike if Coagulatopathy is down or about to expire or if Icy Talons is down or about to expire.",
["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "( buff.bone_shield.remains <= 4 || buff.bone_shield.stack < variable.bone_shield_refresh_value ) & runic_power.deficit > 20",
["action"] = "marrowrend",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["action"] = "soul_reaper",
["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & ( talent.sanguine_ground.enabled || talent.unholy_ground.enabled )",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.blood_boil > 2 & charges_fractional >= 1.1",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( 25 + spell_targets.heart_strike * talent.heartbreaker.enabled * 2 )",
["var_name"] = "heart_strike_rp_drw",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit <= variable.heart_strike_rp_drw || runic_power >= variable.death_strike_dump_amount",
["action"] = "death_strike",
},
{
["action"] = "consumption",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "charges_fractional >= 1.1 & buff.hemostasis.stack < 5",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "rune.time_to_2 < gcd.max || runic_power.deficit >= variable.heart_strike_rp_drw",
["action"] = "heart_strike",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Interrupt.",
["action"] = "mind_freeze",
},
{
["enabled"] = true,
["description"] = "Interrupt.",
["action"] = "strangulate",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "settings.death_strike_pool_amount",
["description"] = "Death Strike at 65+ Runic Power.",
["var_name"] = "death_strike_dump_amount",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Refresh Bone Shield at 4 stacks with Death's Caress, Consumption, or Blooddrinker, otherwise 5 stacks.",
["criteria"] = "! talent.deaths_caress.enabled || talent.consumption.enabled || talent.blooddrinker.enabled",
["var_name"] = "bone_shield_refresh_value",
["action"] = "variable",
["value_else"] = "5",
["value"] = "4",
},
{
["enabled"] = true,
["description"] = "Use a Potion during Dancing Rune Weapon.",
["criteria"] = "buff.dancing_rune_weapon.up",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "Call the trinkets action list.",
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["description"] = "Raise Dead if it's off cooldown.",
["action"] = "raise_dead",
},
{
["enabled"] = true,
["description"] = "Use Icebound Fortitude if you're taking sufficient damage and you don't have Dancing Rune Weapon or Vampiric Blood up.",
["criteria"] = "tanking & incoming_damage_5s >= ibf_damage & ! ( buff.dancing_rune_weapon.up || buff.vampiric_blood.up )",
["action"] = "icebound_fortitude",
},
{
["enabled"] = true,
["description"] = "Use Vampiric Blood if you're taking sufficient damage and you don't have Dancing Rune Weapon, Icebound Fortitude, Vampiric Blood, or Vampiric Strength up.",
["criteria"] = "tanking & incoming_damage_5s >= vb_damage & ! ( buff.dancing_rune_weapon.up || buff.icebound_fortitude.up || buff.vampiric_blood.up || buff.vampiric_strength.up )",
["action"] = "vampiric_blood",
},
{
["enabled"] = true,
["description"] = "Use Rune Tap if you're taking sufficient damage and you don't have Dancing Rune Weapon, Vampiric Blood, or Icebound Fortitude up.",
["criteria"] = "tanking & incoming_damage_5s >= rt_damage & ! ( buff.dancing_rune_weapon.up || buff.vampiric_blood.up || buff.icebound_fortitude.up )",
["action"] = "rune_tap",
},
{
["enabled"] = true,
["description"] = "Use Death Strike if your Blood Shield is going to expire.",
["criteria"] = "settings.save_blood_shield & buff.blood_shield.up & buff.blood_shield.remains <= gcd.max",
["action"] = "death_strike",
},
{
["enabled"] = true,
["description"] = "Use Death's Caress if Bone Shield is not up.",
["criteria"] = "! buff.bone_shield.up",
["action"] = "deaths_caress",
},
{
["enabled"] = true,
["description"] = "Use Death and Decay if it's not already up and you have 4 targets, Unholy Ground, Sanguine Ground, or Crimson Scourge.",
["criteria"] = "! death_and_decay.ticking & ( talent.unholy_ground.enabled || talent.sanguine_ground.enabled || spell_targets.death_and_decay > 3 || buff.crimson_scourge.up )",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["description"] = "Use Death Strike if Coagulatopathy is down or about to expire, if Icy Talons is down or about to expire, if you're below the Death Strike dump amount, if you're below the Heart Strike Runic Power threshold, or if the target is about to die.",
["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max || runic_power >= variable.death_strike_dump_amount || runic_power.deficit <= variable.heart_strike_rp || boss & fight_remains < 10",
["action"] = "death_strike",
},
{
["enabled"] = true,
["description"] = "Use Blooddrinker if Dancing Rune Weapon is not up.",
["criteria"] = "! buff.dancing_rune_weapon.up",
["action"] = "blooddrinker",
},
{
["enabled"] = true,
["description"] = "Call the racials action list.",
["action"] = "call_action_list",
["list_name"] = "racials",
},
{
["enabled"] = true,
["description"] = "Use Sacrificial Pact if Dancing Rune Weapon is not active and the Ghoul is about to expire or the bossfight is about to end.",
["criteria"] = "! buff.dancing_rune_weapon.up & ( pet.ghoul.remains < 2 || boss & fight_remains < gcd.max )",
["action"] = "sacrificial_pact",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Call the covenants action list if they are active and valid.",
["strict"] = 1,
["criteria"] = "! covenant.none",
["list_name"] = "covenants",
},
{
["enabled"] = true,
["description"] = "Use Blood Tap if you have 2 or fewer runes, you won't reach 4 charges within the global cooldown, and you're about to cap charges, or if you will not reach 3 runes within global cooldown.",
["criteria"] = "( rune <= 2 & rune.time_to_4 > gcd.max & charges_fractional >= 1.8 ) || rune.time_to_3 > gcd.max",
["action"] = "blood_tap",
},
{
["enabled"] = true,
["description"] = "Use Gorefiend's Grasp if Tightening Grasp is talented.",
["criteria"] = "talent.tightening_grasp.enabled",
["action"] = "gorefiends_grasp",
},
{
["enabled"] = true,
["description"] = "Use Empower Ruen Weapon if you have 6 or fewer runes and you're not about to cap Runic Power.",
["criteria"] = "rune < 6 & runic_power.deficit > 5",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["description"] = "Use Abomination's Limb on cooldown.",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["description"] = "Use Dancing Rune Weapon if it is not already active.",
["criteria"] = "! buff.dancing_rune_weapon.up",
["action"] = "dancing_rune_weapon",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Use the drw_up action list if Dancing Rune Weapon is active.",
["strict"] = 1,
["criteria"] = "buff.dancing_rune_weapon.up",
["list_name"] = "drw_up",
},
{
["enabled"] = true,
["description"] = "Call the standard action list (which will not be used if Dancing Rune Weapon is active).",
["action"] = "call_action_list",
["list_name"] = "standard",
},
},
["precombat"] = {
{
["action"] = "fleshcraft",
["enabled"] = true,
},
},
["standard"] = {
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack > 5 & rune >= 2 & runic_power.deficit >= 30 & ! talent.shattering_bone.enabled || ( talent.shattering_bone.enabled & death_and_decay.ticking ) & cooldown.dancing_rune_weapon.remains >= 25",
["action"] = "tombstone",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( 10 + spell_targets.heart_strike * talent.heartbreaker.enabled * 2 )",
["var_name"] = "heart_strike_rp",
},
{
["enabled"] = true,
["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max || runic_power >= variable.death_strike_dump_amount || runic_power.deficit <= variable.heart_strike_rp || boss & fight_remains < 10",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "( buff.bone_shield.remains <= 4 || ( buff.bone_shield.stack < variable.bone_shield_refresh_value + 1 ) ) & runic_power.deficit > 10 & ! ( talent.insatiable_blade.enabled & cooldown.dancing_rune_weapon.remains < buff.bone_shield.remains ) & ! talent.consumption.enabled & ! talent.blooddrinker.enabled & rune.time_to_3 > gcd.max",
["action"] = "deaths_caress",
},
{
["enabled"] = true,
["criteria"] = "( buff.bone_shield.remains <= 4 || buff.bone_shield.stack < variable.bone_shield_refresh_value ) & runic_power.deficit > 20 & ! ( talent.insatiable_blade.enabled & cooldown.dancing_rune_weapon.remains < buff.bone_shield.remains )",
["action"] = "marrowrend",
},
{
["action"] = "consumption",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["action"] = "soul_reaper",
["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "runic_power >= 100",
["action"] = "bonestorm",
},
{
["enabled"] = true,
["criteria"] = "charges_fractional >= 1.8 & ( buff.hemostasis.stack <= ( 5 - spell_targets.blood_boil ) || spell_targets.blood_boil > 2 )",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "rune.time_to_4 < gcd.max",
["action"] = "heart_strike",
},
{
["enabled"] = true,
["criteria"] = "charges_fractional >= 1.1",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "( rune > 1 & ( rune.time_to_3 < gcd.max || buff.bone_shield.stack > 7 ) )",
["action"] = "heart_strike",
},
},
["trinkets"] = {
{
["enabled"] = true,
["description"] = "Trinkets",
["action"] = "fyralath_the_dreamrender",
["criteria"] = "dot.mark_of_fyralath.ticking",
["name"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff ) || trinket.t1.is.mirror_of_fractured_tomorrows",
["description"] = "Prioritize damage dealing on use trinkets over trinkets that give buffs",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff ) || trinket.t2.is.mirror_of_fractured_tomorrows",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["criteria"] = "! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl || variable.trinket_1_buffs",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown )",
},
{
["enabled"] = true,
["criteria"] = "( variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
["action"] = "use_items",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ( buff.dancing_rune_weapon.up || ! talent.dancing_rune_weapon.enabled || cooldown.dancing_rune_weapon.remains > 20 ) & ( variable.trinket_2_exclude || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown || variable.trinket_2_buffs )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ( buff.dancing_rune_weapon.up || ! talent.dancing_rune_weapon.enabled || cooldown.dancing_rune_weapon.remains > 20 ) & ( variable.trinket_1_exclude || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown || variable.trinket_1_buffs )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["racials"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.dancing_rune_weapon.ready & ( ! cooldown.blooddrinker.ready || ! talent.blooddrinker.enabled )",
["action"] = "blood_fury",
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 || rune < 1 & runic_power.deficit > 60",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "buff.unholy_strength.up",
["action"] = "lights_judgment",
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20",
["action"] = "arcane_torrent",
},
},
["covenants"] = {
{
["enabled"] = true,
["description"] = "Use Death's Due if Death and Decay is not ticking and you don't have Death's Due or Crimson Scourge up.",
["criteria"] = "! death_and_decay.ticking & ( ! buff.deaths_due.up || buff.deaths_due.remains < 4 || buff.crimson_scourge.up )",
["action"] = "deaths_due",
},
{
["enabled"] = true,
["description"] = "Use Swarming Mist if Dancing Rune Weapon is active for 3+ seconds and you have 90+ Runic Power (offset by number of targets).",
["criteria"] = "cooldown.dancing_rune_weapon.remains > 3 & runic_power >= ( 90 - ( spell_targets.swarming_mist * 3 ) )",
["action"] = "swarming_mist",
},
{
["enabled"] = true,
["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled & ! buff.volatile_solvent_humanoid.up",
["description"] = "Use Fleshcraft if you have Pustule Eruption or Volatile Solvent and Volatile Solvent is not active.",
["interrupt_if"] = "soulbind.volatile_solvent",
["interrupt_immediate"] = "1",
["action"] = "fleshcraft",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["description"] = "Use Shackle the Unworthy if you have 3 or fewer runes and Runic Power is below 100.",
["criteria"] = "rune < 3 & runic_power < 100",
["action"] = "shackle_the_unworthy",
},
},
},
["version"] = 20240321,
["warnings"] = "The import for 'drw_up' required some automated changes.\nLine 2: Converted 'talent.shattering_bone' to 'talent.shattering_bone.enabled' (1x).\nLine 7: Converted 'talent.sanguine_ground' to 'talent.sanguine_ground.enabled' (1x).\nLine 7: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 13: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 13: Converted 'talent.sanguine_ground' to 'talent.sanguine_ground.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 4: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 4: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 5: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 5: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 6: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 6: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 7: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 8: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'talent.dancing_rune_weapon' to 'talent.dancing_rune_weapon.enabled' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 11: Converted 'talent.dancing_rune_weapon' to 'talent.dancing_rune_weapon.enabled' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'standard' required some automated changes.\nLine 1: Converted 'talent.shattering_bone' to 'talent.shattering_bone.enabled' (1x).\nLine 4: Converted 'talent.insatiable_blade' to 'talent.insatiable_blade.enabled' (1x).\nLine 5: Converted 'talent.insatiable_blade' to 'talent.insatiable_blade.enabled' (1x).\n\nThe import for 'covenants' required some automated changes.\nLine 3: Converted 'soulbind.pustule_eruption' to 'soulbind.pustule_eruption.enabled' (1x).\nLine 3: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\n\nImported 7 action lists.\n",
["author"] = "SimC",
["profile"] = "actions.precombat+=/fleshcraft\n\n# Interrupt.\nactions+=/mind_freeze\n# Interrupt.\nactions+=/strangulate\n# Death Strike at 65+ Runic Power.\nactions+=/variable,name=death_strike_dump_amount,value=settings.death_strike_pool_amount\n# Refresh Bone Shield at 4 stacks with Death's Caress, Consumption, or Blooddrinker; otherwise 5 stacks.\nactions+=/variable,name=bone_shield_refresh_value,value=4,op=setif,condition=!talent.deaths_caress.enabled||talent.consumption.enabled||talent.blooddrinker.enabled,value_else=5\n# Use a Potion during Dancing Rune Weapon.\nactions+=/potion,if=buff.dancing_rune_weapon.up\n# Call the trinkets action list.\nactions+=/call_action_list,name=trinkets\n# Raise Dead if it's off cooldown.\nactions+=/raise_dead\n# Use Icebound Fortitude if you're taking sufficient damage and you don't have Dancing Rune Weapon or Vampiric Blood up.\nactions+=/icebound_fortitude,if=tanking&incoming_damage_5s>=ibf_damage&!(buff.dancing_rune_weapon.up||buff.vampiric_blood.up)\n# Use Vampiric Blood if you're taking sufficient damage and you don't have Dancing Rune Weapon, Icebound Fortitude, Vampiric Blood, or Vampiric Strength up.\nactions+=/vampiric_blood,if=tanking&incoming_damage_5s>=vb_damage&!(buff.dancing_rune_weapon.up||buff.icebound_fortitude.up||buff.vampiric_blood.up||buff.vampiric_strength.up)\n# Use Rune Tap if you're taking sufficient damage and you don't have Dancing Rune Weapon, Vampiric Blood, or Icebound Fortitude up.\nactions+=/rune_tap,if=tanking&incoming_damage_5s>=rt_damage&!(buff.dancing_rune_weapon.up||buff.vampiric_blood.up||buff.icebound_fortitude.up)\n# Use Death Strike if your Blood Shield is going to expire.\nactions+=/death_strike,if=settings.save_blood_shield&buff.blood_shield.up&buff.blood_shield.remains<=gcd.max\n# Use Death's Caress if Bone Shield is not up.\nactions+=/deaths_caress,if=!buff.bone_shield.up\n# Use Death and Decay if it's not already up and you have 4 targets, Unholy Ground, Sanguine Ground, or Crimson Scourge.\nactions+=/death_and_decay,if=!death_and_decay.ticking&(talent.unholy_ground||talent.sanguine_ground||spell_targets.death_and_decay>3||buff.crimson_scourge.up)\n# Use Death Strike if Coagulatopathy is down or about to expire, if Icy Talons is down or about to expire, if you're below the Death Strike dump amount, if you're below the Heart Strike Runic Power threshold, or if the target is about to die.\nactions+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd||runic_power>=variable.death_strike_dump_amount||runic_power.deficit<=variable.heart_strike_rp||boss&fight_remains<10\n# Use Blooddrinker if Dancing Rune Weapon is not up.\nactions+=/blooddrinker,if=!buff.dancing_rune_weapon.up\n# Call the racials action list.\nactions+=/call_action_list,name=racials\n# Use Sacrificial Pact if Dancing Rune Weapon is not active and the Ghoul is about to expire or the bossfight is about to end.\nactions+=/sacrificial_pact,if=!buff.dancing_rune_weapon.up&(pet.ghoul.remains<2||boss&fight_remains<gcd)\n# Call the covenants action list if they are active and valid.\nactions+=/call_action_list,name=covenants,strict=1,if=!covenant.none\n# Use Blood Tap if you have 2 or fewer runes, you won't reach 4 charges within the global cooldown, and you're about to cap charges, or if you will not reach 3 runes within global cooldown.\nactions+=/blood_tap,if=(rune<=2&rune.time_to_4>gcd&charges_fractional>=1.8)||rune.time_to_3>gcd\n# Use Gorefiend's Grasp if Tightening Grasp is talented.\nactions+=/gorefiends_grasp,if=talent.tightening_grasp.enabled\n# Use Empower Ruen Weapon if you have 6 or fewer runes and you're not about to cap Runic Power.\nactions+=/empower_rune_weapon,if=rune<6&runic_power.deficit>5\n# Use Abomination's Limb on cooldown.\nactions+=/abomination_limb\n# Use Dancing Rune Weapon if it is not already active.\nactions+=/dancing_rune_weapon,if=!buff.dancing_rune_weapon.up\n# Use the drw_up action list if Dancing Rune Weapon is active.\nactions+=/run_action_list,name=drw_up,strict=1,if=buff.dancing_rune_weapon.up\n# Call the standard action list (which will not be used if Dancing Rune Weapon is active).\nactions+=/call_action_list,name=standard\n\n# Use Death's Due if Death and Decay is not ticking and you don't have Death's Due or Crimson Scourge up.\nactions.covenants=deaths_due,if=!death_and_decay.ticking&(!buff.deaths_due.up||buff.deaths_due.remains<4||buff.crimson_scourge.up)\n# Use Swarming Mist if Dancing Rune Weapon is active for 3+ seconds and you have 90+ Runic Power (offset by number of targets).\nactions.covenants+=/swarming_mist,if=cooldown.dancing_rune_weapon.remains>3&runic_power>=(90-(spell_targets.swarming_mist*3))\n# Use Fleshcraft if you have Pustule Eruption or Volatile Solvent and Volatile Solvent is not active.\nactions.covenants+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent&!buff.volatile_solvent_humanoid.up,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\n# Use Shackle the Unworthy if you have 3 or fewer runes and Runic Power is below 100.\nactions.covenants+=/shackle_the_unworthy,if=rune<3&runic_power<100\n\n# Use Blood Boil if Blood Plague is not active.\nactions.drw_up+=/blood_boil,if=!dot.blood_plague.ticking\n# Use Tombstone if you have 5+ Bone Shield stacks, 2+ runes, 30+ Runic Power, and Shattering Bones is not talented or Death and Decay is not ticking.\nactions.drw_up+=/tombstone,if=buff.bone_shield.stack>5&rune>=2&runic_power.deficit>=30&!talent.shattering_bone||(talent.shattering_bone.enabled&death_and_decay.ticking)\n# Use Death Strike if Coagulatopathy is down or about to expire or if Icy Talons is down or about to expire.\nactions.drw_up+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd\nactions.drw_up+=/marrowrend,if=(buff.bone_shield.remains<=4||buff.bone_shield.stack<variable.bone_shield_refresh_value)&runic_power.deficit>20\nactions.drw_up+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.drw_up+=/soul_reaper,cycle_targets=1,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.drw_up+=/death_and_decay,if=!death_and_decay.ticking&(talent.sanguine_ground||talent.unholy_ground)\nactions.drw_up+=/blood_boil,if=spell_targets.blood_boil>2&charges_fractional>=1.1\nactions.drw_up+=/variable,name=heart_strike_rp_drw,value=(25+spell_targets.heart_strike*talent.heartbreaker.enabled*2)\nactions.drw_up+=/death_strike,if=runic_power.deficit<=variable.heart_strike_rp_drw||runic_power>=variable.death_strike_dump_amount\nactions.drw_up+=/consumption\nactions.drw_up+=/blood_boil,if=charges_fractional>=1.1&buff.hemostasis.stack<5\nactions.drw_up+=/heart_strike,if=rune.time_to_2<gcd||runic_power.deficit>=variable.heart_strike_rp_drw\n\nactions.racials=blood_fury,if=cooldown.dancing_rune_weapon.ready&(!cooldown.blooddrinker.ready||!talent.blooddrinker.enabled)\nactions.racials+=/berserking\nactions.racials+=/arcane_pulse,if=active_enemies>=2||rune<1&runic_power.deficit>60\nactions.racials+=/lights_judgment,if=buff.unholy_strength.up\nactions.racials+=/ancestral_call\nactions.racials+=/fireblood\nactions.racials+=/bag_of_tricks\nactions.racials+=/arcane_torrent,if=runic_power.deficit>20\n\nactions.standard+=/tombstone,if=buff.bone_shield.stack>5&rune>=2&runic_power.deficit>=30&!talent.shattering_bone||(talent.shattering_bone.enabled&death_and_decay.ticking)&cooldown.dancing_rune_weapon.remains>=25\nactions.standard+=/variable,name=heart_strike_rp,value=(10+spell_targets.heart_strike*talent.heartbreaker.enabled*2)\nactions.standard+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd||runic_power>=variable.death_strike_dump_amount||runic_power.deficit<=variable.heart_strike_rp||boss&fight_remains<10\nactions.standard+=/deaths_caress,if=(buff.bone_shield.remains<=4||(buff.bone_shield.stack<variable.bone_shield_refresh_value+1))&runic_power.deficit>10&!(talent.insatiable_blade&cooldown.dancing_rune_weapon.remains<buff.bone_shield.remains)&!talent.consumption.enabled&!talent.blooddrinker.enabled&rune.time_to_3>gcd\nactions.standard+=/marrowrend,if=(buff.bone_shield.remains<=4||buff.bone_shield.stack<variable.bone_shield_refresh_value)&runic_power.deficit>20&!(talent.insatiable_blade&cooldown.dancing_rune_weapon.remains<buff.bone_shield.remains)\nactions.standard+=/consumption\nactions.standard+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.standard+=/soul_reaper,cycle_targets=1,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.standard+=/bonestorm,if=runic_power>=100\nactions.standard+=/blood_boil,if=charges_fractional>=1.8&(buff.hemostasis.stack<=(5-spell_targets.blood_boil)||spell_targets.blood_boil>2)\nactions.standard+=/heart_strike,if=rune.time_to_4<gcd\nactions.standard+=/blood_boil,if=charges_fractional>=1.1\nactions.standard+=/heart_strike,if=(rune>1&(rune.time_to_3<gcd||buff.bone_shield.stack>7))\n\n# Trinkets\nactions.trinkets+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking\n# Prioritize damage dealing on use trinkets over trinkets that give buffs\nactions.trinkets+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)||trinket.1.is.mirror_of_fractured_tomorrows\nactions.trinkets+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)||trinket.2.is.mirror_of_fractured_tomorrows\nactions.trinkets+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.trinkets+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\nactions.trinkets+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl||variable.trinket_1_buffs\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown)\nactions.trinkets+=/use_items,use_off_gcd=1,if=(variable.trinket_1_buffs||trinket.1.cooldown.remains)&(variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&(buff.dancing_rune_weapon.up||!talent.dancing_rune_weapon||cooldown.dancing_rune_weapon.remains>20)&(variable.trinket_2_exclude||trinket.2.cooldown.remains||!trinket.2.has_cooldown||variable.trinket_2_buffs)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&(buff.dancing_rune_weapon.up||!talent.dancing_rune_weapon||cooldown.dancing_rune_weapon.remains>20)&(variable.trinket_1_exclude||trinket.1.cooldown.remains||!trinket.1.has_cooldown||variable.trinket_1_buffs)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)",
},
["Preservation"] = {
["builtIn"] = true,
["date"] = 20240730,
["spec"] = 1468,
["desc"] = "Healer priorities are DPS-focused only\n\n2024-07-30: The War Within",
["profile"] = "actions.precombat+=/blessing_of_the_bronze\n\nactions+=/quell\nactions+=/cauterizing_flame\nactions+=/unravel\nactions+=/deep_breath\nactions+=/potion\nactions+=/use_items\nactions+=/fire_breath,empower_to=1,if=fight_remains>14+cast_time\nactions+=/fire_breath,empower_to=2,if=fight_remains>8+cast_time\nactions+=/fire_breath,empower_to=3,if=fight_remains>2+cast_time\nactions+=/fire_breath,empower_to=4,if=empowering.fire_breath||fight_remains>cast_time\nactions+=/hover,if=moving&buff.hover.down&settings.use_hover\nactions+=/disintegrate,if=buff.essence_burst.up&(!moving||buff.hover.remains>cast_time)||essence.time_to_max<cast_time&settings.spend_essence\nactions+=/azure_strike,if=active_enemies>2\nactions+=/living_flame,if=!moving||buff.hover.remains>cast_time\nactions+=/azure_strike,if=moving&buff.hover.down",
["version"] = 20240730,
["warnings"] = "Imported 2 action lists.\n",
["author"] = "Kahekili",
["lists"] = {
["default"] = {
{
["action"] = "quell",
["enabled"] = true,
},
{
["action"] = "cauterizing_flame",
["enabled"] = true,
},
{
["action"] = "unravel",
["enabled"] = true,
},
{
["action"] = "deep_breath",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 14 + cast_time",
["action"] = "fire_breath",
["empower_to"] = "1",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 8 + cast_time",
["action"] = "fire_breath",
["empower_to"] = "2",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 2 + cast_time",
["action"] = "fire_breath",
["empower_to"] = "3",
},
{
["enabled"] = true,
["criteria"] = "empowering.fire_breath || fight_remains > cast_time",
["action"] = "fire_breath",
["empower_to"] = "4",
},
{
["enabled"] = true,
["criteria"] = "moving & buff.hover.down & settings.use_hover",
["action"] = "hover",
},
{
["enabled"] = true,
["criteria"] = "buff.essence_burst.up & ( ! moving || buff.hover.remains > cast_time ) || essence.time_to_max < cast_time & settings.spend_essence",
["action"] = "disintegrate",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2",
["action"] = "azure_strike",
},
{
["enabled"] = true,
["criteria"] = "! moving || buff.hover.remains > cast_time",
["action"] = "living_flame",
},
{
["enabled"] = true,
["criteria"] = "moving & buff.hover.down",
["action"] = "azure_strike",
},
},
["precombat"] = {
{
["action"] = "blessing_of_the_bronze",
["enabled"] = true,
},
},
},
},
["Brewmaster"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20230722,
["author"] = "SimC",
["desc"] = "2023-07-22:  Minor updates from SimC.\n\n2023-07-19: Add SCK to Press the Advantage priority.\n- Use BDB more often if/when WoO is out of sync.\n\n2023-07-15: Remove Purifying Brew that bypasses options.\n\n2023-07-12:  Minor TP fix for non-PTA and non-BOC.\n\n2023-07-11:  Patch 10.1.5 update.\n\n2023-07-02:  Use Exploding Keg without Bonedust Brew if BDB isn't talented.\n\n2023-05-24:  Beacon/WoO alignment no longer needed.\n\n2023-05-15:  Oops, reimplement fallback rotation.\n\n2023-05-08:  SCK and Beacon to the Beyond changes.\n\n2023-02-26:  Added Touch of Death back to the priority (appears to be missing from SimC).\n\nThe SimC Brewmaster priority uses Purifying Brew and Celestial Brew aggressively for DPS.  The addon has pared this back to support survivability.",
["lists"] = {
["rotation_pta"] = {
{
["enabled"] = true,
["criteria"] = "debuff.weapons_of_order_debuff.stack > 3",
["action"] = "invoke_niuzao_the_black_ox",
},
{
["enabled"] = true,
["criteria"] = "! talent.weapons_of_order.enabled",
["action"] = "invoke_niuzao_the_black_ox",
},
{
["enabled"] = true,
["criteria"] = "( buff.press_the_advantage.stack < 6 || buff.press_the_advantage.stack > 9 ) & active_enemies <= 4",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "( buff.press_the_advantage.stack < 8 || buff.press_the_advantage.stack > 9 ) & active_enemies > 4",
["action"] = "keg_smash",
},
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen <= 40",
["action"] = "black_ox_brew",
},
{
["enabled"] = true,
["criteria"] = "debuff.weapons_of_order_debuff.stack > 3 || ! talent.weapons_of_order.enabled",
["action"] = "summon_white_tiger_statue",
},
{
["enabled"] = true,
["action"] = "bonedust_brew",
["description"] = "Modified: If WoO is on cooldown and BDB will be back up before WoO's CD expires, go ahead and use BDB.",
["criteria"] = "talent.weapons_of_order.enabled & ( buff.weapons_of_order.down & cooldown.weapons_of_order.true_remains > action_cooldown || time < 10 & debuff.weapons_of_order_debuff.stack > 3 || time > 10 ) || ! talent.weapons_of_order.enabled",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up || ! talent.bonedust_brew.enabled",
["action"] = "exploding_keg",
},
{
["enabled"] = true,
["criteria"] = "! ( buff.press_the_advantage.stack > 6 & buff.blackout_combo.up )",
["action"] = "breath_of_fire",
},
{
["enabled"] = true,
["criteria"] = "! ( buff.press_the_advantage.stack > 6 & buff.blackout_combo.up )",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "spinning_crane_kick",
},
{
["action"] = "expel_harm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.chi_wave.enabled",
["action"] = "chi_wave",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled",
["action"] = "chi_burst",
},
},
["rotation_boc"] = {
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.weapons_of_order_debuff.stack > 3",
["action"] = "invoke_niuzao_the_black_ox",
},
{
["enabled"] = true,
["criteria"] = "! talent.weapons_of_order.enabled",
["action"] = "invoke_niuzao_the_black_ox",
},
{
["action"] = "weapons_of_order",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "action.weapons_of_order.time_since < 2 & talent.weapons_of_order.enabled",
["action"] = "keg_smash",
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.weapons_of_order.up & debuff.weapons_of_order_debuff.remains <= gcd.max * 2",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen <= 40",
["action"] = "black_ox_brew",
},
{
["enabled"] = true,
["criteria"] = "buff.blackout_combo.up & active_enemies = 1",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "buff.charred_passions.remains < cooldown.blackout_kick.remains",
["action"] = "breath_of_fire",
},
{
["enabled"] = true,
["criteria"] = "buff.charred_passions.down",
["action"] = "breath_of_fire",
},
{
["enabled"] = true,
["criteria"] = "buff.weapons_of_order.up & debuff.weapons_of_order_debuff.stack <= 3",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "debuff.weapons_of_order_debuff.stack > 3 || ! talent.weapons_of_order.enabled",
["action"] = "summon_white_tiger_statue",
},
{
["enabled"] = true,
["action"] = "bonedust_brew",
["description"] = "Modified: If WoO is on cooldown and BDB will be back up before WoO's CD expires, go ahead and use BDB.",
["criteria"] = "talent.weapons_of_order.enabled & ( buff.weapons_of_order.down & cooldown.weapons_of_order.true_remains > action_cooldown || time < 10 & debuff.weapons_of_order_debuff.stack > 3 || time > 10 ) || ! talent.weapons_of_order.enabled",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up || ! talent.bonedust_brew.enabled",
["action"] = "exploding_keg",
},
{
["action"] = "keg_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled",
["action"] = "rushing_jade_wind",
},
{
["action"] = "breath_of_fire",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & ! talent.blackout_combo.enabled",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "spinning_crane_kick",
},
{
["action"] = "expel_harm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.chi_wave.enabled",
["action"] = "chi_wave",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled",
["action"] = "chi_burst",
},
},
["default"] = {
{
["action"] = "spear_hand_strike",
["enabled"] = true,
},
{
["action"] = "diffuse_magic",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "settings.purify_for_celestial & ( time_to_max_charges < gcd.max || buff.purified_chi.up & buff.purified_chi.remains < 1.5 * gcd.max ) || cooldown.celestial_brew.remains < 2 * gcd.max & charges_fractional > 1.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "tanking & ( ! talent.improved_celestial_brew.enabled || buff.purified_chi.up ) & buff.blackout_combo.down",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "talent.improved_invoke_niuzao_the_black_ox.enabled & settings.purify_for_niuzao & pet.niuzao_the_black_ox.active",
["action"] = "purifying_brew",
["line_cd"] = "5",
},
{
["enabled"] = true,
["action"] = "purifying_brew",
["description"] = "Use configured purify_stagger_currhp from Brewmaster options.",
["criteria"] = "group & buff.blackout_combo.down & settings.purify_stagger_currhp > 0 & stagger.pct >= settings.purify_stagger_currhp",
},
{
["enabled"] = true,
["action"] = "purifying_brew",
["description"] = "Use configured purify_stagger_currhp from Brewmaster options.",
["criteria"] = "solo & buff.blackout_combo.down & settings.purify_stagger_currhp > 0 & stagger.pct >= settings.purify_stagger_currhp * 0.5",
},
{
["enabled"] = true,
["action"] = "purifying_brew",
["description"] = "Use configured purify_stagger_maxhp from Brewmaster options.",
["criteria"] = "group & buff.blackout_combo.down & settings.purify_stagger_maxhp > 0 & stagger.pct >= settings.purify_stagger_maxhp",
},
{
["enabled"] = true,
["action"] = "purifying_brew",
["description"] = "Use configured purify_stagger_maxhp from Brewmaster options.",
["criteria"] = "solo & buff.blackout_combo.down & settings.purify_stagger_maxhp > 0 & stagger.pct >= settings.purify_stagger_maxhp * 0.5",
},
{
["enabled"] = true,
["action"] = "purifying_brew",
["description"] = "Stagger % of 20 will kill you in 2.5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.",
["criteria"] = "group & buff.blackout_combo.down & settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & stagger.pct > 20",
},
{
["enabled"] = true,
["action"] = "purifying_brew",
["description"] = "Stagger % of 10 will kill you in 5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.",
["criteria"] = "solo & buff.blackout_combo.down & settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & stagger.pct > 10",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 75 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & buff.fortifying_brew.down",
["action"] = "dampen_harm",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 50 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & ( buff.dampen_harm.down )",
["action"] = "fortifying_brew",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "touch_of_death",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.weapons_of_order_debuff.stack > 3 || talent.weapons_of_order.enabled || boss & fight_remains < 25",
["action"] = "use_items",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.press_the_advantage.enabled",
["list_name"] = "rotation_pta",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.press_the_advantage.enabled",
["list_name"] = "rotation_boc",
},
},
["precombat"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_wave.enabled",
["action"] = "chi_wave",
},
{
["enabled"] = true,
["criteria"] = "talent.summon_white_tiger_statue.enabled",
["action"] = "summon_white_tiger_statue",
},
},
},
["version"] = 20230722,
["warnings"] = "The import for 'rotation_boc' required some automated changes.\nLine 14: Converted 'talent.weapons_of_order' to 'talent.weapons_of_order.enabled' (1x).\n\nThe import for 'rotation_pta' required some automated changes.\nLine 8: Converted 'talent.weapons_of_order' to 'talent.weapons_of_order.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 4: Converted 'talent.improved_celestial_brew' to 'talent.improved_celestial_brew.enabled' (1x).\nLine 5: Converted 'talent.improved_invoke_niuzao_the_black_ox' to 'talent.improved_invoke_niuzao_the_black_ox.enabled' (1x).\nLine 16: Converted 'talent.weapons_of_order' to 'talent.weapons_of_order.enabled' (1x).\n\nImported 4 action lists.\n",
["spec"] = 268,
["profile"] = "actions.precombat+=/potion\nactions.precombat+=/chi_burst,if=talent.chi_burst.enabled\nactions.precombat+=/chi_wave,if=talent.chi_wave.enabled\nactions.precombat+=/summon_white_tiger_statue,if=talent.summon_white_tiger_statue.enabled\n\nactions+=/spear_hand_strike\nactions+=/diffuse_magic\nactions+=/purifying_brew,if=settings.purify_for_celestial&(time_to_max_charges<gcd.max||buff.purified_chi.up&buff.purified_chi.remains<1.5*gcd.max)||cooldown.celestial_brew.remains<2*gcd.max&charges_fractional>1.5\nactions+=/celestial_brew,if=tanking&(!talent.improved_celestial_brew||buff.purified_chi.up)&buff.blackout_combo.down\nactions+=/purifying_brew,line_cd=5,if=talent.improved_invoke_niuzao_the_black_ox&settings.purify_for_niuzao&pet.niuzao_the_black_ox.active\n# Use configured purify_stagger_currhp from Brewmaster options.\nactions+=/purifying_brew,if=group&buff.blackout_combo.down&settings.purify_stagger_currhp>0&stagger.pct>=settings.purify_stagger_currhp\n# Use configured purify_stagger_currhp from Brewmaster options.\nactions+=/purifying_brew,if=solo&buff.blackout_combo.down&settings.purify_stagger_currhp>0&stagger.pct>=settings.purify_stagger_currhp*0.5\n# Use configured purify_stagger_maxhp from Brewmaster options.\nactions+=/purifying_brew,if=group&buff.blackout_combo.down&settings.purify_stagger_maxhp>0&stagger.pct>=settings.purify_stagger_maxhp\n# Use configured purify_stagger_maxhp from Brewmaster options.\nactions+=/purifying_brew,if=solo&buff.blackout_combo.down&settings.purify_stagger_maxhp>0&stagger.pct>=settings.purify_stagger_maxhp*0.5\n# Stagger % of 20 will kill you in 2.5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.\nactions+=/purifying_brew,if=group&buff.blackout_combo.down&settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&stagger.pct>20\n# Stagger % of 10 will kill you in 5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.\nactions+=/purifying_brew,if=solo&buff.blackout_combo.down&settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&stagger.pct>10\nactions+=/dampen_harm,if=health.pct<75&incoming_damage_3s>health.max*(0.2+(0.2*group))&buff.fortifying_brew.down\nactions+=/fortifying_brew,if=health.pct<50&incoming_damage_3s>health.max*(0.2+(0.2*group))&(buff.dampen_harm.down)\nactions+=/potion\n### Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> when <a href='https://www.wowhead.com/spell=387184/weapons-of-order'>Weapons of Order</a> reaches 4 stacks.\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.weapons_of_order.remains<=20&talent.weapons_of_order.enabled\n## actions+=/invoke_external_buff,name=power_infusion,if=!talent.weapons_of_order.enabled\nactions+=/touch_of_death\nactions+=/use_items,if=debuff.weapons_of_order_debuff.stack>3||talent.weapons_of_order||boss&fight_remains<25\nactions+=/blood_fury\nactions+=/berserking\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/call_action_list,name=rotation_pta,strict=1,if=talent.press_the_advantage.enabled\nactions+=/call_action_list,name=rotation_boc,strict=1,if=!talent.press_the_advantage.enabled\n\nactions.rotation_pta+=/invoke_niuzao_the_black_ox,if=debuff.weapons_of_order_debuff.stack>3\nactions.rotation_pta+=/invoke_niuzao_the_black_ox,if=!talent.weapons_of_order.enabled\nactions.rotation_pta+=/rising_sun_kick,if=(buff.press_the_advantage.stack<6||buff.press_the_advantage.stack>9)&active_enemies<=4\nactions.rotation_pta+=/keg_smash,if=(buff.press_the_advantage.stack<8||buff.press_the_advantage.stack>9)&active_enemies>4\nactions.rotation_pta+=/blackout_kick\n## actions.rotation_pta+=/purifying_brew,if=(!buff.blackout_combo.up)\nactions.rotation_pta+=/black_ox_brew,if=energy+energy.regen<=40\nactions.rotation_pta+=/summon_white_tiger_statue,if=debuff.weapons_of_order_debuff.stack>3||!talent.weapons_of_order.enabled\n# Modified: If WoO is on cooldown and BDB will be back up before WoO's CD expires, go ahead and use BDB.\nactions.rotation_pta+=/bonedust_brew,if=talent.weapons_of_order&(buff.weapons_of_order.down&cooldown.weapons_of_order.true_remains>cooldown||time<10&debuff.weapons_of_order_debuff.stack>3||time>10)||!talent.weapons_of_order.enabled\nactions.rotation_pta+=/exploding_keg,if=buff.bonedust_brew.up||!talent.bonedust_brew.enabled\nactions.rotation_pta+=/breath_of_fire,if=!(buff.press_the_advantage.stack>6&buff.blackout_combo.up)\nactions.rotation_pta+=/keg_smash,if=!(buff.press_the_advantage.stack>6&buff.blackout_combo.up)\nactions.rotation_pta+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled\nactions.rotation_pta+=/spinning_crane_kick,if=active_enemies>1\nactions.rotation_pta+=/expel_harm\nactions.rotation_pta+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_pta+=/chi_burst,if=talent.chi_burst.enabled\n\nactions.rotation_boc+=/blackout_kick\nactions.rotation_boc+=/invoke_niuzao_the_black_ox,if=debuff.weapons_of_order_debuff.stack>3\nactions.rotation_boc+=/invoke_niuzao_the_black_ox,if=!talent.weapons_of_order.enabled\nactions.rotation_boc+=/weapons_of_order\nactions.rotation_boc+=/keg_smash,if=action.weapons_of_order.time_since<2&talent.weapons_of_order.enabled\n## actions.rotation_boc+=/purifying_brew,if=(!buff.blackout_combo.up)\nactions.rotation_boc+=/rising_sun_kick\nactions.rotation_boc+=/keg_smash,if=buff.weapons_of_order.up&debuff.weapons_of_order_debuff.remains<=gcd*2\nactions.rotation_boc+=/black_ox_brew,if=energy+energy.regen<=40\nactions.rotation_boc+=/tiger_palm,if=buff.blackout_combo.up&active_enemies=1\nactions.rotation_boc+=/breath_of_fire,if=buff.charred_passions.remains<cooldown.blackout_kick.remains\nactions.rotation_boc+=/breath_of_fire,if=buff.charred_passions.down\nactions.rotation_boc+=/keg_smash,if=buff.weapons_of_order.up&debuff.weapons_of_order_debuff.stack<=3\nactions.rotation_boc+=/summon_white_tiger_statue,if=debuff.weapons_of_order_debuff.stack>3||!talent.weapons_of_order.enabled\n# Modified: If WoO is on cooldown and BDB will be back up before WoO's CD expires, go ahead and use BDB.\nactions.rotation_boc+=/bonedust_brew,if=talent.weapons_of_order&(buff.weapons_of_order.down&cooldown.weapons_of_order.true_remains>cooldown||time<10&debuff.weapons_of_order_debuff.stack>3||time>10)||!talent.weapons_of_order.enabled\nactions.rotation_boc+=/exploding_keg,if=buff.bonedust_brew.up||!talent.bonedust_brew.enabled\nactions.rotation_boc+=/keg_smash\nactions.rotation_boc+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled\nactions.rotation_boc+=/breath_of_fire\nactions.rotation_boc+=/tiger_palm,if=active_enemies=1&!talent.blackout_combo.enabled\nactions.rotation_boc+=/spinning_crane_kick,if=active_enemies>1\nactions.rotation_boc+=/expel_harm\nactions.rotation_boc+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_boc+=/chi_burst,if=talent.chi_burst.enabled",
},
["Destruction"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240723,
["author"] = "SimC",
["desc"] = "2024-07-23: The War Within (sort of)",
["lists"] = {
["items"] = {
{
["enabled"] = true,
["name"] = "belorrelos_the_suncaller",
["use_off_gcd"] = 1,
["criteria"] = "( ( time > 20 & cooldown.summon_infernal.remains > 20 ) || ( trinket.t1.is.belorrelos_the_suncaller & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs || trinket.t1.is.time_thiefs_gambit ) ) || ( trinket.t2.is.belorrelos_the_suncaller & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs || trinket.t2.is.time_thiefs_gambit ) ) ) & ( ! raid_event.adds.exists || raid_event.adds.up || spell_targets.belorrelos_the_suncaller >= 5 ) || boss & fight_remains < 20",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
["criteria"] = "( variable.infernal_active || ! talent.summon_infernal.enabled || ( variable.trinket_1_will_lose_cast & trinket.t1.is.nymues_unraveling_spindle ) || ( variable.trinket_2_will_lose_cast & trinket.t2.is.nymues_unraveling_spindle ) ) || boss & fight_remains < 20",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "We want to use trinkets with Infernal unless we will miss a trinket use. The trinket with highest estimated value, will be used first.",
["criteria"] = "( variable.infernal_active || ! talent.summon_infernal.enabled || variable.trinket_1_will_lose_cast ) & ( variable.trinket_priority = 1 || variable.trinket_2_exclude || ! trinket.t2.has_cooldown || ( trinket.t2.cooldown.remains || variable.trinket_priority = 2 & cooldown.summon_infernal.remains > 20 & ! variable.infernal_active & trinket.t2.cooldown.remains < cooldown.summon_infernal.remains ) ) & variable.trinket_1_buffs & ! variable.trinket_1_manual || ( variable.trinket_1_buff_duration + 1 >= fight_remains )",
},
{
["enabled"] = true,
["criteria"] = "( variable.infernal_active || ! talent.summon_infernal.enabled || variable.trinket_2_will_lose_cast ) & ( variable.trinket_priority = 2 || variable.trinket_1_exclude || ! trinket.t1.has_cooldown || ( trinket.t1.cooldown.remains || variable.trinket_priority = 1 & cooldown.summon_infernal.remains > 20 & ! variable.infernal_active & trinket.t1.cooldown.remains < cooldown.summon_infernal.remains ) ) & variable.trinket_2_buffs & ! variable.trinket_2_manual || ( variable.trinket_2_buff_duration + 1 >= fight_remains )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = false,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled || boss & fight_remains < 15 || ( ( trinket.t1.cooldown.duration < cooldown.summon_infernal.remains_expected + 5 ) & active_enemies = 1 ) || ( active_enemies > 1 & havoc_active )",
["name"] = "time_thiefs_gambit",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "If only one on use trinket provied a buff, use the other on cooldown, Or if neither trinket provied a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || talent.summon_infernal.enabled & cooldown.summon_infernal.remains_expected > 20 || ! talent.summon_infernal.enabled )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || talent.summon_infernal.enabled & cooldown.summon_infernal.remains_expected > 20 || ! talent.summon_infernal.enabled )",
},
{
["use_off_gcd"] = 1,
["action"] = "use_items",
["enabled"] = true,
},
},
["havoc"] = {
{
["enabled"] = true,
["criteria"] = "talent.backdraft.enabled & buff.backdraft.down & soul_shard >= 1 & soul_shard <= 4",
["action"] = "conflagrate",
},
{
["enabled"] = true,
["criteria"] = "cast_time < havoc_remains & soul_shard < 2.5",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4.5 & talent.raging_demonfire.rank = 2",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.remains < 2 & dot.immolate.remains < havoc_remains & target.time_to_die > 11 & soul_shard < 4.5",
["action"] = "immolate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( ( talent.cry_havoc.enabled & ! talent.inferno.enabled ) || ! talent.rain_of_fire.enabled ) & cast_time < havoc_remains",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "cast_time < havoc_remains & ( active_enemies <= 3 - talent.inferno.enabled + ( talent.chaosbringer.enabled & ! talent.inferno.enabled ) )",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3 & talent.inferno.enabled",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies >= 4 - talent.inferno.enabled + talent.chaosbringer.enabled )",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & ( talent.avatar_of_destruction.enabled || ( talent.rain_of_chaos.enabled & buff.rain_of_chaos.up ) ) & talent.inferno.enabled",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4.5",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "! talent.backdraft.enabled",
["action"] = "conflagrate",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4.7 & ( charges > 2 || boss & fight_remains < cooldown.dimensional_rift.duration )",
["action"] = "dimensional_rift",
},
{
["enabled"] = true,
["criteria"] = "cast_time < havoc_remains",
["action"] = "incinerate",
},
},
["cleave"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "ogcd",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "havoc_active & havoc_remains > gcd.max",
["list_name"] = "havoc",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.havoc.remains <= 10 || talent.mayhem.enabled",
["var_name"] = "pool_soul_shards",
},
{
["enabled"] = true,
["criteria"] = "( talent.roaring_blaze.enabled & debuff.conflagrate.remains < 1.5 ) || charges = max_charges & ! variable.pool_soul_shards",
["action"] = "conflagrate",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4.7 & ( charges > 2 || boss & fight_remains < cooldown.dimensional_rift.duration )",
["action"] = "dimensional_rift",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15",
["action"] = "cataclysm",
},
{
["enabled"] = true,
["criteria"] = "talent.raging_demonfire.enabled & active_dot.immolate = 2",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "soul_shard <= 3.5 & ( debuff.conflagrate.remains > cast_time + travel_time || ! talent.roaring_blaze.enabled & buff.backdraft.up ) & ! variable.pool_soul_shards",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "( dot.immolate.refreshable & ( dot.immolate.remains < cooldown.havoc.remains || ! dot.immolate.ticking ) ) & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains + ( ! talent.mayhem.enabled * action.soul_fire.cast_time ) > dot.immolate.remains ) & target.time_to_die > 15",
["action"] = "immolate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( ! cooldown.summon_infernal.up || ! talent.summon_infernal.enabled ) & target.time_to_die > 8",
["action"] = "havoc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4.5 & variable.pool_soul_shards",
["action"] = "dimensional_rift",
},
{
["enabled"] = true,
["criteria"] = "pet.infernal.active || pet.blasphemy.active || soul_shard >= 4",
["action"] = "chaos_bolt",
},
{
["action"] = "summon_infernal",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.ruin.rank > 1 & ! ( talent.diabolic_embers.enabled & talent.avatar_of_destruction.enabled & ( talent.burn_to_ashes.enabled || talent.chaos_incarnate.enabled ) )",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 3.5",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.rain_of_chaos.remains > cast_time",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.backdraft.up",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "soul_shard <= 4 & talent.mayhem.enabled",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "talent.eradication.enabled & debuff.eradication.remains < cast_time + action.chaos_bolt.travel_time + 1 & ! action.chaos_bolt.in_flight",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "! ( talent.diabolic_embers.enabled & talent.avatar_of_destruction.enabled & ( talent.burn_to_ashes.enabled || talent.chaos_incarnate.enabled ) )",
["action"] = "channel_demonfire",
},
{
["action"] = "dimensional_rift",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 3.5 & ! variable.pool_soul_shards",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 5 & fight_remains > cast_time + travel_time",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "charges > ( max_charges - 1 ) || boss & fight_remains < gcd.max * charges",
["action"] = "conflagrate",
},
{
["action"] = "incinerate",
["enabled"] = true,
},
},
["aoe"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "ogcd",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "havoc_active & havoc_remains > gcd.max & active_enemies < 5 + ( talent.cry_havoc.enabled & ! talent.inferno.enabled ) & ( ! cooldown.summon_infernal.up || ! talent.summon_infernal.enabled )",
["list_name"] = "havoc",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4.7 & ( charges > 2 || boss & fight_remains < cooldown.dimensional_rift.duration )",
["action"] = "dimensional_rift",
},
{
["enabled"] = true,
["criteria"] = "pet.infernal.active || pet.blasphemy.active",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 12",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "soul_shard >= ( 4.5 - 0.1 * active_dot.immolate ) & time > 5",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 3.5 - ( 0.1 * active_enemies ) & ! talent.rain_of_fire.enabled",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15",
["action"] = "cataclysm",
},
{
["enabled"] = true,
["criteria"] = "( ! cooldown.summon_infernal.up || ! talent.summon_infernal.enabled || ( talent.inferno.enabled & active_enemies > 4 ) ) & target.time_to_die > 8",
["action"] = "havoc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.refreshable & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains ) & ( ! talent.raging_demonfire.enabled || cooldown.channel_demonfire.remains > remains || time < 5 ) & active_dot.immolate <= 4 & target.time_to_die > 18",
["action"] = "immolate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.remains > cast_time & talent.raging_demonfire.enabled",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "ogcd",
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_power_infusion_0.up || cooldown.invoke_power_infusion_0.duration = 0 || fight_remains >= 190 & ! talent.grand_warlocks_design.enabled",
["action"] = "summon_infernal",
},
{
["enabled"] = true,
["criteria"] = "debuff.pyrogenics.down & active_enemies <= 4",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.remains > cast_time",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "( ( dot.immolate.refreshable & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains ) ) || cycle_enemies > active_dot.immolate ) & target.time_to_die > 10 & ! havoc_active",
["action"] = "immolate",
["cycle_targets"] = 1,
},
{
["action"] = "dimensional_rift",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.backdraft.up",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "talent.fire_and_brimstone.enabled & buff.backdraft.up",
["action"] = "incinerate",
},
{
["enabled"] = true,
["criteria"] = "buff.backdraft.stack < 2 || ! talent.backdraft.enabled",
["action"] = "conflagrate",
},
{
["action"] = "incinerate",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "time > 0 & ! pet.alive",
["action"] = "fel_domination",
},
{
["action"] = "summon_pet",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "cleave_apl",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.summon_infernal.duration = 0 || cooldown.summon_infernal.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.summon_infernal.duration = 0 || cooldown.summon_infernal.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.belorrelos_the_suncaller || trinket.t1.is.nymues_unraveling_spindle || trinket.t1.is.timethiefs_gambit",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.belorrelos_the_suncaller || trinket.t2.is.nymues_unraveling_spindle || trinket.t2.is.timethiefs_gambit",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.buff_duration + ( trinket.t1.is.mirror_of_fractured_tomorrows * 20 ) + ( trinket.t1.is.nymues_unraveling_spindle * 2 )",
["var_name"] = "trinket_1_buff_duration",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.buff_duration + ( trinket.t2.is.mirror_of_fractured_tomorrows * 20 ) + ( trinket.t2.is.nymues_unraveling_spindle * 2 )",
["var_name"] = "trinket_2_buff_duration",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_buff_duration ) * ( 1 + 0.5 * trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) * ( 1 - 0.5 * trinket.t2.is.mirror_of_fractured_tomorrows ) ) > ( ( trinket.t1.cooldown.duration / variable.trinket_1_buff_duration ) * ( 1 + 0.5 * trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 - 0.5 * trinket.t1.is.mirror_of_fractured_tomorrows ) )",
},
{
["enabled"] = true,
["criteria"] = "talent.grimoire_of_sacrifice.enabled",
["action"] = "grimoire_of_sacrifice",
},
{
["action"] = "soul_fire",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15",
["action"] = "cataclysm",
},
{
["action"] = "incinerate",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "spell_lock",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "pet.infernal.active || ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) < 20",
["var_name"] = "infernal_active",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( floor ( ( fight_remains / trinket.t1.cooldown.duration ) + 1 ) != floor ( ( fight_remains + ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) ) / cooldown.summon_infernal.duration ) ) & ( floor ( ( fight_remains / trinket.t1.cooldown.duration ) + 1 ) ) != ( floor ( ( ( fight_remains - cooldown.summon_infernal.remains ) / trinket.t1.cooldown.duration ) + 1 ) ) || ( ( floor ( ( fight_remains / trinket.t1.cooldown.duration ) + 1 ) = floor ( ( fight_remains + ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) ) / cooldown.summon_infernal.duration ) ) & ( ( ( fight_remains - cooldown.summon_infernal.remains % trinket.t1.cooldown.duration ) - cooldown.summon_infernal.remains - variable.trinket_1_buff_duration ) > 0 ) ) ) & cooldown.summon_infernal.remains > 20",
["var_name"] = "trinket_1_will_lose_cast",
["description"] = "If we can have more use of trinket than use of infernal, we want to it, but we want to sync if we don't lose a cast, and if we sync we don't lose it too late",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( floor ( ( fight_remains / trinket.t2.cooldown.duration ) + 1 ) != floor ( ( fight_remains + ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) ) / cooldown.summon_infernal.duration ) ) & ( floor ( ( fight_remains / trinket.t2.cooldown.duration ) + 1 ) ) != ( floor ( ( ( fight_remains - cooldown.summon_infernal.remains ) / trinket.t2.cooldown.duration ) + 1 ) ) || ( ( floor ( ( fight_remains / trinket.t2.cooldown.duration ) + 1 ) = floor ( ( fight_remains + ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) ) / cooldown.summon_infernal.duration ) ) & ( ( ( fight_remains - cooldown.summon_infernal.remains % trinket.t2.cooldown.duration ) - cooldown.summon_infernal.remains - variable.trinket_2_buff_duration ) > 0 ) ) ) & cooldown.summon_infernal.remains > 20",
["var_name"] = "trinket_2_will_lose_cast",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_enemies >= 3 - ( talent.inferno.enabled & ! talent.chaosbringer.enabled ) ) & ! ( ! talent.inferno.enabled & talent.chaosbringer.enabled & talent.chaos_incarnate.enabled & active_enemies < 4 ) & ! variable.cleave_apl",
["var_name"] = "aoe_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies > 1 || variable.cleave_apl",
["var_name"] = "cleave_condition",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.aoe_condition",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.cleave_condition",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! variable.aoe_condition & ! variable.cleave_condition",
["list_name"] = "ogcd",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! variable.aoe_condition & ! variable.cleave_condition",
["list_name"] = "items",
},
{
["enabled"] = true,
["criteria"] = "( talent.roaring_blaze.enabled & debuff.conflagrate.remains < 1.5 ) & soul_shard > 1.5 || charges = max_charges",
["action"] = "conflagrate",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4.7 & ( charges > 2 || boss & fight_remains < cooldown.dimensional_rift.duration )",
["action"] = "dimensional_rift",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15",
["action"] = "cataclysm",
},
{
["enabled"] = true,
["criteria"] = "talent.raging_demonfire.enabled & ( dot.immolate.remains - 5 * ( action.chaos_bolt.in_flight & talent.internal_combustion.enabled ) ) > cast_time & ( debuff.conflagrate.remains > execute_time || ! talent.roaring_blaze.enabled )",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "soul_shard <= 3.5 & ( debuff.conflagrate.remains > cast_time + travel_time || ! talent.roaring_blaze.enabled & buff.backdraft.up )",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "( ( ( dot.immolate.remains - 5 * ( action.chaos_bolt.in_flight & talent.internal_combustion.enabled ) ) < dot.immolate.duration * 0.3 ) || dot.immolate.remains < 3 || ( dot.immolate.remains - action.chaos_bolt.execute_time ) < 5 & talent.internal_combustion.enabled & action.chaos_bolt.usable ) & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains + action.soul_fire.cast_time > ( dot.immolate.remains - 5 * talent.internal_combustion.enabled ) ) & target.time_to_die > 8",
["action"] = "immolate",
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.remains > cast_time & set_bonus.tier30_4pc",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_infernal.remains = 0 & soul_shard > 4 & talent.crashing_chaos.enabled",
["action"] = "chaos_bolt",
},
{
["action"] = "summon_infernal",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "pet.infernal.active || pet.blasphemy.active || soul_shard >= 4",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "talent.ruin.rank > 1 & ! ( talent.diabolic_embers.enabled & talent.avatar_of_destruction.enabled & ( talent.burn_to_ashes.enabled || talent.chaos_incarnate.enabled ) ) & dot.immolate.remains > cast_time",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "buff.rain_of_chaos.remains > cast_time",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.backdraft.up",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "! ( talent.diabolic_embers.enabled & talent.avatar_of_destruction.enabled & ( talent.burn_to_ashes.enabled || talent.chaos_incarnate.enabled ) ) & dot.immolate.remains > cast_time",
["action"] = "channel_demonfire",
},
{
["action"] = "dimensional_rift",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 5 & fight_remains > cast_time + travel_time",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "charges > ( max_charges - 1 ) || boss & fight_remains < gcd.max * charges",
["action"] = "conflagrate",
},
{
["action"] = "incinerate",
["enabled"] = true,
},
},
["ogcd"] = {
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled || ( boss & fight_remains < ( cooldown.summon_infernal.remains_expected + cooldown.berserking.duration ) & ( fight_remains > cooldown.berserking.duration ) ) || boss & fight_remains < cooldown.summon_infernal.remains_expected",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled || ( boss & fight_remains < cooldown.summon_infernal.remains_expected + 10 + cooldown.blood_fury.duration & fight_remains > cooldown.blood_fury.duration ) || boss & fight_remains < cooldown.summon_infernal.remains",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled || ( boss & fight_remains < cooldown.summon_infernal.remains_expected + 10 + cooldown.fireblood.duration & fight_remains > cooldown.fireblood.duration ) || boss & fight_remains < cooldown.summon_infernal.remains_expected",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled || ( boss & fight_remains < ( cooldown.summon_infernal.remains_expected + cooldown.berserking.duration ) & ( fight_remains > cooldown.berserking.duration ) ) || boss & fight_remains < cooldown.summon_infernal.remains_expected",
["action"] = "ancestral_call",
},
},
},
["version"] = 20240723,
["warnings"] = "The import for 'items' required some automated changes.\nLine 1: Converted 'trinket.1.is.belorrelos_the_suncaller' to 'trinket.t1.is.belorrelos_the_suncaller' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 1: Converted 'trinket.1.is.time_thiefs_gambit' to 'trinket.t1.is.time_thiefs_gambit' (1x).\nLine 1: Converted 'trinket.2.is.belorrelos_the_suncaller' to 'trinket.t2.is.belorrelos_the_suncaller' (1x).\nLine 1: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 1: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 1: Converted 'trinket.2.is.time_thiefs_gambit' to 'trinket.t2.is.time_thiefs_gambit' (1x).\nLine 2: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 2: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 2: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 3: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Unsupported use_item action [ time_thiefs_gambit]; entry disabled.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 6: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 7: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted operations in '((floor((fight_remains%trinket.t1.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(floor((fight_remains%trinket.t1.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)%trinket.t1.cooldown.duration)+1))||((floor((fight_remains%trinket.t1.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%%trinket.t1.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_1_buff_duration)>0)))&cooldown.summon_infernal.remains>20' to '((floor((fight_remains/trinket.t1.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))/cooldown.summon_infernal.duration))&(floor((fight_remains/trinket.t1.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)/trinket.t1.cooldown.duration)+1))||((floor((fight_remains/trinket.t1.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))/cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%trinket.t1.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_1_buff_duration)>0)))&cooldown.summon_infernal.remains>20'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted operations in '((floor((fight_remains%trinket.t2.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(floor((fight_remains%trinket.t2.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)%trinket.t2.cooldown.duration)+1))||((floor((fight_remains%trinket.t2.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%%trinket.t2.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_2_buff_duration)>0)))&cooldown.summon_infernal.remains>20' to '((floor((fight_remains/trinket.t2.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))/cooldown.summon_infernal.duration))&(floor((fight_remains/trinket.t2.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)/trinket.t2.cooldown.duration)+1))||((floor((fight_remains/trinket.t2.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))/cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%trinket.t2.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_2_buff_duration)>0)))&cooldown.summon_infernal.remains>20'.\nLine 5: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 5: Converted 'talent.chaosbringer' to 'talent.chaosbringer.enabled' (1x).\nLine 5: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 5: Converted 'talent.chaosbringer' to 'talent.chaosbringer.enabled' (1x).\nLine 5: Converted 'talent.chaos_incarnate' to 'talent.chaos_incarnate.enabled' (1x).\nLine 11: Converted 'talent.roaring_blaze' to 'talent.roaring_blaze.enabled' (1x).\nLine 14: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 14: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 14: Converted 'talent.roaring_blaze' to 'talent.roaring_blaze.enabled' (1x).\nLine 15: Converted 'talent.roaring_blaze' to 'talent.roaring_blaze.enabled' (1x).\nLine 16: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 16: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 16: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 16: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 16: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 18: Converted 'talent.crashing_chaos' to 'talent.crashing_chaos.enabled' (1x).\nLine 21: Converted 'talent.diabolic_embers' to 'talent.diabolic_embers.enabled' (1x).\nLine 21: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 21: Converted 'talent.burn_to_ashes' to 'talent.burn_to_ashes.enabled' (1x).\nLine 21: Converted 'talent.chaos_incarnate' to 'talent.chaos_incarnate.enabled' (1x).\nLine 24: Converted 'talent.diabolic_embers' to 'talent.diabolic_embers.enabled' (1x).\nLine 24: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 24: Converted 'talent.burn_to_ashes' to 'talent.burn_to_ashes.enabled' (1x).\nLine 24: Converted 'talent.chaos_incarnate' to 'talent.chaos_incarnate.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%trinket.t1.cooldown.duration=0)'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%trinket.t2.cooldown.duration=0)'.\nLine 8: Converted 'trinket.1.is.belorrelos_the_suncaller' to 'trinket.t1.is.belorrelos_the_suncaller' (1x).\nLine 8: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 8: Converted 'trinket.1.is.timethiefs_gambit' to 'trinket.t1.is.timethiefs_gambit' (1x).\nLine 9: Converted 'trinket.2.is.belorrelos_the_suncaller' to 'trinket.t2.is.belorrelos_the_suncaller' (1x).\nLine 9: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 9: Converted 'trinket.2.is.timethiefs_gambit' to 'trinket.t2.is.timethiefs_gambit' (1x).\nLine 10: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 10: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 11: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 11: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 12: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 12: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 13: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 13: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 14: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 14: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 14: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 14: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 14: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 14: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 14: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 14: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 14: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_buff_duration)*(1+0.5*trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1-0.5*trinket.t2.is.mirror_of_fractured_tomorrows))>((trinket.t1.cooldown.duration%variable.trinket_1_buff_duration)*(1+0.5*trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1-0.5*trinket.t1.is.mirror_of_fractured_tomorrows))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_buff_duration)*(1+0.5*trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1-0.5*trinket.t2.is.mirror_of_fractured_tomorrows))>((trinket.t1.cooldown.duration/variable.trinket_1_buff_duration)*(1+0.5*trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1-0.5*trinket.t1.is.mirror_of_fractured_tomorrows))'.\n\nThe import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.cry_havoc' to 'talent.cry_havoc.enabled' (1x).\nLine 3: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 3: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 8: Converted 'talent.rain_of_fire' to 'talent.rain_of_fire.enabled' (1x).\nLine 10: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 10: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 11: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 12: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 14: Converted 'talent.grand_warlocks_design' to 'talent.grand_warlocks_design.enabled' (1x).\nLine 21: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 4: Converted 'talent.mayhem' to 'talent.mayhem.enabled' (1x).\nLine 8: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 9: Converted 'talent.roaring_blaze' to 'talent.roaring_blaze.enabled' (1x).\nLine 10: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 10: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 10: Converted 'talent.mayhem' to 'talent.mayhem.enabled' (1x).\nLine 11: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 15: Converted 'talent.diabolic_embers' to 'talent.diabolic_embers.enabled' (1x).\nLine 15: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 15: Converted 'talent.burn_to_ashes' to 'talent.burn_to_ashes.enabled' (1x).\nLine 15: Converted 'talent.chaos_incarnate' to 'talent.chaos_incarnate.enabled' (1x).\nLine 19: Converted 'talent.mayhem' to 'talent.mayhem.enabled' (1x).\nLine 20: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 21: Converted 'talent.diabolic_embers' to 'talent.diabolic_embers.enabled' (1x).\nLine 21: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 21: Converted 'talent.burn_to_ashes' to 'talent.burn_to_ashes.enabled' (1x).\nLine 21: Converted 'talent.chaos_incarnate' to 'talent.chaos_incarnate.enabled' (1x).\n\nThe import for 'havoc' required some automated changes.\nLine 1: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\nLine 5: Converted 'talent.cry_havoc' to 'talent.cry_havoc.enabled' (1x).\nLine 5: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 5: Converted 'talent.rain_of_fire' to 'talent.rain_of_fire.enabled' (1x).\nLine 6: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 6: Converted 'talent.chaosbringer' to 'talent.chaosbringer.enabled' (1x).\nLine 6: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 7: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 8: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 8: Converted 'talent.chaosbringer' to 'talent.chaosbringer.enabled' (1x).\nLine 9: Converted 'talent.avatar_of_destruction' to 'talent.avatar_of_destruction.enabled' (1x).\nLine 9: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\nLine 11: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\n\nThe import for 'ogcd' required some automated changes.\nLine 1: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 2: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 3: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 4: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 5: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat=fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/variable,name=cleave_apl,default=0,op=reset\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%%trinket.2.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.belorrelos_the_suncaller||trinket.1.is.nymues_unraveling_spindle||trinket.1.is.timethiefs_gambit\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.belorrelos_the_suncaller||trinket.2.is.nymues_unraveling_spindle||trinket.2.is.timethiefs_gambit\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_1_buff_duration,value=trinket.1.proc.any_dps.duration+(trinket.1.is.mirror_of_fractured_tomorrows*20)+(trinket.1.is.nymues_unraveling_spindle*2)\nactions.precombat+=/variable,name=trinket_2_buff_duration,value=trinket.2.proc.any_dps.duration+(trinket.2.is.mirror_of_fractured_tomorrows*20)+(trinket.2.is.nymues_unraveling_spindle*2)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_buff_duration)*(1+0.5*trinket.2.has_buff.intellect)*(variable.trinket_2_sync)*(1-0.5*trinket.2.is.mirror_of_fractured_tomorrows))>((trinket.1.cooldown.duration%variable.trinket_1_buff_duration)*(1+0.5*trinket.1.has_buff.intellect)*(variable.trinket_1_sync)*(1-0.5*trinket.1.is.mirror_of_fractured_tomorrows))\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/soul_fire\nactions.precombat+=/cataclysm,if=raid_event.adds.in>15\nactions.precombat+=/incinerate\n\nactions+=/spell_lock\n## actions+=/variable,name=havoc_immo_time,op=reset\n## actions+=/cycling_variable,name=havoc_immo_time,op=add,value=dot.immolate.remains*debuff.havoc.up\nactions+=/variable,name=infernal_active,op=set,value=pet.infernal.active||(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains)<20\n# If we can have more use of trinket than use of infernal, we want to it, but we want to sync if we don't lose a cast, and if we sync we don't lose it too late\nactions+=/variable,name=trinket_1_will_lose_cast,value=((floor((fight_remains%trinket.1.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(floor((fight_remains%trinket.1.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)%trinket.1.cooldown.duration)+1))||((floor((fight_remains%trinket.1.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%%trinket.1.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_1_buff_duration)>0)))&cooldown.summon_infernal.remains>20\nactions+=/variable,name=trinket_2_will_lose_cast,value=((floor((fight_remains%trinket.2.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(floor((fight_remains%trinket.2.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)%trinket.2.cooldown.duration)+1))||((floor((fight_remains%trinket.2.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%%trinket.2.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_2_buff_duration)>0)))&cooldown.summon_infernal.remains>20\nactions+=/variable,name=aoe_condition,value=(active_enemies>=3-(talent.inferno&!talent.chaosbringer))&!(!talent.inferno&talent.chaosbringer&talent.chaos_incarnate&active_enemies<4)&!variable.cleave_apl\nactions+=/variable,name=cleave_condition,value=active_enemies>1||variable.cleave_apl\nactions+=/call_action_list,name=aoe,if=variable.aoe_condition\nactions+=/call_action_list,name=cleave,if=variable.cleave_condition\nactions+=/call_action_list,name=ogcd,strict=1,if=!variable.aoe_condition&!variable.cleave_condition\nactions+=/call_action_list,name=items,strict=1,if=!variable.aoe_condition&!variable.cleave_condition\nactions+=/conflagrate,if=(talent.roaring_blaze&debuff.conflagrate.remains<1.5)&soul_shard>1.5||charges=max_charges\nactions+=/dimensional_rift,if=soul_shard<4.7&(charges>2||boss&fight_remains<cooldown.dimensional_rift.duration)\nactions+=/cataclysm,if=raid_event.adds.in>15\nactions+=/channel_demonfire,if=talent.raging_demonfire&(dot.immolate.remains-5*(action.chaos_bolt.in_flight&talent.internal_combustion))>cast_time&(debuff.conflagrate.remains>execute_time||!talent.roaring_blaze)\nactions+=/soul_fire,if=soul_shard<=3.5&(debuff.conflagrate.remains>cast_time+travel_time||!talent.roaring_blaze&buff.backdraft.up)\nactions+=/immolate,if=(((dot.immolate.remains-5*(action.chaos_bolt.in_flight&talent.internal_combustion))<dot.immolate.duration*0.3)||dot.immolate.remains<3||(dot.immolate.remains-action.chaos_bolt.execute_time)<5&talent.internal_combustion&action.chaos_bolt.usable)&(!talent.cataclysm||cooldown.cataclysm.remains>dot.immolate.remains)&(!talent.soul_fire||cooldown.soul_fire.remains+action.soul_fire.cast_time>(dot.immolate.remains-5*talent.internal_combustion))&target.time_to_die>8\nactions+=/channel_demonfire,if=dot.immolate.remains>cast_time&set_bonus.tier30_4pc\nactions+=/chaos_bolt,if=cooldown.summon_infernal.remains=0&soul_shard>4&talent.crashing_chaos\nactions+=/summon_infernal\nactions+=/chaos_bolt,if=pet.infernal.active||pet.blasphemy.active||soul_shard>=4\nactions+=/channel_demonfire,if=talent.ruin.rank>1&!(talent.diabolic_embers&talent.avatar_of_destruction&(talent.burn_to_ashes||talent.chaos_incarnate))&dot.immolate.remains>cast_time\nactions+=/chaos_bolt,if=buff.rain_of_chaos.remains>cast_time\nactions+=/chaos_bolt,if=buff.backdraft.up\nactions+=/channel_demonfire,if=!(talent.diabolic_embers&talent.avatar_of_destruction&(talent.burn_to_ashes||talent.chaos_incarnate))&dot.immolate.remains>cast_time\nactions+=/dimensional_rift\nactions+=/chaos_bolt,if=boss&fight_remains<5&fight_remains>cast_time+travel_time\nactions+=/conflagrate,if=charges>(max_charges-1)||boss&fight_remains<gcd.max*charges\nactions+=/incinerate\n\nactions.aoe+=/call_action_list,name=ogcd\nactions.aoe+=/call_action_list,name=items\nactions.aoe+=/call_action_list,name=havoc,if=havoc_active&havoc_remains>gcd.max&active_enemies<5+(talent.cry_havoc&!talent.inferno)&(!cooldown.summon_infernal.up||!talent.summon_infernal)\nactions.aoe+=/dimensional_rift,if=soul_shard<4.7&(charges>2||boss&fight_remains<cooldown.dimensional_rift.duration)\nactions.aoe+=/rain_of_fire,if=pet.infernal.active||pet.blasphemy.active\nactions.aoe+=/rain_of_fire,if=boss&fight_remains<12\nactions.aoe+=/rain_of_fire,if=soul_shard>=(4.5-0.1*active_dot.immolate)&time>5\nactions.aoe+=/chaos_bolt,if=soul_shard>3.5-(0.1*active_enemies)&!talent.rain_of_fire\nactions.aoe+=/cataclysm,if=raid_event.adds.in>15\nactions.aoe+=/havoc,cycle_targets=1,if=(!cooldown.summon_infernal.up||!talent.summon_infernal||(talent.inferno&active_enemies>4))&target.time_to_die>8\nactions.aoe+=/immolate,cycle_targets=1,if=dot.immolate.refreshable&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.immolate.remains)&(!talent.raging_demonfire||cooldown.channel_demonfire.remains>remains||time<5)&active_dot.immolate<=4&target.time_to_die>18\nactions.aoe+=/channel_demonfire,if=dot.immolate.remains>cast_time&talent.raging_demonfire\nactions.aoe+=/call_action_list,name=ogcd\nactions.aoe+=/summon_infernal,if=cooldown.invoke_power_infusion_0.up||cooldown.invoke_power_infusion_0.duration=0||fight_remains>=190&!talent.grand_warlocks_design\nactions.aoe+=/rain_of_fire,if=debuff.pyrogenics.down&active_enemies<=4\nactions.aoe+=/channel_demonfire,if=dot.immolate.remains>cast_time\nactions.aoe+=/immolate,cycle_targets=1,if=((dot.immolate.refreshable&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.immolate.remains))||cycle_enemies>active_dot.immolate)&target.time_to_die>10&!havoc_active\n## actions.aoe+=/immolate,cycle_targets=1,if=((dot.immolate.refreshable)||(dot.immolate.remains<2&dot.immolate.remains<havoc_remains)||!dot.immolate.ticking||(variable.havoc_immo_time<2)*havoc_active)&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.immolate.remains)&target.time_to_die>11\nactions.aoe+=/dimensional_rift\nactions.aoe+=/soul_fire,if=buff.backdraft.up\nactions.aoe+=/incinerate,if=talent.fire_and_brimstone.enabled&buff.backdraft.up\nactions.aoe+=/conflagrate,if=buff.backdraft.stack<2||!talent.backdraft\nactions.aoe+=/incinerate\n\nactions.cleave+=/call_action_list,name=items\nactions.cleave+=/call_action_list,name=ogcd\nactions.cleave+=/call_action_list,name=havoc,if=havoc_active&havoc_remains>gcd.max\nactions.cleave+=/variable,name=pool_soul_shards,value=cooldown.havoc.remains<=10||talent.mayhem\nactions.cleave+=/conflagrate,if=(talent.roaring_blaze.enabled&debuff.conflagrate.remains<1.5)||charges=max_charges&!variable.pool_soul_shards\nactions.cleave+=/dimensional_rift,if=soul_shard<4.7&(charges>2||boss&fight_remains<cooldown.dimensional_rift.duration)\nactions.cleave+=/cataclysm,if=raid_event.adds.in>15\nactions.cleave+=/channel_demonfire,if=talent.raging_demonfire&active_dot.immolate=2\nactions.cleave+=/soul_fire,if=soul_shard<=3.5&(debuff.conflagrate.remains>cast_time+travel_time||!talent.roaring_blaze&buff.backdraft.up)&!variable.pool_soul_shards\nactions.cleave+=/immolate,cycle_targets=1,if=(dot.immolate.refreshable&(dot.immolate.remains<cooldown.havoc.remains||!dot.immolate.ticking))&(!talent.cataclysm||cooldown.cataclysm.remains>remains)&(!talent.soul_fire||cooldown.soul_fire.remains+(!talent.mayhem*action.soul_fire.cast_time)>dot.immolate.remains)&target.time_to_die>15\nactions.cleave+=/havoc,cycle_targets=1,if=(!cooldown.summon_infernal.up||!talent.summon_infernal)&target.time_to_die>8\nactions.cleave+=/dimensional_rift,if=soul_shard<4.5&variable.pool_soul_shards\nactions.cleave+=/chaos_bolt,if=pet.infernal.active||pet.blasphemy.active||soul_shard>=4\nactions.cleave+=/summon_infernal\nactions.cleave+=/channel_demonfire,if=talent.ruin.rank>1&!(talent.diabolic_embers&talent.avatar_of_destruction&(talent.burn_to_ashes||talent.chaos_incarnate))\nactions.cleave+=/chaos_bolt,if=soul_shard>3.5\nactions.cleave+=/chaos_bolt,if=buff.rain_of_chaos.remains>cast_time\nactions.cleave+=/chaos_bolt,if=buff.backdraft.up\nactions.cleave+=/soul_fire,if=soul_shard<=4&talent.mayhem\nactions.cleave+=/chaos_bolt,if=talent.eradication&debuff.eradication.remains<cast_time+action.chaos_bolt.travel_time+1&!action.chaos_bolt.in_flight\nactions.cleave+=/channel_demonfire,if=!(talent.diabolic_embers&talent.avatar_of_destruction&(talent.burn_to_ashes||talent.chaos_incarnate))\nactions.cleave+=/dimensional_rift\nactions.cleave+=/chaos_bolt,if=soul_shard>3.5&!variable.pool_soul_shards\nactions.cleave+=/chaos_bolt,if=boss&fight_remains<5&fight_remains>cast_time+travel_time\nactions.cleave+=/conflagrate,if=charges>(max_charges-1)||boss&fight_remains<gcd.max*charges\nactions.cleave+=/incinerate\n\nactions.havoc+=/conflagrate,if=talent.backdraft&buff.backdraft.down&soul_shard>=1&soul_shard<=4\nactions.havoc+=/soul_fire,if=cast_time<havoc_remains&soul_shard<2.5\nactions.havoc+=/channel_demonfire,if=soul_shard<4.5&talent.raging_demonfire.rank=2\nactions.havoc+=/immolate,cycle_targets=1,if=dot.immolate.remains<2&dot.immolate.remains<havoc_remains&target.time_to_die>11&soul_shard<4.5\nactions.havoc+=/chaos_bolt,if=((talent.cry_havoc&!talent.inferno)||!talent.rain_of_fire)&cast_time<havoc_remains\nactions.havoc+=/chaos_bolt,if=cast_time<havoc_remains&(active_enemies<=3-talent.inferno+(talent.chaosbringer&!talent.inferno))\nactions.havoc+=/rain_of_fire,if=active_enemies>=3&talent.inferno\nactions.havoc+=/rain_of_fire,if=(active_enemies>=4-talent.inferno+talent.chaosbringer)\nactions.havoc+=/rain_of_fire,if=active_enemies>2&(talent.avatar_of_destruction||(talent.rain_of_chaos&buff.rain_of_chaos.up))&talent.inferno.enabled\nactions.havoc+=/channel_demonfire,if=soul_shard<4.5\nactions.havoc+=/conflagrate,if=!talent.backdraft\nactions.havoc+=/dimensional_rift,if=soul_shard<4.7&(charges>2||boss&fight_remains<cooldown.dimensional_rift.duration)\nactions.havoc+=/incinerate,if=cast_time<havoc_remains\n\nactions.items+=/use_item,use_off_gcd=1,name=belorrelos_the_suncaller,if=((time>20&cooldown.summon_infernal.remains>20)||(trinket.1.is.belorrelos_the_suncaller&(trinket.2.cooldown.remains||!variable.trinket_2_buffs||trinket.1.is.time_thiefs_gambit))||(trinket.2.is.belorrelos_the_suncaller&(trinket.1.cooldown.remains||!variable.trinket_1_buffs||trinket.2.is.time_thiefs_gambit)))&(!raid_event.adds.exists||raid_event.adds.up||spell_targets.belorrelos_the_suncaller>=5)||boss&fight_remains<20\nactions.items+=/use_item,name=nymues_unraveling_spindle,if=(variable.infernal_active||!talent.summon_infernal||(variable.trinket_1_will_lose_cast&trinket.1.is.nymues_unraveling_spindle)||(variable.trinket_2_will_lose_cast&trinket.2.is.nymues_unraveling_spindle))||boss&fight_remains<20\n# We want to use trinkets with Infernal unless we will miss a trinket use. The trinket with highest estimated value, will be used first.\nactions.items+=/use_item,slot=trinket1,if=(variable.infernal_active||!talent.summon_infernal||variable.trinket_1_will_lose_cast)&(variable.trinket_priority=1||variable.trinket_2_exclude||!trinket.2.has_cooldown||(trinket.2.cooldown.remains||variable.trinket_priority=2&cooldown.summon_infernal.remains>20&!variable.infernal_active&trinket.2.cooldown.remains<cooldown.summon_infernal.remains))&variable.trinket_1_buffs&!variable.trinket_1_manual||(variable.trinket_1_buff_duration+1>=fight_remains)\nactions.items+=/use_item,slot=trinket2,if=(variable.infernal_active||!talent.summon_infernal||variable.trinket_2_will_lose_cast)&(variable.trinket_priority=2||variable.trinket_1_exclude||!trinket.1.has_cooldown||(trinket.1.cooldown.remains||variable.trinket_priority=1&cooldown.summon_infernal.remains>20&!variable.infernal_active&trinket.1.cooldown.remains<cooldown.summon_infernal.remains))&variable.trinket_2_buffs&!variable.trinket_2_manual||(variable.trinket_2_buff_duration+1>=fight_remains)\nactions.items+=/use_item,name=time_thiefs_gambit,if=variable.infernal_active||!talent.summon_infernal||boss&fight_remains<15||((trinket.1.cooldown.duration<cooldown.summon_infernal.remains_expected+5)&active_enemies=1)||(active_enemies>1&havoc_active)\n# If only one on use trinket provied a buff, use the other on cooldown, Or if neither trinket provied a buff, use both on cooldown.\nactions.items+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||talent.summon_infernal&cooldown.summon_infernal.remains_expected>20||!talent.summon_infernal)\nactions.items+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||talent.summon_infernal&cooldown.summon_infernal.remains_expected>20||!talent.summon_infernal)\nactions.items+=/use_items,use_off_gcd=1\n\nactions.ogcd+=/potion,if=variable.infernal_active||!talent.summon_infernal\n## actions.ogcd+=/invoke_external_buff,name=power_infusion,if=variable.infernal_active||!talent.summon_infernal||(fight_remains<cooldown.summon_infernal.remains_expected+10+cooldown.invoke_power_infusion_0.duration&fight_remains>cooldown.invoke_power_infusion_0.duration)||fight_remains<cooldown.summon_infernal.remains_expected+15\nactions.ogcd+=/berserking,if=variable.infernal_active||!talent.summon_infernal||(boss&fight_remains<(cooldown.summon_infernal.remains_expected+cooldown.berserking.duration)&(fight_remains>cooldown.berserking.duration))||boss&fight_remains<cooldown.summon_infernal.remains_expected\nactions.ogcd+=/blood_fury,if=variable.infernal_active||!talent.summon_infernal||(boss&fight_remains<cooldown.summon_infernal.remains_expected+10+cooldown.blood_fury.duration&fight_remains>cooldown.blood_fury.duration)||boss&fight_remains<cooldown.summon_infernal.remains\nactions.ogcd+=/fireblood,if=variable.infernal_active||!talent.summon_infernal||(boss&fight_remains<cooldown.summon_infernal.remains_expected+10+cooldown.fireblood.duration&fight_remains>cooldown.fireblood.duration)||boss&fight_remains<cooldown.summon_infernal.remains_expected\nactions.ogcd+=/ancestral_call,if=variable.infernal_active||!talent.summon_infernal||(boss&fight_remains<(cooldown.summon_infernal.remains_expected+cooldown.berserking.duration)&(fight_remains>cooldown.berserking.duration))||boss&fight_remains<cooldown.summon_infernal.remains_expected",
["spec"] = 267,
},
["Marksmanship"] = {
["source"] = "# https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240727,
["author"] = "SimC",
["desc"] = "2024-07-27: Minor sim update; use Hunter's Mark\n\n2024-07-23: The War Within",
["lists"] = {
["trickshots"] = {
{
["enabled"] = true,
["criteria"] = "talent.steady_focus.enabled & steady_focus_count & buff.steady_focus.remains < 8",
["action"] = "steady_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.razor_fragments.up",
["action"] = "kill_shot",
},
{
["action"] = "explosive_shot",
["enabled"] = true,
},
{
["action"] = "volley",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rapid_fire_barrage.enabled",
["action"] = "barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.trick_shots.remains >= execute_time & talent.surging_shots.enabled",
["action"] = "rapid_fire",
},
{
["enabled"] = true,
["criteria"] = "buff.precise_shots.down || buff.trueshot.up",
["action"] = "wailing_arrow",
},
{
["enabled"] = true,
["criteria"] = "variable.trueshot_ready",
["action"] = "trueshot",
},
{
["enabled"] = true,
["action"] = "aimed_shot",
["cycle_targets"] = 1,
["criteria"] = "( buff.trick_shots.remains >= execute_time & ( buff.precise_shots.down || buff.trueshot.up || full_recharge_time < cast_time + gcd.max ) )",
["description"] = "For Serpentstalker's Trickery, target the lowest remaining Serpent Sting. Generally only cast if it would cleave with Trick Shots. Don't overwrite Precise Shots unless Trueshot is up or Aimed Shot would cap otherwise.",
},
{
["enabled"] = true,
["criteria"] = "buff.trick_shots.remains >= execute_time",
["action"] = "rapid_fire",
},
{
["enabled"] = true,
["criteria"] = "buff.trick_shots.up & buff.precise_shots.up & focus > cost + action.aimed_shot.cost & active_enemies < 4",
["action"] = "chimaera_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.trick_shots.down || ( buff.precise_shots.up || buff.bulletstorm.stack = 10 ) & focus > cost + action.aimed_shot.cost",
["action"] = "multishot",
},
{
["enabled"] = true,
["criteria"] = "focus > cost + action.aimed_shot.cost",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "focus > cost + action.aimed_shot.cost",
["action"] = "multishot",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.down",
["action"] = "bag_of_tricks",
},
{
["action"] = "steady_shot",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.trueshot.ready & ( ! raid_event.adds.exists & ( ! talent.bullseye.enabled || fight_remains > cooldown.trueshot.duration_guess + buff.trueshot.duration / 2 || buff.bullseye.stack = buff.bullseye.max_stack ) & ( ! trinket.t1.has_use_buff || trinket.t1.cooldown.remains > 30 || trinket.t1.cooldown.ready ) & ( ! trinket.t2.has_use_buff || trinket.t2.cooldown.remains > 30 || trinket.t2.cooldown.ready ) || raid_event.adds.exists & ( ! raid_event.adds.up & ( raid_event.adds.duration + raid_event.adds.in < 25 || raid_event.adds.in > 60 ) || raid_event.adds.up & raid_event.adds.remains > 10 ) || boss & fight_remains < 25 )",
["description"] = "Determine if it is a good time to use Trueshot. Raid event optimization takes priority so usage is saved for multiple targets as long as it won't delay over half its duration. Otherwise allow for small delays to line up buff effect trinkets, and when using Bullseye, delay the last usage of the fight for max stacks.",
["var_name"] = "trueshot_ready",
},
{
["action"] = "muzzle",
["enabled"] = true,
},
{
["action"] = "tranquilizing_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "active_dot.hunters_mark = 0 & target.time_to_pct_80 > 20",
["action"] = "hunters_mark",
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 3 || ! talent.trick_shots.enabled",
["action"] = "call_action_list",
["list_name"] = "st",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2",
["action"] = "call_action_list",
["list_name"] = "trickshots",
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "! talent.lone_wolf.enabled",
["action"] = "summon_pet",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! trinket.t2.has_cooldown || trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff || ! trinket.t1.is.mirror_of_fractured_tomorrows & ( trinket.t2.is.mirror_of_fractured_tomorrows || trinket.t2.cooldown.duration < trinket.t1.cooldown.duration || trinket.t2.cast_time < trinket.t1.cast_time || trinket.t2.cast_time = trinket.t1.cast_time & trinket.t2.cooldown.duration = trinket.t1.cooldown.duration ) ) || ! trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration < trinket.t1.cooldown.duration || trinket.t2.cast_time < trinket.t1.cast_time || trinket.t2.cast_time = trinket.t1.cast_time & trinket.t2.cooldown.duration = trinket.t1.cooldown.duration ) )",
["description"] = "Determine the stronger trinket to sync with cooldowns. In descending priority: buff effects > damage effects, longer > shorter cooldowns, longer > shorter cast times. Special case to consider Mirror of Fractured Tomorrows weaker than other buff effects since its power is split between the dmg effect and the buff effect.",
["var_name"] = "trinket_1_stronger",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! variable.trinket_1_stronger",
["var_name"] = "trinket_2_stronger",
},
{
["enabled"] = true,
["criteria"] = "active_dot.hunters_mark = 0",
["action"] = "hunters_mark",
},
{
["enabled"] = true,
["precast_time"] = "10",
["action"] = "salvo",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "aimed_shot",
["description"] = "Precast Aimed Shot on one or two targets unless we could cleave it with Volley on two targets.",
["criteria"] = "active_enemies < 3 & ( ! talent.volley.enabled || active_enemies < 2 )",
},
{
["enabled"] = true,
["action"] = "steady_shot",
["description"] = "Precast Steady Shot on two targets if we are saving Aimed Shot to cleave with Volley, otherwise on three or more targets.",
["criteria"] = "active_enemies > 2 || talent.volley.enabled & active_enemies = 2",
},
},
["trinkets"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.trueshot_ready",
["description"] = "True if effects that are desirable to sync a trinket buff with are ready.",
["var_name"] = "sync_ready",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.trueshot.up",
["description"] = "True if effecs that are desirable to sync a trinket buff with are active.",
["var_name"] = "sync_active",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.trueshot.remains_guess",
["description"] = "Time until the effects that are desirable to sync a trinket buff with will be ready.",
["var_name"] = "sync_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "trinket.t1.has_use_buff & ( variable.sync_ready & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains ) || ! variable.sync_ready & ( variable.trinket_1_stronger & ( variable.sync_remains > trinket.t1.cooldown.duration / 3 & fight_remains > trinket.t1.cooldown.duration + 20 || trinket.t2.has_use_buff & trinket.t2.cooldown.remains > variable.sync_remains - 15 & trinket.t2.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains + 45 > fight_remains ) || variable.trinket_2_stronger & ( trinket.t2.cooldown.remains & ( trinket.t2.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains >= 20 || trinket.t2.cooldown.remains - 5 >= variable.sync_remains & ( variable.sync_remains > trinket.t1.cooldown.duration / 3 || trinket.t1.cooldown.duration < fight_remains & ( variable.sync_remains + trinket.t1.cooldown.duration > fight_remains ) ) ) || trinket.t2.cooldown.ready & variable.sync_remains > 20 & variable.sync_remains < trinket.t2.cooldown.duration / 3 ) ) ) || ! trinket.t1.has_use_buff & ( trinket.t1.cast_time = 0 || ! variable.sync_active ) & ( ! trinket.t2.has_use_buff & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains ) || trinket.t2.has_use_buff & ( variable.sync_remains > 20 || trinket.t2.cooldown.remains > 20 ) ) || boss & fight_remains < 25 & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains )",
["description"] = "Uses buff effect trinkets with cooldowns and is willing to delay usage up to half the trinket cooldown if it won't lose a usage in the fight. Fills in downtime with weaker buff effects if they won't also be saved for later cooldowns (happens if it won't delay over half the trinket cooldown and a stronger trinket won't be up in time) or damage effects if they won't inferfere with any buff effect usage. Intended to be slot-agnostic so that any order of the same trinket pair should result in the same usage.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "trinket.t2.has_use_buff & ( variable.sync_ready & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains ) || ! variable.sync_ready & ( variable.trinket_2_stronger & ( variable.sync_remains > trinket.t2.cooldown.duration / 3 & fight_remains > trinket.t2.cooldown.duration + 20 || trinket.t1.has_use_buff & trinket.t1.cooldown.remains > variable.sync_remains - 15 & trinket.t1.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains + 45 > fight_remains ) || variable.trinket_1_stronger & ( trinket.t1.cooldown.remains & ( trinket.t1.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains >= 20 || trinket.t1.cooldown.remains - 5 >= variable.sync_remains & ( variable.sync_remains > trinket.t2.cooldown.duration / 3 || trinket.t2.cooldown.duration < fight_remains & ( variable.sync_remains + trinket.t2.cooldown.duration > fight_remains ) ) ) || trinket.t1.cooldown.ready & variable.sync_remains > 20 & variable.sync_remains < trinket.t1.cooldown.duration / 3 ) ) ) || ! trinket.t2.has_use_buff & ( trinket.t2.cast_time = 0 || ! variable.sync_active ) & ( ! trinket.t1.has_use_buff & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains ) || trinket.t1.has_use_buff & ( variable.sync_remains > 20 || trinket.t1.cooldown.remains > 20 ) ) || boss & fight_remains < 25 & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains )",
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "talent.steady_focus.enabled & steady_focus_count & buff.steady_focus.remains < 8",
["action"] = "steady_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.razor_fragments.up",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "talent.surging_shots.enabled || action.aimed_shot.full_recharge_time > action.aimed_shot.cast_time + cast_time",
["action"] = "rapid_fire",
},
{
["enabled"] = true,
["criteria"] = "buff.salvo.up || variable.trueshot_ready || cooldown.trueshot.remains > 45 || fight_remains < 12",
["action"] = "volley",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "explosive_shot",
},
{
["enabled"] = true,
["criteria"] = "variable.trueshot_ready",
["action"] = "trueshot",
},
{
["enabled"] = true,
["action"] = "multishot",
["description"] = "Trigger Salvo if Volley isn't being used to trigger it.",
["criteria"] = "buff.salvo.up & ! talent.volley.enabled",
},
{
["enabled"] = true,
["action"] = "wailing_arrow",
["description"] = "Don't overwrite Precise Shots unless Trueshot is active or it can cleave.",
["criteria"] = "buff.precise_shots.down || buff.trueshot.up || active_enemies > 1",
},
{
["enabled"] = true,
["action"] = "aimed_shot",
["cycle_targets"] = 1,
["criteria"] = "buff.precise_shots.down || ( buff.trueshot.up || full_recharge_time < gcd.max + cast_time ) || ( buff.trick_shots.remains > execute_time & active_enemies > 1 )",
["description"] = "With Serpentstalker's Trickery target the lowest remaining Serpent Sting. Don't overwrite Precise Shots unless either Trueshot is active or Aimed Shot would cap before its next cast. Overwrite freely if it can cleave.",
},
{
["action"] = "kill_shot",
["enabled"] = true,
},
{
["action"] = "explosive_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.precise_shots.up",
["action"] = "chimaera_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.precise_shots.up",
["action"] = "arcane_shot",
},
{
["enabled"] = true,
["criteria"] = "talent.rapid_fire_barrage.enabled",
["action"] = "barrage",
},
{
["enabled"] = true,
["criteria"] = "focus > cost + action.aimed_shot.cost",
["action"] = "arcane_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.down",
["action"] = "bag_of_tricks",
},
{
["action"] = "steady_shot",
["enabled"] = true,
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "buff.trueshot.up || boss & fight_remains < 13",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.up || cooldown.trueshot.remains > 30 || boss & fight_remains < 16",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.up || cooldown.trueshot.remains > 30 || boss & fight_remains < 16",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.up || cooldown.trueshot.remains > 30 || boss & fight_remains < 9",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.down",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.up & ( buff.bloodlust.up || target.health.pct < 20 ) || boss & fight_remains < 26",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 || cooldown.volley.remains < 10",
["action"] = "salvo",
},
},
},
["version"] = 20240727,
["warnings"] = "The import for 'trickshots' required some automated changes.\nLine 1: Converted 'talent.steady_focus' to 'talent.steady_focus.enabled' (1x).\nLine 5: Converted 'talent.rapid_fire_barrage' to 'talent.rapid_fire_barrage.enabled' (1x).\nLine 6: Converted 'talent.surging_shots' to 'talent.surging_shots.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 1: Converted 'talent.bullseye' to 'talent.bullseye.enabled' (1x).\nLine 1: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 1: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 1: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 1: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 1: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 1: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 1: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 1: Converted operations in 'cooldown.trueshot.ready&(!raid_event.adds.exists&(!talent.bullseye.enabled||fight_remains>cooldown.trueshot.duration_guess+buff.trueshot.duration%2||buff.bullseye.stack=buff.bullseye.max_stack)&(!trinket.t1.has_use_buff||trinket.t1.cooldown.remains>30||trinket.t1.cooldown.ready)&(!trinket.t2.has_use_buff||trinket.t2.cooldown.remains>30||trinket.t2.cooldown.ready)||raid_event.adds.exists&(!raid_event.adds.up&(raid_event.adds.duration+raid_event.adds.in<25||raid_event.adds.in>60)||raid_event.adds.up&raid_event.adds.remains>10)||boss&fight_remains<25)' to 'cooldown.trueshot.ready&(!raid_event.adds.exists&(!talent.bullseye.enabled||fight_remains>cooldown.trueshot.duration_guess+buff.trueshot.duration/2||buff.bullseye.stack=buff.bullseye.max_stack)&(!trinket.t1.has_use_buff||trinket.t1.cooldown.remains>30||trinket.t1.cooldown.ready)&(!trinket.t2.has_use_buff||trinket.t2.cooldown.remains>30||trinket.t2.cooldown.ready)||raid_event.adds.exists&(!raid_event.adds.up&(raid_event.adds.duration+raid_event.adds.in<25||raid_event.adds.in>60)||raid_event.adds.up&raid_event.adds.remains>10)||boss&fight_remains<25)'.\nLine 7: Converted 'talent.trick_shots' to 'talent.trick_shots.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'talent.lone_wolf' to 'talent.lone_wolf.enabled' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 2: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'talent.volley' to 'talent.volley.enabled' (1x).\nLine 8: Converted 'talent.volley' to 'talent.volley.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 1: Converted 'talent.steady_focus' to 'talent.steady_focus.enabled' (1x).\nLine 3: Converted 'talent.surging_shots' to 'talent.surging_shots.enabled' (1x).\nLine 7: Converted 'talent.volley' to 'talent.volley.enabled' (1x).\nLine 14: Converted 'talent.rapid_fire_barrage' to 'talent.rapid_fire_barrage.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted operations in 'trinket.t1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.t1.cooldown.duration%3&fight_remains>trinket.t1.cooldown.duration+20||trinket.t2.has_use_buff&trinket.t2.cooldown.remains>variable.sync_remains-15&trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.t2.cooldown.remains&(trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t1.cooldown.duration%3||trinket.t1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t1.cooldown.duration>fight_remains)))||trinket.t2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t2.cooldown.duration%3)))||!trinket.t1.has_use_buff&(trinket.t1.cast_time=0||!variable.sync_active)&(!trinket.t2.has_use_buff&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||trinket.t2.has_use_buff&(variable.sync_remains>20||trinket.t2.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)' to 'trinket.t1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.t1.cooldown.duration/3&fight_remains>trinket.t1.cooldown.duration+20||trinket.t2.has_use_buff&trinket.t2.cooldown.remains>variable.sync_remains-15&trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.t2.cooldown.remains&(trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t1.cooldown.duration/3||trinket.t1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t1.cooldown.duration>fight_remains)))||trinket.t2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t2.cooldown.duration/3)))||!trinket.t1.has_use_buff&(trinket.t1.cast_time=0||!variable.sync_active)&(!trinket.t2.has_use_buff&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||trinket.t2.has_use_buff&(variable.sync_remains>20||trinket.t2.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)'.\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 5: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted operations in 'trinket.t2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.t2.cooldown.duration%3&fight_remains>trinket.t2.cooldown.duration+20||trinket.t1.has_use_buff&trinket.t1.cooldown.remains>variable.sync_remains-15&trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.t1.cooldown.remains&(trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t2.cooldown.duration%3||trinket.t2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t2.cooldown.duration>fight_remains)))||trinket.t1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t1.cooldown.duration%3)))||!trinket.t2.has_use_buff&(trinket.t2.cast_time=0||!variable.sync_active)&(!trinket.t1.has_use_buff&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||trinket.t1.has_use_buff&(variable.sync_remains>20||trinket.t1.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)' to 'trinket.t2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.t2.cooldown.duration/3&fight_remains>trinket.t2.cooldown.duration+20||trinket.t1.has_use_buff&trinket.t1.cooldown.remains>variable.sync_remains-15&trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.t1.cooldown.remains&(trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t2.cooldown.duration/3||trinket.t2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t2.cooldown.duration>fight_remains)))||trinket.t1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t1.cooldown.duration/3)))||!trinket.t2.has_use_buff&(trinket.t2.cast_time=0||!variable.sync_active)&(!trinket.t1.has_use_buff&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||trinket.t1.has_use_buff&(variable.sync_remains>20||trinket.t1.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)'.\n\nImported 6 action lists.\n",
["spec"] = 254,
["profile"] = "actions.precombat+=/summon_pet,if=!talent.lone_wolf\n# Determine the stronger trinket to sync with cooldowns. In descending priority: buff effects > damage effects, longer > shorter cooldowns, longer > shorter cast times. Special case to consider Mirror of Fractured Tomorrows weaker than other buff effects since its power is split between the dmg effect and the buff effect.\nactions.precombat+=/variable,name=trinket_1_stronger,value=!trinket.2.has_cooldown||trinket.1.has_use_buff&(!trinket.2.has_use_buff||!trinket.1.is.mirror_of_fractured_tomorrows&(trinket.2.is.mirror_of_fractured_tomorrows||trinket.2.cooldown.duration<trinket.1.cooldown.duration||trinket.2.cast_time<trinket.1.cast_time||trinket.2.cast_time=trinket.1.cast_time&trinket.2.cooldown.duration=trinket.1.cooldown.duration))||!trinket.1.has_use_buff&(!trinket.2.has_use_buff&(trinket.2.cooldown.duration<trinket.1.cooldown.duration||trinket.2.cast_time<trinket.1.cast_time||trinket.2.cast_time=trinket.1.cast_time&trinket.2.cooldown.duration=trinket.1.cooldown.duration))\nactions.precombat+=/variable,name=trinket_2_stronger,value=!variable.trinket_1_stronger\nactions.precombat+=/hunters_mark,if=active_dot.hunters_mark=0\nactions.precombat+=/salvo,precast_time=10\nactions.precombat+=/use_item,name=algethar_puzzle_box\n# Precast Aimed Shot on one or two targets unless we could cleave it with Volley on two targets.\nactions.precombat+=/aimed_shot,if=active_enemies<3&(!talent.volley||active_enemies<2)\n# Precast Steady Shot on two targets if we are saving Aimed Shot to cleave with Volley, otherwise on three or more targets.\nactions.precombat+=/steady_shot,if=active_enemies>2||talent.volley&active_enemies=2\n\n# Determine if it is a good time to use Trueshot. Raid event optimization takes priority so usage is saved for multiple targets as long as it won't delay over half its duration. Otherwise allow for small delays to line up buff effect trinkets, and when using Bullseye, delay the last usage of the fight for max stacks.\nactions+=/variable,name=trueshot_ready,value=cooldown.trueshot.ready&(!raid_event.adds.exists&(!talent.bullseye||fight_remains>cooldown.trueshot.duration_guess+buff.trueshot.duration%2||buff.bullseye.stack=buff.bullseye.max_stack)&(!trinket.1.has_use_buff||trinket.1.cooldown.remains>30||trinket.1.cooldown.ready)&(!trinket.2.has_use_buff||trinket.2.cooldown.remains>30||trinket.2.cooldown.ready)||raid_event.adds.exists&(!raid_event.adds.up&(raid_event.adds.duration+raid_event.adds.in<25||raid_event.adds.in>60)||raid_event.adds.up&raid_event.adds.remains>10)||boss&fight_remains<25)\nactions+=/muzzle\nactions+=/tranquilizing_shot\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=trinkets\nactions+=/hunters_mark,if=active_dot.hunters_mark=0&target.time_to_pct_80>20\nactions+=/call_action_list,name=st,if=active_enemies<3||!talent.trick_shots\nactions+=/call_action_list,name=trickshots,if=active_enemies>2\n\n## Call for Power Infusion when Trueshot is up.\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.trueshot.remains>12\nactions.cds+=/berserking,if=buff.trueshot.up||boss&fight_remains<13\nactions.cds+=/blood_fury,if=buff.trueshot.up||cooldown.trueshot.remains>30||boss&fight_remains<16\nactions.cds+=/ancestral_call,if=buff.trueshot.up||cooldown.trueshot.remains>30||boss&fight_remains<16\nactions.cds+=/fireblood,if=buff.trueshot.up||cooldown.trueshot.remains>30||boss&fight_remains<9\nactions.cds+=/lights_judgment,if=buff.trueshot.down\nactions.cds+=/potion,if=buff.trueshot.up&(buff.bloodlust.up||target.health.pct<20)||boss&fight_remains<26\nactions.cds+=/salvo,if=active_enemies>2||cooldown.volley.remains<10\n\nactions.st+=/steady_shot,if=talent.steady_focus&steady_focus_count&buff.steady_focus.remains<8\nactions.st+=/kill_shot,if=buff.razor_fragments.up\nactions.st+=/rapid_fire,if=talent.surging_shots||action.aimed_shot.full_recharge_time>action.aimed_shot.cast_time+cast_time\nactions.st+=/volley,if=buff.salvo.up||variable.trueshot_ready||cooldown.trueshot.remains>45||fight_remains<12\nactions.st+=/explosive_shot,if=active_enemies>1\nactions.st+=/trueshot,if=variable.trueshot_ready\n# Trigger Salvo if Volley isn't being used to trigger it.\nactions.st+=/multishot,if=buff.salvo.up&!talent.volley\n# Don't overwrite Precise Shots unless Trueshot is active or it can cleave.\nactions.st+=/wailing_arrow,if=buff.precise_shots.down||buff.trueshot.up||active_enemies>1\n# With Serpentstalker's Trickery target the lowest remaining Serpent Sting. Don't overwrite Precise Shots unless either Trueshot is active or Aimed Shot would cap before its next cast. Overwrite freely if it can cleave.\nactions.st+=/aimed_shot,cycle_targets=1,if=buff.precise_shots.down||(buff.trueshot.up||full_recharge_time<gcd+cast_time)||(buff.trick_shots.remains>execute_time&active_enemies>1)\nactions.st+=/kill_shot\nactions.st+=/explosive_shot\nactions.st+=/chimaera_shot,if=buff.precise_shots.up\nactions.st+=/arcane_shot,if=buff.precise_shots.up\nactions.st+=/barrage,if=talent.rapid_fire_barrage\nactions.st+=/arcane_shot,if=focus>cost+action.aimed_shot.cost\nactions.st+=/bag_of_tricks,if=buff.trueshot.down\nactions.st+=/steady_shot\n\nactions.trickshots+=/steady_shot,if=talent.steady_focus&steady_focus_count&buff.steady_focus.remains<8\nactions.trickshots+=/kill_shot,if=buff.razor_fragments.up\nactions.trickshots+=/explosive_shot\nactions.trickshots+=/volley\nactions.trickshots+=/barrage,if=talent.rapid_fire_barrage\nactions.trickshots+=/rapid_fire,if=buff.trick_shots.remains>=execute_time&talent.surging_shots\nactions.trickshots+=/wailing_arrow,if=buff.precise_shots.down||buff.trueshot.up\nactions.trickshots+=/trueshot,if=variable.trueshot_ready\n# For Serpentstalker's Trickery, target the lowest remaining Serpent Sting. Generally only cast if it would cleave with Trick Shots. Don't overwrite Precise Shots unless Trueshot is up or Aimed Shot would cap otherwise.\nactions.trickshots+=/aimed_shot,cycle_targets=1,if=(buff.trick_shots.remains>=execute_time&(buff.precise_shots.down||buff.trueshot.up||full_recharge_time<cast_time+gcd))\nactions.trickshots+=/rapid_fire,if=buff.trick_shots.remains>=execute_time\nactions.trickshots+=/chimaera_shot,if=buff.trick_shots.up&buff.precise_shots.up&focus>cost+action.aimed_shot.cost&active_enemies<4\nactions.trickshots+=/multishot,if=buff.trick_shots.down||(buff.precise_shots.up||buff.bulletstorm.stack=10)&focus>cost+action.aimed_shot.cost\nactions.trickshots+=/kill_shot,if=focus>cost+action.aimed_shot.cost\nactions.trickshots+=/multishot,if=focus>cost+action.aimed_shot.cost\nactions.trickshots+=/bag_of_tricks,if=buff.trueshot.down\nactions.trickshots+=/steady_shot\n\n# True if effects that are desirable to sync a trinket buff with are ready.\nactions.trinkets+=/variable,name=sync_ready,value=variable.trueshot_ready\n# True if effecs that are desirable to sync a trinket buff with are active.\nactions.trinkets+=/variable,name=sync_active,value=buff.trueshot.up\n# Time until the effects that are desirable to sync a trinket buff with will be ready.\nactions.trinkets+=/variable,name=sync_remains,value=cooldown.trueshot.remains_guess\n# Uses buff effect trinkets with cooldowns and is willing to delay usage up to half the trinket cooldown if it won't lose a usage in the fight. Fills in downtime with weaker buff effects if they won't also be saved for later cooldowns (happens if it won't delay over half the trinket cooldown and a stronger trinket won't be up in time) or damage effects if they won't inferfere with any buff effect usage. Intended to be slot-agnostic so that any order of the same trinket pair should result in the same usage.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=trinket.1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.1.cooldown.duration%3&fight_remains>trinket.1.cooldown.duration+20||trinket.2.has_use_buff&trinket.2.cooldown.remains>variable.sync_remains-15&trinket.2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.2.cooldown.remains&(trinket.2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.1.cooldown.duration%3||trinket.1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.1.cooldown.duration>fight_remains)))||trinket.2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.2.cooldown.duration%3)))||!trinket.1.has_use_buff&(trinket.1.cast_time=0||!variable.sync_active)&(!trinket.2.has_use_buff&(variable.trinket_1_stronger||trinket.2.cooldown.remains)||trinket.2.has_use_buff&(variable.sync_remains>20||trinket.2.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_1_stronger||trinket.2.cooldown.remains)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=trinket.2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.2.cooldown.duration%3&fight_remains>trinket.2.cooldown.duration+20||trinket.1.has_use_buff&trinket.1.cooldown.remains>variable.sync_remains-15&trinket.1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.1.cooldown.remains&(trinket.1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.2.cooldown.duration%3||trinket.2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.2.cooldown.duration>fight_remains)))||trinket.1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.1.cooldown.duration%3)))||!trinket.2.has_use_buff&(trinket.2.cast_time=0||!variable.sync_active)&(!trinket.1.has_use_buff&(variable.trinket_2_stronger||trinket.1.cooldown.remains)||trinket.1.has_use_buff&(variable.sync_remains>20||trinket.1.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_2_stronger||trinket.1.cooldown.remains)",
},
["Devastation"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/engine/class_modules/apl/apl_evoker.cpp",
["builtIn"] = true,
["date"] = 20240807,
["spec"] = 1467,
["desc"] = "2024-07-27: Updates from SimC\n\n2024-07-23: The War Within",
["lists"] = {
["es"] = {
{
["enabled"] = true,
["action"] = "eternity_surge",
["empower_to"] = "1",
["description"] = "Eternity Surge, use rank most applicable to targets.",
["criteria"] = "active_enemies <= 1 + talent.eternitys_span.enabled || buff.dragonrage.remains < 1.75 * spell_haste & buff.dragonrage.remains >= 1 * spell_haste || buff.dragonrage.up & ( active_enemies = 5 & ! talent.font_of_magic.enabled || active_enemies > ( 3 + talent.font_of_magic.enabled ) * ( 1 + talent.eternitys_span.enabled ) ) || active_enemies >= 6 & ! talent.eternitys_span.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "eternity_surge",
["empower_to"] = "2",
["criteria"] = "active_enemies <= 2 + 2 * talent.eternitys_span.enabled || buff.dragonrage.remains < 2.5 * spell_haste & buff.dragonrage.remains >= 1.75 * spell_haste",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "eternity_surge",
["empower_to"] = "3",
["criteria"] = "active_enemies <= 3 + 3 * talent.eternitys_span.enabled || ! talent.font_of_magic.enabled || buff.dragonrage.remains <= 3.25 * spell_haste & buff.dragonrage.remains >= 2.5 * spell_haste",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["cycle_targets"] = 1,
["action"] = "eternity_surge",
["empower_to"] = "4",
},
},
["green"] = {
{
["enabled"] = true,
["description"] = "Green Spells used to trigger Ancient Flame",
["action"] = "emerald_blossom",
},
{
["action"] = "verdant_embrace",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Delay pot in ST if you are about to SS - mostly relevant for opener where you want DR->FB->SS->rotation",
["criteria"] = "buff.dragonrage.up & ( ! cooldown.shattering_star.up || active_enemies >= 2 ) || boss & fight_remains < 35",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.dragonrage.remains <? ( cooldown.eternity_surge.remains - 4 ) <? ( cooldown.fire_breath.remains - 4 )",
["var_name"] = "next_dragonrage",
["description"] = "Variable that evaluates when next dragonrage is by working out the maximum between the dragonrage cd and your empowers, ignoring CDR effect estimates.",
},
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["use_off_gcd"] = 1,
["description"] = "Rupt to make the raidleader happy",
["action"] = "quell",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "st",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.is.mirror_of_fractured_tomorrows",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.is.mirror_of_fractured_tomorrows",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Decide which trinket to pair with Dragonrage, prefer 2 minute and 1 minute trinkets",
["value"] = "1",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.dragonrage.duration = 0 || cooldown.dragonrage.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.dragonrage.duration = 0 || cooldown.dragonrage.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.belorrelos_the_suncaller || trinket.t1.is.nymues_unraveling_spindle || trinket.t1.is.spymasters_web",
["var_name"] = "trinket_1_manual",
["description"] = "Estimates a trinkets value by comparing the cooldown of the trinket, divided by the duration of the buff it provides. Has a intellect modifier (currently 1.5x) to give a higher priority to intellect trinkets. The intellect modifier should be changed as intellect priority increases or decreases. As well as a modifier for if a trinket will or will not sync with cooldowns.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.belorrelos_the_suncaller || trinket.t2.is.nymues_unraveling_spindle || trinket.t2.is.spymasters_web",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1.0 * spell_haste",
["var_name"] = "r1_cast_time",
["description"] = "Rank 1 empower spell cast time",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "dr_prep_time_aoe",
["description"] = "Variable for when to start holding empowers for upcoming DR in AoE. - From my testing 4sec seems like the sweetspot, but it's very minor diff so far - Holding for more than 6 seconds it begins to become a loss.",
["default"] = "4",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "dr_prep_time_st",
["description"] = "Variable for when to start holding empowers for upcoming DR in ST.",
["default"] = "10",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.invoke_power_infusion_0.duration > 0",
["var_name"] = "has_external_pi",
},
{
["enabled"] = true,
["description"] = "Get Some Scarlet Adaptation Prepull",
["criteria"] = "talent.scarlet_adaptation.enabled",
["action"] = "verdant_embrace",
},
{
["enabled"] = true,
["criteria"] = "talent.firestorm.enabled & ( ! talent.engulf.enabled || ! talent.ruby_embers.enabled )",
["action"] = "firestorm",
},
{
["enabled"] = true,
["criteria"] = "! talent.firestorm.enabled || talent.engulf.enabled & talent.ruby_embers.enabled",
["action"] = "living_flame",
},
},
["aoe"] = {
{
["enabled"] = true,
["action"] = "shattering_star",
["cycle_targets"] = 1,
["description"] = "AOE action list, This is kind of a mess again and should prolly be rewritten completely Open with star before DR to save a global and start with a free EB",
["criteria"] = "cooldown.dragonrage.up",
},
{
["enabled"] = true,
["description"] = "Spend firestorm procs ASAP",
["criteria"] = "buff.snapfire.up",
["action"] = "firestorm",
},
{
["enabled"] = true,
["description"] = "Hard cast only outside of SS and DR windows",
["criteria"] = "! buff.dragonrage.up & debuff.shattering_star_debuff.down & talent.feed_the_flames.enabled & ( ( ! talent.dragonrage.enabled || cooldown.dragonrage.remains >= 10 ) & ( essence >= 3 || buff.essence_burst.up || talent.shattering_star.enabled & cooldown.shattering_star.remains <= 6 ) || talent.dragonrage.enabled & cooldown.dragonrage.remains <= cast_time & cooldown.fire_breath.remains < 6 & cooldown.eternity_surge.remains < 12 ) & ! debuff.in_firestorm.up",
["action"] = "firestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.maneuverability.enabled & talent.melt_armor.enabled & ( talent.onyx_legacy.enabled || cooldown.dragonrage.remains <= 2 & ( ( cooldown.fire_breath.remains < 6 || cooldown.eternity_surge.remains < 6 & ( ! set_bonus.tww1_4pc || ! talent.mass_disintegrate.enabled ) ) & ( cooldown.fire_breath.remains < 10 & ( cooldown.eternity_surge.remains < 10 || set_bonus.tww1_4pc & talent.mass_disintegrate.enabled ) ) & ( cooldown.deep_breath.remains > 10 || ! talent.melt_armor.enabled ) & target.time_to_die >= 32 || boss & fight_remains < 32 ) )",
["action"] = "deep_breath",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die >= 32 || boss & fight_remains < 30",
["action"] = "dragonrage",
},
{
["enabled"] = true,
["description"] = "Use tip to get that sweet aggro",
["criteria"] = "buff.dragonrage.up & ( active_enemies <= 3 + 3 * talent.eternitys_span.enabled || ! cooldown.fire_breath.up )",
["action"] = "tip_the_scales",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cast Fire Breath - stagger for swell/blazing shards outside DR DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s",
["criteria"] = "( ! talent.dragonrage.enabled || variable.next_dragonrage > variable.dr_prep_time_aoe || ! talent.animosity.enabled || talent.diverted_power.enabled & cooldown.dragonrage.remains >= 5 ) & ( ( buff.power_swell.remains < variable.r1_cast_time || ( ! talent.volatility.enabled & active_enemies = 3 ) ) & buff.blazing_shards.remains < variable.r1_cast_time || buff.dragonrage.up ) & ( target.time_to_die >= 8 || boss & fight_remains < 30 ) || empowering.fire_breath",
["list_name"] = "fb",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cast Eternity Surge - stagger for swell/blazing shards outside DR DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s",
["criteria"] = "buff.dragonrage.up || ! talent.dragonrage.enabled || talent.diverted_power.enabled & cooldown.dragonrage.remains >= 5 || ( cooldown.dragonrage.remains > variable.dr_prep_time_aoe & ( buff.power_swell.remains < variable.r1_cast_time || ( ! talent.volatility.enabled & active_enemies = 3 ) ) & buff.blazing_shards.remains < variable.r1_cast_time ) & ( target.time_to_die >= 8 || boss & fight_remains < 30 ) || empowering.eternity_surge",
["list_name"] = "es",
},
{
["enabled"] = true,
["description"] = "Cast DB if not in DR and not going to overflow essence.",
["criteria"] = "! buff.dragonrage.up & essence.deficit > 3",
["action"] = "deep_breath",
},
{
["enabled"] = true,
["action"] = "shattering_star",
["cycle_targets"] = 1,
["description"] = "Send SS when it doesn't overflow EB, without vigor send on CD",
["criteria"] = "buff.essence_burst.stack < buff.essence_burst.max_stack || ! talent.arcane_vigor.enabled",
},
{
["enabled"] = true,
["criteria"] = "dot.fire_breath_damage.ticking & ( ! talent.shattering_star.enabled || debuff.shattering_star_debuff.up ) & cooldown.dragonrage.remains >= 27",
["action"] = "engulf",
},
{
["enabled"] = true,
["description"] = "Cast Firestorm before spending ressources",
["criteria"] = "talent.feed_the_flames.enabled & ( cooldown.dragonrage.remains >= 20 || cooldown.dragonrage.remains <= 10 ) & ( buff.essence_burst.up || essence >= 2 || cooldown.dragonrage.remains <= 10 ) || buff.snapfire.up",
["action"] = "firestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.mass_disintegrate_stacks.up & talent.mass_disintegrate.enabled",
["action"] = "disintegrate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "pyre",
["cycle_targets"] = 1,
["description"] = "Pyre logic Pyre 4T+ Pyre 3T+ if playing Volatility Pyre with 15 stacks of CB",
["criteria"] = "active_enemies >= 4",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3 & talent.volatility.enabled",
["action"] = "pyre",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.charged_blast.stack >= 15",
["action"] = "pyre",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "living_flame",
["cycle_targets"] = 1,
["description"] = "Cast LF with leaping flames up if: not playing burnout, burnout is up, more than 4 enemies, or scarlet adaptation is up.",
["criteria"] = "( ! talent.burnout.enabled || buff.burnout.up || active_enemies >= 4 & cooldown.fire_breath.remains <= gcd.max * 3 || buff.scarlet_adaptation.up ) & buff.leaping_flames.up & ! buff.essence_burst.up & essence < essence.max - 1",
},
{
["enabled"] = true,
["description"] = "Yoinked the disintegrate logic from ST",
["action"] = "disintegrate",
["cycle_targets"] = 1,
["interrupt_if"] = "evoker.use_clipping&buff.dragonrage.up&ticks>=2&(raid_event.movement.in>2||buff.hover.up)",
["early_chain_if"] = "evoker.use_early_chaining&ticks>=2&buff.dragonrage.up&(raid_event.movement.in>2||buff.hover.up)",
["criteria"] = "raid_event.movement.in > 2 || buff.hover.up",
["chain"] = "1",
},
{
["enabled"] = true,
["action"] = "living_flame",
["cycle_targets"] = 1,
["description"] = "Cast LF with burnout and snapfire proc for those juicy insta firestorms",
["criteria"] = "talent.snapfire.enabled & buff.burnout.up",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Get Ancient Flame as Filler",
["criteria"] = "talent.ancient_flame.enabled & ! buff.ancient_flame.up & ! buff.dragonrage.up",
["list_name"] = "green",
},
{
["enabled"] = true,
["description"] = "Fallback filler",
["action"] = "azure_strike",
["cycle_targets"] = 1,
},
},
["trinkets"] = {
{
["enabled"] = true,
["action"] = "dreambinder_loom_of_the_great_cycle",
["use_off_gcd"] = 1,
["description"] = "Use Dreambinder on CD",
["criteria"] = "gcd.remains > 0.5",
["name"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["action"] = "iridal_the_earths_master",
["cycle_targets"] = 1,
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0.5",
["name"] = "iridal_the_earths_master",
},
{
["enabled"] = true,
["criteria"] = "buff.spymasters_report.stack = 1 & buff.dragonrage.up & ! buff.spymasters_web.up || buff.dragonrage.up & ( fight_remains < 130 ) || ( boss & fight_remains <= 20 || cooldown.engulf.up & talent.engulf.enabled & fight_remains <= 40 & cooldown.dragonrage.remains >= 40 )",
["name"] = "spymasters_web",
["action"] = "spymasters_web",
},
{
["enabled"] = true,
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
["criteria"] = "( buff.emerald_trance_stacking.stack >= 2 & variable.has_external_pi & talent.event_horizon.enabled || cooldown.dragonrage.remains <= 3 & ( cooldown.fire_breath.remains < 4 || cooldown.eternity_surge.remains < 4 ) & ( cooldown.fire_breath.remains < 8 & cooldown.eternity_surge.remains < 8 ) & target.time_to_die >= 32 & ( ! variable.has_external_pi & active_enemies <= 2 || ! talent.event_horizon.enabled || ! set_bonus.tier31_2pc ) ) || cooldown.dragonrage.remains <= 3 & active_enemies >= 3 || boss & fight_remains <= 20",
["description"] = "Nymues is used before Dragonrage unless you have PI and Event Horizon, then it is used on 2 Stacks of Emerald Trance. In AoE it is used before DR.",
},
{
["enabled"] = true,
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
["criteria"] = "( ( ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || active_enemies <= 2 ) & ( cooldown.nymues_unraveling_spindle.remains || ! equipped.nymues_unraveling_spindle ) ) || boss & fight_remains <= 20",
["description"] = "Belorrelos is used on CD if not playing Nymues, it is used after Nymues if it is played. On AoE use after other use trinket.",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "The trinket with the highest estimated value, will be used first and paired with Dragonrage. Trinkets are used on 4 stacks of Emerald Trance, unless playing double buff trinket, then one is used after SS/FB and the next on CD. Or with DR in AoE",
["criteria"] = "buff.dragonrage.up & ( ( buff.emerald_trance_stacking.stack >= 4 & set_bonus.tier31_2pc ) || ( variable.trinket_2_buffs & ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! equipped.nymues_unraveling_spindle & trinket.t2.cooldown.remains ) || ( ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! set_bonus.tier31_2pc ) || active_enemies >= 3 ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 || variable.trinket_2_exclude ) & ! variable.trinket_1_manual || trinket.t1.buff_duration >= fight_remains || trinket.t1.cooldown.duration <= 60 & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ( ! buff.dragonrage.up || variable.trinket_priority = 1 )",
},
{
["enabled"] = true,
["criteria"] = "buff.dragonrage.up & ( ( buff.emerald_trance_stacking.stack >= 4 & set_bonus.tier31_2pc ) || ( variable.trinket_1_buffs & ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! equipped.nymues_unraveling_spindle & trinket.t1.cooldown.remains ) || ( ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! set_bonus.tier31_2pc ) || active_enemies >= 3 ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 || variable.trinket_1_exclude ) & ! variable.trinket_2_manual || trinket.t2.buff_duration >= fight_remains || trinket.t2.cooldown.duration <= 60 & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ( ! buff.dragonrage.up || variable.trinket_priority = 2 )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "buff.dragonrage.up & ( ( buff.emerald_trance_stacking.stack >= 4 & set_bonus.tier31_2pc ) || ( variable.trinket_2_buffs & ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! equipped.nymues_unraveling_spindle & trinket.t2.cooldown.remains ) || ( ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! set_bonus.tier31_2pc ) || active_enemies >= 3 ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 || variable.trinket_2_exclude ) & ! variable.trinket_1_manual || trinket.t1.buff_duration >= fight_remains & boss || trinket.t1.cooldown.duration <= 60 & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ( ! buff.dragonrage.up || variable.trinket_priority = 1 ) & ! variable.trinket_1_manual",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "buff.dragonrage.up & ( ( buff.emerald_trance_stacking.stack >= 4 & set_bonus.tier31_2pc ) || ( variable.trinket_1_buffs & ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! equipped.nymues_unraveling_spindle & trinket.t1.cooldown.remains ) || ( ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! set_bonus.tier31_2pc ) || active_enemies >= 3 ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 || variable.trinket_1_exclude ) & ! variable.trinket_2_manual || trinket.t2.buff_duration >= fight_remains & boss || trinket.t2.cooldown.duration <= 60 & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ( ! buff.dragonrage.up || variable.trinket_priority = 2 ) & ! variable.trinket_2_manual",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ! variable.trinket_1_manual",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ! variable.trinket_2_manual",
["action"] = "trinket2",
["slot"] = "trinket2",
},
},
["fb"] = {
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "1",
["description"] = "Fire Breath, use rank appropriate to target count/talents.",
["criteria"] = "( buff.dragonrage.remains < 1.75 * spell_haste & buff.dragonrage.remains >= 1 * spell_haste ) || active_enemies = 1",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "2",
["criteria"] = "active_enemies = 2 || ( buff.dragonrage.remains < 2.5 * spell_haste & buff.dragonrage.remains >= 1.75 * spell_haste )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "3",
["criteria"] = "! talent.font_of_magic.enabled || ( buff.dragonrage.remains <= 3.25 * spell_haste & buff.dragonrage.remains >= 2.5 * spell_haste )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["cycle_targets"] = 1,
["action"] = "fire_breath",
["empower_to"] = "4",
},
},
["st"] = {
{
["enabled"] = true,
["name"] = "kharnalex_the_first_light",
["action"] = "kharnalex_the_first_light",
["criteria"] = "! buff.dragonrage.up & debuff.shattering_star_debuff.down & raid_event.movement.in > 6",
["description"] = "ST Action List, it's a mess, but it's getting better!",
},
{
["enabled"] = true,
["criteria"] = "raid_event.movement.in < 2 & ! buff.hover.up",
["use_off_gcd"] = 1,
["description"] = "Movement Logic, Time spiral logic might need some tweaking actions.st+=/time_spiral,if=raid_event.movement.in<3&cooldown.hover.remains>=3&!buff.hover.up",
["action"] = "hover",
},
{
["enabled"] = true,
["description"] = "Spend firestorm procs ASAP",
["criteria"] = "buff.snapfire.up",
["action"] = "firestorm",
},
{
["enabled"] = true,
["description"] = "Hard cast only outside of SS and DR windows",
["criteria"] = "! buff.dragonrage.up & debuff.shattering_star_debuff.down & talent.feed_the_flames.enabled & ( ( ! talent.dragonrage.enabled || cooldown.dragonrage.remains >= 10 ) & ( essence >= 3 || buff.essence_burst.up || talent.shattering_star.enabled & cooldown.shattering_star.remains <= 6 ) || talent.dragonrage.enabled & cooldown.dragonrage.remains <= cast_time & cooldown.fire_breath.remains < 6 & cooldown.eternity_surge.remains < 12 ) & ! debuff.in_firestorm.up",
["action"] = "firestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.maneuverability.enabled & talent.melt_armor.enabled & ( talent.onyx_legacy.enabled || cooldown.dragonrage.remains <= 2 & ( ( cooldown.fire_breath.remains < 6 || cooldown.eternity_surge.remains < 6 & ( ! set_bonus.tww1_4pc || ! talent.mass_disintegrate.enabled ) ) & ( cooldown.fire_breath.remains < 10 & ( cooldown.eternity_surge.remains < 10 || set_bonus.tww1_4pc & talent.mass_disintegrate.enabled ) ) & ( cooldown.deep_breath.remains > 10 || ! talent.melt_armor.enabled ) & target.time_to_die >= 32 || boss & fight_remains < 32 ) )",
["action"] = "deep_breath",
},
{
["enabled"] = true,
["description"] = "Relaxed Dragonrage Entry Requirements, cannot reliably reach third extend under normal conditions (Bloodlust + Power Infusion/Very high haste gear) DS optimization: Only cast if current fight will last 32s+ or encounter ends in less than 30s",
["criteria"] = "( cooldown.fire_breath.remains < 4 || cooldown.eternity_surge.remains < 4 & ( ! set_bonus.tww1_4pc || ! talent.mass_disintegrate.enabled ) ) & ( cooldown.fire_breath.remains < 8 & ( cooldown.eternity_surge.remains < 8 || set_bonus.tww1_4pc & talent.mass_disintegrate.enabled ) ) & target.time_to_die >= 32 || boss & fight_remains < 32",
["action"] = "dragonrage",
},
{
["enabled"] = true,
["description"] = "Tip second FB if not playing font of magic or if playing EBF, otherwise tip ES.",
["criteria"] = "( ! talent.dragonrage.enabled || buff.dragonrage.up ) & ( cooldown.fire_breath.remains < cooldown.eternity_surge.remains || ( cooldown.eternity_surge.remains < cooldown.fire_breath.remains & talent.font_of_magic.enabled ) )",
["action"] = "tip_the_scales",
},
{
["enabled"] = true,
["description"] = "Throw Star on CD, Don't overcap with Arcane Vigor.",
["criteria"] = "( buff.essence_burst.stack < buff.essence_burst.max_stack || ! talent.arcane_vigor.enabled ) & ( ! cooldown.eternity_surge.up || ! buff.dragonrage.up || ! talent.event_horizon.enabled & ( ! talent.traveling_flame.enabled || ! cooldown.engulf.up ) ) & ( cooldown.dragonrage.remains >= 15 || cooldown.fire_breath.remains >= 8 || buff.dragonrage.up & ( cooldown.fire_breath.remains <= gcd.max & buff.tip_the_scales.up || cooldown.tip_the_scales.remains >= 15 & ! buff.tip_the_scales.up ) || ! talent.traveling_flame.enabled ) & ( ! cooldown.fire_breath.up || buff.tip_the_scales.up )",
["action"] = "shattering_star",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! talent.bombardments.enabled || talent.extended_battle.enabled || debuff.bombardments.remains <= 7 & ! buff.mass_disintegrate_stacks.up || buff.dragonrage.up )",
["var_name"] = "bombardment_clause",
["criteria"] = "talent.bombardments.enabled",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "( ! talent.dragonrage.enabled || variable.next_dragonrage > variable.dr_prep_time_st || ! talent.animosity.enabled ) & ( buff.blazing_shards.remains < variable.r1_cast_time || buff.dragonrage.up ) & ( ! cooldown.eternity_surge.up || ! talent.event_horizon.enabled & ! talent.traveling_flame.enabled || ! buff.dragonrage.up ) & ( target.time_to_die >= 8 || boss & fight_remains < 30 ) & ( ! talent.bombardments.enabled || variable.bombardment_clause || ! dot.fire_breath_damage.ticking ) || empowering.fire_breath",
["list_name"] = "fb",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Eternity Surge logic. Play around blazing shards if outside of DR. DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s",
["criteria"] = "( ! talent.dragonrage.enabled || variable.next_dragonrage > variable.dr_prep_time_st || ! talent.animosity.enabled || set_bonus.tww1_4pc & talent.mass_disintegrate.enabled ) & ( buff.blazing_shards.remains < variable.r1_cast_time || buff.dragonrage.up ) & ( target.time_to_die >= 8 || fight_remains < 30 ) & ( ! talent.bombardments.enabled || variable.bombardment_clause || set_bonus.tww1_4pc ) || empowering.eternity_surge",
["list_name"] = "es",
},
{
["enabled"] = true,
["action"] = "wait",
["sec"] = "cooldown.fire_breath.remains",
["criteria"] = "talent.animosity.enabled & buff.dragonrage.up & buff.dragonrage.remains < gcd.max + variable.r1_cast_time * buff.tip_the_scales.down & buff.dragonrage.remains - cooldown.fire_breath.remains >= variable.r1_cast_time * buff.tip_the_scales.down",
["description"] = "Wait for FB/ES to be ready if spending another GCD would result in the cast no longer fitting inside of DR",
},
{
["enabled"] = true,
["sec"] = "cooldown.eternity_surge.remains",
["action"] = "wait",
["criteria"] = "talent.animosity.enabled & buff.dragonrage.up & buff.dragonrage.remains < gcd.max + variable.r1_cast_time & buff.dragonrage.remains - cooldown.eternity_surge.remains > variable.r1_cast_time * buff.tip_the_scales.down",
},
{
["enabled"] = true,
["description"] = "Spend the last 1 or 2 GCDs of DR on fillers to exit with 2 EBs",
["criteria"] = "buff.dragonrage.up & buff.dragonrage.remains < ( buff.essence_burst.max_stack - buff.essence_burst.stack ) * gcd.max & buff.burnout.up",
["action"] = "living_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.dragonrage.up & buff.dragonrage.remains < ( buff.essence_burst.max_stack - buff.essence_burst.stack ) * gcd.max",
["action"] = "azure_strike",
},
{
["enabled"] = true,
["criteria"] = "dot.fire_breath_damage.ticking & ( ! talent.enkindle.enabled || dot.enkindle.ticking & ( prev_gcd.1.disintegrate || prev_gcd.1.engulf || prev_gcd.2.disintegrate || ! talent.fan_the_flames.enabled || active_enemies > 1 ) ) & ( ! talent.ruby_embers.enabled || dot.living_flame_damage.ticking ) & ( ! talent.shattering_star.enabled || debuff.shattering_star_debuff.up ) & cooldown.dragonrage.remains >= 27",
["action"] = "engulf",
},
{
["enabled"] = true,
["description"] = "Spend burnout procs without overcapping resources",
["criteria"] = "buff.burnout.up & buff.leaping_flames.up & ! buff.essence_burst.up & buff.dragonrage.up",
["action"] = "living_flame",
},
{
["enabled"] = true,
["criteria"] = "! buff.dragonrage.up & ( talent.imminent_destruction.enabled & ! debuff.shattering_star_debuff.up || talent.melt_armor.enabled & talent.maneuverability.enabled )",
["action"] = "deep_breath",
},
{
["enabled"] = true,
["description"] = "Spend pyre if raging inferno debuff is active and you have 20 stacks of CB on 2T",
["criteria"] = "debuff.in_firestorm.up & talent.feed_the_flames.enabled & buff.charged_blast.stack = 20 & active_enemies >= 2",
["action"] = "pyre",
},
{
["enabled"] = true,
["chain"] = "1",
["action"] = "disintegrate",
["interrupt_if"] = "evoker.use_clipping&(buff.dragonrage.up||talent.diverted_power)&ticks>=2&(raid_event.movement.in>2||buff.hover.up)&!buff.mass_disintegrate_ticks.up",
["early_chain_if"] = "evoker.use_early_chaining&ticks>=2&(buff.dragonrage.up||talent.diverted_power)&(raid_event.movement.in>2||buff.hover.up)",
["criteria"] = "( raid_event.movement.in > 2 || buff.hover.up ) & ( ( essence / 3 + buff.essence_burst.stack ) > 1 || ! talent.bombardments.enabled || debuff.bombardments.remains > 3 || buff.mass_disintegrate_stacks.up || buff.dragonrage.up )",
["description"] = "Dis logic Early Chain if needed for resources management. Clip after in DR after third tick for more important buttons.",
},
{
["enabled"] = true,
["description"] = "Use Deep Breath on 2T, unless adds will come before it'll be ready again or if talented ID.",
["criteria"] = "! buff.dragonrage.up & active_enemies >= 2 & ( ( raid_event.adds.in >= 120 & ! talent.onyx_legacy.enabled ) || ( raid_event.adds.in >= 60 & talent.onyx_legacy.enabled ) )",
["action"] = "deep_breath",
},
{
["enabled"] = true,
["criteria"] = "! buff.dragonrage.up & ( talent.imminent_destruction.enabled & ! debuff.shattering_star_debuff.up || talent.melt_armor.enabled || talent.maneuverability.enabled )",
["action"] = "deep_breath",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "talent.ancient_flame.enabled & ! buff.ancient_flame.up & ! buff.shattering_star_debuff.up & talent.scarlet_adaptation.enabled & ! buff.dragonrage.up & ! buff.burnout.up",
["list_name"] = "green",
},
{
["enabled"] = true,
["description"] = "Cast LF outside of DR, In DR only cast with Iridescence.",
["criteria"] = "! buff.dragonrage.up || ( buff.iridescence_red.remains > execute_time || ! talent.engulfing_blaze.enabled || buff.iridescence_blue.up || buff.burnout.up || buff.leaping_flames.up & cooldown.fire_breath.remains <= 5 ) & active_enemies = 1",
["action"] = "living_flame",
},
{
["action"] = "azure_strike",
["enabled"] = true,
},
},
},
["version"] = 20240807,
["warnings"] = "The import for 'es' required some automated changes.\nLine 1: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 1: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\nLine 1: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\nLine 1: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 1: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 1: Converted operations in 'active_enemies<=1+talent.eternitys_span.enabled||buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste||buff.dragonrage.up&(active_enemies==5&!talent.font_of_magic.enabled||active_enemies>(3+talent.font_of_magic.enabled)*(1+talent.eternitys_span.enabled))||active_enemies>=6&!talent.eternitys_span.enabled' to 'active_enemies<=1+talent.eternitys_span.enabled||buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste||buff.dragonrage.up&(active_enemies=5&!talent.font_of_magic.enabled||active_enemies>(3+talent.font_of_magic.enabled)*(1+talent.eternitys_span.enabled))||active_enemies>=6&!talent.eternitys_span.enabled'.\nLine 2: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 3: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 3: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 4: Converted 'talent.feed_the_flames' to 'talent.feed_the_flames.enabled' (1x).\nLine 4: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 4: Converted 'talent.shattering_star' to 'talent.shattering_star.enabled' (1x).\nLine 4: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 5: Converted 'talent.maneuverability' to 'talent.maneuverability.enabled' (1x).\nLine 5: Converted 'talent.melt_armor' to 'talent.melt_armor.enabled' (1x).\nLine 5: Converted 'talent.onyx_legacy' to 'talent.onyx_legacy.enabled' (1x).\nLine 5: Converted 'talent.mass_disintegrate' to 'talent.mass_disintegrate.enabled' (1x).\nLine 5: Converted 'talent.mass_disintegrate' to 'talent.mass_disintegrate.enabled' (1x).\nLine 5: Converted 'talent.melt_armor' to 'talent.melt_armor.enabled' (1x).\nLine 6: Converted 'talent.mass_disintegrate' to 'talent.mass_disintegrate.enabled' (1x).\nLine 6: Converted 'talent.mass_disintegrate' to 'talent.mass_disintegrate.enabled' (1x).\nLine 7: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 7: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\nLine 8: Converted 'talent.arcane_vigor' to 'talent.arcane_vigor.enabled' (1x).\nLine 8: Converted 'talent.event_horizon' to 'talent.event_horizon.enabled' (1x).\nLine 8: Converted 'talent.traveling_flame' to 'talent.traveling_flame.enabled' (1x).\nLine 8: Converted 'talent.traveling_flame' to 'talent.traveling_flame.enabled' (1x).\nLine 9: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 9: Converted 'talent.extended_battle' to 'talent.extended_battle.enabled' (1x).\nLine 9: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 10: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 10: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 10: Converted 'talent.event_horizon' to 'talent.event_horizon.enabled' (1x).\nLine 10: Converted 'talent.traveling_flame' to 'talent.traveling_flame.enabled' (1x).\nLine 10: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 11: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 11: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 11: Converted 'talent.mass_disintegrate' to 'talent.mass_disintegrate.enabled' (1x).\nLine 11: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 12: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 13: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 16: Converted 'talent.enkindle' to 'talent.enkindle.enabled' (1x).\nLine 16: Converted 'talent.fan_the_flames' to 'talent.fan_the_flames.enabled' (1x).\nLine 16: Converted 'talent.ruby_embers' to 'talent.ruby_embers.enabled' (1x).\nLine 16: Converted 'talent.shattering_star' to 'talent.shattering_star.enabled' (1x).\nLine 18: Converted 'talent.imminent_destruction' to 'talent.imminent_destruction.enabled' (1x).\nLine 18: Converted 'talent.melt_armor' to 'talent.melt_armor.enabled' (1x).\nLine 18: Converted 'talent.maneuverability' to 'talent.maneuverability.enabled' (1x).\nLine 19: Converted 'talent.feed_the_flames' to 'talent.feed_the_flames.enabled' (1x).\nLine 19: Converted operations in 'debuff.in_firestorm.up&talent.feed_the_flames.enabled&buff.charged_blast.stack==20&active_enemies>=2' to 'debuff.in_firestorm.up&talent.feed_the_flames.enabled&buff.charged_blast.stack=20&active_enemies>=2'.\nLine 20: Converted 'talent.bombardments' to 'talent.bombardments.enabled' (1x).\nLine 20: Converted operations in '(raid_event.movement.in>2||buff.hover.up)&((essence%3+buff.essence_burst.stack)>1||!talent.bombardments.enabled||debuff.bombardments.remains>3||buff.mass_disintegrate_stacks.up||buff.dragonrage.up)' to '(raid_event.movement.in>2||buff.hover.up)&((essence/3+buff.essence_burst.stack)>1||!talent.bombardments.enabled||debuff.bombardments.remains>3||buff.mass_disintegrate_stacks.up||buff.dragonrage.up)'.\nLine 21: Converted 'talent.onyx_legacy' to 'talent.onyx_legacy.enabled' (1x).\nLine 21: Converted 'talent.onyx_legacy' to 'talent.onyx_legacy.enabled' (1x).\nLine 22: Converted 'talent.imminent_destruction' to 'talent.imminent_destruction.enabled' (1x).\nLine 22: Converted 'talent.melt_armor' to 'talent.melt_armor.enabled' (1x).\nLine 22: Converted 'talent.maneuverability' to 'talent.maneuverability.enabled' (1x).\nLine 23: Converted 'talent.ancient_flame' to 'talent.ancient_flame.enabled' (1x).\nLine 23: Converted 'talent.scarlet_adaptation' to 'talent.scarlet_adaptation.enabled' (1x).\nLine 24: Converted 'talent.engulfing_blaze' to 'talent.engulfing_blaze.enabled' (1x).\nLine 24: Converted operations in '!buff.dragonrage.up||(buff.iridescence_red.remains>execute_time||!talent.engulfing_blaze.enabled||buff.iridescence_blue.up||buff.burnout.up||buff.leaping_flames.up&cooldown.fire_breath.remains<=5)&active_enemies==1' to '!buff.dragonrage.up||(buff.iridescence_red.remains>execute_time||!talent.engulfing_blaze.enabled||buff.iridescence_blue.up||buff.burnout.up||buff.leaping_flames.up&cooldown.fire_breath.remains<=5)&active_enemies=1'.\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 1: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 1: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 1: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 1: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 1: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 2: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 2: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 2: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 2: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%trinket.t1.cooldown.duration=0)'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%trinket.t2.cooldown.duration=0)'.\nLine 5: Converted 'trinket.1.is.belorrelos_the_suncaller' to 'trinket.t1.is.belorrelos_the_suncaller' (1x).\nLine 5: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 5: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 6: Converted 'trinket.2.is.belorrelos_the_suncaller' to 'trinket.t2.is.belorrelos_the_suncaller' (1x).\nLine 6: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 6: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 7: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 7: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 8: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 8: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 9: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 9: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 9: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 9: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 14: Converted 'talent.scarlet_adaptation' to 'talent.scarlet_adaptation.enabled' (1x).\nLine 15: Converted 'talent.firestorm' to 'talent.firestorm.enabled' (1x).\nLine 15: Converted 'talent.engulf' to 'talent.engulf.enabled' (1x).\nLine 15: Converted 'talent.ruby_embers' to 'talent.ruby_embers.enabled' (1x).\nLine 16: Converted 'talent.firestorm' to 'talent.firestorm.enabled' (1x).\nLine 16: Converted 'talent.engulf' to 'talent.engulf.enabled' (1x).\nLine 16: Converted 'talent.ruby_embers' to 'talent.ruby_embers.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.feed_the_flames' to 'talent.feed_the_flames.enabled' (1x).\nLine 3: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 3: Converted 'talent.shattering_star' to 'talent.shattering_star.enabled' (1x).\nLine 3: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 4: Converted 'talent.maneuverability' to 'talent.maneuverability.enabled' (1x).\nLine 4: Converted 'talent.melt_armor' to 'talent.melt_armor.enabled' (1x).\nLine 4: Converted 'talent.onyx_legacy' to 'talent.onyx_legacy.enabled' (1x).\nLine 4: Converted 'talent.mass_disintegrate' to 'talent.mass_disintegrate.enabled' (1x).\nLine 4: Converted 'talent.mass_disintegrate' to 'talent.mass_disintegrate.enabled' (1x).\nLine 4: Converted 'talent.melt_armor' to 'talent.melt_armor.enabled' (1x).\nLine 6: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 7: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 7: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 7: Converted 'talent.diverted_power' to 'talent.diverted_power.enabled' (1x).\nLine 7: Converted 'talent.volatility' to 'talent.volatility.enabled' (1x).\nLine 8: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 8: Converted 'talent.diverted_power' to 'talent.diverted_power.enabled' (1x).\nLine 8: Converted 'talent.volatility' to 'talent.volatility.enabled' (1x).\nLine 10: Converted 'talent.arcane_vigor' to 'talent.arcane_vigor.enabled' (1x).\nLine 11: Converted 'talent.shattering_star' to 'talent.shattering_star.enabled' (1x).\nLine 12: Converted 'talent.feed_the_flames' to 'talent.feed_the_flames.enabled' (1x).\nLine 13: Converted 'talent.mass_disintegrate' to 'talent.mass_disintegrate.enabled' (1x).\nLine 15: Converted 'talent.volatility' to 'talent.volatility.enabled' (1x).\nLine 17: Converted 'talent.burnout' to 'talent.burnout.enabled' (1x).\nLine 19: Converted 'talent.snapfire' to 'talent.snapfire.enabled' (1x).\nLine 20: Converted 'talent.ancient_flame' to 'talent.ancient_flame.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 3: Converted 'talent.engulf' to 'talent.engulf.enabled' (1x).\nLine 4: Converted 'talent.event_horizon' to 'talent.event_horizon.enabled' (1x).\nLine 4: Converted 'talent.event_horizon' to 'talent.event_horizon.enabled' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.nymues_unraveling_spindle.cooldown.remains' to 'cooldown.nymues_unraveling_spindle.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\n\nThe import for 'fb' required some automated changes.\nLine 3: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\n\nImported 8 action lists.\n",
["profile"] = "actions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.intellect||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit||trinket.1.is.mirror_of_fractured_tomorrows\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.intellect||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit||trinket.2.is.mirror_of_fractured_tomorrows\n# Decide which trinket to pair with Dragonrage, prefer 2 minute and 1 minute trinkets\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.2.cooldown.duration=0)\n# Estimates a trinkets value by comparing the cooldown of the trinket, divided by the duration of the buff it provides. Has a intellect modifier (currently 1.5x) to give a higher priority to intellect trinkets. The intellect modifier should be changed as intellect priority increases or decreases. As well as a modifier for if a trinket will or will not sync with cooldowns.\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.belorrelos_the_suncaller||trinket.1.is.nymues_unraveling_spindle||trinket.1.is.spymasters_web\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.belorrelos_the_suncaller||trinket.2.is.nymues_unraveling_spindle||trinket.2.is.spymasters_web\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.intellect)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.intellect)*(variable.trinket_1_sync))\n# Rank 1 empower spell cast time\nactions.precombat+=/variable,name=r1_cast_time,value=1.0*spell_haste\n# Variable for when to start holding empowers for upcoming DR in AoE. - From my testing 4sec seems like the sweetspot, but it's very minor diff so far - Holding for more than 6 seconds it begins to become a loss.\nactions.precombat+=/variable,name=dr_prep_time_aoe,default=4,op=reset\n# Variable for when to start holding empowers for upcoming DR in ST.\nactions.precombat+=/variable,name=dr_prep_time_st,default=10,op=reset\nactions.precombat+=/variable,name=has_external_pi,value=cooldown.invoke_power_infusion_0.duration>0\n# Get Some Scarlet Adaptation Prepull\nactions.precombat+=/verdant_embrace,if=talent.scarlet_adaptation\nactions.precombat+=/firestorm,if=talent.firestorm&(!talent.engulf||!talent.ruby_embers)\nactions.precombat+=/living_flame,if=!talent.firestorm||talent.engulf&talent.ruby_embers\n\n# Delay pot in ST if you are about to SS - mostly relevant for opener where you want DR->FB->SS->rotation\nactions+=/potion,if=buff.dragonrage.up&(!cooldown.shattering_star.up||active_enemies>=2)||boss&fight_remains<35\n# Variable that evaluates when next dragonrage is by working out the maximum between the dragonrage cd and your empowers, ignoring CDR effect estimates.\nactions+=/variable,name=next_dragonrage,value=cooldown.dragonrage.remains<?(cooldown.eternity_surge.remains-4)<?(cooldown.fire_breath.remains-4)\n## Invoke External Power Infusions if they're available during dragonrage\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.dragonrage.up&(buff.emerald_trance_stacking.stack>=3&set_bonus.tier31_2pc||!cooldown.fire_breath.up&!cooldown.shattering_star.up&(!set_bonus.tier31_2pc||!talent.event_horizon))\n# Rupt to make the raidleader happy\nactions+=/quell,use_off_gcd=1,if=target.debuff.casting.react\nactions+=/call_action_list,name=trinkets\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/run_action_list,name=st\n\n# AOE action list; This is kind of a mess again and should prolly be rewritten completely Open with star before DR to save a global and start with a free EB\nactions.aoe+=/shattering_star,cycle_targets=1,if=cooldown.dragonrage.up\n# Spend firestorm procs ASAP\nactions.aoe+=/firestorm,if=buff.snapfire.up\n# Hard cast only outside of SS and DR windows\nactions.aoe+=/firestorm,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down&talent.feed_the_flames&((!talent.dragonrage||cooldown.dragonrage.remains>=10)&(essence>=3||buff.essence_burst.up||talent.shattering_star&cooldown.shattering_star.remains<=6)||talent.dragonrage&cooldown.dragonrage.remains<=cast_time&cooldown.fire_breath.remains<6&cooldown.eternity_surge.remains<12)&!debuff.in_firestorm.up\nactions.aoe+=/deep_breath,if=talent.maneuverability&talent.melt_armor&(talent.onyx_legacy||cooldown.dragonrage.remains<=2&((cooldown.fire_breath.remains<6||cooldown.eternity_surge.remains<6&(!set_bonus.tww1_4pc||!talent.mass_disintegrate))&(cooldown.fire_breath.remains<10&(cooldown.eternity_surge.remains<10||set_bonus.tww1_4pc&talent.mass_disintegrate))&(cooldown.deep_breath.remains>10||!talent.melt_armor)&target.time_to_die>=32||boss&fight_remains<32))\nactions.aoe+=/dragonrage,if=target.time_to_die>=32||boss&fight_remains<30\n# Use tip to get that sweet aggro\nactions.aoe+=/tip_the_scales,if=buff.dragonrage.up&(active_enemies<=3+3*talent.eternitys_span||!cooldown.fire_breath.up)\n# Cast Fire Breath - stagger for swell/blazing shards outside DR DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s\nactions.aoe+=/call_action_list,name=fb,if=(!talent.dragonrage||variable.next_dragonrage>variable.dr_prep_time_aoe||!talent.animosity||talent.diverted_power&cooldown.dragonrage.remains>=5)&((buff.power_swell.remains<variable.r1_cast_time||(!talent.volatility&active_enemies=3))&buff.blazing_shards.remains<variable.r1_cast_time||buff.dragonrage.up)&(target.time_to_die>=8||boss&fight_remains<30)||empowering.fire_breath\n# Cast Eternity Surge - stagger for swell/blazing shards outside DR DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s\nactions.aoe+=/call_action_list,name=es,if=buff.dragonrage.up||!talent.dragonrage||talent.diverted_power&cooldown.dragonrage.remains>=5||(cooldown.dragonrage.remains>variable.dr_prep_time_aoe&(buff.power_swell.remains<variable.r1_cast_time||(!talent.volatility&active_enemies=3))&buff.blazing_shards.remains<variable.r1_cast_time)&(target.time_to_die>=8||boss&fight_remains<30)||empowering.eternity_surge\n# Cast DB if not in DR and not going to overflow essence.\nactions.aoe+=/deep_breath,if=!buff.dragonrage.up&essence.deficit>3\n# Send SS when it doesn't overflow EB, without vigor send on CD\nactions.aoe+=/shattering_star,cycle_targets=1,if=buff.essence_burst.stack<buff.essence_burst.max_stack||!talent.arcane_vigor\nactions.aoe+=/engulf,if=dot.fire_breath_damage.ticking&(!talent.shattering_star||debuff.shattering_star_debuff.up)&cooldown.dragonrage.remains>=27\n# Cast Firestorm before spending ressources\nactions.aoe+=/firestorm,if=talent.feed_the_flames&(cooldown.dragonrage.remains>=20||cooldown.dragonrage.remains<=10)&(buff.essence_burst.up||essence>=2||cooldown.dragonrage.remains<=10)||buff.snapfire.up\nactions.aoe+=/disintegrate,cycle_targets=1,if=buff.mass_disintegrate_stacks.up&talent.mass_disintegrate\n# Pyre logic Pyre 4T+ Pyre 3T+ if playing Volatility Pyre with 15 stacks of CB\nactions.aoe+=/pyre,cycle_targets=1,if=active_enemies>=4\nactions.aoe+=/pyre,cycle_targets=1,if=active_enemies>=3&talent.volatility\nactions.aoe+=/pyre,cycle_targets=1,if=buff.charged_blast.stack>=15\n# Cast LF with leaping flames up if: not playing burnout, burnout is up, more than 4 enemies, or scarlet adaptation is up.\nactions.aoe+=/living_flame,cycle_targets=1,if=(!talent.burnout||buff.burnout.up||active_enemies>=4&cooldown.fire_breath.remains<=gcd.max*3||buff.scarlet_adaptation.up)&buff.leaping_flames.up&!buff.essence_burst.up&essence<essence.max-1\n# Yoinked the disintegrate logic from ST\nactions.aoe+=/disintegrate,cycle_targets=1,chain=1,early_chain_if=evoker.use_early_chaining&ticks>=2&buff.dragonrage.up&(raid_event.movement.in>2||buff.hover.up),interrupt_if=evoker.use_clipping&buff.dragonrage.up&ticks>=2&(raid_event.movement.in>2||buff.hover.up),if=raid_event.movement.in>2||buff.hover.up\n# Cast LF with burnout and snapfire proc for those juicy insta firestorms\nactions.aoe+=/living_flame,cycle_targets=1,if=talent.snapfire&buff.burnout.up\n# Get Ancient Flame as Filler\nactions.aoe+=/call_action_list,name=green,if=talent.ancient_flame&!buff.ancient_flame.up&!buff.dragonrage.up\n# Fallback filler\nactions.aoe+=/azure_strike,cycle_targets=1\n\n# Eternity Surge, use rank most applicable to targets.\nactions.es+=/eternity_surge,empower_to=1,cycle_targets=1,if=active_enemies<=1+talent.eternitys_span||buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste||buff.dragonrage.up&(active_enemies==5&!talent.font_of_magic||active_enemies>(3+talent.font_of_magic)*(1+talent.eternitys_span))||active_enemies>=6&!talent.eternitys_span\nactions.es+=/eternity_surge,empower_to=2,cycle_targets=1,if=active_enemies<=2+2*talent.eternitys_span||buff.dragonrage.remains<2.5*spell_haste&buff.dragonrage.remains>=1.75*spell_haste\nactions.es+=/eternity_surge,empower_to=3,cycle_targets=1,if=active_enemies<=3+3*talent.eternitys_span||!talent.font_of_magic||buff.dragonrage.remains<=3.25*spell_haste&buff.dragonrage.remains>=2.5*spell_haste\nactions.es+=/eternity_surge,empower_to=4,cycle_targets=1\n\n# Fire Breath, use rank appropriate to target count/talents.\nactions.fb+=/fire_breath,empower_to=1,cycle_targets=1,if=(buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste)||active_enemies=1\nactions.fb+=/fire_breath,empower_to=2,cycle_targets=1,if=active_enemies=2||(buff.dragonrage.remains<2.5*spell_haste&buff.dragonrage.remains>=1.75*spell_haste)\nactions.fb+=/fire_breath,empower_to=3,cycle_targets=1,if=!talent.font_of_magic||(buff.dragonrage.remains<=3.25*spell_haste&buff.dragonrage.remains>=2.5*spell_haste)\nactions.fb+=/fire_breath,empower_to=4,cycle_targets=1\n\n# Green Spells used to trigger Ancient Flame\nactions.green+=/emerald_blossom\nactions.green+=/verdant_embrace\n\n# ST Action List, it's a mess, but it's getting better!\nactions.st+=/use_item,name=kharnalex_the_first_light,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down&raid_event.movement.in>6\n# Movement Logic, Time spiral logic might need some tweaking actions.st+=/time_spiral,if=raid_event.movement.in<3&cooldown.hover.remains>=3&!buff.hover.up\nactions.st+=/hover,use_off_gcd=1,if=raid_event.movement.in<2&!buff.hover.up\n# Spend firestorm procs ASAP\nactions.st+=/firestorm,if=buff.snapfire.up\n# Hard cast only outside of SS and DR windows\nactions.st+=/firestorm,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down&talent.feed_the_flames&((!talent.dragonrage||cooldown.dragonrage.remains>=10)&(essence>=3||buff.essence_burst.up||talent.shattering_star&cooldown.shattering_star.remains<=6)||talent.dragonrage&cooldown.dragonrage.remains<=cast_time&cooldown.fire_breath.remains<6&cooldown.eternity_surge.remains<12)&!debuff.in_firestorm.up\nactions.st+=/deep_breath,if=talent.maneuverability&talent.melt_armor&(talent.onyx_legacy||cooldown.dragonrage.remains<=2&((cooldown.fire_breath.remains<6||cooldown.eternity_surge.remains<6&(!set_bonus.tww1_4pc||!talent.mass_disintegrate))&(cooldown.fire_breath.remains<10&(cooldown.eternity_surge.remains<10||set_bonus.tww1_4pc&talent.mass_disintegrate))&(cooldown.deep_breath.remains>10||!talent.melt_armor)&target.time_to_die>=32||boss&fight_remains<32))\n# Relaxed Dragonrage Entry Requirements, cannot reliably reach third extend under normal conditions (Bloodlust + Power Infusion/Very high haste gear) DS optimization: Only cast if current fight will last 32s+ or encounter ends in less than 30s\nactions.st+=/dragonrage,if=(cooldown.fire_breath.remains<4||cooldown.eternity_surge.remains<4&(!set_bonus.tww1_4pc||!talent.mass_disintegrate))&(cooldown.fire_breath.remains<8&(cooldown.eternity_surge.remains<8||set_bonus.tww1_4pc&talent.mass_disintegrate))&target.time_to_die>=32||boss&fight_remains<32\n# Tip second FB if not playing font of magic or if playing EBF, otherwise tip ES.\nactions.st+=/tip_the_scales,if=(!talent.dragonrage||buff.dragonrage.up)&(cooldown.fire_breath.remains<cooldown.eternity_surge.remains||(cooldown.eternity_surge.remains<cooldown.fire_breath.remains&talent.font_of_magic))\n# Throw Star on CD, Don't overcap with Arcane Vigor.\nactions.st+=/shattering_star,if=(buff.essence_burst.stack<buff.essence_burst.max_stack||!talent.arcane_vigor)&(!cooldown.eternity_surge.up||!buff.dragonrage.up||!talent.event_horizon&(!talent.traveling_flame||!cooldown.engulf.up))&(cooldown.dragonrage.remains>=15||cooldown.fire_breath.remains>=8||buff.dragonrage.up&(cooldown.fire_breath.remains<=gcd&buff.tip_the_scales.up||cooldown.tip_the_scales.remains>=15&!buff.tip_the_scales.up)||!talent.traveling_flame)&(!cooldown.fire_breath.up||buff.tip_the_scales.up)\nactions.st+=/variable,name=bombardment_clause,value=(!talent.bombardments||talent.extended_battle||debuff.bombardments.remains<=7&!buff.mass_disintegrate_stacks.up||buff.dragonrage.up),if=talent.bombardments\n+# Fire breath logic. Play around blazing shards if outside of DR. DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s\nactions.st+=/call_action_list,name=fb,if=(!talent.dragonrage||variable.next_dragonrage>variable.dr_prep_time_st||!talent.animosity)&(buff.blazing_shards.remains<variable.r1_cast_time||buff.dragonrage.up)&(!cooldown.eternity_surge.up||!talent.event_horizon&!talent.traveling_flame||!buff.dragonrage.up)&(target.time_to_die>=8||boss&fight_remains<30)&(!talent.bombardments||variable.bombardment_clause||!dot.fire_breath_damage.ticking)||empowering.fire_breath\n# Eternity Surge logic. Play around blazing shards if outside of DR. DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s\nactions.st+=/call_action_list,name=es,if=(!talent.dragonrage||variable.next_dragonrage>variable.dr_prep_time_st||!talent.animosity||set_bonus.tww1_4pc&talent.mass_disintegrate)&(buff.blazing_shards.remains<variable.r1_cast_time||buff.dragonrage.up)&(target.time_to_die>=8||fight_remains<30)&(!talent.bombardments||variable.bombardment_clause||set_bonus.tww1_4pc)||empowering.eternity_surge\n# Wait for FB/ES to be ready if spending another GCD would result in the cast no longer fitting inside of DR\nactions.st+=/wait,sec=cooldown.fire_breath.remains,if=talent.animosity&buff.dragonrage.up&buff.dragonrage.remains<gcd.max+variable.r1_cast_time*buff.tip_the_scales.down&buff.dragonrage.remains-cooldown.fire_breath.remains>=variable.r1_cast_time*buff.tip_the_scales.down\nactions.st+=/wait,sec=cooldown.eternity_surge.remains,if=talent.animosity&buff.dragonrage.up&buff.dragonrage.remains<gcd.max+variable.r1_cast_time&buff.dragonrage.remains-cooldown.eternity_surge.remains>variable.r1_cast_time*buff.tip_the_scales.down\n# Spend the last 1 or 2 GCDs of DR on fillers to exit with 2 EBs\nactions.st+=/living_flame,if=buff.dragonrage.up&buff.dragonrage.remains<(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max&buff.burnout.up\nactions.st+=/azure_strike,if=buff.dragonrage.up&buff.dragonrage.remains<(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max\nactions.st+=/engulf,if=dot.fire_breath_damage.ticking&(!talent.enkindle||dot.enkindle.ticking&(prev_gcd.1.disintegrate||prev_gcd.1.engulf||prev_gcd.2.disintegrate||!talent.fan_the_flames||active_enemies>1))&(!talent.ruby_embers||dot.living_flame_damage.ticking)&(!talent.shattering_star||debuff.shattering_star_debuff.up)&cooldown.dragonrage.remains>=27\n# Spend burnout procs without overcapping resources\nactions.st+=/living_flame,if=buff.burnout.up&buff.leaping_flames.up&!buff.essence_burst.up&buff.dragonrage.up\nactions.st+=/deep_breath,if=!buff.dragonrage.up&(talent.imminent_destruction&!debuff.shattering_star_debuff.up||talent.melt_armor&talent.maneuverability)\n# Spend pyre if raging inferno debuff is active and you have 20 stacks of CB on 2T\nactions.st+=/pyre,if=debuff.in_firestorm.up&talent.feed_the_flames&buff.charged_blast.stack==20&active_enemies>=2\n# Dis logic Early Chain if needed for resources management. Clip after in DR after third tick for more important buttons.\nactions.st+=/disintegrate,chain=1,early_chain_if=evoker.use_early_chaining&ticks>=2&(buff.dragonrage.up||talent.diverted_power)&(raid_event.movement.in>2||buff.hover.up),interrupt_if=evoker.use_clipping&(buff.dragonrage.up||talent.diverted_power)&ticks>=2&(raid_event.movement.in>2||buff.hover.up)&!buff.mass_disintegrate_ticks.up,if=(raid_event.movement.in>2||buff.hover.up)&((essence%3+buff.essence_burst.stack)>1||!talent.bombardments||debuff.bombardments.remains>3||buff.mass_disintegrate_stacks.up||buff.dragonrage.up)\n# Use Deep Breath on 2T, unless adds will come before it'll be ready again or if talented ID.\nactions.st+=/deep_breath,if=!buff.dragonrage.up&active_enemies>=2&((raid_event.adds.in>=120&!talent.onyx_legacy)||(raid_event.adds.in>=60&talent.onyx_legacy))\nactions.st+=/deep_breath,if=!buff.dragonrage.up&(talent.imminent_destruction&!debuff.shattering_star_debuff.up||talent.melt_armor||talent.maneuverability)\n # Get Ancient Flame as Filler\nactions.st+=/call_action_list,name=green,if=talent.ancient_flame&!buff.ancient_flame.up&!buff.shattering_star_debuff.up&talent.scarlet_adaptation&!buff.dragonrage.up&!buff.burnout.up\n# Cast LF outside of DR, In DR only cast with Iridescence.\nactions.st+=/living_flame,if=!buff.dragonrage.up||(buff.iridescence_red.remains>execute_time||!talent.engulfing_blaze||buff.iridescence_blue.up||buff.burnout.up||buff.leaping_flames.up&cooldown.fire_breath.remains<=5)&active_enemies==1\n # Fallback for movement\nactions.st+=/azure_strike\n\n# Use Dreambinder on CD\nactions.trinkets+=/use_item,name=dreambinder_loom_of_the_great_cycle,use_off_gcd=1,if=gcd.remains>0.5\nactions.trinkets+=/use_item,,cycle_targets=1,name=iridal_the_earths_master,use_off_gcd=1,if=gcd.remains>0.5\nactions.trinkets+=/use_item,name=spymasters_web,if=buff.spymasters_report.stack=1&buff.dragonrage.up&!buff.spymasters_web.up||buff.dragonrage.up&(fight_remains<130)||(boss&fight_remains<=20||cooldown.engulf.up&talent.engulf&fight_remains<=40&cooldown.dragonrage.remains>=40)\n# Nymues is used before Dragonrage unless you have PI and Event Horizon, then it is used on 2 Stacks of Emerald Trance. In AoE it is used before DR.\nactions.trinkets+=/use_item,name=nymues_unraveling_spindle,if=(buff.emerald_trance_stacking.stack>=2&variable.has_external_pi&talent.event_horizon||cooldown.dragonrage.remains<=3&(cooldown.fire_breath.remains<4||cooldown.eternity_surge.remains<4)&(cooldown.fire_breath.remains<8&cooldown.eternity_surge.remains<8)&target.time_to_die>=32&(!variable.has_external_pi&active_enemies<=2||!talent.event_horizon||!set_bonus.tier31_2pc))||cooldown.dragonrage.remains<=3&active_enemies>=3||boss&fight_remains<=20\n# Belorrelos is used on CD if not playing Nymues, it is used after Nymues if it is played. On AoE use after other use trinket.\nactions.trinkets+=/use_item,name=belorrelos_the_suncaller,if=(((trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||active_enemies<=2)&(trinket.nymues_unraveling_spindle.cooldown.remains||!equipped.nymues_unraveling_spindle))||boss&fight_remains<=20\n# The trinket with the highest estimated value, will be used first and paired with Dragonrage. Trinkets are used on 4 stacks of Emerald Trance, unless playing double buff trinket, then one is used after SS/FB and the next on CD. Or with DR in AoE\nactions.trinkets+=/use_item,slot=trinket1,if=buff.dragonrage.up&((buff.emerald_trance_stacking.stack>=4&set_bonus.tier31_2pc)||(variable.trinket_2_buffs&!cooldown.fire_breath.up&!cooldown.shattering_star.up&!equipped.nymues_unraveling_spindle&trinket.2.cooldown.remains)||(!cooldown.fire_breath.up&!cooldown.shattering_star.up&!set_bonus.tier31_2pc)||active_enemies>=3)&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1||variable.trinket_2_exclude)&!variable.trinket_1_manual||trinket.1.proc.any_dps.duration>=fight_remains||trinket.1.cooldown.duration<=60&(variable.next_dragonrage>20||!talent.dragonrage)&(!buff.dragonrage.up||variable.trinket_priority=1)\nactions.trinkets+=/use_item,slot=trinket2,if=buff.dragonrage.up&((buff.emerald_trance_stacking.stack>=4&set_bonus.tier31_2pc)||(variable.trinket_1_buffs&!cooldown.fire_breath.up&!cooldown.shattering_star.up&!equipped.nymues_unraveling_spindle&trinket.1.cooldown.remains)||(!cooldown.fire_breath.up&!cooldown.shattering_star.up&!set_bonus.tier31_2pc)||active_enemies>=3)&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2||variable.trinket_1_exclude)&!variable.trinket_2_manual||trinket.2.proc.any_dps.duration>=fight_remains||trinket.2.cooldown.duration<=60&(variable.next_dragonrage>20||!talent.dragonrage)&(!buff.dragonrage.up||variable.trinket_priority=2)\nactions.trinkets+=/use_item,slot=trinket1,if=buff.dragonrage.up&((buff.emerald_trance_stacking.stack>=4&set_bonus.tier31_2pc)||(variable.trinket_2_buffs&!cooldown.fire_breath.up&!cooldown.shattering_star.up&!equipped.nymues_unraveling_spindle&trinket.2.cooldown.remains)||(!cooldown.fire_breath.up&!cooldown.shattering_star.up&!set_bonus.tier31_2pc)||active_enemies>=3)&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1||variable.trinket_2_exclude)&!variable.trinket_1_manual||trinket.1.proc.any_dps.duration>=fight_remains&boss||trinket.1.cooldown.duration<=60&(variable.next_dragonrage>20||!talent.dragonrage)&(!buff.dragonrage.up||variable.trinket_priority=1)&!variable.trinket_1_manual\nactions.trinkets+=/use_item,slot=trinket2,if=buff.dragonrage.up&((buff.emerald_trance_stacking.stack>=4&set_bonus.tier31_2pc)||(variable.trinket_1_buffs&!cooldown.fire_breath.up&!cooldown.shattering_star.up&!equipped.nymues_unraveling_spindle&trinket.1.cooldown.remains)||(!cooldown.fire_breath.up&!cooldown.shattering_star.up&!set_bonus.tier31_2pc)||active_enemies>=3)&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2||variable.trinket_1_exclude)&!variable.trinket_2_manual||trinket.2.proc.any_dps.duration>=fight_remains&boss||trinket.2.cooldown.duration<=60&(variable.next_dragonrage>20||!talent.dragonrage)&(!buff.dragonrage.up||variable.trinket_priority=2)&!variable.trinket_2_manual\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(variable.next_dragonrage>20||!talent.dragonrage)&!variable.trinket_1_manual\nactions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)&(variable.next_dragonrage>20||!talent.dragonrage)&!variable.trinket_2_manual",
["author"] = "SimC",
},
["Outlaw"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240728,
["author"] = "SimC",
["desc"] = "2024-07-28: The War Within",
["lists"] = {
["finish"] = {
{
["enabled"] = true,
["description"] = "Finishers  Use Between the Eyes to keep the crit buff up, but on cooldown if Improved/Greenskins, and avoid overriding Greenskins",
["criteria"] = "! talent.crackshot.enabled & ( buff.between_the_eyes.remains < 4 || talent.improved_between_the_eyes.enabled || talent.greenskins_wickers.enabled ) & ! buff.greenskins_wickers.up",
["action"] = "between_the_eyes",
},
{
["enabled"] = true,
["description"] = "Crackshot builds use Between the Eyes outside of Stealth if we will not enter a Stealth window before the next cast",
["criteria"] = "talent.crackshot.enabled & cooldown.vanish.remains > 45 & ( raid_event.adds.remains > 8 || raid_event.adds.in < raid_event.adds.remains || ! raid_event.adds.up )",
["action"] = "between_the_eyes",
},
{
["enabled"] = true,
["criteria"] = "buff.slice_and_dice.remains < fight_remains & refreshable",
["action"] = "slice_and_dice",
},
{
["action"] = "cold_blood",
["enabled"] = true,
},
{
["action"] = "coup_de_grace",
["enabled"] = true,
},
{
["action"] = "dispatch",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "rtb_buffs_will_lose = ( rtb_buffs_will_lose_buff.buried_treasure + rtb_buffs_will_lose_buff.grand_melee & spell_targets.blade_flurry < 2 & raid_event.adds.in > 10 )",
["description"] = "Default Roll the Bones reroll rule: reroll for any buffs that aren't Buried Treasure, excluding Grand Melee in single target",
["var_name"] = "rtb_reroll",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["criteria"] = "talent.crackshot.enabled & ! set_bonus.tier31_4pc",
["description"] = "Crackshot builds without T31 should reroll for True Bearing (or Broadside without Hidden Opportunity) if we won't lose over 1 buff",
["value"] = "( ! rtb_buffs_will_lose_buff.true_bearing & talent.hidden_opportunity.enabled || ! rtb_buffs_will_lose_buff.broadside & ! talent.hidden_opportunity.enabled ) & rtb_buffs_will_lose <= 1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["criteria"] = "talent.crackshot.enabled & set_bonus.tier31_4pc",
["description"] = "Crackshot builds with T31 should reroll if we won't lose over 1 buff (2 with Loaded Dice)",
["value"] = "( rtb_buffs_will_lose <= 1 + buff.loaded_dice.up )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["criteria"] = "! talent.crackshot.enabled & talent.hidden_opportunity.enabled",
["description"] = "Hidden Opportunity builds without Crackshot should reroll for Skull and Crossbones or any 2 buffs excluding Grand Melee in single target",
["value"] = "! rtb_buffs_will_lose_buff.skull_and_crossbones & ( rtb_buffs_will_lose < 2 + rtb_buffs_will_lose_buff.grand_melee & spell_targets.blade_flurry < 2 & raid_event.adds.in > 10 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.rtb_reroll & rtb_buffs_longer = 0 || rtb_buffs_normal = 0 & rtb_buffs_longer >= 1 & rtb_buffs < 6 & rtb_buffs_max_remains <= 39 & ! stealthed.all & buff.loaded_dice.up",
["description"] = "Additional reroll rules if all active buffs will not be rolled away, not in stealth, Loaded Dice is active, and we have less than 6 buffs",
["var_name"] = "rtb_reroll",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["criteria"] = "! ( raid_event.adds.remains > 12 || raid_event.adds.up & ( raid_event.adds.in - raid_event.adds.remains ) < 6 || target.time_to_die > 12 ) || fight_remains < 12",
["description"] = "Avoid rerolls when we will not have time remaining on the fight or add wave to recoup the opportunity cost of the global",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.hidden_opportunity.enabled || combo_points.deficit >= 2 + talent.improved_ambush.enabled + buff.broadside.up ) & energy >= 50",
["var_name"] = "ambush_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "effective_combo_points >= cp_max_spend - 1 - ( stealthed.all & talent.crackshot.enabled )",
["description"] = "Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot",
["var_name"] = "finish_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.blade_flurry < 2 & raid_event.adds.in > 20 || buff.blade_flurry.remains > gcd.max",
["description"] = "With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry",
["var_name"] = "blade_flurry_sync",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "High priority stealth list, will fall through if no conditions are met",
["criteria"] = "stealthed.all",
["list_name"] = "stealth",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition",
["action"] = "run_action_list",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "build",
},
{
["enabled"] = true,
["criteria"] = "energy.base_deficit >= 15 + energy.regen",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "stealth",
["precombat_seconds"] = "2",
},
{
["buff_name"] = "stealth",
["criteria"] = "talent.double_jeopardy.enabled",
["action"] = "cancel_buff",
["enabled"] = true,
["description"] = "Cancel Stealth to activate Double Jeopardy",
},
{
["enabled"] = true,
["action"] = "roll_the_bones",
["criteria"] = "buff.roll_the_bones.down",
["precombat_seconds"] = "2",
},
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["criteria"] = "talent.improved_adrenaline_rush.enabled & buff.adrenaline_rush.down",
["precombat_seconds"] = "1",
},
{
["enabled"] = true,
["action"] = "slice_and_dice",
["criteria"] = "refreshable",
["precombat_seconds"] = "1",
},
{
["action"] = "stealth",
["enabled"] = true,
},
},
["cds"] = {
{
["enabled"] = true,
["description"] = "Cooldowns  Use Adrenaline Rush if it is not active and the finisher condition is not met, but Crackshot builds can refresh it with 2cp or lower inside stealth",
["criteria"] = "! buff.adrenaline_rush.up & ( ! variable.finish_condition || ! talent.improved_adrenaline_rush.enabled ) || stealthed.all & talent.crackshot.enabled & talent.improved_adrenaline_rush.enabled & combo_points <= 2",
["action"] = "adrenaline_rush",
},
{
["enabled"] = true,
["description"] = "Maintain Blade Flurry on 2+ targets",
["criteria"] = "spell_targets >= 2 & buff.blade_flurry.remains < gcd.max",
["action"] = "blade_flurry",
},
{
["enabled"] = true,
["description"] = "With Deft Maneuvers, use Blade Flurry on cooldown at 5+ targets, or at 3-4 targets if missing combo points equal to the amount given",
["criteria"] = "talent.deft_maneuvers.enabled & ! variable.finish_condition & ( spell_targets >= 3 & combo_points.deficit = spell_targets + buff.broadside.up || spell_targets >= 5 )",
["action"] = "blade_flurry",
},
{
["enabled"] = true,
["description"] = "Use Roll the Bones if reroll conditions are met, or with no buffs, or 2s before buffs expire with T31, or 7s before buffs expire with Vanish ready",
["criteria"] = "variable.rtb_reroll || rtb_buffs = 0 || rtb_buffs_max_remains <= 2 & set_bonus.tier31_4pc || rtb_buffs_max_remains <= 7 & cooldown.vanish.ready & talent.crackshot.enabled",
["action"] = "roll_the_bones",
},
{
["enabled"] = true,
["description"] = "Use Keep it Rolling with at least 3 buffs that are not Buried Treasure. If Broadside is not active, then wait until just before the lowest buff expires.",
["criteria"] = "rtb_buffs >= 3 + ( buff.buried_treasure.up || set_bonus.tier31_4pc ) & ( rtb_buffs_min_remains < 2 || buff.broadside.up )",
["action"] = "keep_it_rolling",
},
{
["enabled"] = true,
["criteria"] = "combo_points < cp_max_spend",
["action"] = "ghostly_strike",
},
{
["enabled"] = true,
["name"] = "manic_grieftorch",
["description"] = "Trinkets that should not be used during stealth and have higher priority than entering stealth",
["criteria"] = "! stealthed.all & buff.between_the_eyes.up || fight_remains <= 5",
["action"] = "manic_grieftorch",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.all & buff.between_the_eyes.up || fight_remains <= 5",
["name"] = "beacon_to_the_beyond",
["action"] = "beacon_to_the_beyond",
},
{
["enabled"] = false,
["criteria"] = "! stealthed.all || fight_remains <= 22",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["description"] = "Killing Spree has higher priority than stealth cooldowns",
["criteria"] = "variable.finish_condition & ! stealthed.all",
["action"] = "killing_spree",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Crackshot builds use stealth cooldowns if Between the Eyes is ready",
["criteria"] = "! stealthed.all & ( ! talent.crackshot.enabled || cooldown.between_the_eyes.ready )",
["list_name"] = "stealth_cds",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & ( energy.base_deficit >= 150 || fight_remains < charges * 6 )",
["action"] = "thistle_tea",
},
{
["enabled"] = true,
["description"] = "Use Blade Rush at minimal energy outside of stealth",
["criteria"] = "energy.base_time_to_max > 4 & ! stealthed.all",
["action"] = "blade_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.react || fight_remains < 30 || buff.adrenaline_rush.up",
["action"] = "potion",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "elementium_pocket_anvil",
["use_off_gcd"] = 1,
["name"] = "elementium_pocket_anvil",
["criteria"] = "gcd.remains <= action.sinister_strike.gcd / 2",
["description"] = "Default conditions for usable items.",
},
{
["enabled"] = true,
["action"] = "dragonfire_bomb_dispenser",
["use_off_gcd"] = 1,
["name"] = "dragonfire_bomb_dispenser",
["criteria"] = "gcd.remains <= action.sinister_strike.gcd / 2 & ( ( ! trinket.t1.is.dragonfire_bomb_dispenser & trinket.t1.cooldown.remains > 10 || trinket.t2.cooldown.remains > 10 ) || cooldown.dragonfire_bomb_dispenser.charges > 2 || fight_remains < 20 || ! trinket.t2.has_cooldown || ! trinket.t1.has_cooldown )",
["description"] = "Use Bomb Dispenser on cooldown, but hold if 2nd trinket is nearly off cooldown, unless at max charges or sim duration ends soon",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.blade_flurry > desired_targets || raid_event.adds.in > 60 || raid_event.adds.count < 2 || fight_remains < 10",
["name"] = "stormeaters_boon",
["action"] = "stormeaters_boon",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.blade_flurry > desired_targets || raid_event.adds.in > 60 || raid_event.adds.count < 2 || fight_remains < 16",
["name"] = "enduring_dreadplate",
["action"] = "enduring_dreadplate",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.blade_flurry > desired_targets || raid_event.adds.in > 60 || raid_event.adds.count < 2 || fight_remains < 7",
["name"] = "windscar_whetstone",
["action"] = "windscar_whetstone",
},
{
["enabled"] = true,
["criteria"] = "buff.between_the_eyes.up || trinket.t1.has_stat.any_dps || fight_remains <= 20",
["slots"] = "trinket1",
["action"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "buff.between_the_eyes.up || trinket.t2.has_stat.any_dps || fight_remains <= 20",
["slots"] = "trinket2",
["action"] = "trinket2",
},
},
["stealth"] = {
{
["enabled"] = true,
["description"] = "Stealth",
["criteria"] = "talent.subterfuge.enabled & talent.hidden_opportunity.enabled & spell_targets >= 2 & buff.blade_flurry.remains < gcd.max",
["action"] = "blade_flurry",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition",
["action"] = "cold_blood",
},
{
["enabled"] = true,
["description"] = "Ensure Crackshot BtE is not skipped because of low energy",
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["description"] = "High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld",
["criteria"] = "variable.finish_condition & talent.crackshot.enabled & ( ! buff.shadowmeld.up || stealthed.rogue )",
["action"] = "between_the_eyes",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition",
["action"] = "dispatch",
},
{
["enabled"] = true,
["description"] = "2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and low CPs, or with Greenskins active",
["criteria"] = "talent.crackshot.enabled & talent.fan_the_hammer.rank >= 2 & buff.opportunity.stack >= 6 & ( buff.broadside.up & combo_points <= 1 || buff.greenskins_wickers.up )",
["action"] = "pistol_shot",
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled",
["action"] = "ambush",
},
},
["stealth_cds"] = {
{
["enabled"] = true,
["description"] = "Stealth Cooldowns  Builds with Underhanded Upper Hand and Subterfuge (and Without a Trace for Crackshot) must use Vanish while Adrenaline Rush is active",
["criteria"] = "talent.underhanded_upper_hand.enabled & talent.subterfuge.enabled & ( buff.adrenaline_rush.up || ! talent.without_a_trace.enabled & talent.crackshot.enabled ) & ( variable.finish_condition || ! talent.crackshot.enabled & ( variable.ambush_condition || ! talent.hidden_opportunity.enabled ) )",
["action"] = "vanish",
},
{
["enabled"] = true,
["description"] = "Builds without Underhanded Upper Hand but with Crackshot must still use Vanish into Between the Eyes on cooldown",
["criteria"] = "! talent.underhanded_upper_hand.enabled & talent.crackshot.enabled & variable.finish_condition",
["action"] = "vanish",
},
{
["enabled"] = true,
["description"] = "Builds without Underhanded Upper Hand and Crackshot but still Hidden Opportunity use Vanish into Ambush when Audacity is not active and under max Opportunity stacks",
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & talent.hidden_opportunity.enabled & ! buff.audacity.up & buff.opportunity.stack < buff.opportunity.max_stack & variable.ambush_condition",
["action"] = "vanish",
},
{
["enabled"] = true,
["description"] = "Builds without Underhanded Upper Hand, Crackshot, and Hidden Opportunity use Vanish into a builder to activate Double Jeopardy without breaking the current coin streak, or to activate Take 'em by Surprise",
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & ! talent.hidden_opportunity.enabled & ( ! variable.finish_condition & talent.double_jeopardy.enabled || ! buff.take_em_by_surprise.up & talent.take_em_by_surprise.enabled )",
["action"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition & ! cooldown.vanish.ready",
["action"] = "shadowmeld",
},
},
["build"] = {
{
["enabled"] = true,
["description"] = "Builders",
["action"] = "echoing_reprimand",
},
{
["enabled"] = true,
["description"] = "High priority Ambush for Hidden Opportunity builds",
["criteria"] = "talent.hidden_opportunity.enabled & buff.audacity.up",
["action"] = "ambush",
},
{
["enabled"] = true,
["description"] = "With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available",
["criteria"] = "talent.fan_the_hammer.enabled & talent.audacity.enabled & talent.hidden_opportunity.enabled & buff.opportunity.up & ! buff.audacity.up",
["action"] = "pistol_shot",
},
{
["enabled"] = true,
["description"] = "With Fan the Hammer, consume Opportunity as a higher priority if at max stacks or if it will expire",
["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( buff.opportunity.stack >= buff.opportunity.max_stack || buff.opportunity.remains < 2 )",
["action"] = "pistol_shot",
},
{
["enabled"] = true,
["description"] = "With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum",
["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( combo_points.deficit >= ( 1 + ( talent.quick_draw.enabled + buff.broadside.up ) * ( talent.fan_the_hammer.rank + 1 ) ) || combo_points <= talent.ruthlessness.enabled )",
["action"] = "pistol_shot",
},
{
["enabled"] = true,
["description"] = "If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw",
["criteria"] = "! talent.fan_the_hammer.enabled & buff.opportunity.up & ( energy.base_deficit > energy.regen * 1.5 || combo_points.deficit <= 1 + buff.broadside.up || talent.quick_draw.enabled || talent.audacity.enabled & ! buff.audacity.up )",
["action"] = "pistol_shot",
},
{
["enabled"] = true,
["description"] = "Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds",
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled",
["action"] = "ambush",
},
{
["action"] = "sinister_strike",
["enabled"] = true,
},
},
},
["version"] = 20240728,
["warnings"] = "The import for 'finish' required some automated changes.\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.improved_between_the_eyes' to 'talent.improved_between_the_eyes.enabled' (1x).\nLine 1: Converted 'talent.greenskins_wickers' to 'talent.greenskins_wickers.enabled' (1x).\nLine 2: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 5: Unsupported action 'coup_de_grace'.\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'rtb_buffs.will_lose.buried_treasure' to 'rtb_buffs_will_lose_buff.buried_treasure' (1x).\nLine 3: Converted 'rtb_buffs.will_lose.grand_melee' to 'rtb_buffs_will_lose_buff.grand_melee' (1x).\nLine 4: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 4: Converted 'rtb_buffs.will_lose.true_bearing' to 'rtb_buffs_will_lose_buff.true_bearing' (1x).\nLine 4: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'rtb_buffs.will_lose.broadside' to 'rtb_buffs_will_lose_buff.broadside' (1x).\nLine 4: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 5: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 6: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 6: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 6: Converted 'rtb_buffs.will_lose.skull_and_crossbones' to 'rtb_buffs_will_lose_buff.skull_and_crossbones' (1x).\nLine 6: Converted 'rtb_buffs.will_lose.grand_melee' to 'rtb_buffs_will_lose_buff.grand_melee' (1x).\nLine 9: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 9: Converted 'talent.improved_ambush' to 'talent.improved_ambush.enabled' (1x).\nLine 10: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Unsupported use_item action [ imperfect_ascendancy_serum]; entry disabled.\nLine 3: Converted 'talent.double_jeopardy' to 'talent.double_jeopardy.enabled' (1x).\nLine 5: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\n\nThe import for 'stealth' required some automated changes.\nLine 1: Converted 'talent.subterfuge' to 'talent.subterfuge.enabled' (1x).\nLine 1: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 6: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 7: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 3: Converted 'talent.deft_maneuvers' to 'talent.deft_maneuvers.enabled' (1x).\nLine 4: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 9: Unsupported use_item action [ imperfect_ascendancy_serum]; entry disabled.\nLine 11: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 19: Converted operations in 'gcd.remains<=action.sinister_strike.gcd%2' to 'gcd.remains<=action.sinister_strike.gcd/2'.\nLine 20: Converted 'trinket.1.is.dragonfire_bomb_dispenser' to 'trinket.t1.is.dragonfire_bomb_dispenser' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 20: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 20: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 20: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 20: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 20: Converted operations in 'gcd.remains<=action.sinister_strike.gcd%2&((!trinket.t1.is.dragonfire_bomb_dispenser&trinket.t1.cooldown.remains>10||trinket.t2.cooldown.remains>10)||cooldown.dragonfire_bomb_dispenser.charges>2||fight_remains<20||!trinket.t2.has_cooldown||!trinket.t1.has_cooldown)' to 'gcd.remains<=action.sinister_strike.gcd/2&((!trinket.t1.is.dragonfire_bomb_dispenser&trinket.t1.cooldown.remains>10||trinket.t2.cooldown.remains>10)||cooldown.dragonfire_bomb_dispenser.charges>2||fight_remains<20||!trinket.t2.has_cooldown||!trinket.t1.has_cooldown)'.\nLine 24: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 25: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\n\nThe import for 'stealth_cds' required some automated changes.\nLine 1: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 1: Converted 'talent.subterfuge' to 'talent.subterfuge.enabled' (1x).\nLine 1: Converted 'talent.without_a_trace' to 'talent.without_a_trace.enabled' (1x).\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 2: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 2: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 3: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 3: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 3: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 4: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 4: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.double_jeopardy' to 'talent.double_jeopardy.enabled' (1x).\nLine 4: Converted 'talent.take_em_by_surprise' to 'talent.take_em_by_surprise.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 2: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 3: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 3: Converted 'talent.audacity' to 'talent.audacity.enabled' (1x).\nLine 3: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 5: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 5: Converted 'talent.quick_draw' to 'talent.quick_draw.enabled' (1x).\nLine 5: Converted 'talent.ruthlessness' to 'talent.ruthlessness.enabled' (1x).\nLine 6: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 8: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/use_item,name=imperfect_ascendancy_serum\nactions.precombat+=/stealth,precombat_seconds=2\n# Cancel Stealth to activate Double Jeopardy\nactions.precombat+=/cancel_buff,name=stealth,if=talent.double_jeopardy\nactions.precombat+=/roll_the_bones,precombat_seconds=2,if=buff.roll_the_bones.down\nactions.precombat+=/adrenaline_rush,precombat_seconds=1,if=talent.improved_adrenaline_rush&buff.adrenaline_rush.down\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable\nactions.precombat+=/stealth\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Default Roll the Bones reroll rule: reroll for any buffs that aren't Buried Treasure, excluding Grand Melee in single target\nactions+=/variable,name=rtb_reroll,value=rtb_buffs.will_lose=(rtb_buffs.will_lose.buried_treasure+rtb_buffs.will_lose.grand_melee&spell_targets.blade_flurry<2&raid_event.adds.in>10)\n# Crackshot builds without T31 should reroll for True Bearing (or Broadside without Hidden Opportunity) if we won't lose over 1 buff\nactions+=/variable,name=rtb_reroll,if=talent.crackshot&!set_bonus.tier31_4pc,value=(!rtb_buffs.will_lose.true_bearing&talent.hidden_opportunity||!rtb_buffs.will_lose.broadside&!talent.hidden_opportunity)&rtb_buffs.will_lose<=1\n# Crackshot builds with T31 should reroll if we won't lose over 1 buff (2 with Loaded Dice)\nactions+=/variable,name=rtb_reroll,if=talent.crackshot&set_bonus.tier31_4pc,value=(rtb_buffs.will_lose<=1+buff.loaded_dice.up)\n# Hidden Opportunity builds without Crackshot should reroll for Skull and Crossbones or any 2 buffs excluding Grand Melee in single target\nactions+=/variable,name=rtb_reroll,if=!talent.crackshot&talent.hidden_opportunity,value=!rtb_buffs.will_lose.skull_and_crossbones&(rtb_buffs.will_lose<2+rtb_buffs.will_lose.grand_melee&spell_targets.blade_flurry<2&raid_event.adds.in>10)\n# Additional reroll rules if all active buffs will not be rolled away, not in stealth, Loaded Dice is active, and we have less than 6 buffs\nactions+=/variable,name=rtb_reroll,value=variable.rtb_reroll&rtb_buffs.longer=0||rtb_buffs.normal=0&rtb_buffs.longer>=1&rtb_buffs<6&rtb_buffs.max_remains<=39&!stealthed.all&buff.loaded_dice.up\n# Avoid rerolls when we will not have time remaining on the fight or add wave to recoup the opportunity cost of the global\nactions+=/variable,name=rtb_reroll,op=reset,if=!(raid_event.adds.remains>12||raid_event.adds.up&(raid_event.adds.in-raid_event.adds.remains)<6||target.time_to_die>12)||fight_remains<12\nactions+=/variable,name=ambush_condition,value=(talent.hidden_opportunity||combo_points.deficit>=2+talent.improved_ambush+buff.broadside.up)&energy>=50\n# Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot\nactions+=/variable,name=finish_condition,value=effective_combo_points>=cp_max_spend-1-(stealthed.all&talent.crackshot)\n# With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry\nactions+=/variable,name=blade_flurry_sync,value=spell_targets.blade_flurry<2&raid_event.adds.in>20||buff.blade_flurry.remains>gcd\nactions+=/call_action_list,name=cds\n# High priority stealth list, will fall through if no conditions are met\nactions+=/call_action_list,name=stealth,if=stealthed.all\nactions+=/run_action_list,name=finish,if=variable.finish_condition\nactions+=/call_action_list,name=build\nactions+=/arcane_torrent,if=energy.base_deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Builders\nactions.build+=/echoing_reprimand\n# High priority Ambush for Hidden Opportunity builds\nactions.build+=/ambush,if=talent.hidden_opportunity&buff.audacity.up\n# With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&talent.audacity&talent.hidden_opportunity&buff.opportunity.up&!buff.audacity.up\n# With Fan the Hammer, consume Opportunity as a higher priority if at max stacks or if it will expire\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(buff.opportunity.stack>=buff.opportunity.max_stack||buff.opportunity.remains<2)\n# With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(combo_points.deficit>=(1+(talent.quick_draw+buff.broadside.up)*(talent.fan_the_hammer.rank+1))||combo_points<=talent.ruthlessness)\n# If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw\nactions.build+=/pistol_shot,if=!talent.fan_the_hammer&buff.opportunity.up&(energy.base_deficit>energy.regen*1.5||combo_points.deficit<=1+buff.broadside.up||talent.quick_draw.enabled||talent.audacity.enabled&!buff.audacity.up)\n# Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds\nactions.build+=/pool_resource,for_next=1\nactions.build+=/ambush,if=talent.hidden_opportunity\nactions.build+=/sinister_strike\n\n# Cooldowns  Use Adrenaline Rush if it is not active and the finisher condition is not met, but Crackshot builds can refresh it with 2cp or lower inside stealth\nactions.cds+=/adrenaline_rush,if=!buff.adrenaline_rush.up&(!variable.finish_condition||!talent.improved_adrenaline_rush)||stealthed.all&talent.crackshot&talent.improved_adrenaline_rush&combo_points<=2\n# Maintain Blade Flurry on 2+ targets\nactions.cds+=/blade_flurry,if=spell_targets>=2&buff.blade_flurry.remains<gcd\n# With Deft Maneuvers, use Blade Flurry on cooldown at 5+ targets, or at 3-4 targets if missing combo points equal to the amount given\nactions.cds+=/blade_flurry,if=talent.deft_maneuvers&!variable.finish_condition&(spell_targets>=3&combo_points.deficit=spell_targets+buff.broadside.up||spell_targets>=5)\n# Use Roll the Bones if reroll conditions are met, or with no buffs, or 2s before buffs expire with T31, or 7s before buffs expire with Vanish ready\nactions.cds+=/roll_the_bones,if=variable.rtb_reroll||rtb_buffs=0||rtb_buffs.max_remains<=2&set_bonus.tier31_4pc||rtb_buffs.max_remains<=7&cooldown.vanish.ready&talent.crackshot\n# Use Keep it Rolling with at least 3 buffs that are not Buried Treasure. If Broadside is not active, then wait until just before the lowest buff expires.\nactions.cds+=/keep_it_rolling,if=rtb_buffs>=3+(buff.buried_treasure.up||set_bonus.tier31_4pc)&(rtb_buffs.min_remains<2||buff.broadside.up)\nactions.cds+=/ghostly_strike,if=combo_points<cp_max_spend\n# Trinkets that should not be used during stealth and have higher priority than entering stealth\nactions.cds+=/use_item,name=manic_grieftorch,if=!stealthed.all&buff.between_the_eyes.up||fight_remains<=5\nactions.cds+=/use_item,name=beacon_to_the_beyond,if=!stealthed.all&buff.between_the_eyes.up||fight_remains<=5\nactions.cds+=/use_item,name=imperfect_ascendancy_serum,if=!stealthed.all||fight_remains<=22\n# Killing Spree has higher priority than stealth cooldowns\nactions.cds+=/killing_spree,if=variable.finish_condition&!stealthed.all\n# Crackshot builds use stealth cooldowns if Between the Eyes is ready\nactions.cds+=/call_action_list,name=stealth_cds,if=!stealthed.all&(!talent.crackshot||cooldown.between_the_eyes.ready)\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(energy.base_deficit>=150||fight_remains<charges*6)\n# Use Blade Rush at minimal energy outside of stealth\nactions.cds+=/blade_rush,if=energy.base_time_to_max>4&!stealthed.all\nactions.cds+=/potion,if=buff.bloodlust.react||fight_remains<30||buff.adrenaline_rush.up\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\n# Default conditions for usable items.\nactions.cds+=/use_item,name=elementium_pocket_anvil,use_off_gcd=1,if=gcd.remains<=action.sinister_strike.gcd%2\n# Use Bomb Dispenser on cooldown, but hold if 2nd trinket is nearly off cooldown, unless at max charges or sim duration ends soon\nactions.cds+=/use_item,name=dragonfire_bomb_dispenser,use_off_gcd=1,if=gcd.remains<=action.sinister_strike.gcd%2&((!trinket.1.is.dragonfire_bomb_dispenser&trinket.1.cooldown.remains>10||trinket.2.cooldown.remains>10)||cooldown.dragonfire_bomb_dispenser.charges>2||fight_remains<20||!trinket.2.has_cooldown||!trinket.1.has_cooldown)\nactions.cds+=/use_item,name=stormeaters_boon,if=spell_targets.blade_flurry>desired_targets||raid_event.adds.in>60||raid_event.adds.count<2||fight_remains<10\nactions.cds+=/use_item,name=enduring_dreadplate,if=spell_targets.blade_flurry>desired_targets||raid_event.adds.in>60||raid_event.adds.count<2||fight_remains<16\nactions.cds+=/use_item,name=windscar_whetstone,if=spell_targets.blade_flurry>desired_targets||raid_event.adds.in>60||raid_event.adds.count<2||fight_remains<7\nactions.cds+=/use_items,slots=trinket1,if=buff.between_the_eyes.up||trinket.1.has_stat.any_dps||fight_remains<=20\nactions.cds+=/use_items,slots=trinket2,if=buff.between_the_eyes.up||trinket.2.has_stat.any_dps||fight_remains<=20\n\n# Finishers  Use Between the Eyes to keep the crit buff up, but on cooldown if Improved/Greenskins, and avoid overriding Greenskins\nactions.finish+=/between_the_eyes,if=!talent.crackshot&(buff.between_the_eyes.remains<4||talent.improved_between_the_eyes||talent.greenskins_wickers)&!buff.greenskins_wickers.up\n# Crackshot builds use Between the Eyes outside of Stealth if we will not enter a Stealth window before the next cast\nactions.finish+=/between_the_eyes,if=talent.crackshot&cooldown.vanish.remains>45&(raid_event.adds.remains>8||raid_event.adds.in<raid_event.adds.remains||!raid_event.adds.up)\nactions.finish+=/slice_and_dice,if=buff.slice_and_dice.remains<fight_remains&refreshable\nactions.finish+=/cold_blood\nactions.finish+=/coup_de_grace\nactions.finish+=/dispatch\n\n# Stealth\nactions.stealth+=/blade_flurry,if=talent.subterfuge&talent.hidden_opportunity&spell_targets>=2&buff.blade_flurry.remains<gcd\nactions.stealth+=/cold_blood,if=variable.finish_condition\n# Ensure Crackshot BtE is not skipped because of low energy\nactions.stealth+=/pool_resource,for_next=1\n# High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld\nactions.stealth+=/between_the_eyes,if=variable.finish_condition&talent.crackshot&(!buff.shadowmeld.up||stealthed.rogue)\nactions.stealth+=/dispatch,if=variable.finish_condition\n# 2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and low CPs, or with Greenskins active\nactions.stealth+=/pistol_shot,if=talent.crackshot&talent.fan_the_hammer.rank>=2&buff.opportunity.stack>=6&(buff.broadside.up&combo_points<=1||buff.greenskins_wickers.up)\nactions.stealth+=/ambush,if=talent.hidden_opportunity\n\n# Stealth Cooldowns  Builds with Underhanded Upper Hand and Subterfuge (and Without a Trace for Crackshot) must use Vanish while Adrenaline Rush is active\nactions.stealth_cds+=/vanish,if=talent.underhanded_upper_hand&talent.subterfuge&(buff.adrenaline_rush.up||!talent.without_a_trace&talent.crackshot)&(variable.finish_condition||!talent.crackshot&(variable.ambush_condition||!talent.hidden_opportunity))\n# Builds without Underhanded Upper Hand but with Crackshot must still use Vanish into Between the Eyes on cooldown\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&talent.crackshot&variable.finish_condition\n# Builds without Underhanded Upper Hand and Crackshot but still Hidden Opportunity use Vanish into Ambush when Audacity is not active and under max Opportunity stacks\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&talent.hidden_opportunity&!buff.audacity.up&buff.opportunity.stack<buff.opportunity.max_stack&variable.ambush_condition\n# Builds without Underhanded Upper Hand, Crackshot, and Hidden Opportunity use Vanish into a builder to activate Double Jeopardy without breaking the current coin streak, or to activate Take 'em by Surprise\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&!talent.hidden_opportunity&(!variable.finish_condition&talent.double_jeopardy||!buff.take_em_by_surprise.up&talent.take_em_by_surprise)\nactions.stealth_cds+=/shadowmeld,if=variable.finish_condition&!cooldown.vanish.ready",
["spec"] = 260,
},
["Holy Priest"] = {
["builtIn"] = true,
["date"] = 20230504,
["spec"] = 257,
["desc"] = "2023-05-03:  Updated from SimC.\n\n2023-04-05:  Updated from SimC.",
["profile"] = "actions.precombat+=/power_word_fortitude\n\n# Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word\nactions+=/holy_fire,cycle_targets=1,if=(talent.empyreal_blaze||talent.harmonious_apparatus||!ticking||refreshable)&!(buff.empyreal_blaze.up&(cooldown.divine_word.up||buff.divine_word.up)&cooldown.holy_word_chastise.up)\n# Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.\nactions+=/shadow_word_pain,if=(refreshable||!ticking)&(target.time_to_die>=dot.shadow_word_pain.duration)&!buff.divine_favor_chastise.up&!buff.apotheosis.up\n# Prepare to enter divine favor: chastise\nactions+=/call_action_list,name=divine_favor_chastise_prep,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Enter Divine Favor rotation with divine favor: chastise buff up\nactions+=/run_action_list,name=divine_favor_chastise_active,strict=1,if=buff.divine_favor_chastise.up\n# Run divine favor fillers rotation with buff down\nactions+=/run_action_list,name=divine_favor_filler,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Run divine image rotation with divine image talented\nactions+=/run_action_list,name=divine_image,strict=1,if=talent.divine_image\n# Otherwise generic rotation\nactions+=/run_action_list,name=generic\n\nactions.divine_favor_chastise_prep+=/variable,name=empyreal_exec_time,op=setif,condition=talent.empyreal_blaze,value=action.empyreal_blaze.execute_time,value_else=0\n# apotheosis_exec_time: Store how long Apotheosis will take to execute\nactions.divine_favor_chastise_prep+=/variable,name=apotheosis_exec_time,op=setif,condition=talent.apotheosis,value=action.apotheosis.execute_time,value_else=0\n# Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).\nactions.divine_favor_chastise_prep+=/apotheosis,if=(cooldown.holy_word_chastise.remains>cooldown.divine_word.remains)&(cooldown.divine_word.remains<=(variable.empyreal_exec_time+variable.apotheosis_exec_time))\n# If we're about to cast divine favor, cast empyreal blaze first so we don't waste a GCD on non-damage during the buff window\nactions.divine_favor_chastise_prep+=/empyreal_blaze,if=cooldown.divine_word.remains<=action.empyreal_blaze.execute_time\n# Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze\nactions.divine_favor_chastise_prep+=/divine_word,if=cooldown.holy_word_chastise.up&(!talent.empyreal_blaze||buff.empyreal_blaze.up)\n# Holy word chastise to trigger divine favor: chastise\nactions.divine_favor_chastise_prep+=/holy_word_chastise,if=buff.divine_word.up\n\nactions.divine_favor_chastise_active+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_chastise_active+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_chastise_active+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_chastise_active+=/mindgames\nactions.divine_favor_chastise_active+=/shadow_word_death,if=target.health.pct<20\nactions.divine_favor_chastise_active+=/holy_word_chastise\n# We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage\nactions.divine_favor_chastise_active+=/smite,cycle_targets=1,if=spell_targets.holy_nova>=2\nactions.divine_favor_chastise_active+=/smite\n\nactions.divine_favor_filler+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_filler+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_filler+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_filler+=/mindgames\nactions.divine_favor_filler+=/shadow_word_death,if=target.health.pct<20\n# We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word\nactions.divine_favor_filler+=/holy_word_chastise,if=(cooldown.apotheosis.remains<cooldown.divine_word.remains)||(cooldown.holy_word_chastise.duration_expected<=cooldown.divine_word.remains)\nactions.divine_favor_filler+=/smite\n\nactions.divine_image+=/apotheosis,if=buff.answered_prayers.down&!(cooldown.holy_word_sanctify.up||cooldown.holy_word_serenity.up||cooldown.holy_word_chastise.up)\n# line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting\nactions.divine_image+=/holy_word_sanctify,line_cd=9\nactions.divine_image+=/holy_word_serenity,line_cd=9\nactions.divine_image+=/holy_word_chastise\nactions.divine_image+=/empyreal_blaze\nactions.divine_image+=/halo,if=spell_targets.halo>=2\nactions.divine_image+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_image+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_image+=/mindgames\nactions.divine_image+=/shadow_word_death,if=target.health.pct<20\nactions.divine_image+=/smite\n\nactions.generic+=/holy_word_chastise\nactions.generic+=/empyreal_blaze\n# Hold Apotheosis if chastise will be up soon\nactions.generic+=/apotheosis,if=cooldown.holy_word_chastise.remains>(gcd.max*3)\nactions.generic+=/halo,if=spell_targets.halo>=2\nactions.generic+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.generic+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.generic+=/mindgames\nactions.generic+=/shadow_word_death,if=target.health.pct<20\nactions.generic+=/smite\n\nactions.cooldowns+=/shadowfiend\n# Sync PI with divine favor: chastise if we took divine word\nactions.cooldowns+=/power_infusion,if=(!talent.divine_word||(cooldown.divine_word.up&cooldown.holy_word_chastise.up))\n# Only potion in sync with power infusion\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# hold trinkets to use with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up",
["version"] = 20230504,
["warnings"] = "The import for 'cooldowns' required some automated changes.\nLine 2: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 1: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 1: Converted 'talent.harmonious_apparatus' to 'talent.harmonious_apparatus.enabled' (1x).\nLine 3: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 3: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 5: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 5: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 6: Converted 'talent.divine_image' to 'talent.divine_image.enabled' (1x).\n\nThe import for 'divine_favor_chastise_prep' required some automated changes.\nLine 1: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 2: Converted 'talent.apotheosis' to 'talent.apotheosis.enabled' (1x).\nLine 5: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\n\nImported 8 action lists.\n",
["author"] = "Kapulani",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["action"] = "holy_fire",
["cycle_targets"] = 1,
["description"] = "Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word",
["criteria"] = "( talent.empyreal_blaze.enabled || talent.harmonious_apparatus.enabled || ! ticking || refreshable ) & ! ( buff.empyreal_blaze.up & ( cooldown.divine_word.up || buff.divine_word.up ) & cooldown.holy_word_chastise.up )",
},
{
["enabled"] = true,
["description"] = "Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.",
["criteria"] = "( refreshable || ! ticking ) & ( target.time_to_die >= dot.shadow_word_pain.duration ) & ! buff.divine_favor_chastise.up & ! buff.apotheosis.up",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Prepare to enter divine favor: chastise",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_chastise_prep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Enter Divine Favor rotation with divine favor: chastise buff up",
["strict"] = 1,
["criteria"] = "buff.divine_favor_chastise.up",
["list_name"] = "divine_favor_chastise_active",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine favor fillers rotation with buff down",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_filler",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine image rotation with divine image talented",
["strict"] = 1,
["criteria"] = "talent.divine_image.enabled",
["list_name"] = "divine_image",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Otherwise generic rotation",
["list_name"] = "generic",
},
},
["divine_image"] = {
{
["enabled"] = true,
["criteria"] = "buff.answered_prayers.down & ! ( cooldown.holy_word_sanctify.up || cooldown.holy_word_serenity.up || cooldown.holy_word_chastise.up )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["description"] = "line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting",
["action"] = "holy_word_sanctify",
["line_cd"] = "9",
},
{
["enabled"] = true,
["action"] = "holy_word_serenity",
["line_cd"] = "9",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["action"] = "empyreal_blaze",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["divine_favor_filler"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["description"] = "We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word",
["criteria"] = "( cooldown.apotheosis.remains < cooldown.divine_word.remains ) || ( cooldown.holy_word_chastise.duration_expected <= cooldown.divine_word.remains )",
["action"] = "holy_word_chastise",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["divine_favor_chastise_active"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "smite",
["cycle_targets"] = 1,
["description"] = "We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage",
["criteria"] = "spell_targets.holy_nova >= 2",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["generic"] = {
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["action"] = "empyreal_blaze",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Hold Apotheosis if chastise will be up soon",
["criteria"] = "cooldown.holy_word_chastise.remains > ( gcd.max * 3 )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["action"] = "shadowfiend",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Sync PI with divine favor: chastise if we took divine word",
["criteria"] = "( ! talent.divine_word.enabled || ( cooldown.divine_word.up & cooldown.holy_word_chastise.up ) )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "Only potion in sync with power infusion",
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "hold trinkets to use with PI",
["criteria"] = "buff.power_infusion.up",
["action"] = "use_items",
},
},
["divine_favor_chastise_prep"] = {
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "empyreal_exec_time",
["value"] = "action.empyreal_blaze.execute_time",
["value_else"] = "0",
["criteria"] = "talent.empyreal_blaze.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "apotheosis_exec_time: Store how long Apotheosis will take to execute",
["value"] = "action.apotheosis.execute_time",
["var_name"] = "apotheosis_exec_time",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "talent.apotheosis.enabled",
},
{
["enabled"] = true,
["description"] = "Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).",
["criteria"] = "( cooldown.holy_word_chastise.remains > cooldown.divine_word.remains ) & ( cooldown.divine_word.remains <= ( variable.empyreal_exec_time + variable.apotheosis_exec_time ) )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["description"] = "If we're about to cast divine favor, cast empyreal blaze first so we don't waste a GCD on non-damage during the buff window",
["criteria"] = "cooldown.divine_word.remains <= action.empyreal_blaze.execute_time",
["action"] = "empyreal_blaze",
},
{
["enabled"] = true,
["description"] = "Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze",
["criteria"] = "cooldown.holy_word_chastise.up & ( ! talent.empyreal_blaze.enabled || buff.empyreal_blaze.up )",
["action"] = "divine_word",
},
{
["enabled"] = true,
["description"] = "Holy word chastise to trigger divine favor: chastise",
["criteria"] = "buff.divine_word.up",
["action"] = "holy_word_chastise",
},
},
},
},
["Feral"] = {
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimC",
["desc"] = "2024-05-08: SimC update.\n\n2024-03-10: Minor tweak from sim.\n\n2024-01-09: Stabilize cooldown recommendations.\n\n2023-12-31: Relax Incarnation requirements.\n\n2023-11-26: Fix warning messages.\n\n2023-11-15:  SimC minor updates.\n\n2023-11-11: Incremental updates.\n\n2023-11-05:  Patch 10.2.\n\n2023-08-26: Minor priority updates.\n\n2023-07-19:  Convert SimC variables into spec options (Lazy Swipe, Regrowth, etc.).\n\n2023-07-15:  Tweak Incarnation Prowl usage.\n\n2023-05-25:  Update priority to use Rip Duration and Ferocious Bite funnel settings.\n\n2023-05-20:  Tweak 'wait' entry for passive Combo Point generation.\n\n2023-05-15:  Combo Points can increase over time during Berserk.\n\n2023-05-14:  Make Heart of the Wild annoy me less.\n\n2023-05-11:  Minor updates to finisher and cooldown usage.\n\n2023-05-08:  Incremental updates from SimC.\n\n2023-05-06:  Minor updates.\n\n2023-05-03:  Restore missing aoe_builder action list.\n\n2023-05-03:  Update again from SimC.\n\n2023-03-27:  Test updates from SimC.\n\n2023-02-27:  Adjust funneling to use PW if there are multiple un-Ripped targets.\n\n2023-02-25:  Testing a funnel option (spend CP on Ferocious Bite instead of Primal Wrath if Rip won't fall off).\n\n2023-02-21:  Adjusted Berserk logic to prevent freezing/errors.\n\n2023-02-15:  Priority will use finishers at 4+ Combo Points when Lion's Strength is talented, consistent with latest SimulationCraft updates.",
["lists"] = {
["bloodtalons"] = {
{
["enabled"] = true,
["criteria"] = "( cooldown.brutal_slash.full_recharge_time < 4 || target.time_to_die < 5 ) & ( buff.bt_brutal_slash.down & ( buff.bs_inc.up || variable.need_bt ) )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "action.rake.ready & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! buff.shadowmeld.up & buff.bt_rake.down & ! buff.prowl.up & ! buff.apex_predators_craving.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "action.rake.ready & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! buff.prowl.up & buff.bt_rake.down & cooldown.feral_frenzy.remains < 44 & ! buff.apex_predators_craving.up",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["criteria"] = "( refreshable || buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier ) & buff.bt_rake.down",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier & buff.bt_rake.down",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bt_shred.down & buff.clearcasting.react & spell_targets.swipe_cat = 1",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "refreshable & buff.bt_thrash.down & buff.clearcasting.react & spell_targets.swipe_cat = 1 & ! talent.thrashing_claws.enabled",
["action"] = "thrash_cat",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bt_brutal_slash.down",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "refreshable & buff.bt_moonfire.down & spell_targets.swipe_cat = 1",
["action"] = "lunar_inspiration",
},
{
["enabled"] = true,
["criteria"] = "refreshable & buff.bt_thrash.down & ! talent.thrashing_claws.enabled",
["action"] = "thrash_cat",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bt_shred.down & spell_targets.swipe_cat = 1 & ( ! talent.wild_slashes.enabled || ( ! debuff.dire_fixation.up & talent.dire_fixation.enabled ) )",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "buff.bt_swipe.down & talent.wild_slashes.enabled",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["action"] = "lunar_inspiration",
["cycle_targets"] = 1,
["max_cycle_targets"] = "3",
["criteria"] = "buff.bt_moonfire.down & spell_targets.swipe_cat < 5",
},
{
["enabled"] = true,
["criteria"] = "buff.bt_swipe.down",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "buff.bt_moonfire.down",
["action"] = "lunar_inspiration",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "shred",
["cycle_targets"] = 1,
["description"] = "If we have BrS and nothing better to cast, thrash at 5+ targets unless dire fixation is talented.",
["criteria"] = "( spell_targets > 5 || talent.dire_fixation.enabled ) & buff.bt_shred.down & ! buff.sudden_ambush.up & ! ( variable.lazy_swipe & talent.wild_slashes.enabled )",
},
{
["enabled"] = true,
["criteria"] = "buff.bt_thrash.down",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["action"] = "rake",
["cycle_targets"] = 1,
["description"] = "This just finds the best reapplication if you really need 3rd builder for bt",
["criteria"] = "buff.bt_rake.down & ( spell_targets.swipe_cat > 4 & ! talent.dire_fixation.enabled || talent.wild_slashes.enabled & variable.lazy_swipe )",
},
},
["finisher"] = {
{
["enabled"] = true,
["criteria"] = "( dot.primal_wrath.refreshable || ( talent.tear_open_wounds.enabled || ( spell_targets.swipe_cat > 4 & ! talent.rampant_ferocity.enabled ) ) ) & spell_targets.primal_wrath > 1 & talent.primal_wrath.enabled",
["action"] = "primal_wrath",
},
{
["enabled"] = true,
["action"] = "rip",
["cycle_targets"] = 1,
["description"] = "with t31 you can rip a few seconds early as to use bite inside of feral frenzy instead. During smoldering you can delay refreshing rip.",
["criteria"] = "( ( set_bonus.tier31_2pc > 0 & cooldown.feral_frenzy.remains < 2 & dot.rip.remains < 10 ) || ( time < 8 || buff.bloodtalons.up || ! talent.bloodtalons.enabled || ( buff.bs_inc.up & dot.rip.remains < 2 ) ) & refreshable ) & ( ! talent.primal_wrath.enabled || spell_targets.swipe_cat = 1 ) & ! ( buff.smoldering_frenzy.up & dot.rip.remains > 2 )",
},
{
["enabled"] = true,
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
["max_energy"] = 1,
["criteria"] = "buff.apex_predators_craving.down & ( ! buff.bs_inc.up || buff.bs_inc.up & ! talent.soul_of_the_forest.enabled )",
},
{
["enabled"] = true,
["criteria"] = "( buff.bs_inc.up & talent.soul_of_the_forest.enabled ) || buff.apex_predators_craving.up",
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
},
},
["builder"] = {
{
["enabled"] = true,
["action"] = "thrash_cat",
["description"] = "if you need to proc bloodtalons, skip actions that you've already casted towards bloodtalons",
["criteria"] = "refreshable & ( ! talent.dire_fixation.enabled || talent.dire_fixation.enabled & debuff.dire_fixation.up ) & buff.clearcasting.react & ! talent.thrashing_claws.enabled",
},
{
["enabled"] = true,
["criteria"] = "( buff.clearcasting.react || ( talent.dire_fixation.enabled & ! debuff.dire_fixation.up ) ) & ! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "cooldown.brutal_slash.full_recharge_time < 4 & ! ( variable.need_bt & buff.bt_brutal_slash.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "action.rake.ready & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! ( variable.need_bt & buff.bt_rake.up ) & ! buff.prowl.up",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["criteria"] = "( refreshable || buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier ) & ! ( variable.need_bt & buff.bt_rake.up )",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "lunar_inspiration",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.thrashing_claws.enabled",
["action"] = "thrash_cat",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_brutal_slash.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.swipe_cat > 1 || ( talent.wild_slashes.enabled & ( debuff.dire_fixation.up || ! talent.dire_fixation.enabled ) )",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["action"] = "lunar_inspiration",
["description"] = "fallback bloodtalons actions below this point",
["criteria"] = "variable.need_bt & buff.bt_moonfire.down",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_swipe.down",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_rake.down & persistent_multiplier >= dot.rake.pmultiplier",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_thrash.down",
["action"] = "thrash_cat",
},
},
["berserk"] = {
{
["enabled"] = true,
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
["description"] = "with zerk_biteweave variable enabled, send bites if rip has sufficiently high duration",
["criteria"] = "combo_points = 5 & dot.rip.remains > 8 & variable.zerk_biteweave & spell_targets.swipe_cat > 1",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "proc bt if 0/1 overcapped cps if 5/6 combo points with t30 only",
["criteria"] = "combo_points = 5 & ! ( buff.overflowing_power.stack <= 1 & active_bt_triggers = 2 & buff.bloodtalons.stack <= 1 & set_bonus.tier30_4pc )",
["list_name"] = "finisher",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "spell_targets.swipe_cat > 1",
["list_name"] = "aoe_builder",
},
{
["enabled"] = true,
["criteria"] = "! ( buff.bt_rake.up & active_bt_triggers = 2 ) & action.rake.ready & gcd.remains = 0 & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! buff.shadowmeld.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "! ( buff.bt_rake.up & active_bt_triggers = 2 ) & action.rake.ready & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! buff.prowl.up",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["action"] = "rake",
["description"] = "rake if bt doesnt need proc and rake can be upgraded. Fish for sudden ambush procs unless rake will fall off otherwise.",
["criteria"] = "! ( buff.bt_rake.up & active_bt_triggers = 2 ) & ( dot.rake.remains < 3 || buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier )",
},
{
["enabled"] = true,
["action"] = "shred",
["description"] = "in single target, you just proc bt when an opportunity arises",
["criteria"] = "active_bt_triggers = 2 & buff.bt_shred.down",
},
{
["enabled"] = true,
["criteria"] = "active_bt_triggers = 2 & buff.bt_brutal_slash.down",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "active_bt_triggers = 2 & buff.bt_moonfire.down",
["action"] = "lunar_inspiration",
},
{
["enabled"] = true,
["action"] = "thrash_cat",
["description"] = "you still dont want to refresh thrash early though if you can help it.",
["criteria"] = "active_bt_triggers = 2 & buff.bt_thrash.down & ! talent.thrashing_claws.enabled & variable.need_bt",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "lunar_inspiration",
},
{
["enabled"] = true,
["criteria"] = "cooldown.brutal_slash.charges > 1 & ( ! talent.dire_fixation.enabled || debuff.dire_fixation.up )",
["action"] = "brutal_slash",
},
{
["action"] = "shred",
["enabled"] = true,
},
},
["owlweaving"] = {
{
["enabled"] = true,
["action"] = "sunfire",
["line_cd"] = "4*gcd",
},
},
["default"] = {
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "soothe",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "prowl",
["description"] = "Executed every time the actor is available.",
["criteria"] = "( buff.bs_inc.down || time = 0 ) & ! buff.prowl.up",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up",
["action"] = "cat_form",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.bloodtalons.enabled & buff.bloodtalons.stack <= 1",
["var_name"] = "need_bt",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.swipe_cat = 1 & boss",
["var_name"] = "align_3minutes",
["description"] = "this variable holds 3 minute cds to use with 3rd zerk in single target situations",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "fight_remains > cooldown.convoke_the_spirits.remains + 3 & ( ( talent.ashamanes_guidance.enabled & fight_remains < ( cooldown.convoke_the_spirits.remains + 60 ) ) || ( ! talent.ashamanes_guidance.enabled & fight_remains < ( cooldown.convoke_the_spirits.remains + 120 ) ) )",
["var_name"] = "lastconvoke",
["description"] = "this variable checks if there is exactly 1 convoke cast remaining in the sim",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "fight_remains > ( 30 + ( cooldown.bs_inc.remains / 1.6 ) ) & ( ( talent.berserk_heart_of_the_lion.enabled & fight_remains < ( 90 + ( cooldown.bs_inc.remains / 1.6 ) ) ) || ( ! talent.berserk_heart_of_the_lion.enabled & fight_remains < ( 180 + cooldown.bs_inc.remains ) ) )",
["var_name"] = "lastzerk",
["description"] = "this variable checks if there is exactly 1 berserk cast remaining in the sim",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "false",
["var_name"] = "force_align_2min",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.force_align_2min || equipped.witherbarks_branch || equipped.ashes_of_the_embersoul || equipped.mirror_of_fractured_tomorrows || equipped.algethar_puzzle_box || equipped.irideus_fragment || ( time + fight_remains > 150 & time + fight_remains < 200 || time + fight_remains > 270 & time + fight_remains < 295 || time + fight_remains > 395 & time + fight_remains < 400 || time + fight_remains > 490 & time + fight_remains < 495 ) ) & talent.convoke_the_spirits.enabled & boss & spell_targets.swipe_cat = 1 & set_bonus.tier31_4pc",
["var_name"] = "align_cds",
["description"] = "this variable checks the fight timer and trinkets to decide if itll be more dps to align berserk with 2 minute convoke",
},
{
["enabled"] = true,
["criteria"] = "! set_bonus.tier31_4pc > 0 & talent.convoke_the_spirits.enabled || ! buff.tigers_fury.up || energy.deficit > 65 || set_bonus.tier31_2pc > 0 & action.feral_frenzy.ready || target.time_to_die < 15 & talent.predator.enabled",
["action"] = "tigers_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( down || persistent_multiplier > dot.rake.pmultiplier ) & ( buff.prowl.up || buff.shadowmeld.up )",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "time > 0",
["action"] = "natures_vigil",
},
{
["enabled"] = true,
["criteria"] = "filler_regrowth & health.pct < 60",
["action"] = "renewal",
},
{
["enabled"] = true,
["criteria"] = "! talent.unbridled_swarm.enabled || spell_targets.swipe_cat = 1",
["action"] = "adaptive_swarm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.adaptive_swarm_damage.stack < 3 & talent.unbridled_swarm.enabled & spell_targets.swipe_cat > 1",
["action"] = "adaptive_swarm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "cooldown and feral frenzy have 2 lines, as a delayed opener to get bt rip is worth it for 2m convoke the spirits in ST",
["criteria"] = "active_dot.rip > 0 || spell_targets.swipe_cat > 1",
["list_name"] = "cooldown",
},
{
["enabled"] = true,
["criteria"] = "( combo_points <= settings.frenzy_cp + buff.bs_inc.up ) & ( dot.rip.ticking || spell_targets.swipe_cat > 1 ) & ( ! talent.dire_fixation.enabled || debuff.dire_fixation.up || spell_targets.swipe_cat > 1 ) & ( target.time_to_die > 6 || target.time_to_die = fight_remains )",
["action"] = "feral_frenzy",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.apex_predators_craving.up & ( spell_targets.swipe_cat = 1 || ! talent.primal_wrath.enabled || ! buff.sabertooth.up ) & ! ( variable.need_bt & active_bt_triggers = 2 )",
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "buff.bs_inc.up",
["list_name"] = "berserk",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "combo_points >= 4",
["list_name"] = "finisher",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "spell_targets.swipe_cat > 1 & combo_points < 4",
["list_name"] = "aoe_builder",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "! buff.bs_inc.up & spell_targets.swipe_cat = 1 & combo_points < 4",
["list_name"] = "builder",
},
{
["enabled"] = true,
["criteria"] = "energy < 25 & buff.predatory_swiftness.up & ! buff.clearcasting.up & filler_regrowth",
["action"] = "regrowth",
},
},
["berserk_builders"] = {
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.swipe_cat > 1",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "active_bt_triggers = 2 & buff.bt_brutal_slash.down",
["action"] = "brutal_slash",
},
{
["action"] = "shred",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "buff.prowl.down",
["action"] = "mark_of_the_wild",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["criteria"] = "buff.any_form.up & buff.cat_form.down",
["action"] = "heart_of_the_wild",
},
{
["action"] = "prowl",
["enabled"] = true,
},
{
["action"] = "cat_form",
["enabled"] = true,
},
},
["cooldown"] = {
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
["criteria"] = "fight_remains < 35 || ( ! variable.align_3minutes )",
["description"] = "use pbox on cd in aoe, or if the fight is about to end",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
["criteria"] = "variable.align_3minutes & ! variable.align_cds & cooldown.bs_inc.remains < 5 & ! buff.smoldering_frenzy.up",
["description"] = "if convoke not talented, use puzzlebox if berserk will be up soon, dont use during smoldering frenzy",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
["criteria"] = "variable.align_3minutes & variable.align_cds & cooldown.convoke_the_spirits.remains < 20 & ! buff.smoldering_frenzy.up",
["description"] = "if convoke talented, treat puzzlebox as a 4 minute cooldown",
},
{
["action"] = "incarnation",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "berserk",
["description"] = "With Convoke on certain fight timers or trinkets, it can be correct to hold berserk for convoke",
["criteria"] = "fight_remains < 25 || talent.convoke_the_spirits.enabled & ( fight_remains < cooldown.convoke_the_spirits.remains || ( variable.align_cds & ( action.feral_frenzy.ready & ( combo_points < 3 || ( time < 10 & combo_points < 4 ) ) || time < 10 & combo_points < 4 ) & cooldown.convoke_the_spirits.remains < 10 ) )",
},
{
["enabled"] = true,
["action"] = "berserk",
["cycle_targets"] = 1,
["description"] = "Hold your last berserk cast to line it up with convoke",
["criteria"] = "! variable.align_cds & ! ( ! talent.frantic_momentum.enabled & equipped.witherbarks_branch & spell_targets.swipe_cat = 1 ) & ( ( ! variable.lastzerk ) || ( variable.lastzerk & ! variable.lastconvoke ) || ( variable.lastconvoke & ( cooldown.convoke_the_spirits.remains < 10 & ( set_bonus.tier31_2pc = 0 || set_bonus.tier31_2pc > 0 & buff.smoldering_frenzy.up ) ) ) ) & ( ( target.time_to_die < fight_remains & target.time_to_die > 18 ) || target.time_to_die = fight_remains )",
},
{
["enabled"] = true,
["action"] = "berserk",
["description"] = "with left/right build and witherbarks/ashes equipped, we treat berserk as a 2 minute cooldown (single target)",
["criteria"] = "boss & fight_remains < 23 || ( ( time + 118 )  % 120 ) < 30 & ! talent.frantic_momentum.enabled & ( equipped.witherbarks_branch || equipped.ashes_of_the_embersoul ) & spell_targets.swipe_cat = 1",
},
{
["enabled"] = true,
["criteria"] = "! variable.align_3minutes || buff.bs_inc.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.up || fight_remains < 32 || ( ! variable.lastzerk & variable.lastconvoke & cooldown.convoke_the_spirits.remains < 10 )",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "ashes_of_the_embersoul",
["criteria"] = "( ( buff.smoldering_frenzy.up & ( ! talent.convoke_the_spirits.enabled || cooldown.convoke_the_spirits.remains < 10 ) ) || set_bonus.tier31_4pc = 0 & ( cooldown.convoke_the_spirits.remains = 0 || ! talent.convoke_the_spirits.enabled & buff.bs_inc.up ) )",
["name"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["action"] = "witherbarks_branch",
["criteria"] = "( ! talent.convoke_the_spirits.enabled || action.feral_frenzy.ready || set_bonus.tier31_4pc = 0 ) & ! ( trinket.t1.is.ashes_of_the_embersoul & trinket.t1.cooldown.remains < 20 || trinket.t2.is.ashes_of_the_embersoul & trinket.t2.cooldown.remains < 20 )",
["name"] = "witherbarks_branch",
},
{
["enabled"] = true,
["action"] = "mirror_of_fractured_tomorrows",
["criteria"] = "boss & fight_remains < 22 || ( ! variable.align_3minutes || buff.bs_inc.up & buff.bs_inc.remains > 15 || variable.lastconvoke & ! variable.lastzerk & cooldown.convoke_the_spirits.remains < 1 ) & ( target.time_to_die > 16 || target.time_to_die = fight_remains )",
["name"] = "mirror_of_fractured_tomorrows",
},
{
["enabled"] = true,
["action"] = "irideus_fragment",
["criteria"] = "buff.smoldering_frenzy.up & ( boss & fight_remains < 35 || ! variable.align_3minutes || buff.bs_inc.up || variable.lastconvoke & ! variable.lastzerk & cooldown.convoke_the_spirits.remains < 5 )",
["name"] = "irideus_fragment",
},
{
["enabled"] = true,
["action"] = "verdant_gladiators_badge_of_ferocity",
["use_off_gcd"] = 1,
["criteria"] = "buff.smoldering_frenzy.up",
["name"] = "verdant_gladiators_badge_of_ferocity",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 5 || ( buff.smoldering_frenzy.up || set_bonus.tier31_4pc = 0 ) & ( dot.rip.remains > 4 - talent.ashamanes_guidance.enabled & buff.tigers_fury.up & ( combo_points <= 2 ) || buff.bs_inc.up & combo_points <= 3 ) & ( debuff.dire_fixation.up || ! talent.dire_fixation.enabled || spell_targets.swipe_cat > 1 ) & ( target.time_to_die > 5 - talent.ashamanes_guidance.enabled || target.time_to_die = fight_remains )",
["action"] = "convoke_the_spirits",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "convoke_the_spirits",
["description"] = "convoke early if you can't fit another gcd and have the entirety of convoke in smoldering window",
["criteria"] = "buff.smoldering_frenzy.up & buff.smoldering_frenzy.remains < 5.1 - talent.ashamanes_guidance.enabled",
},
{
["enabled"] = true,
["name"] = "manic_grieftorch",
["cycle_targets"] = 1,
["description"] = "use grieftorch on cooldown as long as it wont disrupt a stat-on use.",
["criteria"] = "! buff.smoldering_frenzy.up & ( ! equipped.irideus_fragment & ! equipped.ashes_of_the_embersoul & ! equipped.mirror_of_fractured_tomorrows & ! equipped.algethar_puzzle_box || trinket.t1.is.manic_grieftorch & trinket.t2.cooldown.remains > 20 || trinket.t2.is.manic_grieftorch & trinket.t1.cooldown.remains > 20 )",
["action"] = "manic_grieftorch",
},
{
["enabled"] = true,
["action"] = "mydas_talisman",
["criteria"] = "! equipped.ashes_of_the_embersoul & ! equipped.witherbarks_branch || ( ( trinket.t2.is.witherbarks_branch || trinket.t2.is.ashes_of_the_embersoul ) & trinket.t2.cooldown.remains > 20 ) || ( ( trinket.t1.is.witherbarks_branch || trinket.t1.is.ashes_of_the_embersoul ) & trinket.t1.cooldown.remains > 20 )",
["name"] = "mydas_talisman",
},
{
["enabled"] = true,
["action"] = "bandolier_of_twisted_blades",
["criteria"] = "! equipped.ashes_of_the_embersoul & ! equipped.witherbarks_branch || ( ( trinket.t2.is.witherbarks_branch || trinket.t2.is.ashes_of_the_embersoul ) & trinket.t2.cooldown.remains > 20 ) || ( ( trinket.t1.is.witherbarks_branch || trinket.t1.is.ashes_of_the_embersoul ) & trinket.t1.cooldown.remains > 20 )",
["name"] = "bandolier_of_twisted_blades",
},
{
["enabled"] = true,
["action"] = "fyrakks_tainted_rageheart",
["criteria"] = "! equipped.ashes_of_the_embersoul & ! equipped.witherbarks_branch || ( ( trinket.t2.is.witherbarks_branch || trinket.t2.is.ashes_of_the_embersoul ) & trinket.t2.cooldown.remains > 20 ) || ( ( trinket.t1.is.witherbarks_branch || trinket.t1.is.ashes_of_the_embersoul ) & trinket.t1.cooldown.remains > 20 )",
["name"] = "fyrakks_tainted_rageheart",
},
{
["action"] = "use_items",
["enabled"] = true,
},
},
["aoe_builder"] = {
{
["enabled"] = true,
["action"] = "brutal_slash",
["cycle_targets"] = 1,
["description"] = "if you need to proc bloodtalons, skip actions that you've already casted towards bloodtalons",
["criteria"] = "( cooldown.brutal_slash.full_recharge_time < 4 || target.time_to_die < 5 ) & ! ( ( variable.need_bt || buff.bs_inc.up ) & buff.bt_brutal_slash.up )",
},
{
["enabled"] = true,
["criteria"] = "dot.thrash_cat.remains < 3 & ( ! buff.sudden_ambush.up || ! talent.doubleclawed_rake.enabled ) & ! talent.thrashing_claws.enabled",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["criteria"] = "( dot.rake.pmultiplier < 1.6 || dot.rake.refreshable ) & ! ( variable.need_bt & buff.bt_rake.up )",
["action"] = "prowl",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( dot.rake.pmultiplier < 1.6 || dot.rake.refreshable ) & ! ( variable.need_bt & buff.bt_rake.up )",
["action"] = "shadowmeld",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier || dot.rake.refreshable ) & ! ( variable.need_bt & buff.bt_rake.up )",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.thrashing_claws.enabled",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_brutal_slash.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.swipe_cat > 4 & ! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["action"] = "lunar_inspiration",
["cycle_targets"] = 1,
["description"] = "prio targets with swarm debuff for moonfire",
["criteria"] = "refreshable & ! ( variable.need_bt & buff.bt_moonfire.up )",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["action"] = "shred",
["cycle_targets"] = 1,
["description"] = "if we have brs and nothing better to cast, refresh thrash early at 4+ targets unless dire fixation is talented",
["criteria"] = "( spell_targets.swipe_cat < 4 || talent.dire_fixation.enabled ) & ! buff.sudden_ambush.up & ! ( variable.lazy_swipe & talent.wild_slashes.enabled )",
},
{
["action"] = "thrash_cat",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.swipe_cat < 4 || talent.dire_fixation.enabled ) & ! buff.sudden_ambush.up & ! ( settings.lazy_swipe & talent.wild_slashes.enabled ) & ! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_thrash.up )",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["action"] = "shred",
["cycle_targets"] = 1,
["description"] = "fallback bloodtalons actions below this point",
["criteria"] = "! settings.lazy_swipe & variable.need_bt & buff.bt_shred.down",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_moonfire.down",
["action"] = "lunar_inspiration",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_rake.down",
["action"] = "rake",
["cycle_targets"] = 1,
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'bloodtalons' required some automated changes.\nLine 16: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\nLine 18: Converted 'talent.dire_fixation' to 'talent.dire_fixation.enabled' (1x).\nLine 18: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\n\nThe import for 'berserk' required some automated changes.\nLine 10: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 8: Converted operations in 'fight_remains>(30+(cooldown.bs_inc.remains%1.6))&((talent.berserk_heart_of_the_lion.enabled&fight_remains<(90+(cooldown.bs_inc.remains%1.6)))||(!talent.berserk_heart_of_the_lion.enabled&fight_remains<(180+cooldown.bs_inc.remains)))' to 'fight_remains>(30+(cooldown.bs_inc.remains/1.6))&((talent.berserk_heart_of_the_lion.enabled&fight_remains<(90+(cooldown.bs_inc.remains/1.6)))||(!talent.berserk_heart_of_the_lion.enabled&fight_remains<(180+cooldown.bs_inc.remains)))'.\n\nThe import for 'aoe_builder' required some automated changes.\nLine 2: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\nLine 6: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\nLine 11: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\nLine 13: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\n\nThe import for 'cooldown' required some automated changes.\nLine 7: Converted operations in 'boss&fight_remains<23||((time+118)%%120)<30&!talent.frantic_momentum.enabled&(equipped.witherbarks_branch||equipped.ashes_of_the_embersoul)&spell_targets.swipe_cat=1' to 'boss&fight_remains<23||((time+118)%120)<30&!talent.frantic_momentum.enabled&(equipped.witherbarks_branch||equipped.ashes_of_the_embersoul)&spell_targets.swipe_cat=1'.\nLine 11: Converted 'trinket.1.is.ashes_of_the_embersoul' to 'trinket.t1.is.ashes_of_the_embersoul' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.2.is.ashes_of_the_embersoul' to 'trinket.t2.is.ashes_of_the_embersoul' (1x).\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 15: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 16: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 17: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 17: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 17: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 17: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 18: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 18: Converted 'trinket.2.is.ashes_of_the_embersoul' to 'trinket.t2.is.ashes_of_the_embersoul' (1x).\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 18: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 18: Converted 'trinket.1.is.ashes_of_the_embersoul' to 'trinket.t1.is.ashes_of_the_embersoul' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 19: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 19: Converted 'trinket.2.is.ashes_of_the_embersoul' to 'trinket.t2.is.ashes_of_the_embersoul' (1x).\nLine 19: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 19: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 19: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 19: Converted 'trinket.1.is.ashes_of_the_embersoul' to 'trinket.t1.is.ashes_of_the_embersoul' (1x).\nLine 19: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 19: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 20: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 20: Converted 'trinket.2.is.ashes_of_the_embersoul' to 'trinket.t2.is.ashes_of_the_embersoul' (1x).\nLine 20: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 20: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 20: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 20: Converted 'trinket.1.is.ashes_of_the_embersoul' to 'trinket.t1.is.ashes_of_the_embersoul' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\n\nImported 10 action lists.\n",
["profile"] = "actions.precombat+=/mark_of_the_wild,if=buff.prowl.down\nactions.precombat+=/use_item,name=algethar_puzzle_box\nactions.precombat+=/heart_of_the_wild,if=buff.any_form.up&buff.cat_form.down\nactions.precombat+=/prowl\nactions.precombat+=/cat_form\n\nactions+=/skull_bash\nactions+=/soothe\n# Executed every time the actor is available.\nactions+=/prowl,if=(buff.bs_inc.down||time=0)&!buff.prowl.up\nactions+=/cat_form,if=!buff.cat_form.up\n### Sending <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> on cooldown is optimal to line up with berserk as Feral Druids treat Berserk as a 2 minute cooldown.\n## actions+=/invoke_external_buff,name=power_infusion,if=!variable.align_cds||variable.align_cds&buff.bs_inc.up||fight_remains<25\nactions+=/variable,name=need_bt,value=talent.bloodtalons.enabled&buff.bloodtalons.stack<=1\n# this variable holds 3 minute cds to use with 3rd zerk in single target situations\nactions+=/variable,name=align_3minutes,value=spell_targets.swipe_cat=1&boss\n# this variable checks if there is exactly 1 convoke cast remaining in the sim\nactions+=/variable,name=lastconvoke,value=fight_remains>cooldown.convoke_the_spirits.remains+3&((talent.ashamanes_guidance.enabled&fight_remains<(cooldown.convoke_the_spirits.remains+60))||(!talent.ashamanes_guidance.enabled&fight_remains<(cooldown.convoke_the_spirits.remains+120)))\n# this variable checks if there is exactly 1 berserk cast remaining in the sim\nactions+=/variable,name=lastzerk,value=fight_remains>(30+(cooldown.bs_inc.remains%1.6))&((talent.berserk_heart_of_the_lion.enabled&fight_remains<(90+(cooldown.bs_inc.remains%1.6)))||(!talent.berserk_heart_of_the_lion.enabled&fight_remains<(180+cooldown.bs_inc.remains)))\n### this optional variable sends bites and maintains pw during berserk regardless of talents. Turned off by default\n## actions+=/variable,name=zerk_biteweave,op=reset\n### this optional variable sends regrowth and renewal casts. Turned off by default. THIS IS A DPS LOSS EVEN WITHOUT TOXIC THORN\n## actions+=/variable,name=regrowth,op=reset\n### this optional variable avoids using shred in AoE situations. Turned off by default. THIS IS A DPS LOSS\n## actions+=/variable,name=easy_swipe,op=reset\n### this variable make the sim always align berserk with convoke\nactions+=/variable,name=force_align_2min,value=false\n# this variable checks the fight timer and trinkets to decide if itll be more dps to align berserk with 2 minute convoke\nactions+=/variable,name=align_cds,value=(variable.force_align_2min||equipped.witherbarks_branch||equipped.ashes_of_the_embersoul||equipped.mirror_of_fractured_tomorrows||equipped.algethar_puzzle_box||equipped.irideus_fragment||(time+fight_remains>150&time+fight_remains<200||time+fight_remains>270&time+fight_remains<295||time+fight_remains>395&time+fight_remains<400||time+fight_remains>490&time+fight_remains<495))&talent.convoke_the_spirits.enabled&boss&spell_targets.swipe_cat=1&set_bonus.tier31_4pc\nactions+=/tigers_fury,cycle_targets=1,if=!set_bonus.tier31_4pc>0&talent.convoke_the_spirits.enabled||!buff.tigers_fury.up||energy.deficit>65||set_bonus.tier31_2pc>0&action.feral_frenzy.ready||target.time_to_die<15&talent.predator.enabled\nactions+=/rake,cycle_targets=1,if=(down||persistent_multiplier>dot.rake.pmultiplier)&(buff.prowl.up||buff.shadowmeld.up)\nactions+=/natures_vigil,if=time>0\nactions+=/renewal,if=filler_regrowth&health.pct<60\nactions+=/adaptive_swarm,cycle_targets=1,if=(!dot.adaptive_swarm_damage.ticking||dot.adaptive_swarm_damage.remains<2)&dot.adaptive_swarm_damage.stack<3&!action.adaptive_swarm_damage.in_flight&!action.adaptive_swarm.in_flight&target.time_to_die>5,if=!talent.unbridled_swarm.enabled||spell_targets.swipe_cat=1\nactions+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack<3&talent.unbridled_swarm.enabled&spell_targets.swipe_cat>1\n# cooldown and feral frenzy have 2 lines, as a delayed opener to get bt rip is worth it for 2m convoke the spirits in ST\nactions+=/call_action_list,name=cooldown,if=active_dot.rip>0||spell_targets.swipe_cat>1\nactions+=/feral_frenzy,cycle_targets=1,if=(combo_points<=settings.frenzy_cp+buff.bs_inc.up)&(dot.rip.ticking||spell_targets.swipe_cat>1)&(!talent.dire_fixation.enabled||debuff.dire_fixation.up||spell_targets.swipe_cat>1)&(target.time_to_die>6||target.time_to_die=fight_remains)\nactions+=/ferocious_bite,cycle_targets=1,if=buff.apex_predators_craving.up&(spell_targets.swipe_cat=1||!talent.primal_wrath.enabled||!buff.sabertooth.up)&!(variable.need_bt&active_bt_triggers=2)\nactions+=/run_action_list,name=berserk,strict=1,if=buff.bs_inc.up\n## actions+=/wait,sec=combo_points.time_to_max,if=combo_points=4&buff.predator_revealed.react&energy.deficit>40&spell_targets.swipe_cat=1&combo_points.time_to_max<gcd.max\nactions+=/call_action_list,name=finisher,if=combo_points>=4\nactions+=/call_action_list,name=aoe_builder,if=spell_targets.swipe_cat>1&combo_points<4\nactions+=/call_action_list,name=builder,if=!buff.bs_inc.up&spell_targets.swipe_cat=1&combo_points<4\nactions+=/regrowth,if=energy<25&buff.predatory_swiftness.up&!buff.clearcasting.up&filler_regrowth\n\n# if you need to proc bloodtalons, skip actions that you've already casted towards bloodtalons\nactions.aoe_builder+=/brutal_slash,cycle_targets=1,if=(cooldown.brutal_slash.full_recharge_time<4||target.time_to_die<5)&!((variable.need_bt||buff.bs_inc.up)&buff.bt_brutal_slash.up)\nactions.aoe_builder+=/thrash_cat,if=dot.thrash_cat.remains<3&(!buff.sudden_ambush.up||!talent.doubleclawed_rake.enabled)&!talent.thrashing_claws\nactions.aoe_builder+=/prowl,cycle_targets=1,if=(dot.rake.pmultiplier<1.6||dot.rake.refreshable)&!(variable.need_bt&buff.bt_rake.up)\nactions.aoe_builder+=/shadowmeld,cycle_targets=1,if=(dot.rake.pmultiplier<1.6||dot.rake.refreshable)&!(variable.need_bt&buff.bt_rake.up)\nactions.aoe_builder+=/rake,cycle_targets=1,if=(buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier||dot.rake.refreshable)&!(variable.need_bt&buff.bt_rake.up)\nactions.aoe_builder+=/thrash_cat,if=refreshable&!talent.thrashing_claws\nactions.aoe_builder+=/brutal_slash,if=!(variable.need_bt&buff.bt_brutal_slash.up)\nactions.aoe_builder+=/swipe_cat,if=spell_targets.swipe_cat>4&!(variable.need_bt&buff.bt_swipe.up)\n# prio targets with swarm debuff for moonfire\nactions.aoe_builder+=/moonfire_cat,cycle_targets=1,if=refreshable&!(variable.need_bt&buff.bt_moonfire.up)\nactions.aoe_builder+=/swipe_cat,if=!(variable.need_bt&buff.bt_swipe.up)\n# if we have brs and nothing better to cast, refresh thrash early at 4+ targets unless dire fixation is talented\nactions.aoe_builder+=/shred,cycle_targets=1,if=(spell_targets.swipe_cat<4||talent.dire_fixation.enabled)&!buff.sudden_ambush.up&!(variable.lazy_swipe&talent.wild_slashes)\nactions.aoe_builder+=/thrash_cat\nactions.aoe_builder+=/shred,cycle_targets=1,if=(spell_targets.swipe_cat<4||talent.dire_fixation.enabled)&!buff.sudden_ambush.up&!(settings.lazy_swipe&talent.wild_slashes)&!(variable.need_bt&buff.bt_shred.up)\nactions.aoe_builder+=/thrash_cat,if=!(variable.need_bt&buff.bt_thrash.up)\n# fallback bloodtalons actions below this point\nactions.aoe_builder+=/shred,cycle_targets=1,if=!settings.lazy_swipe&variable.need_bt&buff.bt_shred.down\nactions.aoe_builder+=/moonfire_cat,cycle_targets=1,if=variable.need_bt&buff.bt_moonfire.down\nactions.aoe_builder+=/rake,cycle_targets=1,if=variable.need_bt&buff.bt_rake.down\n\n# with zerk_biteweave variable enabled, send bites if rip has sufficiently high duration\nactions.berserk+=/ferocious_bite,cycle_targets=1,if=combo_points=5&dot.rip.remains>8&variable.zerk_biteweave&spell_targets.swipe_cat>1\n# proc bt if 0/1 overcapped cps if 5/6 combo points with t30 only\nactions.berserk+=/call_action_list,name=finisher,if=combo_points=5&!(buff.overflowing_power.stack<=1&active_bt_triggers=2&buff.bloodtalons.stack<=1&set_bonus.tier30_4pc)\nactions.berserk+=/run_action_list,name=aoe_builder,if=spell_targets.swipe_cat>1\nactions.berserk+=/prowl,if=!(buff.bt_rake.up&active_bt_triggers=2)&action.rake.ready&gcd.remains=0&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!buff.shadowmeld.up\nactions.berserk+=/shadowmeld,if=!(buff.bt_rake.up&active_bt_triggers=2)&action.rake.ready&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!buff.prowl.up\n# rake if bt doesnt need proc and rake can be upgraded. Fish for sudden ambush procs unless rake will fall off otherwise.\nactions.berserk+=/rake,if=!(buff.bt_rake.up&active_bt_triggers=2)&(dot.rake.remains<3||buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier)\n# in single target, you just proc bt when an opportunity arises\nactions.berserk+=/shred,if=active_bt_triggers=2&buff.bt_shred.down\nactions.berserk+=/brutal_slash,if=active_bt_triggers=2&buff.bt_brutal_slash.down\nactions.berserk+=/moonfire_cat,if=active_bt_triggers=2&buff.bt_moonfire.down\n# you still dont want to refresh thrash early though if you can help it.\nactions.berserk+=/thrash_cat,if=active_bt_triggers=2&buff.bt_thrash.down&!talent.thrashing_claws&variable.need_bt\nactions.berserk+=/moonfire_cat,if=refreshable\nactions.berserk+=/brutal_slash,if=cooldown.brutal_slash.charges>1&(!talent.dire_fixation.enabled||debuff.dire_fixation.up)\nactions.berserk+=/shred\n\nactions.berserk_builders+=/rake,cycle_targets=1,if=refreshable\nactions.berserk_builders+=/swipe_cat,if=spell_targets.swipe_cat>1\nactions.berserk_builders+=/brutal_slash,if=active_bt_triggers=2&buff.bt_brutal_slash.down\nactions.berserk_builders+=/shred\n\nactions.bloodtalons+=/brutal_slash,if=(cooldown.brutal_slash.full_recharge_time<4||target.time_to_die<5)&(buff.bt_brutal_slash.down&(buff.bs_inc.up||variable.need_bt))\nactions.bloodtalons+=/prowl,if=action.rake.ready&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!buff.shadowmeld.up&buff.bt_rake.down&!buff.prowl.up&!buff.apex_predators_craving.up\nactions.bloodtalons+=/shadowmeld,if=action.rake.ready&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!buff.prowl.up&buff.bt_rake.down&cooldown.feral_frenzy.remains<44&!buff.apex_predators_craving.up\nactions.bloodtalons+=/rake,cycle_targets=1,if=(refreshable||buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier)&buff.bt_rake.down\nactions.bloodtalons+=/rake,cycle_targets=1,if=buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier&buff.bt_rake.down\nactions.bloodtalons+=/shred,if=buff.bt_shred.down&buff.clearcasting.react&spell_targets.swipe_cat=1\nactions.bloodtalons+=/thrash_cat,cycle_targets=1,if=refreshable&buff.bt_thrash.down&buff.clearcasting.react&spell_targets.swipe_cat=1&!talent.thrashing_claws.enabled\nactions.bloodtalons+=/brutal_slash,if=buff.bt_brutal_slash.down\nactions.bloodtalons+=/moonfire_cat,if=refreshable&buff.bt_moonfire.down&spell_targets.swipe_cat=1\nactions.bloodtalons+=/thrash_cat,cycle_targets=1,if=refreshable&buff.bt_thrash.down&!talent.thrashing_claws.enabled\nactions.bloodtalons+=/shred,if=buff.bt_shred.down&spell_targets.swipe_cat=1&(!talent.wild_slashes.enabled||(!debuff.dire_fixation.up&talent.dire_fixation.enabled))\nactions.bloodtalons+=/swipe_cat,if=buff.bt_swipe.down&talent.wild_slashes.enabled\nactions.bloodtalons+=/moonfire_cat,cycle_targets=1,max_cycle_targets=3,if=buff.bt_moonfire.down&spell_targets.swipe_cat<5\nactions.bloodtalons+=/swipe_cat,if=buff.bt_swipe.down\nactions.bloodtalons+=/moonfire_cat,cycle_targets=1,if=buff.bt_moonfire.down\n# If we have BrS and nothing better to cast, thrash at 5+ targets unless dire fixation is talented.\nactions.bloodtalons+=/shred,cycle_targets=1,if=(spell_targets>5||talent.dire_fixation.enabled)&buff.bt_shred.down&!buff.sudden_ambush.up&!(variable.lazy_swipe&talent.wild_slashes)\nactions.bloodtalons+=/thrash_cat,if=buff.bt_thrash.down\n# This just finds the best reapplication if you really need 3rd builder for bt\nactions.bloodtalons+=/rake,cycle_targets=1,if=buff.bt_rake.down&(spell_targets.swipe_cat>4&!talent.dire_fixation||talent.wild_slashes&variable.lazy_swipe)\n\n# if you need to proc bloodtalons, skip actions that you've already casted towards bloodtalons\nactions.builder+=/thrash_cat,if=refreshable&(!talent.dire_fixation.enabled||talent.dire_fixation.enabled&debuff.dire_fixation.up)&buff.clearcasting.react&!talent.thrashing_claws.enabled\nactions.builder+=/shred,if=(buff.clearcasting.react||(talent.dire_fixation.enabled&!debuff.dire_fixation.up))&!(variable.need_bt&buff.bt_shred.up)\nactions.builder+=/brutal_slash,if=cooldown.brutal_slash.full_recharge_time<4&!(variable.need_bt&buff.bt_brutal_slash.up)\n### stop pooling if clearcasting procs\n## actions.builder+=/pool_resource,if=!action.rake.ready&(dot.rake.refreshable||(buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier&dot.rake.remains>6))&!buff.clearcasting.react&!(variable.need_bt&buff.bt_rake.up)\nactions.builder+=/shadowmeld,if=action.rake.ready&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!(variable.need_bt&buff.bt_rake.up)&!buff.prowl.up\nactions.builder+=/rake,if=(refreshable||buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier)&!(variable.need_bt&buff.bt_rake.up)\nactions.builder+=/moonfire_cat,cycle_targets=1,if=refreshable\nactions.builder+=/thrash_cat,cycle_targets=1,if=refreshable&!talent.thrashing_claws.enabled\nactions.builder+=/brutal_slash,if=!(variable.need_bt&buff.bt_brutal_slash.up)\nactions.builder+=/swipe_cat,if=spell_targets.swipe_cat>1||(talent.wild_slashes.enabled&(debuff.dire_fixation.up||!talent.dire_fixation.enabled))\nactions.builder+=/shred,if=!(variable.need_bt&buff.bt_shred.up)\n# fallback bloodtalons actions below this point\nactions.builder+=/moonfire_cat,if=variable.need_bt&buff.bt_moonfire.down\nactions.builder+=/swipe_cat,if=variable.need_bt&buff.bt_swipe.down\nactions.builder+=/rake,if=variable.need_bt&buff.bt_rake.down&persistent_multiplier>=dot.rake.pmultiplier\nactions.builder+=/thrash_cat,if=variable.need_bt&buff.bt_thrash.down\n\n# use pbox on cd in aoe, or if the fight is about to end\nactions.cooldown+=/use_item,name=algethar_puzzle_box,if=fight_remains<35||(!variable.align_3minutes)\n# if convoke not talented, use puzzlebox if berserk will be up soon, dont use during smoldering frenzy\nactions.cooldown+=/use_item,name=algethar_puzzle_box,if=variable.align_3minutes&!variable.align_cds&cooldown.bs_inc.remains<5&!buff.smoldering_frenzy.up\n# if convoke talented, treat puzzlebox as a 4 minute cooldown\nactions.cooldown+=/use_item,name=algethar_puzzle_box,if=variable.align_3minutes&variable.align_cds&cooldown.convoke_the_spirits.remains<20&!buff.smoldering_frenzy.up\nactions.cooldown+=/incarnation\n# With Convoke on certain fight timers or trinkets, it can be correct to hold berserk for convoke\nactions.cooldown+=/berserk,if=fight_remains<25||talent.convoke_the_spirits.enabled&(fight_remains<cooldown.convoke_the_spirits.remains||(variable.align_cds&(action.feral_frenzy.ready&(combo_points<3||(time<10&combo_points<4))||time<10&combo_points<4)&cooldown.convoke_the_spirits.remains<10))\n# Hold your last berserk cast to line it up with convoke\nactions.cooldown+=/berserk,cycle_targets=1,if=!variable.align_cds&!(!talent.frantic_momentum.enabled&equipped.witherbarks_branch&spell_targets.swipe_cat=1)&((!variable.lastzerk)||(variable.lastzerk&!variable.lastconvoke)||(variable.lastconvoke&(cooldown.convoke_the_spirits.remains<10&(set_bonus.tier31_2pc=0||set_bonus.tier31_2pc>0&buff.smoldering_frenzy.up))))&((target.time_to_die<fight_remains&target.time_to_die>18)||target.time_to_die=fight_remains)\n# with left/right build and witherbarks/ashes equipped, we treat berserk as a 2 minute cooldown (single target)\nactions.cooldown+=/berserk,if=boss&fight_remains<23||((time+118)%%120)<30&!talent.frantic_momentum.enabled&(equipped.witherbarks_branch||equipped.ashes_of_the_embersoul)&spell_targets.swipe_cat=1\nactions.cooldown+=/berserking,if=!variable.align_3minutes||buff.bs_inc.up\nactions.cooldown+=/potion,if=buff.bs_inc.up||fight_remains<32||(!variable.lastzerk&variable.lastconvoke&cooldown.convoke_the_spirits.remains<10)\nactions.cooldown+=/use_item,name=ashes_of_the_embersoul,if=((buff.smoldering_frenzy.up&(!talent.convoke_the_spirits.enabled||cooldown.convoke_the_spirits.remains<10))||set_bonus.tier31_4pc=0&(cooldown.convoke_the_spirits.remains=0||!talent.convoke_the_spirits.enabled&buff.bs_inc.up))\nactions.cooldown+=/use_item,name=witherbarks_branch,if=(!talent.convoke_the_spirits.enabled||action.feral_frenzy.ready||set_bonus.tier31_4pc=0)&!(trinket.1.is.ashes_of_the_embersoul&trinket.1.cooldown.remains<20||trinket.2.is.ashes_of_the_embersoul&trinket.2.cooldown.remains<20)\nactions.cooldown+=/use_item,name=mirror_of_fractured_tomorrows,if=boss&fight_remains<22||(!variable.align_3minutes||buff.bs_inc.up&buff.bs_inc.remains>15||variable.lastconvoke&!variable.lastzerk&cooldown.convoke_the_spirits.remains<1)&(target.time_to_die>16||target.time_to_die=fight_remains)\nactions.cooldown+=/use_item,name=irideus_fragment,if=buff.smoldering_frenzy.up&(boss&fight_remains<35||!variable.align_3minutes||buff.bs_inc.up||variable.lastconvoke&!variable.lastzerk&cooldown.convoke_the_spirits.remains<5)\nactions.cooldown+=/use_item,name=verdant_gladiators_badge_of_ferocity,use_off_gcd=1,if=buff.smoldering_frenzy.up\nactions.cooldown+=/convoke_the_spirits,cycle_targets=1,if=fight_remains<5||(buff.smoldering_frenzy.up||set_bonus.tier31_4pc=0)&(dot.rip.remains>4-talent.ashamanes_guidance&buff.tigers_fury.up&(combo_points<=2)||buff.bs_inc.up&combo_points<=3)&(debuff.dire_fixation.up||!talent.dire_fixation.enabled||spell_targets.swipe_cat>1)&(target.time_to_die>5-talent.ashamanes_guidance.enabled||target.time_to_die=fight_remains)\n# convoke early if you can't fit another gcd and have the entirety of convoke in smoldering window\nactions.cooldown+=/convoke_the_spirits,if=buff.smoldering_frenzy.up&buff.smoldering_frenzy.remains<5.1-talent.ashamanes_guidance\n# use grieftorch on cooldown as long as it wont disrupt a stat-on use.\nactions.cooldown+=/use_item,name=manic_grieftorch,cycle_targets=1,if=!buff.smoldering_frenzy.up&(!equipped.irideus_fragment&!equipped.ashes_of_the_embersoul&!equipped.mirror_of_fractured_tomorrows&!equipped.algethar_puzzle_box||trinket.1.is.manic_grieftorch&trinket.2.cooldown.remains>20||trinket.2.is.manic_grieftorch&trinket.1.cooldown.remains>20)\nactions.cooldown+=/use_item,name=mydas_talisman,if=!equipped.ashes_of_the_embersoul&!equipped.witherbarks_branch||((trinket.2.is.witherbarks_branch||trinket.2.is.ashes_of_the_embersoul)&trinket.2.cooldown.remains>20)||((trinket.1.is.witherbarks_branch||trinket.1.is.ashes_of_the_embersoul)&trinket.1.cooldown.remains>20)\nactions.cooldown+=/use_item,name=bandolier_of_twisted_blades,if=!equipped.ashes_of_the_embersoul&!equipped.witherbarks_branch||((trinket.2.is.witherbarks_branch||trinket.2.is.ashes_of_the_embersoul)&trinket.2.cooldown.remains>20)||((trinket.1.is.witherbarks_branch||trinket.1.is.ashes_of_the_embersoul)&trinket.1.cooldown.remains>20)\nactions.cooldown+=/use_item,name=fyrakks_tainted_rageheart,if=!equipped.ashes_of_the_embersoul&!equipped.witherbarks_branch||((trinket.2.is.witherbarks_branch||trinket.2.is.ashes_of_the_embersoul)&trinket.2.cooldown.remains>20)||((trinket.1.is.witherbarks_branch||trinket.1.is.ashes_of_the_embersoul)&trinket.1.cooldown.remains>20)\nactions.cooldown+=/use_items\n\n## actions.finisher+=/pool_resource,for_next=1,if=buff.bs_inc.up\nactions.finisher+=/primal_wrath,if=(dot.primal_wrath.refreshable||(talent.tear_open_wounds.enabled||(spell_targets.swipe_cat>4&!talent.rampant_ferocity.enabled)))&spell_targets.primal_wrath>1&talent.primal_wrath.enabled\n# with t31 you can rip a few seconds early as to use bite inside of feral frenzy instead. During smoldering you can delay refreshing rip.\nactions.finisher+=/rip,cycle_targets=1,if=((set_bonus.tier31_2pc>0&cooldown.feral_frenzy.remains<2&dot.rip.remains<10)||(time<8||buff.bloodtalons.up||!talent.bloodtalons.enabled||(buff.bs_inc.up&dot.rip.remains<2))&refreshable)&(!talent.primal_wrath.enabled||spell_targets.swipe_cat=1)&!(buff.smoldering_frenzy.up&dot.rip.remains>2)\n## actions.finisher+=/pool_resource,for_next=1,if=!action.tigers_fury.ready&buff.apex_predators_craving.down\nactions.finisher+=/ferocious_bite,max_energy=1,cycle_targets=1,if=buff.apex_predators_craving.down&(!buff.bs_inc.up||buff.bs_inc.up&!talent.soul_of_the_forest.enabled)\nactions.finisher+=/ferocious_bite,cycle_targets=1,if=(buff.bs_inc.up&talent.soul_of_the_forest.enabled)||buff.apex_predators_craving.up\n\nactions.owlweaving+=/sunfire,line_cd=4*gcd",
["spec"] = 103,
},
},
},
},
}
