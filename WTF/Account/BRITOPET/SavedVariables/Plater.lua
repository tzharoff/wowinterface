
PlaterDB = {
["captured_spells"] = {
[338353] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corpse Collector",
["npcID"] = 173016,
},
[52780] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1984,
},
[54954] = {
["isChanneled"] = false,
["source"] = "Ticking Bomb",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29684,
},
[68988] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36497,
},
[69052] = {
["source"] = "Soulguard Watchman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 36478,
},
[460092] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Staghorn",
["npcID"] = 167111,
},
[53068] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Construct",
["npcID"] = 28835,
},
[69564] = {
["isChanneled"] = false,
["source"] = "Soulguard Adept",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36620,
},
[338357] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kyrian Stitchwerk",
["npcID"] = 172981,
},
[320200] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[52429] = {
["encounterName"] = "Volkhan",
["source"] = "Brittle Golem",
["npcID"] = 28695,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1985,
},
[69053] = {
["isChanneled"] = false,
["source"] = "Soulguard Watchman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36478,
},
[52493] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Silthik",
["encounterID"] = 1971,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28731,
},
[324293] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Marauder",
["npcID"] = 165919,
},
[55626] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Living Mojo",
["encounterID"] = 1983,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29830,
},
[388231] = {
["isChanneled"] = false,
["source"] = "Tuskarr Training Dummy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196394,
},
[272888] = {
["isChanneled"] = false,
["source"] = "Ashvane Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 137517,
},
[321226] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[56937] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26930,
},
[22938] = {
["encounterName"] = "Frozen Commander",
["source"] = "Mage Hunter Ascendant",
["encounterID"] = 3017,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[320717] = {
["encounterName"] = "Blightbone",
["type"] = "DEBUFF",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2387,
},
[257288] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Irontide Cleaver",
["encounterID"] = 2098,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129879,
},
[284401] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tinzwigg Sunstopper",
["npcID"] = 150741,
},
[320462] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Gatekeeper",
["npcID"] = 165137,
},
[323020] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Spiteclaw",
["npcID"] = 165111,
},
[284402] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tinzwigg Sunstopper",
["npcID"] = 150741,
},
[61509] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Slag",
["npcID"] = 28585,
},
[68799] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Frye",
["npcID"] = 36272,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2879,
},
[326090] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Reaver",
["npcID"] = 167116,
},
[320208] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[320464] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Sorcerer",
["npcID"] = 163128,
},
[446549] = {
["source"] = "Venomous Salamanther",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224464,
},
[55563] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drakkari Earthshaker",
["npcID"] = 29829,
},
[19134] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Titanium Siegebreaker",
["npcID"] = 28961,
},
[461895] = {
["isChanneled"] = false,
["source"] = "Orb of Ascendance",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229296,
},
[326092] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Spinemaw Reaver",
["npcID"] = 167116,
},
[47699] = {
["isChanneled"] = false,
["source"] = "Crystalline Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26782,
},
[47731] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26929,
},
[54956] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29306,
},
[69056] = {
["isChanneled"] = false,
["source"] = "Soulguard Watchman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36478,
},
[48179] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["npcID"] = 26723,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2011,
},
[59528] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1985,
},
[53454] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29120,
},
[463182] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129208,
},
[461904] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Orb of Ascendance",
["encounterID"] = 2098,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229296,
},
[69633] = {
["isChanneled"] = false,
["source"] = "Spectral Warden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36666,
},
[47700] = {
["source"] = "Crystalline Keeper",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26782,
},
[52879] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Titanium Thunderer",
["npcID"] = 28965,
},
[38621] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Proto-Drake Handler",
["npcID"] = 24082,
},
[69058] = {
["isChanneled"] = false,
["source"] = "Soulguard Reaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36499,
},
[272140] = {
["isChanneled"] = false,
["source"] = "Ashvane Spotter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 138255,
},
[257168] = {
["isChanneled"] = false,
["source"] = "Irontide Curseblade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135258,
},
[327127] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[338636] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Separation Assistant",
["npcID"] = 167731,
},
[20989] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Sentinel",
["npcID"] = 28837,
},
[1126] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[34945] = {
["isChanneled"] = false,
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26735,
},
[59529] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1985,
},
[328664] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[461910] = {
["source"] = "Orb of Ascendance",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229296,
},
[322527] = {
["encounterName"] = "Tred'ova",
["type"] = "DEBUFF",
["source"] = "Tred'ova",
["npcID"] = 164517,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2393,
},
[257170] = {
["isChanneled"] = false,
["source"] = "Irontide Raider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129369,
},
[52624] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbound Firestorm",
["npcID"] = 28584,
},
[35361] = {
["source"] = "Grove Walker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 31228,
},
[50994] = {
["isChanneled"] = false,
["source"] = "Crystalline Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28231,
},
[53072] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Giant",
["npcID"] = 28920,
},
[323043] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Spiteclaw",
["npcID"] = 165111,
},
[48053] = {
["isChanneled"] = false,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[50131] = {
["isChanneled"] = false,
["source"] = "Mage Slayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26730,
},
[108446] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 1860,
},
[50195] = {
["source"] = "Mage Hunter Ascendant",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26727,
},
[324323] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Marauder",
["npcID"] = 165919,
},
[272662] = {
["isChanneled"] = false,
["source"] = "Irontide Raider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129369,
},
[59530] = {
["encounterName"] = "Volkhan",
["source"] = "Molten Golem",
["npcID"] = 28695,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1985,
},
[327393] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[53520] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["npcID"] = 29120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1973,
},
[462430] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24201,
},
[89905] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran Viper",
["encounterID"] = 1978,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29680,
},
[6726] = {
["isChanneled"] = false,
["source"] = "Azure Warder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26716,
},
[181089] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129208,
},
[327396] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[326629] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[450668] = {
["encounterName"] = "Grand Magus Telestra",
["type"] = "DEBUFF",
["source"] = "Grand Magus Telestra",
["npcID"] = 26930,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2010,
},
[59019] = {
["isChanneled"] = false,
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29774,
},
[68934] = {
["encounterName"] = "The Crown Chemical Co.",
["type"] = "DEBUFF",
["source"] = "[DND] Valentine Boss - Vial Bunny",
["npcID"] = 36530,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2879,
},
[321772] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["npcID"] = 164804,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2397,
},
[321005] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ingra Maloch",
["npcID"] = 164567,
},
[61353] = {
["isChanneled"] = false,
["source"] = "Dagna Flintlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29476,
},
[50132] = {
["source"] = "Mage Slayer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26730,
},
[321006] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ingra Maloch",
["npcID"] = 164567,
},
[338653] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stitching Assistant",
["npcID"] = 173044,
},
[32323] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24085,
},
[55567] = {
["isChanneled"] = false,
["source"] = "Drakkari Earthshaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29829,
},
[55599] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drakkari Medicine Man",
["npcID"] = 29826,
},
[55663] = {
["isChanneled"] = false,
["source"] = "Drakkari Rhino",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29838,
},
[52658] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1984,
},
[321010] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ingra Maloch",
["npcID"] = 164567,
},
[323057] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["npcID"] = 164567,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2397,
},
[9672] = {
["isChanneled"] = false,
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26722,
},
[69128] = {
["isChanneled"] = true,
["source"] = "Soulguard Animator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36516,
},
[455281] = {
["isChanneled"] = false,
["source"] = "Grimslice",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221551,
},
[321780] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[463210] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistveil Guardian",
["npcID"] = 166276,
},
[272421] = {
["source"] = "Ashvane Spotter",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 138255,
},
[53330] = {
["isChanneled"] = false,
["source"] = "Anub'ar Crypt Fiend",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29097,
},
[52531] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blistering Steamrager",
["npcID"] = 28583,
},
[54801] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["encounterID"] = 1983,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29573,
},
[115804] = {
["source"] = "Rezan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[59021] = {
["isChanneled"] = false,
["source"] = "Unyielding Constrictor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29768,
},
[11974] = {
["encounterName"] = "Frozen Commander",
["source"] = "Horde Cleric",
["npcID"] = 26803,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3017,
},
[69130] = {
["source"] = "Soulguard Animator",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 36516,
},
[60236] = {
["encounterName"] = "Ionar",
["source"] = "Storming Vortex",
["npcID"] = 28547,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1984,
},
[54290] = {
["isChanneled"] = false,
["source"] = "Anub'ar Webspinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29335,
},
[322557] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Soulcleaver",
["npcID"] = 172991,
},
[324859] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mistveil Defender",
["npcID"] = 163058,
},
[68939] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2007,
},
[69131] = {
["isChanneled"] = false,
["source"] = "Soulguard Animator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36516,
},
[55633] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Golem",
["encounterID"] = 1983,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29832,
},
[274991] = {
["encounterName"] = "Viq'Goth",
["source"] = "Viq'Goth",
["encounterID"] = 2100,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128652,
},
[47737] = {
["encounterName"] = "Anomalus",
["source"] = "Chaotic Rift",
["encounterID"] = 2009,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26918,
},
[54962] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23956,
},
[320772] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[450182] = {
["isChanneled"] = false,
["source"] = "Disturbed Mudspawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219897,
},
[55218] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29306,
},
[69069] = {
["isChanneled"] = false,
["source"] = "Soulguard Bonecaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36564,
},
[433053] = {
["isChanneled"] = false,
["source"] = "Lighteater",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216036,
},
[273721] = {
["encounterName"] = "Chopper Redhook",
["type"] = "DEBUFF",
["source"] = "Heavy Ordnance",
["encounterID"] = 2098,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 136975,
},
[14516] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Warrior",
["encounterID"] = 1971,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28732,
},
[22910] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[17843] = {
["encounterName"] = "Frozen Commander",
["source"] = "Horde Cleric",
["encounterID"] = 3017,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26803,
},
[52086] = {
["isChanneled"] = false,
["source"] = "Anub'ar Webspinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29335,
},
[48058] = {
["isChanneled"] = false,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[453773] = {
["type"] = "BUFF",
["source"] = "Highlord Darion Mograine",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221632,
},
[463236] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[283700] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dawyn the Rabid",
["npcID"] = 150732,
},
[52470] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Gashra",
["encounterID"] = 1971,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28730,
},
[55635] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Golem",
["encounterID"] = 1983,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29832,
},
[40546] = {
["isChanneled"] = false,
["source"] = "Drakkari Lancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29819,
},
[320788] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[55348] = {
["isChanneled"] = false,
["source"] = "Drakkari Battle Rider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29836,
},
[53334] = {
["isChanneled"] = true,
["source"] = "Anub'ar Necromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29064,
},
[324372] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[283708] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dawyn the Rabid",
["npcID"] = 150732,
},
[272711] = {
["isChanneled"] = false,
["source"] = "Bilge Rat Demolisher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135245,
},
[17620] = {
["isChanneled"] = false,
["source"] = "Soulguard Adept",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36620,
},
[275014] = {
["encounterName"] = "Viq'Goth",
["type"] = "DEBUFF",
["source"] = "Viq'Goth",
["encounterID"] = 2100,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 128652,
},
[59824] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29306,
},
[463247] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[49722] = {
["isChanneled"] = false,
["source"] = "Enslaved Proto-Drake",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24083,
},
[463248] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[54965] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23960,
},
[55093] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran Constrictor",
["encounterID"] = 1978,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29713,
},
[280389] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129208,
},
[55285] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29306,
},
[68947] = {
["encounterName"] = "The Crown Chemical Co.",
["type"] = "DEBUFF",
["source"] = "Apothecary Baxter",
["npcID"] = 36565,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2879,
},
[324381] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[59825] = {
["encounterName"] = "Gal'darah",
["type"] = "DEBUFF",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29306,
},
[68820] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 2007,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36502,
},
[17253] = {
["isChanneled"] = false,
["source"] = "Rezan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[257459] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["encounterID"] = 2098,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128650,
},
[112042] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 1860,
},
[463257] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[53048] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Runeshaper",
["npcID"] = 28836,
},
[348170] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
},
[449960] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ragefin Carver",
["npcID"] = 215652,
},
[324387] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[447403] = {
["source"] = "Mage Hunter Ascendant",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26727,
},
[68821] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["npcID"] = 36565,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2879,
},
[53400] = {
["isChanneled"] = false,
["source"] = "Hadronox",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28921,
},
[272471] = {
["isChanneled"] = false,
["source"] = "Ashvane Spotter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135263,
},
[321576] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brittlebone Warrior",
["npcID"] = 163122,
},
[338456] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kyrian Stitchwerk",
["npcID"] = 172981,
},
[59826] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29306,
},
[13446] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tunneling Ghoul",
["npcID"] = 24084,
},
[321834] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["npcID"] = 164501,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2392,
},
[47774] = {
["isChanneled"] = false,
["source"] = "Horde Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26799,
},
[52921] = {
["encounterName"] = "Loken",
["source"] = "Loken",
["npcID"] = 28923,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1986,
},
[42723] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23954,
},
[15572] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Metalworker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24078,
},
[15580] = {
["isChanneled"] = false,
["source"] = "Drakkari Inciter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29874,
},
[324394] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[48094] = {
["isChanneled"] = false,
["source"] = "Keristrasza",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26723,
},
[325418] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Acidgullet",
["npcID"] = 167113,
},
[345623] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nar'zudah",
["npcID"] = 165824,
},
[224729] = {
["isChanneled"] = false,
["source"] = "Irontide Curseblade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 138247,
},
[324909] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Boughbreaker",
["npcID"] = 164926,
},
[7870] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Demriah",
["npcID"] = 1863,
},
[47743] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["encounterID"] = 2009,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[52890] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Titanium Siegebreaker",
["npcID"] = 28961,
},
[69080] = {
["isChanneled"] = false,
["source"] = "Soulguard Bonecaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36564,
},
[395755] = {
["isChanneled"] = false,
["source"] = "Black Dragon's Challenge Dummy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199057,
},
[60211] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Forge Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24079,
},
[335143] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Bonemender",
["npcID"] = 165222,
},
[61362] = {
["isChanneled"] = false,
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29822,
},
[324914] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Tender",
["npcID"] = 166299,
},
[48191] = {
["isChanneled"] = false,
["source"] = "Horde Ranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26801,
},
[28747] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Krik'thir the Gatewatcher",
["encounterID"] = 1971,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28684,
},
[276068] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["encounterID"] = 2099,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128651,
},
[29882] = {
["isChanneled"] = false,
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26737,
},
[50653] = {
["isChanneled"] = false,
["source"] = "Enslaved Proto-Drake",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24083,
},
[320571] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Sorcerer",
["npcID"] = 163128,
},
[52028] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[320573] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zolramus Sorcerer",
["npcID"] = 163128,
},
[385023] = {
["source"] = "Dominant Salamanther",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225921,
},
[16172] = {
["isChanneled"] = false,
["source"] = "Drakkari Earthshaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29829,
},
[53467] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29120,
},
[52540] = {
["encounterName"] = "Hadronox",
["source"] = "Anub'ar Skirmisher",
["encounterID"] = 1972,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28734,
},
[16244] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dragonflayer Overseer",
["npcID"] = 24085,
},
[56920] = {
["encounterName"] = "Frozen Commander",
["source"] = "Horde Cleric",
["encounterID"] = 3017,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26803,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["npcID"] = 164804,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2397,
},
[433622] = {
["source"] = "Brann Bronzebeard",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210759,
},
[55098] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["npcID"] = 29305,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1980,
},
[257732] = {
["isChanneled"] = false,
["source"] = "Scrimshaw Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129374,
},
[283499] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Galdon the Glacial",
["npcID"] = 150742,
},
[172184] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Archmage Nakada",
["npcID"] = 82564,
},
[320839] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zolramus Siphoner",
["npcID"] = 164815,
},
[166302] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blingtron 7000",
["npcID"] = 153897,
},
[53468] = {
["encounterName"] = "Anub'arak",
["type"] = "DEBUFF",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29120,
},
[37132] = {
["isChanneled"] = false,
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26722,
},
[59734] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23954,
},
[462783] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Trial of Burning Light",
["npcID"] = 229693,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["encounterID"] = 2099,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128651,
},
[8364] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26930,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2010,
},
[36589] = {
["isChanneled"] = false,
["source"] = "Sinewy Wolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 31233,
},
[12544] = {
["source"] = "Magister Surdiel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 32170,
},
[327240] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Loyal Creation",
["npcID"] = 165911,
},
[275835] = {
["isChanneled"] = false,
["source"] = "Ashvane Invader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 137516,
},
[68895] = {
["isChanneled"] = false,
["source"] = "Spiteful Apparition",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36551,
},
[275836] = {
["source"] = "Ashvane Invader",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 137516,
},
[54716] = {
["encounterName"] = "Drakkari Colossus",
["type"] = "DEBUFF",
["source"] = "Drakkari Colossus",
["encounterID"] = 1983,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29307,
},
[47747] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["encounterID"] = 2009,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[47779] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Steward",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26729,
},
[57050] = {
["isChanneled"] = false,
["source"] = "Crystalline Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26792,
},
[69088] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soul Horror",
["npcID"] = 36522,
},
[462283] = {
["source"] = "Hadronox",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 28921,
},
[1604] = {
["encounterName"] = "The Crown Chemical Co.",
["type"] = "DEBUFF",
["source"] = "Bounty Farmhand",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221769,
},
[55292] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29306,
},
[68641] = {
["encounterName"] = "The Crown Chemical Co.",
["type"] = "DEBUFF",
["source"] = "Apothecary Hummel",
["npcID"] = 36296,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2879,
},
[53406] = {
["isChanneled"] = false,
["source"] = "Hadronox",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28921,
},
[455380] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Railbot",
["npcID"] = 218251,
},
[321368] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[52671] = {
["encounterName"] = "Ionar",
["source"] = "Spark of Ionar",
["npcID"] = 28926,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1984,
},
[53790] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[47748] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["encounterID"] = 2009,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[47780] = {
["isChanneled"] = false,
["source"] = "Steward",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26729,
},
[57051] = {
["isChanneled"] = false,
["source"] = "Crystalline Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26792,
},
[57083] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["npcID"] = 26794,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2012,
},
[269456] = {
["encounterName"] = "Viq'Goth",
["source"] = "Viq'Goth",
["encounterID"] = 2100,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128652,
},
[322654] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[31403] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24085,
},
[272528] = {
["isChanneled"] = false,
["source"] = "Ashvane Sniper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128967,
},
[34354] = {
["isChanneled"] = false,
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29822,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["encounterID"] = 1983,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29573,
},
[47781] = {
["source"] = "Steward",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26729,
},
[42730] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2025,
},
[52097] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
},
[320614] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2387,
},
[59386] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Vrykul Skeleton",
["encounterID"] = 2026,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23970,
},
[79962] = {
["source"] = "Nelur Lightsown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 50150,
},
[321894] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[58619] = {
["isChanneled"] = false,
["source"] = "Titanium Vanguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28838,
},
[58747] = {
["encounterName"] = "General Bjarngrim",
["type"] = "DEBUFF",
["source"] = "General Bjarngrim",
["encounterID"] = 1987,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 28586,
},
[325223] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Stinger",
["npcID"] = 166304,
},
[52098] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
},
[320366] = {
["encounterName"] = "Surgeon Stitchflesh",
["type"] = "DEBUFF",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2389,
},
[269984] = {
["encounterName"] = "Viq'Goth",
["source"] = "Viq'Goth",
["encounterID"] = 2100,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128652,
},
[272542] = {
["isChanneled"] = false,
["source"] = "Ashvane Sniper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128967,
},
[68839] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["isChanneled"] = true,
["encounterID"] = 2006,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36497,
},
[268963] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Ashvane Cannoneer",
["encounterID"] = 2109,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 136549,
},
[257882] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["encounterID"] = 2099,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128651,
},
[272546] = {
["isChanneled"] = false,
["source"] = "Bilge Rat Buccaneer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129366,
},
[12737] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Mage Hunter Ascendant",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[57054] = {
["isChanneled"] = true,
["source"] = "Crystalline Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28231,
},
[57086] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["encounterID"] = 2012,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26794,
},
[55104] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["encounterID"] = 1980,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29305,
},
[320630] = {
["encounterName"] = "Blightbone",
["type"] = "DEBUFF",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2387,
},
[68841] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Frye",
["npcID"] = 36272,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2879,
},
[320376] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[427024] = {
["source"] = "Glower Swarm",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224595,
},
[53602] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Darter",
["encounterID"] = 1973,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29213,
},
[52643] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Hardened Steel Reaver",
["npcID"] = 28578,
},
[48583] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Skarvald the Constructor",
["encounterID"] = 2024,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24200,
},
[47688] = {
["isChanneled"] = false,
["source"] = "Chaotic Rift",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26918,
},
[377923] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Risen Magma",
["npcID"] = 225390,
},
[42669] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23954,
},
[55041] = {
["encounterName"] = "Grand Magus Telestra",
["type"] = "DEBUFF",
["source"] = "Mage Hunter Ascendant",
["encounterID"] = 2010,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26727,
},
[15063] = {
["isChanneled"] = false,
["source"] = "Soulguard Reaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36499,
},
[53059] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Titanium Vanguard",
["npcID"] = 28838,
},
[320637] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["npcID"] = 162691,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2387,
},
[322939] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[50182] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[48168] = {
["source"] = "Matron Ossela",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 50148,
},
[383298] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Enraged Magma Fury",
["npcID"] = 214924,
},
[336752] = {
["encounterName"] = "Mistcaller",
["type"] = "DEBUFF",
["source"] = "Mistcaller",
["npcID"] = 164501,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2392,
},
[455932] = {
["isChanneled"] = false,
["source"] = "Lighteater",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216036,
},
[9053] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["encounterID"] = 1983,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29307,
},
[32588] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Weaponsmith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24080,
},
[43757] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Forge Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24079,
},
[55106] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["encounterID"] = 1980,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29305,
},
[324737] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[321669] = {
["encounterName"] = "Mistcaller",
["source"] = "Illusionary Clone",
["npcID"] = 165108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2392,
},
[90328] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[61596] = {
["isChanneled"] = true,
["source"] = "Stormforged Construct",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28835,
},
[53801] = {
["isChanneled"] = false,
["source"] = "Anub'ar Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28922,
},
[377589] = {
["type"] = "BUFF",
["source"] = "Unknown",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[68921] = {
["encounterName"] = "Bronjahm",
["type"] = "DEBUFF",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 36497,
},
[68872] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["isChanneled"] = false,
["encounterID"] = 2006,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36497,
},
[32315] = {
["isChanneled"] = false,
["source"] = "Stormforged Giant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28920,
},
[53047] = {
["isChanneled"] = false,
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28837,
},
[52904] = {
["isChanneled"] = false,
["source"] = "Titanium Thunderer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28965,
},
[326021] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Gorger",
["npcID"] = 172312,
},
[52773] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Mender",
["npcID"] = 28582,
},
[52883] = {
["type"] = "DEBUFF",
["source"] = "Titanium Thunderer",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 28965,
},
[58769] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["isChanneled"] = false,
["encounterID"] = 1987,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28586,
},
[43649] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24201,
},
[59836] = {
["encounterName"] = "Loken",
["source"] = "Loken",
["npcID"] = 28923,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1986,
},
[451435] = {
["isChanneled"] = false,
["source"] = "Voidwraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224466,
},
[272571] = {
["isChanneled"] = false,
["source"] = "Bilge Rat Tempest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129367,
},
[55040] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Mage Hunter Ascendant",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[52770] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1984,
},
[79868] = {
["isChanneled"] = false,
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26735,
},
[48193] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Skarvald the Constructor",
["encounterID"] = 2024,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24200,
},
[47773] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26731,
},
[322681] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[277432] = {
["isChanneled"] = false,
["source"] = "Ashvane Spotter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 141939,
},
[59359] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Venomancer",
["encounterID"] = 1973,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29217,
},
[69051] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 2007,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36502,
},
[326281] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[325163] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[15655] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hardened Steel Reaver",
["npcID"] = 28578,
},
[41105] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[257326] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["encounterID"] = 2098,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128650,
},
[30633] = {
["encounterName"] = "Keristrasza",
["source"] = "Crystalline Protector",
["encounterID"] = 2011,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26792,
},
[257641] = {
["isChanneled"] = false,
["source"] = "Irontide Powdershot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 137521,
},
[328687] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brittlebone Crossbowman",
["npcID"] = 166079,
},
[463208] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistveil Guardian",
["npcID"] = 166276,
},
[68948] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["npcID"] = 36565,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2879,
},
[390599] = {
["source"] = "Child of Ohn'ahra",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 191869,
},
[321725] = {
["encounterName"] = "Mistcaller",
["type"] = "BUFF",
["source"] = "Illusionary Clone",
["npcID"] = 165108,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2392,
},
[325413] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Acidgullet",
["npcID"] = 167113,
},
[59839] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1978,
},
[43667] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["encounterID"] = 2026,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23953,
},
[43929] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Metalworker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24078,
},
[52774] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Mender",
["npcID"] = 28582,
},
[268230] = {
["isChanneled"] = false,
["source"] = "Ashvane Deckhand",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 138464,
},
[343509] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Opeth",
["npcID"] = 174783,
},
[15791] = {
["isChanneled"] = false,
["source"] = "Crazed Mana-Wraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26746,
},
[53791] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[31598] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[13340] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26928,
},
[55659] = {
["isChanneled"] = false,
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29822,
},
[53030] = {
["isChanneled"] = false,
["source"] = "Hadronox",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28921,
},
[256640] = {
["isChanneled"] = false,
["source"] = "Blacktar Bomber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129372,
},
[323730] = {
["encounterName"] = "Nalthor the Rimebinder",
["type"] = "DEBUFF",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2390,
},
[50198] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Mage Hunter Initiate",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26728,
},
[322756] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Gatekeeper",
["npcID"] = 165137,
},
[272422] = {
["isChanneled"] = false,
["source"] = "Ashvane Spotter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 138255,
},
[272581] = {
["isChanneled"] = false,
["source"] = "Bilge Rat Tempest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129367,
},
[256616] = {
["isChanneled"] = false,
["source"] = "Scrimshaw Gutter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 133990,
},
[54309] = {
["isChanneled"] = false,
["source"] = "Anub'ar Prime Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29128,
},
[53318] = {
["isChanneled"] = false,
["source"] = "Anub'ar Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28922,
},
[59020] = {
["isChanneled"] = false,
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29774,
},
[457913] = {
["source"] = "Deployed Wind-Wrangling Spire",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 227482,
},
[431659] = {
["isChanneled"] = false,
["source"] = "Hungering Necromage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215239,
},
[15284] = {
["isChanneled"] = false,
["source"] = "Azure Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26734,
},
[57056] = {
["isChanneled"] = false,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[324923] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Boughbreaker",
["npcID"] = 164926,
},
[456212] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Webbed Ore Deposit",
["npcID"] = 226716,
},
[463217] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Guardian",
["npcID"] = 166276,
},
[461870] = {
["isChanneled"] = false,
["source"] = "Xal'atath",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229227,
},
[322967] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Spiteclaw",
["npcID"] = 165111,
},
[334476] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[59840] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1978,
},
[15620] = {
["isChanneled"] = false,
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29820,
},
[322968] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Spiteclaw",
["npcID"] = 165111,
},
[445984] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gluttonous Jawcrawler",
["npcID"] = 223931,
},
[42972] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23956,
},
[320596] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["npcID"] = 162691,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2387,
},
[43664] = {
["isChanneled"] = false,
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24082,
},
[55530] = {
["isChanneled"] = false,
["source"] = "Drakkari Rhino",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29931,
},
[42705] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23954,
},
[30849] = {
["isChanneled"] = false,
["source"] = "Mage Slayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26730,
},
[57091] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["encounterID"] = 2011,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26723,
},
[55077] = {
["isChanneled"] = false,
["source"] = "Savage Worg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29735,
},
[59085] = {
["encounterName"] = "General Bjarngrim",
["source"] = "Stormforged Tactician",
["npcID"] = 28581,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[272588] = {
["isChanneled"] = false,
["source"] = "Bilge Rat Cutthroat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 137511,
},
[268752] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129208,
},
[320655] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["npcID"] = 162691,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2387,
},
[127801] = {
["isChanneled"] = false,
["source"] = "Turnip Punching Bag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65310,
},
[335141] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nar'zudah",
["npcID"] = 165824,
},
[320784] = {
["encounterName"] = "Nalthor the Rimebinder",
["type"] = "DEBUFF",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2390,
},
[52027] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[21049] = {
["isChanneled"] = false,
["source"] = "Horde Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26799,
},
[340160] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[41107] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[326574] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[269266] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["encounterID"] = 2100,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 137614,
},
[322569] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Soulcleaver",
["npcID"] = 164920,
},
[52896] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Titanium Siegebreaker",
["npcID"] = 28961,
},
[256627] = {
["isChanneled"] = false,
["source"] = "Scrimshaw Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129374,
},
[326018] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Spinemaw Larva",
["npcID"] = 167117,
},
[322450] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[325021] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mistveil Stalker",
["npcID"] = 166301,
},
[322548] = {
["encounterName"] = "Surgeon Stitchflesh",
["type"] = "BUFF",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2389,
},
[15232] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Necromancer",
["encounterID"] = 1971,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29098,
},
[257650] = {
["encounterName"] = "Chopper Redhook",
["type"] = "BUFF",
["source"] = "Chopper Redhook",
["encounterID"] = 2098,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 128650,
},
[61369] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hardened Steel Berserker",
["npcID"] = 28579,
},
[340208] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[42740] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23960,
},
[31551] = {
["isChanneled"] = false,
["source"] = "Proto-Drake Rider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24849,
},
[31567] = {
["isChanneled"] = false,
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29820,
},
[47789] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mage Hunter Ascendant",
["npcID"] = 26727,
},
[280934] = {
["encounterName"] = "Chopper Redhook",
["type"] = "DEBUFF",
["source"] = "Heavy Ordnance",
["encounterID"] = 2098,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 136975,
},
[275826] = {
["isChanneled"] = false,
["source"] = "Ashvane Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128969,
},
[22424] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Slag",
["npcID"] = 28585,
},
[257169] = {
["isChanneled"] = false,
["source"] = "Bilge Rat Demolisher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135245,
},
[274002] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["encounterID"] = 2098,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128650,
},
[55142] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["npcID"] = 29305,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1980,
},
[59259] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hardened Steel Berserker",
["npcID"] = 28579,
},
[334488] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[261616] = {
["isChanneled"] = false,
["source"] = "Katy Stampwhistle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 132969,
},
[50155] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["encounterID"] = 2011,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26723,
},
[43650] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["npcID"] = 24201,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2024,
},
[59023] = {
["source"] = "Unyielding Constrictor",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29768,
},
[333602] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[321821] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blight Bag",
["npcID"] = 165138,
},
[325027] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Drust Boughbreaker",
["npcID"] = 164926,
},
[68607] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Hummel",
["npcID"] = 36296,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2879,
},
[454437] = {
["isChanneled"] = false,
["source"] = "Ashvane Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128969,
},
[454438] = {
["isChanneled"] = false,
["source"] = "Ashvane Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128969,
},
[43651] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Skarvald the Constructor",
["encounterID"] = 2024,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24200,
},
[48082] = {
["isChanneled"] = false,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[334747] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corpse Harvester",
["npcID"] = 166302,
},
[6713] = {
["encounterName"] = "Moorabi",
["source"] = "Drakkari Lancer",
["npcID"] = 29819,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1980,
},
[257270] = {
["isChanneled"] = false,
["source"] = "Riptide Shredder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129371,
},
[320170] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 162692,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[334748] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corpse Harvester",
["npcID"] = 166302,
},
[15496] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Warrior",
["encounterID"] = 1971,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28732,
},
[29765] = {
["isChanneled"] = false,
["source"] = "Crystalline Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26782,
},
[320171] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[454440] = {
["isChanneled"] = false,
["source"] = "Bilge Rat Pillager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135241,
},
[17741] = {
["isChanneled"] = false,
["source"] = "Azure Warder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26716,
},
[463256] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[324776] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Shaper",
["npcID"] = 166275,
},
[54983] = {
["isChanneled"] = false,
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24082,
},
[12491] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drakkari Medicine Man",
["npcID"] = 29826,
},
[323496] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[58978] = {
["isChanneled"] = false,
["source"] = "Drakkari Lancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29819,
},
[454439] = {
["isChanneled"] = false,
["source"] = "Ashvane Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128969,
},
[8362] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Initiate",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26728,
},
[52238] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1985,
},
[471578] = {
["encounterName"] = "Dread Captain Lockwood",
["type"] = "DEBUFF",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 129208,
},
[445236] = {
["isChanneled"] = false,
["source"] = "Tidewake Eel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228212,
},
[12555] = {
["isChanneled"] = false,
["source"] = "Anub'ar Champion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28924,
},
[321575] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[326046] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Staghorn",
["npcID"] = 167111,
},
[55598] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drakkari Medicine Man",
["npcID"] = 29826,
},
[13323] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mage Hunter Ascendant",
["npcID"] = 26727,
},
[38682] = {
["isChanneled"] = false,
["source"] = "Horde Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26799,
},
[321952] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[12611] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Mage Hunter Ascendant",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[68982] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2007,
},
[61564] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["npcID"] = 26794,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2012,
},
[54680] = {
["isChanneled"] = false,
["source"] = "Rezan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[268260] = {
["isChanneled"] = false,
["source"] = "Ashvane Cannoneer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 138465,
},
[52586] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Krik'thir the Gatewatcher",
["encounterID"] = 1971,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28684,
},
[321968] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[333477] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goregrind",
["npcID"] = 163621,
},
[29426] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dragonflayer Ironhelm",
["npcID"] = 23961,
},
[446519] = {
["source"] = "Upland Shalehorn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226116,
},
[8599] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Metalworker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24078,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129208,
},
[53044] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dragonflayer Spiritualist",
["npcID"] = 28410,
},
[13738] = {
["isChanneled"] = false,
["source"] = "Anub'ar Champion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29096,
},
[176458] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blacksmithing Follower - Horde",
["npcID"] = 88402,
},
[333479] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rotspew",
["npcID"] = 163620,
},
[42708] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23954,
},
[57062] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["encounterID"] = 2009,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[42772] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23956,
},
[326319] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[11981] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[198837] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[323471] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[55096] = {
["encounterName"] = "Moorabi",
["type"] = "BUFF",
["source"] = "Moorabi",
["encounterID"] = 1980,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29305,
},
[52778] = {
["encounterName"] = "General Bjarngrim",
["source"] = "Stormforged Tactician",
["npcID"] = 28581,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[321807] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Bonecarver",
["npcID"] = 163619,
},
[59097] = {
["encounterName"] = "General Bjarngrim",
["type"] = "DEBUFF",
["source"] = "Stormforged Tactician",
["npcID"] = 28581,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1987,
},
[333482] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rotspew",
["npcID"] = 163620,
},
[53322] = {
["isChanneled"] = false,
["source"] = "Anub'ar Crypt Fiend",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29118,
},
[68793] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36497,
},
[257063] = {
["isChanneled"] = false,
["source"] = "Irontide Waveshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129370,
},
[53418] = {
["isChanneled"] = false,
["source"] = "Hadronox",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28921,
},
[322486] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[320696] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stitched Vanguard",
["npcID"] = 163121,
},
[69148] = {
["isChanneled"] = false,
["source"] = "Spectral Warden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36666,
},
[320012] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[322487] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[32910] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hardened Steel Berserker",
["npcID"] = 28579,
},
[43930] = {
["source"] = "Dragonflayer Forge Master",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24079,
},
[333485] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rotspew",
["npcID"] = 163620,
},
[59148] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[256639] = {
["isChanneled"] = false,
["source"] = "Blacktar Bomber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129372,
},
[270183] = {
["encounterName"] = "Viq'Goth",
["source"] = "Viq'Goth",
["encounterID"] = 2100,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128652,
},
[22907] = {
["isChanneled"] = false,
["source"] = "Horde Ranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26801,
},
[47696] = {
["isChanneled"] = false,
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26737,
},
[52885] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Titanium Thunderer",
["npcID"] = 28965,
},
[324987] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Stalker",
["npcID"] = 166301,
},
[320771] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[23600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Titanium Siegebreaker",
["npcID"] = 28961,
},
[57063] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["encounterID"] = 2009,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[324986] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Stalker",
["npcID"] = 166301,
},
[256709] = {
["isChanneled"] = false,
["source"] = "Riptide Shredder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129371,
},
[79892] = {
["source"] = "Murgha the Tempered",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 50153,
},
[443461] = {
["source"] = "Barrel of Fireworks",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221183,
},
[48016] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["npcID"] = 26794,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2012,
},
[322767] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[445252] = {
["isChanneled"] = false,
["source"] = "Lighteater",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216036,
},
[69562] = {
["isChanneled"] = false,
["source"] = "Soulguard Adept",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36620,
},
[59397] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Vrykul Skeleton",
["encounterID"] = 2026,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23970,
},
[54314] = {
["isChanneled"] = false,
["source"] = "Anub'ar Prime Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29128,
},
[61507] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[320703] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stitched Vanguard",
["npcID"] = 163121,
},
[322938] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[327664] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[321471] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["npcID"] = 164501,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2392,
},
[386176] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[48400] = {
["encounterName"] = "Prince Keleseth",
["type"] = "DEBUFF",
["source"] = "Frost Tomb",
["encounterID"] = 2026,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 23965,
},
[58460] = {
["isChanneled"] = false,
["source"] = "Azure Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26734,
},
[55625] = {
["isChanneled"] = false,
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29820,
},
[54819] = {
["encounterName"] = "Drakkari Colossus",
["type"] = "DEBUFF",
["source"] = "Drakkari Elemental",
["encounterID"] = 1983,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29573,
},
[78578] = {
["encounterName"] = "Grand Magus Telestra",
["type"] = "DEBUFF",
["source"] = "Mage Hunter Ascendant",
["encounterID"] = 2010,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26727,
},
[53167] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Construct",
["npcID"] = 28835,
},
[53049] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Runeshaper",
["npcID"] = 28836,
},
[15241] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26928,
},
[13444] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Guardian",
["npcID"] = 29216,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1973,
},
},
["profileKeys"] = {
["Zèéj - Wyrmrest Accord"] = "Default",
["Zeejadin - Wyrmrest Accord"] = "Default",
["Zeej - Shadowsong"] = "Default",
["Zeenc - Wyrmrest Accord"] = "Default",
["Átahsaia - Tichondrius"] = "Default",
["Justzeej - Wyrmrest Accord"] = "Default",
["Beepboopbeep - Wyrmrest Accord"] = "Default",
["Zeejdruid - Wyrmrest Accord"] = "Default",
["Bowz - Wyrmrest Accord"] = "Default",
["Leafittozeej - Wyrmrest Accord"] = "Default",
["Felzeej - Wyrmrest Accord"] = "Default",
["Monkultiras - Kul Tiras"] = "Default",
["Zejramaxoray - Wyrmrest Accord"] = "Default",
["Zeejbank - Wyrmrest Accord"] = "Default",
["Heartheha - Wyrmrest Accord"] = "Default",
["Robozeej - Wyrmrest Accord"] = "Default",
["Zeejaholic - Wyrmrest Accord"] = "Default",
["Flappyzeej - Wyrmrest Accord"] = "Quazii Plater",
["Fellowhuman - Wyrmrest Accord"] = "Default",
["Bishøp - Wyrmrest Accord"] = "Default",
["Zeejorc - Wyrmrest Accord"] = "Default",
["Ztheegh - Wyrmrest Accord"] = "Default",
["Zonoes - Wyrmrest Accord"] = "Default",
["Velexis - Wyrmrest Accord"] = "Default",
["Zeej - US Mythic Dungeons"] = "Default",
["Destinedcow - Moon Guard"] = "Default",
["Candypauper - Wyrmrest Accord"] = "Default",
["Kaylaillea - Wyrmrest Accord"] = "Default",
["Udderlyzeej - Wyrmrest Accord"] = "Default",
["Bøfá - Wyrmrest Accord"] = "Default",
["Zodep - Wyrmrest Accord"] = "Default",
["Zeejaxxus - Wyrmrest Accord"] = "Default",
["Aqusiailea - Wyrmrest Accord"] = "Default",
["Seratia - Shadowsong"] = "Default",
["Arrowz - Wyrmrest Accord"] = "Default",
["Zeejthyr - Wyrmrest Accord"] = "Default",
["Stálker - Wyrmrest Accord"] = "Default",
["Fatzeej - Wyrmrest Accord"] = "Default",
["Timm - Wyrmrest Accord"] = "Default",
["Unzeej - Wyrmrest Accord"] = "Default",
["Nü - Wyrmrest Accord"] = "Default",
["Moltar - Wyrmrest Accord"] = "Default",
["Zeejelf - Wyrmrest Accord"] = "Default",
["Fizzeejle - Stormrage"] = "Default",
["Darkironzeej - Wyrmrest Accord"] = "Default",
["Funkeej - Wyrmrest Accord"] = "Default",
["Necrozeejiac - Wyrmrest Accord"] = "Default",
["Perideez - Wyrmrest Accord"] = "Default",
["Whÿ - Wyrmrest Accord"] = "Default",
["Átahsaia - Wyrmrest Accord"] = "Default",
["Voideostar - Wyrmrest Accord"] = "Default",
["Bigdiscnergy - Wyrmrest Accord"] = "Default",
["Zonks - Wyrmrest Accord"] = "Default",
["Zodji - Wyrmrest Accord"] = "Default",
["Zeejee - Wyrmrest Accord"] = "Default",
["Zeejudo - Wyrmrest Accord"] = "Default",
["Cecilditte - Sargeras"] = "Default",
["Haximar - Wyrmrest Accord"] = "Default",
["Deadplande - Wyrmrest Accord"] = "Default",
["Zeej - Wyrmrest Accord"] = "Quazii Plater",
["Zeejdh - Wyrmrest Accord"] = "Default",
["Gobfatha - Wyrmrest Accord"] = "Default",
["Zeejina - Wyrmrest Accord"] = "Default",
["Blightpower - Wyrmrest Accord"] = "Default",
["Zeejog - Wyrmrest Accord"] = "Default",
["Calini - Wyrmrest Accord"] = "Default",
["Healsforgold - Wyrmrest Accord"] = "Default",
["Seratia - Wyrmrest Accord"] = "Default",
["Zeejin - Wyrmrest Accord"] = "Default",
["Addisocke - Wyrmrest Accord"] = "Default",
["Monplande - Wyrmrest Accord"] = "Quazii Plater",
["Monmulganis - Mal'Ganis"] = "Default",
["Azushanza - Wyrmrest Accord"] = "Default",
["Rollingneed - Aman'Thul"] = "Default",
["Excitedly - Wyrmrest Accord"] = "Default",
["Destinedcow - Wyrmrest Accord"] = "Default",
["Zeejplande - Area 52"] = "Default",
["Douche - Wyrmrest Accord"] = "Default",
["Zeejuta - Wyrmrest Accord"] = "Default",
},
["profiles"] = {
["Default"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Glowing [P]"] = 10,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Fixate On You"] = 12,
["Cast - Shining Green [P]"] = 3,
["Cast - Important Target [P]"] = 2,
["Cast - Very Important"] = 15,
["Add - Warning [P]"] = 5,
["Fixate"] = 11,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Countdown"] = 12,
["Fixate by Unit Buff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Cast - Heal Cut [P]"] = 3,
["Spiteful Affix"] = 3,
["Auto Set Skull"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Explosion Affix M+"] = 14,
["Cast - Voidzone [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Aura - Is Cast Bar [P]"] = 1,
["Unit - Show Energy"] = 11,
},
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = false,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"214840",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["Name"] = "Add - Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura While Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
116,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 234,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 279,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
"Illusionary Vulpin",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important by Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shining Green [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["NpcNames"] = {
},
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Special Ability [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["NpcNames"] = {
},
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Spark Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "sparkWithScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkHeightScale",
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["NpcNames"] = {
},
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Stun [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
116,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE Hit All [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Debuff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["NpcNames"] = {
},
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Simple Interrupt [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Cut [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["NpcNames"] = {
},
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Voidzone [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
116,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE With Range [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["NpcNames"] = {
},
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Is Cast Bar [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1547392935,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Name"] = "Color Automation [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1541606242,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Name"] = "Hide Neutral Units [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Reorder Nameplate [Plater]",
["Author"] = "Kastfall-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["semver"] = "",
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["version"] = -1,
["Time"] = 1554138845,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Name"] = "Don't Have Aura [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["Time"] = 1547409079,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Name"] = "Extra Border [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1552354619,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Name"] = "Current Target Color [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["HooksTemp"] = {
},
["Name"] = "Cast Bar Icon Settings [P]",
["Author"] = "Ditador-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["semver"] = "",
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1547406548,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Name"] = "Execute Range [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 363,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["Name"] = "Attacking Specific Unit [Plater]",
["Author"] = "Kastfall-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["semver"] = "",
["Time"] = 1620377377,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Combo Points [Plater]",
["Author"] = "Izimode-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["semver"] = "",
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1548278227,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Name"] = "Players Targeting a Target [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 356,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Aura Reorder [Plater]",
["Author"] = "Ditador-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["semver"] = "",
["Time"] = 1608663128,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["version"] = -1,
},
},
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowEnemies"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriends"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
},
["resources_settings"] = {
["chr"] = {
["Player-3726-0B720726"] = "ComboPoints",
["Player-1171-0AD23FA2"] = "ArcaneCharges",
["Player-1171-0A96B17F"] = "Essence",
["Player-1171-0AD73E73"] = "ComboPoints",
["Player-1171-0AD7C845"] = "Chi",
["Player-1171-08F50DE3"] = "SoulShards",
["Player-1171-0AD25330"] = "ComboPoints",
["Player-1171-0AD49CEA"] = "Chi",
["Player-1171-0AD7C5EF"] = "ComboPoints",
["Player-1171-0ACF81BD"] = "Runes",
["Player-1171-091366D7"] = "Chi",
["Player-1171-0ACCFB22"] = "HolyPower",
["Player-1171-066CE7B4"] = "HolyPower",
["Player-1171-0AC6AF29"] = "ComboPoints",
["Player-1171-0AD72CB0"] = "Runes",
["Player-1171-0669AC9F"] = "Runes",
["Player-3676-0E864522"] = "ArcaneCharges",
["Player-1171-0670C5D9"] = "ArcaneCharges",
["Player-86-09AE572A"] = "ComboPoints",
["Player-1171-0673C800"] = "ComboPoints",
["Player-1171-090B340B"] = "ComboPoints",
["Player-1171-0ACD5BFD"] = "Runes",
["Player-1171-0AD2B4EE"] = "Chi",
["Player-1171-090F540B"] = "HolyPower",
["Player-1171-0AD6C663"] = "SoulShards",
["Player-11-0E88C526"] = "SoulShards",
["Player-3676-0E88B15B"] = "ArcaneCharges",
["Player-60-0F8150DE"] = "SoulShards",
["Player-1171-0AE2BF76"] = "HolyPower",
["Player-1171-0AD1E89F"] = "Chi",
["Player-1171-067273B0"] = "ComboPoints",
["Player-1171-0AD81954"] = "SoulShards",
["Player-1171-0ACBEC16"] = "SoulShards",
["Player-1171-0AD1C977"] = "HolyPower",
["Player-1171-0AC876E0"] = "ComboPoints",
["Player-1171-0AD13110"] = "SoulShards",
["Player-1171-0AD16E28"] = "SoulShards",
["Player-1171-0AD75E6F"] = "Essence",
["Player-76-0BE607EF"] = "Chi",
},
},
["npc_cache"] = {
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
"enUS",
},
[69899] = {
"Farraki Sand Conjurer",
"Throne of Thunder",
"enUS",
},
[16523] = {
"Shattered Hand Savage",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[24777] = {
"Sunblade Sentinel",
"Magisters' Terrace",
"enUS",
},
[364440] = {
"Portal to Oribos",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[10407] = {
"Fleshflayer Ghoul",
"Stratholme",
"enUS",
},
[10439] = {
"Ramstein the Gorger",
"Stratholme",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[221667] = {
"Lost Watcher",
"Nerub-ar Palace",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[222691] = {
"Crate of Pandaren Relics",
"Siege of Orgrimmar",
"enUS",
},
[62983] = {
"Lei Shi",
"Terrace of Endless Spring",
"enUS",
},
[69132] = {
"High Priestess Mar'li",
"Throne of Thunder",
"enUS",
},
[69388] = {
"Zandalari Spear-Shaper",
"Throne of Thunder",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[29768] = {
"Unyielding Constrictor",
"Gundrak",
"enUS",
},
[29832] = {
"Drakkari Golem",
"Gundrak",
"enUS",
},
[214502] = {
"The Bloodbound Horror",
"Nerub-ar Palace",
"enUS",
},
[25865] = {
"Frozen Core",
"Coilfang: The Slave Pens",
"enUS",
},
[60040] = {
"Commander Durand",
"Scarlet Monastery",
"enUS",
},
[52362] = {
"Tiki Lord Zim'wae",
"Zul'Gurub",
},
[214503] = {
"Sikran",
"Nerub-ar Palace",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[69133] = {
"Unharnessed Power",
"Throne of Thunder",
"enUS",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[222694] = {
"Crate of Pandaren Relics",
"Siege of Orgrimmar",
"enUS",
},
[103685] = {
"Tichondrius",
"The Nighthold",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[223207] = {
"Black Blood",
"Nerub-ar Palace",
"enUS",
},
[69134] = {
"Kazra'jin",
"Throne of Thunder",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23562] = {
"Unstoppable Abomination",
"Naxxramas",
"enUS",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[15974] = {
"Dread Creeper",
"Naxxramas",
"enUS",
},
[380834] = {
"Decay Tainted Chest",
"Brackenhide Hollow",
"enUS",
},
[101639] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
},
[220138] = {
"Regurgitating Monstrosity",
"Nerub-ar Palace",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[73742] = {
"Thresher Turret",
"Siege of Orgrimmar",
"enUS",
},
[220139] = {
"Slithering Spew",
"Nerub-ar Palace",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
"enUS",
},
[25354] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
"enUS",
},
[252388] = {
"Singed Page",
"Black Rook Hold",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[17420] = {
"Shattered Hand Heathen",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[222700] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[43662] = {
"Unbound Earth Rager",
"The Stonecore",
"enUS",
},
[64393] = {
"Night Terror",
"Terrace of Endless Spring",
"enUS",
},
[52364] = {
"Ritual Tiki Mask",
"Zul'Gurub",
"enUS",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[69905] = {
"Gurubashi Berserker",
"Throne of Thunder",
"enUS",
},
[203763] = {
"Alliance Footman",
"Dawn of the Infinite",
"enUS",
},
[19020] = {
"Box of Assorted Parts",
"Gnomeregan",
"enUS",
},
[175611] = {
"The Tarragrue",
"Sanctum of Domination",
"enUS",
},
[23563] = {
"Soul Weaver",
"Naxxramas",
"enUS",
},
[69906] = {
"Zandalari High Priest",
"Throne of Thunder",
"enUS",
},
[59915] = {
"Jasper Guardian",
"Mogu'shan Vaults",
"enUS",
},
[60043] = {
"Jade Guardian",
"Mogu'shan Vaults",
"enUS",
},
[14023] = {
"Corrupted Green Whelp",
"Blackwing Lair",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[384944] = {
"Reverberating Boulder",
"Vault of the Incarnates",
"enUS",
},
[222193] = {
"Hollow Frostweaver",
"Nerub-ar Palace",
"enUS",
},
[36497] = {
"Bronjahm",
"The Forge of Souls",
"enUS",
},
[10184] = {
"Onyxia",
"Onyxia's Lair",
"enUS",
},
[639] = {
"Edwin VanCleef",
"Deadmines",
"enUS",
},
[641] = {
"Goblin Woodcarver",
"Deadmines",
"enUS",
},
[643] = {
"Sneed",
"Deadmines",
"enUS",
},
[61707] = {
"Abomination of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[647] = {
"Captain Greenskin",
"Deadmines",
"enUS",
},
[10408] = {
"Rockwing Gargoyle",
"Stratholme",
"enUS",
},
[138247] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[146949] = {
"Sputtering Fleshrender",
"8.1 Darkshore Scenario",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
"enUS",
},
[76306] = {
"Grand Defense Construct",
"Skyreach",
},
[17357] = {
"Creeping Oozeling",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[29834] = {
"Drakkari Frenzy",
"Gundrak",
"enUS",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[231410] = {
"Fire Elemental",
"Blackrock Depths",
"enUS",
},
[67093] = {
"Sik'thik Battle-Mender",
"Siege of Niuzao Temple",
"enUS",
},
[76307] = {
"Grand Defense Construct",
"Skyreach",
},
[214519] = {
"Snowdrift's Possessions",
"Shado-Pan Monastery",
"enUS",
},
[18317] = {
"Ethereal Priest",
"Auchindoun: Mana-Tombs",
"enUS",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[69909] = {
"Amani'shi Flame Chanter",
"Throne of Thunder",
"enUS",
},
[26763] = {
"Anomalus",
"The Nexus",
"enUS",
},
[214520] = {
"Legacy of the Clan Leaders",
"Mogu'shan Palace",
"enUS",
},
[11464] = {
"Warpwood Tangler",
"Dire Maul",
"enUS",
},
[177154] = {
"Mawsworn Vanguard",
"Sanctum of Domination",
"enUS",
},
[390076] = {
"Portal to the Seat of the Aspects",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[69910] = {
"Drakkari Frost Warden",
"Throne of Thunder",
"enUS",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59789] = {
"Thalnos the Soulrender",
"Scarlet Monastery",
"enUS",
},
[43537] = {
"Stonecore Earthshaper",
"The Stonecore",
"enUS",
},
[16167] = {
"Bony Construct",
"Naxxramas",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[36499] = {
"Soulguard Reaper",
"The Forge of Souls",
"enUS",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[146956] = {
"Ashen Deathguard",
"8.1 Darkshore Scenario",
},
[61453] = {
"Mu'Shiba",
"Mogu'shan Palace",
},
[69911] = {
"Zandalari Warlord",
"Throne of Thunder",
"enUS",
},
[407485] = {
"Challenger's Cache",
"Atal'Dazar",
"enUS",
},
[407486] = {
"Challenger's Cache",
"Waycrest Manor",
"enUS",
},
[407487] = {
"Challenger's Cache",
"Darkheart Thicket",
"enUS",
},
[72983] = {
"Corrupted Skullsplitter",
"Siege of Orgrimmar",
"enUS",
},
[407488] = {
"Challenger's Cache",
"Black Rook Hold",
"enUS",
},
[102672] = {
"Nythendra",
"The Emerald Nightmare",
"enUS",
},
[25740] = {
"Ahune",
"Coilfang: The Slave Pens",
"enUS",
},
[407490] = {
"Challenger's Cache",
"The Everbloom",
"enUS",
},
[407491] = {
"Challenger's Cache",
"Throne of the Tides",
"enUS",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
"enUS",
},
[72728] = {
"Kor'kron Blood Axe",
"Siege of Orgrimmar",
"enUS",
},
[220158] = {
"Under-Lord Vik'tis",
"The Dread Pit",
"enUS",
},
[146960] = {
"Shambling Deadeye",
"8.1 Darkshore Scenario",
},
[26764] = {
"Ilsa Direbrew",
"Blackrock Depths",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"Tak-Rethan Abyss",
"enUS",
},
[407494] = {
"Challenger's Cache",
"Dawn of the Infinite",
"enUS",
},
[18894] = {
"Felguard Brute",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[112655] = {
"Celestial Acolyte",
"The Nighthold",
},
[9545] = {
"Grim Patron",
"Blackrock Depths",
"enUS",
},
[77080] = {
"Sargerei Arbiter",
"Auchindoun",
},
[407496] = {
"Challenger's Cache",
"Dawn of the Infinite",
"enUS",
},
[196102] = {
"Conjured Lasher",
"Dragon Isles",
"enUS",
},
[192519] = {
"Monstrous Mud",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[74009] = {
"Crawler Mine",
"Siege of Orgrimmar",
"enUS",
},
[19598] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
"enUS",
},
[376785] = {
"Cushion",
"Brackenhide Hollow",
"enUS",
},
[60047] = {
"Amethyst Guardian",
"Mogu'shan Vaults",
"enUS",
},
[14024] = {
"Corrupted Blue Whelp",
"Blackwing Lair",
},
[146963] = {
"Shortfuse Sapper",
"8.1 Darkshore Scenario",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[246779] = {
"Font of Power",
"Neltharus",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72986] = {
"Shanna Sparkfizz",
"Siege of Orgrimmar",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[226305] = {
"Emperor Dagran Thaurissan",
"Blackrock Depths",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[10409] = {
"Rockwing Screecher",
"Stratholme",
"enUS",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118032] = {
"Tormenting Eye",
"Artifact - Acquisition - Tank",
},
[220164] = {
"Darkened Husk",
"The Dread Pit",
"enUS",
},
[69916] = {
"Gurubashi Berserker",
"Throne of Thunder",
"enUS",
},
[29836] = {
"Drakkari Battle Rider",
"Gundrak",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[17871] = {
"Underbog Shambler",
"Coilfang: The Underbog",
"enUS",
},
[26125] = {
"Earthhead",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129550] = {
"Bilge Rat Padfoot",
"Freehold",
"enUS",
},
[36502] = {
"Devourer of Souls",
"The Forge of Souls",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"Earthcrawl Mines",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201739] = {
"Obsidian Bulwark",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[11465] = {
"Warpwood Stomper",
"Dire Maul",
"enUS",
},
[216584] = {
"Nerubian Captain",
"Earthcrawl Mines",
"enUS",
},
[201740] = {
"Obsidian Soldier",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[3947] = {
"Goblin Shipbuilder",
"Deadmines",
"enUS",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[70430] = {
"Rocky Horror",
"Throne of Thunder",
"enUS",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
"enUS",
},
[216074] = {
"Rope Pile",
"Naval Battle Scenario",
"enUS",
},
[71454] = {
"Malkorok",
"Siege of Orgrimmar",
"enUS",
},
[24078] = {
"Dragonflayer Metalworker",
"Utgarde Keep",
"enUS",
},
[16168] = {
"Stoneskin Gargoyle",
"Naxxramas",
"enUS",
},
[201742] = {
"Obsidian Magus",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
"enUS",
},
[133663] = {
"Fanatical Headhunter",
"The Underrot",
"enUS",
},
[226313] = {
"Gloom'rel",
"Blackrock Depths",
"enUS",
},
[12457] = {
"Blackwing Spellbinder",
"Blackwing Lair",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[104215] = {
"Patrol Captain Gerdo",
"Court of Stars",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[239111] = {
"Hearthstone Gameboard",
"Darkheart Thicket",
"enUS",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[43286] = {
"Crystal Shard",
"The Stonecore",
"enUS",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[232458] = {
"Doomforge Arcanasmith",
"Blackrock Depths",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[71712] = {
"Despair Spawn",
"Siege of Orgrimmar",
"enUS",
},
[201746] = {
"Sundered Naturalist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
"enUS",
},
[69153] = {
"Living Sand",
"Throne of Thunder",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[104217] = {
"Talixae Flamewreath",
"Court of Stars",
},
[205843] = {
"Cinderstep Melter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[60051] = {
"Cobalt Guardian",
"Mogu'shan Vaults",
"enUS",
},
[14025] = {
"Corrupted Bronze Whelp",
"Blackwing Lair",
},
[104218] = {
"Advisor Melandrus",
"Court of Stars",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[52373] = {
"Florawing Needler",
"Zul'Gurub",
},
[24207] = {
"Army of the Dead",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[16593] = {
"Shattered Hand Brawler",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[99868] = {
"Fenryr",
"Halls of Valor",
},
[14601] = {
"Ebonroc",
"Blackwing Lair",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[62995] = {
"Animated Protector",
"Terrace of Endless Spring",
"enUS",
},
[232465] = {
"Dark Iron Imperial Guard",
"Blackrock Depths",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"Tak-Rethan Abyss",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72484] = {
"Zazo",
"Siege of Orgrimmar",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[381946] = {
"Challenger's Cache",
"The Azure Vault",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[67366] = {
"Horde Officer",
"Naval Battle Scenario",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[72485] = {
"Goma",
"Siege of Orgrimmar",
"enUS",
},
[163366] = {
"Magus of the Dead",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[102430] = {
"Tarspitter Slug",
"Neltharion's Lair",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[15977] = {
"Poisonous Skitterer",
"Naxxramas",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[112668] = {
"Infernal Imp",
"Court of Stars",
},
[52375] = {
"Florawing Needler",
"Zul'Gurub",
},
[64916] = {
"Kor'thik Swarmguard",
"Heart of Fear",
"enUS",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[16297] = {
"Mutated Grub",
"Naxxramas",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[77605] = {
"Whirling Dervish",
"Skyreach",
},
[69927] = {
"Zandalari Prelate",
"Throne of Thunder",
"enUS",
},
[16594] = {
"Shadowmoon Acolyte",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[12458] = {
"Blackwing Taskmaster",
"Blackwing Lair",
},
[67368] = {
"Parrot",
"Naval Battle Scenario",
"enUS",
},
[222235] = {
"Bloodthirsty Swarmer",
"Nerub-ar Palace",
"enUS",
},
[72487] = {
"Kozish",
"Siege of Orgrimmar",
"enUS",
},
[68904] = {
"Suen",
"Throne of Thunder",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189988] = {
"Thing From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[52376] = {
"Florawing Needler",
"Zul'Gurub",
},
[64917] = {
"Sra'thik Ambercaller",
"Heart of Fear",
"enUS",
},
[72744] = {
"Kor'kron Skullsplitter",
"Siege of Orgrimmar",
"enUS",
},
[65173] = {
"Echo of Attenuation",
"Heart of Fear",
"enUS",
},
[61334] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[112671] = {
"Duskwatch Battle-Magus",
"The Nighthold",
},
[9547] = {
"Guzzling Patron",
"Blackrock Depths",
"enUS",
},
[72489] = {
"Barkeep Morag",
"Siege of Orgrimmar",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[381967] = {
"Challenger's Cache",
"Algeth'ar Academy",
"enUS",
},
[202789] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[178731] = {
"Bonesteel",
"Sanctum of Domination",
"enUS",
},
[220193] = {
"Sureki Venomblade",
"City of Threads",
"enUS",
},
[71466] = {
"Iron Juggernaut",
"Siege of Orgrimmar",
"enUS",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
"enUS",
},
[202278] = {
"Orb of Naxxramas",
"Naxxramas",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[65174] = {
"Echo of Force and Verve",
"Heart of Fear",
"enUS",
},
[378899] = {
"Grand Banquet of the Kalu'ak",
"Neltharus",
"enUS",
},
[146996] = {
"Deathstalker Commander Belmont",
"8.1 Darkshore Scenario",
},
[24849] = {
"Proto-Drake Rider",
"Utgarde Keep",
"enUS",
},
[178733] = {
"Mawsworn Vanguard",
"Sanctum of Domination",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
"enUS",
},
[29264] = {
"Spirit Wolf",
"Mogu'shan Vaults",
"enUS",
},
[80937] = {
"Grom'kar Gunner",
"Grimrail Depot",
},
[69164] = {
"Gurubashi Venom Priest",
"Throne of Thunder",
"enUS",
},
[17427] = {
"Shattered Hand Archer",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[17491] = {
"Laughing Skull Rogue",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
"enUS",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
"enUS",
},
[303148] = {
"Soulwell",
"Brackenhide Hollow",
"enUS",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
"enUS",
},
[68397] = {
"Lei Shen",
"Throne of Thunder",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[70445] = {
"Stormbringer Draz'kil",
"Throne of Thunder",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[220199] = {
"Battle Scarab",
"City of Threads",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[112675] = {
"Duskwatch Sentinel",
"The Nighthold",
},
[72237] = {
"Embodied Fear",
"Siege of Orgrimmar",
"enUS",
},
[72493] = {
"Trak'gen",
"Siege of Orgrimmar",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[23954] = {
"Ingvar the Plunderer",
"Utgarde Keep",
"enUS",
},
[112676] = {
"Nobleborn Warpcaster",
"The Nighthold",
},
[52379] = {
"Venomtip Needler",
"Zul'Gurub",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[80940] = {
"Iron Infantry",
"Grimrail Depot",
},
[65304] = {
"Hateful Monstrosity",
"Crypt of Forgotten Kings",
"enUS",
},
[61337] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
},
[24722] = {
"Fel Crystal",
"Magisters' Terrace",
"enUS",
},
[12459] = {
"Blackwing Warlock",
"Blackwing Lair",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[210478] = {
"Infected Beast",
"Mycomancer Cavern",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[216621] = {
"Nerubian Webspinner",
"Earthcrawl Mines",
"enUS",
},
[73775] = {
"War Master Kragg",
"Siege of Orgrimmar",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
"enUS",
},
[70448] = {
"Ancient Python",
"Throne of Thunder",
"enUS",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[204337] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[52380] = {
"Venomancer Mauri",
"Zul'Gurub",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[61338] = {
"Glintrok Skulker",
"Mogu'shan Palace",
},
[208945] = {
"Dwarven Bomber",
"Dawn of the Infinite",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
"enUS",
},
[19668] = {
"Shadowfiend",
"Heart of Fear",
"enUS",
},
[71474] = {
"Embodied Despair",
"Siege of Orgrimmar",
"enUS",
},
[24083] = {
"Enslaved Proto-Drake",
"Utgarde Keep",
"enUS",
},
[52381] = {
"Venomancer T'Kulu",
"Zul'Gurub",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[223281] = {
"Rope Pile",
"Siege of Orgrimmar",
"enUS",
},
[32593] = {
"Skittering Swarmer",
"Azjol-Nerub",
"enUS",
},
[69427] = {
"Dark Animus",
"Throne of Thunder",
"enUS",
},
[66100] = {
"Apparition of Terror",
"Terrace of Endless Spring",
"enUS",
},
[210485] = {
"Admiral Barean Westwind",
"Scarlet Halls",
"enUS",
},
[70963] = {
"Lieutenant Fizzel",
"Naval Battle Scenario",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
"enUS",
},
[418860] = {
"Portal to Valdrakken",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
"enUS",
},
[210486] = {
"Dorgar Stoenbrow",
"Scarlet Halls",
"enUS",
},
[69172] = {
"Sul'lithuz Stonegazer",
"Throne of Thunder",
"enUS",
},
[17429] = {
"Fel Orc Neophyte",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17621] = {
"Heathen Guard",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[194108] = {
"Summoning Portal",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[73012] = {
"Klaxxi Skirmisher",
"Siege of Orgrimmar",
"enUS",
},
[69173] = {
"Farraki Skirmisher",
"Throne of Thunder",
"enUS",
},
[208441] = {
"Water Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201787] = {
"Inchoate Beastling",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
"enUS",
},
[210491] = {
"Invar One-Arm",
"Scarlet Halls",
"enUS",
},
[16011] = {
"Loatheb",
"Naxxramas",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[23956] = {
"Dragonflayer Strategist",
"Utgarde Keep",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[16171] = {
"Coldmist Widow",
"Karazhan",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[69175] = {
"Farraki Wastewalker",
"Throne of Thunder",
"enUS",
},
[61341] = {
"Mounted Mogu",
"Mogu'shan Vaults",
"enUS",
},
[12460] = {
"Death Talon Wyrmguard",
"Blackwing Lair",
},
[71479] = {
"He Softfoot",
"Siege of Orgrimmar",
"enUS",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[210494] = {
"Yana Bloodspear",
"Scarlet Halls",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[183877] = {
"Ethereal Transporter Control Panel",
"Auchindoun: Mana-Tombs",
"enUS",
},
[69944] = {
"Sand Elemental",
"Throne of Thunder",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[71480] = {
"Sun Tenderheart",
"Siege of Orgrimmar",
"enUS",
},
[76087] = {
"Defense Construct",
"Skyreach",
},
[56863] = {
"Sleepy Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[36516] = {
"Soulguard Animator",
"The Forge of Souls",
"enUS",
},
[127019] = {
"Training Dummy",
"Freehold",
"enUS",
},
[111151] = {
"Midnight Siphoner",
"The Nighthold",
},
[103217] = {
"Crystalline Scorpid",
"The Nighthold",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[71481] = {
"Embodied Sorrow",
"Siege of Orgrimmar",
"enUS",
},
[147537] = {
"Treasury Protector",
"Zandalari Treasury",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
"enUS",
},
[72249] = {
"Galakras",
"Siege of Orgrimmar",
"enUS",
},
[58783] = {
"Scarlet Initiate",
"Scarlet Monastery",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[59551] = {
"Bopper",
"UNKNOWN",
"enUS",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[13996] = {
"Blackwing Technician",
"Blackwing Lair",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[71482] = {
"Embodied Desperation",
"Siege of Orgrimmar",
"enUS",
},
[24085] = {
"Dragonflayer Overseer",
"Utgarde Keep",
"enUS",
},
[7079] = {
"Viscous Fallout",
"Gnomeregan",
"enUS",
},
[40484] = {
"Erudax",
"Grim Batol",
"enUS",
},
[16407] = {
"Spectral Servant",
"Karazhan",
},
[222274] = {
"Sureki Darkblade",
"Nerub-ar Palace",
"enUS",
},
[10381] = {
"Ravaged Cadaver",
"Stratholme",
"enUS",
},
[10413] = {
"Crypt Beast",
"Stratholme",
"enUS",
},
[229441] = {
"Lesser Obsidian Elemental",
"Blackrock Depths",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[222275] = {
"Training Dummy",
"Nerub-ar Palace",
"enUS",
},
[202824] = {
"Erratic Remnant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[229442] = {
"Obsidian Elemental",
"Blackrock Depths",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
"enUS",
},
[229443] = {
"Greater Obsidian Elemental",
"Blackrock Depths",
"enUS",
},
[60576] = {
"Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
"enUS",
},
[56865] = {
"Aqua Dancer",
"Dragon Isles",
"enUS",
},
[118065] = {
"Smoldering Infernal",
"Artifact - Acquisition - Tank",
},
[61216] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
},
[147032] = {
"Nathanos Blightcaller",
"8.1 Darkshore Scenario",
},
[229444] = {
"Son of Roccor",
"Blackrock Depths",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[70205] = {
"Weisheng",
"Throne of Thunder",
"enUS",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[147033] = {
"Brynja",
"8.1 Darkshore Scenario",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[42789] = {
"Stonecore Magmalord",
"The Stonecore",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[70206] = {
"Untrained Quilen",
"Throne of Thunder",
"enUS",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[11981] = {
"Flamegor",
"Blackwing Lair",
},
[67391] = {
"Lieutenant Drak'on",
"Naval Battle Scenario",
"enUS",
},
[16236] = {
"Eye Stalk",
"Naxxramas",
"enUS",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[61345] = {
"Mogu Archer",
"Mogu'shan Vaults",
"enUS",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[12461] = {
"Death Talon Overseer",
"Blackwing Lair",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[12557] = {
"Grethok the Controller",
"Blackwing Lair",
},
[97081] = {
"King Bjorn",
"Halls of Valor",
},
[219724] = {
"Court Attendant",
"Nerub-ar Palace",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[103224] = {
"Volatile Scorpid",
"The Nighthold",
},
[219725] = {
"Chitin Knight",
"Nerub-ar Palace",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[75839] = {
"Vigilant Kaathar",
"Auchindoun",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72768] = {
"Kor'kron War Wolf",
"Siege of Orgrimmar",
"enUS",
},
[30549] = {
"Baron Rivendare",
"Naxxramas",
"enUS",
},
[98362] = {
"Troubled Soul",
"Black Rook Hold",
"enUS",
},
[70209] = {
"Untrained Quilen",
"Throne of Thunder",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[223822] = {
"Queen's Guard Re'zah",
"Nerub-ar Palace",
"enUS",
},
[213073] = {
"Box of Fancy Stuff",
"Terrace of Endless Spring",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[97083] = {
"King Ranulf",
"Halls of Valor",
},
[142947] = {
"Theramore Citizen",
"Thros, The Blighted Lands",
},
[213074] = {
"Box of Fancy Stuff",
"Terrace of Endless Spring",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[19608] = {
"Frayer Wildling",
"Tempest Keep: The Botanica",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[142948] = {
"Theramore Citizen",
"Thros, The Blighted Lands",
},
[76097] = {
"Solar Familiar",
"Skyreach",
},
[97084] = {
"King Tor",
"Halls of Valor",
},
[72770] = {
"Kor'kron Dark Farseer",
"Siege of Orgrimmar",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[142949] = {
"Theramore Citizen",
"Thros, The Blighted Lands",
},
[77889] = {
"Grom'tash the Destructor",
"Auchindoun",
},
[230992] = {
"Dark Iron Imperial Guard",
"Blackrock Depths",
"enUS",
},
[10382] = {
"Mangled Cadaver",
"Stratholme",
"enUS",
},
[71491] = {
"Guardian of Sacrifice",
"Crypt of Forgotten Kings",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[230993] = {
"Twilight's Hammer Ambassador",
"Blackrock Depths",
"enUS",
},
[142951] = {
"Theramore Citizen",
"Thros, The Blighted Lands",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[71492] = {
"Maragor",
"Crypt of Forgotten Kings",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[60708] = {
"Meng the Demented",
"Mogu'shan Vaults",
"enUS",
},
[101437] = {
"Burning Geode",
"Neltharion's Lair",
"enUS",
},
[36522] = {
"Soul Horror",
"The Forge of Souls",
"enUS",
},
[142953] = {
"Theramore Citizen",
"Thros, The Blighted Lands",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[69957] = {
"Corrupted Anima",
"Throne of Thunder",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[223318] = {
"Devoted Worshipper",
"Nerub-ar Palace",
"enUS",
},
[207450] = {
"Fungal Stabber",
"Mycomancer Cavern",
"enUS",
},
[112955] = {
"Shadescale Wyrm",
"The Nighthold",
},
[97087] = {
"Valarjar Champion",
"Halls of Valor",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
"enUS",
},
[73541] = {
"Kor'kron Wolf Pup",
"Siege of Orgrimmar",
"enUS",
},
[69702] = {
"Ritualist Rutan",
"Throne of Thunder",
"enUS",
},
[69958] = {
"Corrupted Vita",
"Throne of Thunder",
"enUS",
},
[111164] = {
"Twilight Stardancer",
"The Nighthold",
},
[15981] = {
"Naxxramas Acolyte",
"Naxxramas",
"enUS",
},
[60197] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[228951] = {
"Nerubian Stalker",
"The Spiral Weave",
"enUS",
},
[112956] = {
"Shimmering Manaspine",
"The Nighthold",
},
[60709] = {
"Qiang the Merciless",
"Mogu'shan Vaults",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Mycomancer Cavern",
"enUS",
},
[44841] = {
"Blight Beast",
"Throne of the Tides",
"enUS",
},
[228952] = {
"Nerubian Skulker",
"The Spiral Weave",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[24664] = {
"Kael'thas Sunstrider",
"Magisters' Terrace",
"enUS",
},
[61989] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[207454] = {
"Fungal Gutter",
"Mycomancer Cavern",
"enUS",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[76102] = {
"Air Familiar",
"Skyreach",
},
[29335] = {
"Anub'ar Webspinner",
"Azjol-Nerub",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[111166] = {
"Resolute Courtesan",
"The Nighthold",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
"enUS",
},
[207456] = {
"Fungal Speartender",
"Mycomancer Cavern",
"enUS",
},
[17882] = {
"The Black Stalker",
"Coilfang: The Underbog",
"enUS",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[72264] = {
"Manifestation of Corruption",
"Siege of Orgrimmar",
"enUS",
},
[402565] = {
"Signet Shard",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[18394] = {
"Ethereal Wraith",
"Auchindoun: Mana-Tombs",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[180840] = {
"Frostbound Devoted",
"Sanctum of Domination",
"enUS",
},
[26776] = {
"Direbrew Minion",
"Blackrock Depths",
"enUS",
},
[202339] = {
"Ancient Tiger",
"Zul'Gurub",
"enUS",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[214625] = {
"Kobyss Necromancer",
"Tak-Rethan Abyss",
"enUS",
},
[198757] = {
"Void Lasher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207459] = {
"Fungal Rotcaster",
"Mycomancer Cavern",
"enUS",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[107073] = {
"Duskwatch Reinforcement",
"Court of Stars",
},
[202341] = {
"Ancient Bat",
"Zul'Gurub",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"Kriegval's Rest",
"enUS",
},
[60583] = {
"Protector Kaolan",
"Terrace of Endless Spring",
"enUS",
},
[222305] = {
"Palace Guardian",
"Nerub-ar Palace",
"enUS",
},
[44715] = {
"Vicious Mindlasher",
"Throne of the Tides",
"enUS",
},
[203878] = {
"Kobold Mystic",
"Kriegval's Rest",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
"enUS",
},
[70219] = {
"Putrid Waste",
"Throne of Thunder",
"enUS",
},
[10383] = {
"Broken Cadaver",
"Stratholme",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201832] = {
"Drained Djaradin",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[77130] = {
"Sargerei Ritualist",
"Auchindoun",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[111170] = {
"Astral Farseer",
"The Nighthold",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[129598] = {
"Freehold Pack Mule",
"Freehold",
"enUS",
},
[77131] = {
"Sargerei Spirit-Tender",
"Auchindoun",
},
[18331] = {
"Ethereal Darkcaster",
"Auchindoun: Mana-Tombs",
"enUS",
},
[175729] = {
"Remnant of Ner'zhul",
"Sanctum of Domination",
"enUS",
},
[188526] = {
"Telestra's Containment Sphere",
"The Nexus",
"enUS",
},
[18587] = {
"Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[175730] = {
"Fatescribe Roh-Kalo",
"Sanctum of Domination",
"enUS",
},
[62632] = {
"Sik'thik Engineer",
"Siege of Niuzao Temple",
"enUS",
},
[129599] = {
"Cutwater Knife Juggler",
"Freehold",
"enUS",
},
[77132] = {
"Sargerei Zealot",
"Auchindoun",
},
[175731] = {
"Guardian of the First Ones",
"Sanctum of Domination",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Mycomancer Cavern",
"enUS",
},
[11983] = {
"Firemaw",
"Blackwing Lair",
},
[175732] = {
"Sylvanas Windrunner",
"Sanctum of Domination",
"enUS",
},
[60585] = {
"Elder Regail",
"Terrace of Endless Spring",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
"enUS",
},
[77133] = {
"Sargerei Hoplite",
"Auchindoun",
},
[232551] = {
"Prototype Fire Golem",
"Blackrock Depths",
"enUS",
},
[69455] = {
"Zandalari Water-Binder",
"Mogu Island Daily Area",
"enUS",
},
[221802] = {
"Stout Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[28825] = {
"Cyclone",
"Halls of Lightning",
"enUS",
},
[12463] = {
"Death Talon Flamescale",
"Blackwing Lair",
},
[232552] = {
"Prototype Electric Golem",
"Blackrock Depths",
"enUS",
},
[112709] = {
"Promenade Guard",
"The Nighthold",
},
[62633] = {
"Sik'thik Builder",
"Siege of Niuzao Temple",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[77134] = {
"Sargerei Cleric",
"Auchindoun",
},
[232553] = {
"Prototype Toxic Golem",
"Blackrock Depths",
"enUS",
},
[69712] = {
"Ji-Kun",
"Throne of Thunder",
"enUS",
},
[70224] = {
"Rotting Scavenger",
"Throne of Thunder",
"enUS",
},
[43438] = {
"Corborus",
"The Stonecore",
"enUS",
},
[108359] = {
"Volatile Scorpid",
"The Nighthold",
},
[60586] = {
"Elder Asani",
"Terrace of Endless Spring",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
"enUS",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
"enUS",
},
[72784] = {
"Kor'kron Gunner",
"Siege of Orgrimmar",
"enUS",
},
[191605] = {
"Portable Mailbox",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[61610] = {
"Seething Sha",
"Crypt of Forgotten Kings",
"enUS",
},
[108360] = {
"Acidmaw Scorpid",
"The Nighthold",
},
[221807] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[59051] = {
"Strife",
"Temple of the Jade Serpent",
"enUS",
},
[201333] = {
"Awakened Avalanche",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[177787] = {
"Mawsworn Hopebreaker",
"Sanctum of Domination",
"enUS",
},
[224368] = {
"Chamber Expeller",
"Nerub-ar Palace",
"enUS",
},
[108361] = {
"Crystalline Scorpid",
"The Nighthold",
},
[221809] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[221810] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[70227] = {
"Skittering Spiderling",
"Throne of Thunder",
"enUS",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
"enUS",
},
[10416] = {
"Bile Spewer",
"Stratholme",
"enUS",
},
[221811] = {
"Stout Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[72787] = {
"Blade of the Hundred Steps",
"Siege of Orgrimmar",
"enUS",
},
[63275] = {
"Corrupted Protector",
"Terrace of Endless Spring",
"enUS",
},
[221812] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[25755] = {
"Ahunite Hailstone",
"Coilfang: The Slave Pens",
"enUS",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
"enUS",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[221813] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
"enUS",
},
[56877] = {
"Raigonn",
"Gate of the Setting Sun",
"enUS",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[221814] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[207482] = {
"Invasive Sporecap",
"Nightfall Sanctum",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
"enUS",
},
[142986] = {
"King Varian Wrynn",
"Thros, The Blighted Lands",
},
[217208] = {
"Zekvir",
"Nightfall Sanctum",
"enUS",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[81235] = {
"Grimrail Laborer",
"Grimrail Depot",
},
[142475] = {
"Matrix Punchograph 3005-B",
"Gnomeregan",
"enUS",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[221816] = {
"Stout Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[70230] = {
"Zandalari Blade Initiate",
"Mogu Island Daily Area",
"enUS",
},
[78932] = {
"Driving Gale-Caller",
"Skyreach",
},
[103758] = {
"Star Augur Etraeus",
"The Nighthold",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[221817] = {
"Stout Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[100943] = {
"Earthen Wall Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[32666] = {
"Training Dummy",
"Siege of Orgrimmar",
"enUS",
},
[98384] = {
"Razormouth",
"Neltharion's Lair",
"enUS",
},
[78933] = {
"Herald of Sunrise",
"Skyreach",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[120651] = {
"Explosives",
"Temple of the Jade Serpent",
},
[112973] = {
"Duskwatch Weaver",
"The Nighthold",
},
[72535] = {
"Stone Statue",
"Siege of Orgrimmar",
"enUS",
},
[72791] = {
"Lingering Corruption",
"Siege of Orgrimmar",
"enUS",
},
[232569] = {
"Shadowforge Senator",
"Blackrock Depths",
"enUS",
},
[70232] = {
"Muckbat",
"Throne of Thunder",
"enUS",
},
[17694] = {
"Shadowmoon Darkcaster",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
"enUS",
},
[112718] = {
"Sidereal Familiar",
"The Nighthold",
},
[221821] = {
"Stout Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[223357] = {
"Sureki Conscript",
"City of Threads",
"enUS",
},
[113998] = {
"Mightstone Breaker",
"Neltharion's Lair",
"enUS",
},
[232571] = {
"Pyromancer Loregrain",
"Blackrock Depths",
"enUS",
},
[69465] = {
"Jin'rokh the Breaker",
"Throne of Thunder",
"enUS",
},
[36916] = {
"Ghoul Minion",
"The Forge of Souls",
"enUS",
},
[41139] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[221823] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[76376] = {
"Skyreach Arcanologist",
"Skyreach",
},
[19486] = {
"Sunseeker Chemist",
"Tempest Keep: The Botanica",
"enUS",
},
[221824] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[23965] = {
"Frost Tomb",
"Utgarde Keep",
"enUS",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
},
[71770] = {
"Kor'kron Ironblade",
"Siege of Orgrimmar",
"enUS",
},
[98900] = {
"Wyrmtongue Trickster",
"Black Rook Hold",
"enUS",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[10417] = {
"Venom Belcher",
"Stratholme",
"enUS",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
},
[62511] = {
"Amber-Shaper Un'sok",
"Heart of Fear",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[29340] = {
"Anub'ar Brood Keeper",
"Azjol-Nerub",
"enUS",
},
[105299] = {
"Recursive Elemental",
"The Nighthold",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[142999] = {
"Rhonin",
"Thros, The Blighted Lands",
},
[221828] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[70236] = {
"Zandalari Storm-Caller",
"Throne of Thunder",
"enUS",
},
[218757] = {
"Mogu Treasure Chest",
"Mogu Island Loot Room",
"enUS",
},
[17695] = {
"Shattered Hand Assassin",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[187021] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[60208] = {
"Hopling",
"UNKNOWN",
"enUS",
},
[71772] = {
"Kor'kron Assassin",
"Siege of Orgrimmar",
"enUS",
},
[52402] = {
"Venomtooth",
"Zul'Gurub",
"enUS",
},
[219270] = {
"Rope Pile",
"Naval Battle Scenario",
"enUS",
},
[143001] = {
"Kirin Tor Invoker",
"Thros, The Blighted Lands",
},
[173714] = {
"Mistveil Nightblossom",
"Mists of Tirna Scithe",
"enUS",
},
[45620] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[11473] = {
"Eldreth Spectre",
"Dire Maul",
"enUS",
},
[104277] = {
"Legion Hound",
"Court of Stars",
},
[71773] = {
"Kor'kron Warshaman",
"Siege of Orgrimmar",
"enUS",
},
[221831] = {
"Massive Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[7849] = {
"Mobile Alert System",
"Gnomeregan",
"enUS",
},
[231557] = {
"Anvilrage Sapper",
"Blackrock Depths",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[221832] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[70238] = {
"Unblinking Eye",
"Throne of Thunder",
"enUS",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[221833] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[56754] = {
"Azure Serpent",
"Shado-Pan Monastery",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[130896] = {
"Blackout Barrel",
"Freehold",
"enUS",
},
[12465] = {
"Death Talon Wyrmkin",
"Blackwing Lair",
},
[95833] = {
"Hyrja",
"Halls of Valor",
},
[33720] = {
"Influence Tentacle",
"Ulduar",
"enUS",
},
[29213] = {
"Anub'ar Darter",
"Azjol-Nerub",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[97369] = {
"Liquid Magma Totem",
"Dawn of the Infinite",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
"enUS",
},
[231562] = {
"Anvilrage Dragoon",
"Blackrock Depths",
"enUS",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[231563] = {
"Anvilrage Rogue",
"Blackrock Depths",
"enUS",
},
[69473] = {
"Ra-den",
"Throne of Thunder",
"enUS",
},
[221838] = {
"Stout Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[26782] = {
"Crystalline Keeper",
"The Nexus",
"enUS",
},
[211089] = {
"Anub'ikkaj",
"The Dawnbreaker",
"enUS",
},
[67426] = {
"Admiral Hagman",
"Naval Battle Scenario",
"enUS",
},
[221839] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
"enUS",
},
[231565] = {
"Anvilrage Artillerist",
"Blackrock Depths",
"enUS",
},
[195222] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[221840] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[231566] = {
"Harbinger of Flames",
"Blackrock Depths",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[180379] = {
"Mawsworn Arbalest",
"Sanctum of Domination",
"enUS",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
"enUS",
},
[56884] = {
"Corrupted Taran Zhu",
"Shado-Pan Monastery",
"enUS",
},
[222866] = {
"Defias Watchman",
"Deadmines",
"enUS",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[29214] = {
"Anub'ar Assassin",
"Azjol-Nerub",
"enUS",
},
[217748] = {
"Nexus-Princess Ky'veza",
"Nerub-ar Palace",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[218772] = {
"Golden Treasure Chest",
"Mogu Island Loot Room",
"enUS",
},
[42808] = {
"Stonecore Flayer",
"The Stonecore",
"enUS",
},
[17377] = {
"Keli'dan the Breaker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[221844] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[29982] = {
"Drakkari Raider",
"Gundrak",
"enUS",
},
[221845] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[64947] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[69221] = {
"Zandalari Dinomancer",
"Throne of Thunder",
"enUS",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[221846] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[70245] = {
"Training Dummy",
"Throne of Thunder",
"enUS",
},
[220823] = {
"Secured Stockpile of Pandaren Spoils",
"Siege of Orgrimmar",
"enUS",
},
[180385] = {
"Condemned Soul Remnant",
"Sanctum of Domination",
"enUS",
},
[221847] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[129879] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[221848] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[70246] = {
"Spirit Flayer",
"Throne of Thunder",
"enUS",
},
[95072] = {
"Greater Earth Elemental",
"Dawn of the Infinite",
"enUS",
},
[16017] = {
"Patchwork Golem",
"Naxxramas",
"enUS",
},
[178851] = {
"Burning Stygia",
"Sanctum of Domination",
"enUS",
},
[143020] = {
"Gorak Tul",
"Thros, The Blighted Lands",
},
[16145] = {
"Death Knight Captain",
"Naxxramas",
"enUS",
},
[96608] = {
"Ebonclaw Worg",
"Halls of Valor",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[478443] = {
"Mislaid Curiosity",
"Nightfall Sanctum",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[78437] = {
"Gul'kosh",
"Auchindoun",
},
[214684] = {
"Invading Scrapper",
"Tak-Rethan Abyss",
"enUS",
},
[62005] = {
"Beast",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[96609] = {
"Gildedfur Stag",
"Halls of Valor",
},
[197793] = {
"Awakened Juggernaut",
"Vault of the Incarnates",
"enUS",
},
[117852] = {
"Tugar Bloodtotem",
"Artifact - Highmountain - Dual Boss",
"enUS",
},
[42810] = {
"Crystalspawn Giant",
"The Stonecore",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[70248] = {
"Arcane Head",
"Throne of Thunder",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[104288] = {
"Trilliax",
"The Nighthold",
},
[176296] = {
"Portal to Stormwind",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[221853] = {
"Stout Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[221854] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[70249] = {
"Focused Eye",
"Throne of Thunder",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[71529] = {
"Thok the Bloodthirsty",
"Siege of Orgrimmar",
"enUS",
},
[96611] = {
"Angerhoof Bull",
"Halls of Valor",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[63030] = {
"Enslaved Bonesmasher",
"Heart of Fear",
"enUS",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[222368] = {
"Exalted Priest",
"Nerub-ar Palace",
"enUS",
},
[198310] = {
"Flame Tarasek",
"Vault of the Incarnates",
"enUS",
},
[70762] = {
"Lieutenant Sparklighter",
"Naval Battle Scenario",
"enUS",
},
[79720] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[222881] = {
"Royal Weaver",
"Nerub-ar Palace",
"enUS",
},
[72810] = {
"Staff of Resonating Water",
"Siege of Orgrimmar",
"enUS",
},
[61239] = {
"Glintrok Oracle",
"Mogu'shan Palace",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[409869] = {
"Chilling Celebration Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[16803] = {
"Death Knight Understudy",
"Naxxramas",
"enUS",
},
[229537] = {
"Void Emissary",
"The Necrotic Wake",
"enUS",
},
[197801] = {
"Awakened Terrasentry",
"Vault of the Incarnates",
"enUS",
},
[42428] = {
"Devout Follower",
"The Stonecore",
"enUS",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
"enUS",
},
[178862] = {
"Screamspike",
"Sanctum of Domination",
"enUS",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
"enUS",
},
[74091] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[66413] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[64183] = {
"Enormous Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[79466] = {
"Initiate of the Rising Sun",
"Skyreach",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[61240] = {
"Glintrok Skulker",
"Mogu'shan Palace",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
"enUS",
},
[221862] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[193709] = {
"Primalist Earthwarden",
"Vault of the Incarnates",
"enUS",
},
[79467] = {
"Adept of the Dawn",
"Skyreach",
},
[33983] = {
"Constrictor Tentacle",
"Ulduar",
"enUS",
},
[63032] = {
"Sra'thik Shield Master",
"Heart of Fear",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[15954] = {
"Noth the Plaguebringer",
"Naxxramas",
"enUS",
},
[16018] = {
"Bile Retcher",
"Naxxramas",
"enUS",
},
[211627] = {
"Broken Control Console",
"Mogu'shan Vaults",
"enUS",
},
[23970] = {
"Vrykul Skeleton",
"Utgarde Keep",
"enUS",
},
[52155] = {
"High Priest Venoxis",
"Zul'Gurub",
"enUS",
},
[16146] = {
"Death Knight",
"Naxxramas",
"enUS",
},
[76141] = {
"Araknath",
"Skyreach",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
"enUS",
},
[56890] = {
"Krik'thik Infiltrator",
"Dragon Isles",
"enUS",
},
[130400] = {
"Irontide Crusher",
"Freehold",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[24674] = {
"Phoenix",
"Magisters' Terrace",
"enUS",
},
[165560] = {
"Gormling Larva",
"Mists of Tirna Scithe",
"enUS",
},
[62009] = {
"Shadows of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[12467] = {
"Death Talon Captain",
"Blackwing Lair",
},
[79469] = {
"Whirling Dervish",
"Skyreach",
},
[104295] = {
"Blazing Imp",
"Court of Stars",
},
[29217] = {
"Anub'ar Venomancer",
"Azjol-Nerub",
"enUS",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[69232] = {
"Ball Lightning",
"Throne of Thunder",
"enUS",
},
[17380] = {
"Broggok",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[211119] = {
"Kasthrik",
"Fungal Folly",
"enUS",
},
[180407] = {
"Gorgoan Sentinel",
"Sanctum of Domination",
"enUS",
},
[76143] = {
"Rukhran",
"Skyreach",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
"enUS",
},
[61242] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
},
[18404] = {
"Bloodwarder Steward",
"Tempest Keep: The Botanica",
"enUS",
},
[77935] = {
"Sargerei Warden",
"Auchindoun",
},
[26722] = {
"Azure Magus",
"The Nexus",
"enUS",
},
[58555] = {
"Scarlet Fanatic",
"Scarlet Monastery",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[73073] = {
"Corrupted Boil",
"Siege of Orgrimmar",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[59835] = {
"Krik'thik Swarmer",
"Gate of the Setting Sun",
"enUS",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[76145] = {
"Grand Defense Construct",
"Skyreach",
},
[60731] = {
"Undying Shadows",
"Mogu'shan Vaults",
"enUS",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
"enUS",
},
[166079] = {
"Brittlebone Crossbowman",
"The Necrotic Wake",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
"enUS",
},
[61243] = {
"Gekkan",
"Mogu'shan Palace",
},
[24675] = {
"Phoenix Egg",
"Magisters' Terrace",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[2630] = {
"Earthbind Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[76146] = {
"Grand Defense Construct",
"Skyreach",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
"enUS",
},
[63035] = {
"Zar'thik Zealot",
"Heart of Fear",
"enUS",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[17381] = {
"The Maker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[111210] = {
"Searing Infernal",
"The Nighthold",
},
[218805] = {
"Cache of Ancient Treasures",
"Throne of Thunder",
"enUS",
},
[227507] = {
"Sureki Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[180415] = {
"Mawsworn Axeguard",
"Sanctum of Domination",
"enUS",
},
[52414] = {
"Tor-Tun",
"Zul'Gurub",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[218806] = {
"Cache of Ancient Treasures",
"Throne of Thunder",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
"enUS",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[102253] = {
"Understone Demolisher",
"Neltharion's Lair",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[26723] = {
"Keristrasza",
"The Nexus",
"enUS",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
"enUS",
},
[290131] = {
"Door",
"Waycrest Manor",
"enUS",
},
[180417] = {
"Loom Artificer",
"Sanctum of Domination",
"enUS",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[63036] = {
"Kor'thik Extremist",
"Heart of Fear",
"enUS",
},
[19557] = {
"Greater Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[28067] = {
"Dark Iron Brewer",
"Blackrock Depths",
"enUS",
},
[71542] = {
"Blood",
"Siege of Orgrimmar",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[210108] = {
"E.D.N.A.",
"The Stonevault",
"enUS",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[61245] = {
"Capacitor Totem",
"Mogu'shan Vaults",
"enUS",
},
[28835] = {
"Stormforged Construct",
"Halls of Lightning",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[70775] = {
"Horde Deckhand",
"Naval Battle Scenario",
"enUS",
},
[12468] = {
"Death Talon Hatcher",
"Blackwing Lair",
},
[228537] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[62397] = {
"Wind Lord Mel'jarak",
"Heart of Fear",
"enUS",
},
[33988] = {
"Immortal Guardian",
"Ulduar",
"enUS",
},
[228538] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[64061] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[76407] = {
"Ner'zhul",
"Shadowmoon Burial Grounds",
},
[56767] = {
"Shado-Pan Fire Archer",
"Shado-Pan Monastery",
"enUS",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[377165] = {
"Cushion",
"Brackenhide Hollow",
"enUS",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[42691] = {
"Stonecore Rift Conjurer",
"The Stonecore",
"enUS",
},
[167117] = {
"Spinemaw Larva",
"Mists of Tirna Scithe",
"enUS",
},
[118638] = {
"Shadowy Vestige",
"Dread Scar Rift - Warlock Scenario Platform",
"enUS",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[201413] = {
"Inflammable Wall",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[90997] = {
"Mightstone Breaker",
"Neltharion's Lair",
"enUS",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
"enUS",
},
[64446] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[180427] = {
"Loom Guardian",
"Sanctum of Domination",
"enUS",
},
[52417] = {
"Shredtooth Frenzy",
"Zul'Gurub",
},
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[61247] = {
"Glintrok Greenhorn",
"Mogu'shan Palace",
},
[28836] = {
"Stormforged Runeshaper",
"Halls of Lightning",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
"enUS",
},
[29153] = {
"Animated Bones",
"Azjol-Nerub",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[16807] = {
"Grand Warlock Nethekurse",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[220130] = {
"Speaker Xanventh",
"Skittering Breach",
"enUS",
},
[76154] = {
"Skyreach Raven Whisperer",
"Skyreach",
},
[68220] = {
"Gastropod",
"Throne of Thunder",
"enUS",
},
[68476] = {
"Horridon",
"Throne of Thunder",
"enUS",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[42692] = {
"Stonecore Bruiser",
"The Stonecore",
"enUS",
},
[24084] = {
"Tunneling Ghoul",
"Utgarde Keep",
"enUS",
},
[64902] = {
"Kor'thik Fleshrender",
"Heart of Fear",
"enUS",
},
[69756] = {
"Anima Orb",
"Throne of Thunder",
"enUS",
},
[98677] = {
"Rook Spiderling",
"Black Rook Hold",
"enUS",
},
[23960] = {
"Dragonflayer Runecaster",
"Utgarde Keep",
"enUS",
},
[24082] = {
"Proto-Drake Handler",
"Utgarde Keep",
"enUS",
},
[64063] = {
"Mogu'shan Arcanist",
"Mogu'shan Vaults",
"enUS",
},
[24079] = {
"Dragonflayer Forge Master",
"Utgarde Keep",
"enUS",
},
[24080] = {
"Dragonflayer Weaponsmith",
"Utgarde Keep",
"enUS",
},
[72496] = {
"Overseer Thathung",
"Siege of Orgrimmar",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[52418] = {
"Lost Offspring of Gahz'ranka",
"Zul'Gurub",
"enUS",
},
[68221] = {
"Bore Worm",
"Throne of Thunder",
"enUS",
},
[29216] = {
"Anub'ar Guardian",
"Azjol-Nerub",
"enUS",
},
[72828] = {
"Claw of Burning Anger",
"Siege of Orgrimmar",
"enUS",
},
[11475] = {
"Eldreth Phantasm",
"Dire Maul",
"enUS",
},
[18343] = {
"Tavarok",
"Auchindoun: Mana-Tombs",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[228954] = {
"Nerubian Marauder",
"The Spiral Weave",
"enUS",
},
[74108] = {
"Kor'kron Shredder",
"Siege of Orgrimmar",
"enUS",
},
[15980] = {
"Naxxramas Cultist",
"Naxxramas",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
"enUS",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[133852] = {
"Living Rot",
"The Underrot",
"enUS",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[79739] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[28684] = {
"Krik'thir the Gatewatcher",
"Azjol-Nerub",
"enUS",
},
[67966] = {
"Whirl Turtle",
"Throne of Thunder",
"enUS",
},
[68222] = {
"Bow Fly Swarm",
"Throne of Thunder",
"enUS",
},
[17693] = {
"Shattered Hand Scout",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[36272] = {
"Apothecary Frye",
"Shadowfang Keep",
"enUS",
},
[70235] = {
"Frozen Head",
"Throne of Thunder",
"enUS",
},
[126832] = {
"Skycap'n Kragg",
"Freehold",
"enUS",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[63808] = {
"Faintly Glowing Gem",
"Mogu'shan Palace",
},
[91001] = {
"Tarspitter Lurker",
"Neltharion's Lair",
"enUS",
},
[16020] = {
"Mad Scientist",
"Naxxramas",
"enUS",
},
[23953] = {
"Prince Keleseth",
"Utgarde Keep",
"enUS",
},
[164517] = {
"Tred'ova",
"Mists of Tirna Scithe",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[16148] = {
"Spectral Death Knight",
"Naxxramas",
"enUS",
},
[113012] = {
"Felsworn Chaos-Mage",
"The Nighthold",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[16244] = {
"Infectious Ghoul",
"Naxxramas",
"enUS",
},
[211062] = {
"Bill",
"Fungal Folly",
"enUS",
},
[36551] = {
"Spiteful Apparition",
"The Forge of Souls",
"enUS",
},
[73342] = {
"Fallen Pool Tender",
"Siege of Orgrimmar",
"enUS",
},
[102263] = {
"Skorpyron",
"The Nighthold",
},
[211063] = {
"Fungal Podling",
"Fungal Folly",
"enUS",
},
[211061] = {
"Patreux",
"Fungal Folly",
"enUS",
},
[28837] = {
"Stormforged Sentinel",
"Halls of Lightning",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[28965] = {
"Titanium Thunderer",
"Halls of Lightning",
"enUS",
},
[69131] = {
"Frost King Malakk",
"Throne of Thunder",
"enUS",
},
[16808] = {
"Warchief Kargath Bladefist",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113013] = {
"Felsworn Shadowblade",
"The Nighthold",
},
[121459] = {
"Bile Spitter Egg",
"Artifact - Highmountain - Dual Boss",
"enUS",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[138464] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[168988] = {
"Overgrowth",
"Mists of Tirna Scithe",
"enUS",
},
[59458] = {
"Hopling",
"UNKNOWN",
"enUS",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[218317] = {
"Woven Threadmancer",
"Nerub-ar Palace",
"enUS",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
"enUS",
},
[26716] = {
"Azure Warder",
"The Nexus",
"enUS",
},
[211137] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
"enUS",
},
[221806] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[121460] = {
"Bile Spitter",
"Artifact - Highmountain - Dual Boss",
"enUS",
},
[36296] = {
"Apothecary Hummel",
"Shadowfang Keep",
"enUS",
},
[223372] = {
"Prime Slime",
"Nerub-ar Palace",
"enUS",
},
[73088] = {
"Dragonmaw War Banner",
"Siege of Orgrimmar",
"enUS",
},
[61250] = {
"Sorcerer Mogu",
"Mogu'shan Vaults",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[180426] = {
"Feeding Horror",
"Sanctum of Domination",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[165597] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[91004] = {
"Ularogg Cragshaper",
"Neltharion's Lair",
"enUS",
},
[26918] = {
"Chaotic Rift",
"The Nexus",
"enUS",
},
[76595] = {
"Sargerei Soulpriest",
"Auchindoun",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
"enUS",
},
[62402] = {
"Kor'thik Elite Blademaster",
"Heart of Fear",
"enUS",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
"enUS",
},
[221903] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[218320] = {
"Web Acolyte",
"Nerub-ar Palace",
"enUS",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[42695] = {
"Stonecore Sentry",
"The Stonecore",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[376176] = {
"Meat Storage",
"Brackenhide Hollow",
"enUS",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[221904] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[91005] = {
"Naraxas",
"Neltharion's Lair",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[24656] = {
"Fizzle",
"Magisters' Terrace",
"enUS",
},
[119923] = {
"Helblaze Soulmender",
"Cathedral of Eternal Night",
"enUS",
},
[215657] = {
"Ulgrax the Devourer",
"Nerub-ar Palace",
"enUS",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[221905] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[9554] = {
"Hammered Patron",
"Blackrock Depths",
"enUS",
},
[221669] = {
"Blight Swarmer",
"Nerub-ar Palace",
"enUS",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[14261] = {
"Blue Drakonid",
"Blackwing Lair",
},
[28582] = {
"Stormforged Mender",
"Halls of Lightning",
"enUS",
},
[222214] = {
"Frenzied Leaper",
"Nerub-ar Palace",
"enUS",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[221906] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[111225] = {
"Chaos Mage Beleron",
"The Nighthold",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
"enUS",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[229918] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[16809] = {
"Warbringer O'mrogg",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[229399] = {
"Blood Drainer",
"Nerub-ar Palace",
"enUS",
},
[178732] = {
"Mawsworn Runesmith",
"Sanctum of Domination",
"enUS",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[229995] = {
"Sureki Arbalest",
"Nerub-ar Palace",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[42696] = {
"Stonecore Warbringer",
"The Stonecore",
"enUS",
},
[212616] = {
"Stool",
"Greenstone Village",
"enUS",
},
[223876] = {
"Impaling Spike",
"Nerub-ar Palace",
"enUS",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[221908] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[70276] = {
"No'ku Stormsayer",
"Throne of Thunder",
"enUS",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
"enUS",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[39625] = {
"General Umbriss",
"Grim Batol",
"enUS",
},
[218316] = {
"Kaheti Vanguard",
"Nerub-ar Palace",
"enUS",
},
[218306] = {
"Scarab Captain Vul'akan",
"Nerub-ar Palace",
"enUS",
},
[11030] = {
"Mindless Undead",
"Stratholme",
"enUS",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[224970] = {
"Caustic Bomber",
"Nerub-ar Palace",
"enUS",
},
[76116] = {
"Diving Chakram Spinner",
"Skyreach",
},
[224276] = {
"Twilight Enforcer",
"Grim Batol",
"enUS",
},
[61701] = {
"Sik'thik Warrior",
"Siege of Niuzao Temple",
"enUS",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[413563] = {
"|cff1EFF00Heavy Trunk",
"Nightfall Sanctum",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[111227] = {
"Felweaver Pharamere",
"The Nighthold",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216634] = {
"Swooping Spreader",
"Earthcrawl Mines",
"enUS",
},
[112251] = {
"Putrid Sludge",
"The Nighthold",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
"enUS",
},
[376191] = {
"Vault Door",
"Uldaman: Legacy of Tyr",
"enUS",
},
[226304] = {
"Lord Incendius",
"Blackrock Depths",
"enUS",
},
[24200] = {
"Skarvald the Constructor",
"Utgarde Keep",
"enUS",
},
[73349] = {
"Tormented Initiate",
"Siege of Orgrimmar",
"enUS",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[28231] = {
"Crystalline Tender",
"The Nexus",
"enUS",
},
[376196] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[15989] = {
"Sapphiron",
"Naxxramas",
"enUS",
},
[64068] = {
"Mogu'shan Engine Keeper",
"Mogu'shan Vaults",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
"enUS",
},
[146667] = {
"Deranged Plaguefiend",
"8.1 Darkshore Scenario",
},
[52413] = {
"Zulian Gnasher",
"Zul'Gurub",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[96640] = {
"Valarjar Marksman",
"Halls of Valor",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[376195] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[129640] = {
"Snarling Dockhound",
"Siege of Boralus",
"enUS",
},
[16037] = {
"Plagued Bat",
"Naxxramas",
"enUS",
},
[28583] = {
"Blistering Steamrager",
"Halls of Lightning",
"enUS",
},
[24552] = {
"Sliver",
"Magisters' Terrace",
"enUS",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[24744] = {
"Vexallus",
"Magisters' Terrace",
"enUS",
},
[194273] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[179894] = {
"Deathseeker Eye",
"Sanctum of Domination",
"enUS",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
"enUS",
},
[62405] = {
"Sra'thik Amber-Trapper",
"Heart of Fear",
"enUS",
},
[80005] = {
"Skylord Tovra",
"Grimrail Depot",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[58822] = {
"Risen Guard",
"Stormstout Brewery",
"enUS",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
"enUS",
},
[73095] = {
"Blackfuse Engineer",
"Siege of Orgrimmar",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
"enUS",
},
[179942] = {
"Deathseeker Eye",
"Sanctum of Domination",
"enUS",
},
[29735] = {
"Savage Worg",
"Utgarde Keep",
"enUS",
},
[226310] = {
"Doom'rel",
"Blackrock Depths",
"enUS",
},
[226315] = {
"Lord Roccor",
"Blackrock Depths",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[230079] = {
"Flame Geyser",
"Blackrock Depths",
"enUS",
},
[17770] = {
"Hungarfen",
"Coilfang: The Underbog",
"enUS",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[64453] = {
"Set'thik Windblade",
"Heart of Fear",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[67977] = {
"Tortos",
"Throne of Thunder",
"enUS",
},
[189669] = {
"Binding Spear",
"Neltharus",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[137458] = {
"Rotting Spore",
"The Underrot",
"enUS",
},
[219739] = {
"Infested Spawn",
"Nerub-ar Palace",
"enUS",
},
[168932] = {
"Doomguard",
"Grimrail Depot",
},
[179944] = {
"Meeting Stone Summoning Portal",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[26728] = {
"Mage Hunter Initiate",
"The Nexus",
"enUS",
},
[61766] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[214551] = {
"Wandering Gutter",
"Tak-Rethan Abyss",
"enUS",
},
[231555] = {
"Anvilrage Officer",
"Blackrock Depths",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[112255] = {
"Sludgerax",
"The Nighthold",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[231561] = {
"Anvilrage Medic",
"Blackrock Depths",
"enUS",
},
[220119] = {
"Speaker Xanventh",
"Skittering Breach",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[112665] = {
"Nighthold Protector",
"The Nighthold",
},
[19306] = {
"Mana Leech",
"Auchindoun: Mana-Tombs",
"enUS",
},
[205799] = {
"Cinderstep Melter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[18315] = {
"Ethereal Theurgist",
"Auchindoun: Mana-Tombs",
"enUS",
},
[131318] = {
"Elder Leaxa",
"The Underrot",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[78728] = {
"Shaadum",
"Auchindoun",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[645] = {
"Cookie",
"Deadmines",
"enUS",
},
[222273] = {
"Sureki Silkbow",
"Nerub-ar Palace",
"enUS",
},
[64454] = {
"Zar'thik Augurer",
"Heart of Fear",
"enUS",
},
[213219] = {
"Congealed Ooze",
"Throne of the Tides",
"enUS",
},
[216658] = {
"Izo, the Grand Splicer",
"City of Threads",
"enUS",
},
[66181] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[113536] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[60999] = {
"Sha of Fear",
"Terrace of Endless Spring",
"enUS",
},
[73098] = {
"Kor'kron Overseer",
"Siege of Orgrimmar",
"enUS",
},
[28584] = {
"Unbound Firestorm",
"Halls of Lightning",
"enUS",
},
[24553] = {
"Apoko",
"Magisters' Terrace",
"enUS",
},
[16427] = {
"Soldier of the Frozen Wastes",
"Naxxramas",
"enUS",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[24745] = {
"Pure Energy",
"Magisters' Terrace",
"enUS",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[10391] = {
"Skeletal Berserker",
"Stratholme",
"enUS",
},
[216619] = {
"Orator Krix'vizk",
"City of Threads",
"enUS",
},
[29096] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[232464] = {
"Shadowforge Senator",
"Blackrock Depths",
"enUS",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[42188] = {
"Ozruk",
"The Stonecore",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[16243] = {
"Plague Slime",
"Naxxramas",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[163058] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[56717] = {
"Hoptallus",
"UNKNOWN",
"enUS",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[232463] = {
"Twilight's Hammer Ambassador",
"Blackrock Depths",
"enUS",
},
[231556] = {
"Anvilrage Soldier",
"Blackrock Depths",
"enUS",
},
[191212] = {
"Earthquake Totem",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[1763] = {
"Gilnid",
"Deadmines",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176880] = {
"Soulscream Tormentor",
"Sanctum of Domination",
"enUS",
},
[138219] = {
"Blighted Haunter",
"Thros, The Blighted Lands",
},
[18155] = {
"Bloodfalcon",
"Tempest Keep: The Botanica",
"enUS",
},
[442763] = {
"Soggy Chest",
"Nightfall Sanctum",
"enUS",
},
[232163] = {
"Vault of Forbidden Treasures",
"Siege of Orgrimmar",
"enUS",
},
[29830] = {
"Living Mojo",
"Gundrak",
"enUS",
},
[102277] = {
"Deadeye Decoy",
"Darkheart Thicket",
"enUS",
},
[401814] = {
"Void-Touched Chest",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[26729] = {
"Steward",
"The Nexus",
"enUS",
},
[26793] = {
"Crystalline Frayer",
"The Nexus",
"enUS",
},
[232436] = {
"Shadowforge Citizen",
"Blackrock Depths",
"enUS",
},
[1731] = {
"Goblin Craftsman",
"Deadmines",
"enUS",
},
[180392] = {
"Gorgoan Souldrinker",
"Sanctum of Domination",
"enUS",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[62408] = {
"Zar'thik Battle-Mender",
"Heart of Fear",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[58569] = {
"Scarlet Purifier",
"Scarlet Monastery",
"enUS",
},
[214506] = {
"Broodtwister Ovi'nax",
"Nerub-ar Palace",
"enUS",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[63048] = {
"Kor'thik Slicer",
"Heart of Fear",
"enUS",
},
[19307] = {
"Nexus Terror",
"Auchindoun: Mana-Tombs",
"enUS",
},
[224240] = {
"Twilight Flamerender",
"Grim Batol",
"enUS",
},
[126848] = {
"Captain Eudora",
"Freehold",
"enUS",
},
[180865] = {
"Twisted Warden",
"Sanctum of Domination",
"enUS",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[226316] = {
"General Angerforge",
"Blackrock Depths",
"enUS",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[16022] = {
"Surgical Assistant",
"Naxxramas",
"enUS",
},
[226312] = {
"Seeth'rel",
"Blackrock Depths",
"enUS",
},
[14350] = {
"Hydroling",
"Dire Maul",
"enUS",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"Nightfall Sanctum",
"enUS",
},
[16150] = {
"Spectral Rider",
"Naxxramas",
"enUS",
},
[29062] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[165111] = {
"Drust Spiteclaw",
"Mists of Tirna Scithe",
"enUS",
},
[17370] = {
"Laughing Skull Enforcer",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[56906] = {
"Saboteur Kip'tilak",
"Gate of the Setting Sun",
"enUS",
},
[190496] = {
"Terros",
"Vault of the Incarnates",
"enUS",
},
[28585] = {
"Slag",
"Halls of Lightning",
"enUS",
},
[24554] = {
"Eramas Brightblaze",
"Magisters' Terrace",
"enUS",
},
[16428] = {
"Unstoppable Abomination",
"Naxxramas",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[10697] = {
"Bile Slime",
"Stratholme",
"enUS",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[29097] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[218103] = {
"Nerubian Lord",
"Earthcrawl Mines",
"enUS",
},
[389539] = {
"Challenger's Cache",
"The Vortex Pinnacle",
"enUS",
},
[14349] = {
"Pimgib",
"Dire Maul",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[63049] = {
"Set'thik Swiftblade",
"Heart of Fear",
"enUS",
},
[6329] = {
"Irradiated Pillager",
"Gnomeregan",
"enUS",
},
[146686] = {
"Cowled Plaguebringer",
"8.1 Darkshore Scenario",
},
[164427] = {
"Reanimated Warrior",
"The Necrotic Wake",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
"enUS",
},
[43214] = {
"Slabhide",
"The Stonecore",
"enUS",
},
[59722] = {
"Pile of Corpses",
"Scarlet Halls",
"enUS",
},
[78734] = {
"Zipteq",
"Auchindoun",
},
[33985] = {
"Corruptor Tentacle",
"Ulduar",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
"enUS",
},
[226306] = {
"Golem Lord Argelmach",
"Blackrock Depths",
"enUS",
},
[73091] = {
"Blackfuse Sellsword",
"Siege of Orgrimmar",
"enUS",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
"enUS",
},
[16149] = {
"Spectral Horse",
"Naxxramas",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[68497] = {
"Vampiric Cave Bat",
"Throne of Thunder",
"enUS",
},
[71825] = {
"Foul Slime",
"Siege of Orgrimmar",
"enUS",
},
[232440] = {
"Twilight Emissary",
"Blackrock Depths",
"enUS",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
"enUS",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
"enUS",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[26730] = {
"Mage Slayer",
"The Nexus",
"enUS",
},
[26794] = {
"Ormorok the Tree-Shaper",
"The Nexus",
"enUS",
},
[202483] = {
"Obsidian Tyrant",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[883] = {
"Deer",
"Dire Maul",
"enUS",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"Earthcrawl Mines",
"enUS",
},
[216649] = {
"Vx",
"City of Threads",
"enUS",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
"enUS",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[598] = {
"Defias Miner",
"Deadmines",
"enUS",
},
[125828] = {
"Ohyeabud",
"Atal'Dazar",
"enUS",
},
[179963] = {
"Terror Orb",
"Sanctum of Domination",
"enUS",
},
[634] = {
"Defias Overseer",
"Deadmines",
"enUS",
},
[24683] = {
"Sunblade Mage Guard",
"Magisters' Terrace",
"enUS",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
"enUS",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[455515] = {
"|cff1EFF00Sturdy Chest",
"Nightfall Sanctum",
"enUS",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[70688] = {
"Direhorn Spirit",
"Throne of Thunder",
"enUS",
},
[622] = {
"Goblin Engineer",
"Deadmines",
"enUS",
},
[64458] = {
"Kor'thik Warsinger",
"Heart of Fear",
"enUS",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
"enUS",
},
[76177] = {
"Soulbinder Nyami",
"Auchindoun",
},
[118044] = {
"Nether Horror",
"Artifact - Acquisition - Tank",
},
[141061] = {
"Servant of Thros",
"Thros, The Blighted Lands",
},
[61003] = {
"Dread Spawn",
"Terrace of Endless Spring",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[28586] = {
"General Bjarngrim",
"Halls of Lightning",
"enUS",
},
[61387] = {
"Quilen Guardian",
"Mogu'shan Palace",
},
[16429] = {
"Soul Weaver",
"Naxxramas",
"enUS",
},
[644] = {
"Rhahk'Zor",
"Deadmines",
"enUS",
},
[646] = {
"Mr. Smite",
"Deadmines",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[79505] = {
"Solar Flare",
"Skyreach",
},
[25756] = {
"Ahunite Coldwave",
"Coilfang: The Slave Pens",
"enUS",
},
[29098] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[26822] = {
"Ursula Direbrew",
"Blackrock Depths",
"enUS",
},
[59705] = {
"Scarlet Flamethrower",
"Scarlet Halls",
"enUS",
},
[201464] = {
"Cinderstep Weaver",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[72981] = {
"Aggron",
"Siege of Orgrimmar",
"enUS",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[379299] = {
"Anvil",
"Ruby Life Pools",
"enUS",
},
[69012] = {
"Lesser Diffused Lightning",
"Throne of Thunder",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[204536] = {
"Blight Chunk",
"Dawn of the Infinite",
"enUS",
},
[16021] = {
"Living Monstrosity",
"Naxxramas",
"enUS",
},
[201465] = {
"Cinderstep Melter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[18405] = {
"Tempest-Forge Peacekeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[228361] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[11480] = {
"Arcane Aberration",
"Dire Maul",
"enUS",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
"enUS",
},
[201466] = {
"Cinderstep Igniter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[214263] = {
"Waxface",
"The Waterworks",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[10390] = {
"Skeletal Guardian",
"Stratholme",
"enUS",
},
[69013] = {
"Diffused Lightning",
"Throne of Thunder",
"enUS",
},
[222459] = {
"Congealing Mass",
"Nerub-ar Palace",
"enUS",
},
[233203] = {
"Flamewalker",
"Blackrock Depths",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
"enUS",
},
[26731] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[6219] = {
"Corrosive Lurker",
"Gnomeregan",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[79507] = {
"Felguard",
"Auchindoun",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[13197] = {
"Fel Lash",
"Dire Maul",
"enUS",
},
[201468] = {
"Stonebreath Landslider",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[222455] = {
"Black Blood Harvester",
"Nerub-ar Palace",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
"enUS",
},
[29829] = {
"Drakkari Earthshaker",
"Gundrak",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[233205] = {
"Anvilrage Dragoon",
"Blackrock Depths",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[201469] = {
"Restless Pebble",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[201470] = {
"Flickering Flame",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[79508] = {
"Felborne Abyssal",
"Auchindoun",
},
[449688] = {
"Molten Engine",
"Nightfall Sanctum",
"enUS",
},
[487847] = {
"DELVER'S CALL: Nightfall Sanctum",
"Nightfall Sanctum",
"enUS",
},
[221945] = {
"Forgotten Harbinger",
"Nerub-ar Palace",
"enUS",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[129928] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[28587] = {
"Volkhan",
"Halls of Lightning",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
"enUS",
},
[201471] = {
"Earthborne Charger",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[216320] = {
"The Coaglamation",
"City of Threads",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
},
[36564] = {
"Soulguard Bonecaster",
"The Forge of Souls",
"enUS",
},
[233208] = {
"Anvilrage Artillerist",
"Blackrock Depths",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201472] = {
"Torch Revenant",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[68248] = {
"Corpse Spider",
"Throne of Thunder",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[63053] = {
"Garalon's Leg",
"Heart of Fear",
"enUS",
},
[223995] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[79510] = {
"Cackling Pyromaniac",
"Auchindoun",
},
[376264] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
"enUS",
},
[29931] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[24684] = {
"Sunblade Blood Knight",
"Magisters' Terrace",
"enUS",
},
[128650] = {
"Chopper Redhook",
"Siege of Boralus",
"enUS",
},
[221815] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[75927] = {
"Azzakel",
"Auchindoun",
},
[29713] = {
"Slad'ran Constrictor",
"Gundrak",
"enUS",
},
[222461] = {
"Congealed Mass",
"Nerub-ar Palace",
"enUS",
},
[79511] = {
"Blazing Trickster",
"Auchindoun",
},
[230991] = {
"Fireguard Destroyer",
"Blackrock Depths",
"enUS",
},
[138002] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[3319] = {
"Sana",
"Siege of Orgrimmar",
"enUS",
},
[221910] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[29838] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[26796] = {
"Commander Stoutbeard",
"The Nexus",
"enUS",
},
[222974] = {
"Hungry Scarab",
"City of Threads",
"enUS",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
"enUS",
},
[215697] = {
"Challenge Gong",
"Siege of Niuzao Temple",
"enUS",
},
[128651] = {
"Hadal Darkfathom",
"Siege of Boralus",
"enUS",
},
[58319] = {
"Lesser Sha",
"Pandaria",
"enUS",
},
[19865] = {
"Mutate Horror",
"Tempest Keep: The Botanica",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[376684] = {
"Potion Cauldron of Power |A:Professions-Icon-Quality-Tier3-Small:20:20|a",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[63508] = {
"Xuen",
"Heart of Fear",
"enUS",
},
[56706] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
"enUS",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[14264] = {
"Red Drakonid",
"Blackwing Lair",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[146907] = {
"Risen Marksman",
"8.1 Darkshore Scenario",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[128652] = {
"Viq'Goth",
"Siege of Boralus",
"enUS",
},
[71578] = {
"Amber Parasite",
"Siege of Orgrimmar",
"enUS",
},
[3527] = {
"Healing Stream Totem",
"Mogu'shan Vaults",
"enUS",
},
[20078] = {
"Bloodwarder Reservist",
"Tempest Keep: The Botanica",
"enUS",
},
[218370] = {
"Queen Ansurek",
"Nerub-ar Palace",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[60033] = {
"Frenzied Spirit",
"Scarlet Monastery",
"enUS",
},
[36565] = {
"Apothecary Baxter",
"Shadowfang Keep",
"enUS",
},
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[24557] = {
"Kagani Nightstrike",
"Magisters' Terrace",
"enUS",
},
[70240] = {
"Shan'ze Celestial Shaper",
"Throne of Thunder",
"enUS",
},
[24685] = {
"Sunblade Magister",
"Magisters' Terrace",
"enUS",
},
[181278] = {
"Ancient Lichen",
"Auchindoun: Mana-Tombs",
"enUS",
},
[14456] = {
"Blackwing Guardsman",
"Blackwing Lair",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
"enUS",
},
[19919] = {
"Thorn Lasher",
"Tempest Keep: The Botanica",
"enUS",
},
[106643] = {
"Elisande",
"The Nighthold",
},
[62543] = {
"Blade Lord Ta'yak",
"Heart of Fear",
"enUS",
},
[69374] = {
"War-God Jalak",
"Throne of Thunder",
"enUS",
},
[214277] = {
"The Dark Grimoire",
"Scholomance",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[216325] = {
"Crazed Predator",
"Tak-Rethan Abyss",
"enUS",
},
[220362] = {
"Pirate Hat",
"Naval Battle Scenario",
"enUS",
},
[225539] = {
"Kobold Ambusher",
"Kriegval's Rest",
"enUS",
},
[10809] = {
"Stonespine",
"Stratholme",
"enUS",
},
[165138] = {
"Blight Bag",
"The Necrotic Wake",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[210487] = {
"Fellari Swiftarrow",
"Scarlet Halls",
"enUS",
},
[69492] = {
"Blessed Loa Spirit",
"Throne of Thunder",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[220401] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[52306] = {
"Tangled Vine",
"Zul'Gurub",
},
[52434] = {
"Gurubashi Villager",
"Zul'Gurub",
"enUS",
},
[187892] = {
"Ice Chest",
"Coilfang: The Slave Pens",
"enUS",
},
[78735] = {
"Zar'shuul",
"Auchindoun",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[177193] = {
"Doom Portal",
"Heart of Fear",
"enUS",
},
[61485] = {
"General Pa'valak",
"Siege of Niuzao Temple",
"enUS",
},
[61392] = {
"Harthak Flameseeker",
"Mogu'shan Palace",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[220423] = {
"Retired Lord Vul'azak",
"City of Threads",
"enUS",
},
[70557] = {
"Zandalari Prophet",
"Throne of Thunder",
"enUS",
},
[76132] = {
"Soaring Chakram Master",
"Skyreach",
},
[73539] = {
"Kor'kron Den Mother",
"Siege of Orgrimmar",
"enUS",
},
[216328] = {
"Unstable Test Subject",
"City of Threads",
"enUS",
},
[423912] = {
"Bloodied Chest",
"Nightfall Sanctum",
"enUS",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[113043] = {
"Abyss Watcher",
"The Nighthold",
},
[76444] = {
"Subjugated Soul",
"Shadowmoon Burial Grounds",
},
[206603] = {
"Guild Chest",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[211135] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[61634] = {
"Commander Vo'jak",
"Siege of Niuzao Temple",
"enUS",
},
[216329] = {
"Congealed Droplet",
"City of Threads",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[63568] = {
"Amber-Ridden Mushan",
"Heart of Fear",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[15975] = {
"Carrion Spinner",
"Naxxramas",
"enUS",
},
[16024] = {
"Embalming Slime",
"Naxxramas",
"enUS",
},
[16056] = {
"Diseased Maggot",
"Naxxramas",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[72350] = {
"Dragonmaw Elite Grunt",
"Siege of Orgrimmar",
"enUS",
},
[221909] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[214795] = {
"Ancient Mogu Treasure",
"Mogu'shan Palace",
"enUS",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[24558] = {
"Ellrys Duskhallow",
"Magisters' Terrace",
"enUS",
},
[69791] = {
"Pheaorrix",
"Mogu'shan Vaults",
"enUS",
},
[24686] = {
"Sunblade Warlock",
"Magisters' Terrace",
"enUS",
},
[26798] = {
"Commander Kolurg",
"The Nexus",
"enUS",
},
[455494] = {
"|cff1EFF00Sturdy Chest",
"Nightfall Sanctum",
"enUS",
},
[61339] = {
"Glintrok Oracle",
"Mogu'shan Palace",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[71477] = {
"Embodied Gloom",
"Siege of Orgrimmar",
"enUS",
},
[217870] = {
"Devouring Shade",
"Nightfall Sanctum",
"enUS",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[217541] = {
"Nightfall Initiate",
"Nightfall Sanctum",
"enUS",
},
[76446] = {
"Shadowmoon Dominator",
"Shadowmoon Burial Grounds",
},
[6220] = {
"Irradiated Horror",
"Gnomeregan",
"enUS",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[398818] = {
"Challenger's Cache",
"Neltharion's Lair",
"enUS",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Brackenhide Hollow",
"enUS",
},
[63569] = {
"Amber Searsting",
"Heart of Fear",
"enUS",
},
[398819] = {
"Challenger's Cache",
"The Underrot",
"enUS",
},
[71984] = {
"Siege Engineer",
"Siege of Orgrimmar",
"enUS",
},
[6218] = {
"Irradiated Slime",
"Gnomeregan",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
"enUS",
},
[398820] = {
"Challenger's Cache",
"Freehold",
"enUS",
},
[217268] = {
"Weeping Shade",
"Nightfall Sanctum",
"enUS",
},
[176920] = {
"Domination Arrow",
"Sanctum of Domination",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[52436] = {
"Gurubashi Refugee",
"Zul'Gurub",
"enUS",
},
[72352] = {
"Dragonmaw Ebon Stalker",
"Siege of Orgrimmar",
"enUS",
},
[15979] = {
"Tomb Horror",
"Naxxramas",
"enUS",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[99922] = {
"Ebonclaw Packmate",
"Halls of Valor",
},
[218796] = {
"Lever",
"Mogu Island Loot Room",
"enUS",
},
[248764] = {
"Mystic Barrier",
"Neltharion's Lair",
"enUS",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[26734] = {
"Azure Enforcer",
"The Nexus",
"enUS",
},
[136483] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[63570] = {
"Sra'thik Pool-Tender",
"Heart of Fear",
"enUS",
},
[14262] = {
"Green Drakonid",
"Blackwing Lair",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[212617] = {
"Stool",
"Greenstone Village",
"enUS",
},
[72353] = {
"Dragonmaw Flameslinger",
"Siege of Orgrimmar",
"enUS",
},
[28826] = {
"Stormfury Revenant",
"Halls of Lightning",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[214801] = {
"Skipper",
"Nerub-ar Palace",
"enUS",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[64338] = {
"Instructor Kli'thak",
"Heart of Fear",
"enUS",
},
[127124] = {
"Freehold Barhand",
"Freehold",
"enUS",
},
[402922] = {
"Suspicious Lever",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[19632] = {
"Lykul Stinger",
"Coilfang: The Underbog",
"enUS",
},
[72564] = {
"Doomlord",
"Siege of Orgrimmar",
"enUS",
},
[222794] = {
"Soulwell",
"Proving Grounds",
"enUS",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[71062] = {
"Large Illusionary Slayer",
"Proving Grounds",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[52437] = {
"Gurubashi Refugee",
"Zul'Gurub",
"enUS",
},
[72354] = {
"Dragonmaw Bonecrusher",
"Siege of Orgrimmar",
"enUS",
},
[109041] = {
"Naturalist Tel'arn",
"The Nighthold",
},
[10394] = {
"Black Guard Sentry",
"Stratholme",
"enUS",
},
[61139] = {
"Shan-xi Watershaper",
"Mogu'shan Vaults",
"enUS",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
"enUS",
},
[24559] = {
"Warlord Salaris",
"Magisters' Terrace",
"enUS",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
"enUS",
},
[24687] = {
"Sunblade Physician",
"Magisters' Terrace",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
"enUS",
},
[207638] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[232894] = {
"Manifested Dread",
"Blackrock Depths",
"enUS",
},
[6233] = {
"Mechanized Sentry",
"Gnomeregan",
"enUS",
},
[72483] = {
"Sarok",
"Siege of Orgrimmar",
"enUS",
},
[218388] = {
"Sewer Grate",
"Throne of Thunder",
"enUS",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[24555] = {
"Garaxxas",
"Magisters' Terrace",
"enUS",
},
[207639] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[79462] = {
"Blinding Solar Flare",
"Skyreach",
},
[111226] = {
"Summoner Xiv",
"The Nighthold",
},
[70308] = {
"Soul-Fed Construct",
"Throne of Thunder",
"enUS",
},
[64339] = {
"Instructor Tak'thok",
"Heart of Fear",
"enUS",
},
[385527] = {
"Altar of Decay",
"Brackenhide Hollow",
"enUS",
},
[221829] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[220437] = {
"Overseer Kaskel",
"The Spiral Weave",
"enUS",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
"enUS",
},
[3450] = {
"Defias Companion",
"Deadmines",
"enUS",
},
[52438] = {
"Mortaxx",
"Zul'Gurub",
"enUS",
},
[72356] = {
"Master Cannoneer Dagryn",
"Siege of Orgrimmar",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[221822] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[82594] = {
"Grimrail Loader",
"Grimrail Depot",
},
[72357] = {
"Lieutenant Krugruk",
"Siege of Orgrimmar",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
"enUS",
},
[117230] = {
"Tugar Bloodtotem",
"Artifact - Highmountain - Dual Boss",
"enUS",
},
[26735] = {
"Azure Scale-Binder",
"The Nexus",
"enUS",
},
[26799] = {
"Horde Berserker",
"The Nexus",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[15976] = {
"Venom Stalker",
"Naxxramas",
"enUS",
},
[111004] = {
"Gelatinized Decay",
"The Emerald Nightmare",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
"enUS",
},
[71161] = {
"Kil'ruk the Wind-Reaver",
"Siege of Orgrimmar",
"enUS",
},
[181982] = {
"Cell Door Lever",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
"enUS",
},
[208461] = {
"Scorching Brambles",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
"enUS",
},
[15953] = {
"Grand Widow Faerlina",
"Naxxramas",
"enUS",
},
[24560] = {
"Priestess Delrissa",
"Magisters' Terrace",
"enUS",
},
[163622] = {
"Goregrind Bits",
"The Necrotic Wake",
"enUS",
},
[19505] = {
"Sunseeker Channeler",
"Tempest Keep: The Botanica",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[19633] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
"enUS",
},
[70202] = {
"Manchu",
"Throne of Thunder",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
"enUS",
},
[16057] = {
"Rotting Maggot",
"Naxxramas",
"enUS",
},
[64340] = {
"Instructor Maltik",
"Heart of Fear",
"enUS",
},
[163623] = {
"Rotspew Leftovers",
"The Necrotic Wake",
"enUS",
},
[52311] = {
"Venomguard Destroyer",
"Zul'Gurub",
"enUS",
},
[113052] = {
"Dreadguard",
"The Nighthold",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
"enUS",
},
[60885] = {
"Minion of Fear",
"Terrace of Endless Spring",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[20465] = {
"Underbog Frenzy",
"Coilfang: The Underbog",
"enUS",
},
[59605] = {
"Sodden Hozen Brawler",
"Dragon Isles",
"enUS",
},
[24688] = {
"Wretched Skulker",
"Magisters' Terrace",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[6206] = {
"Caverndeep Burrower",
"Gnomeregan",
"enUS",
},
[6222] = {
"Leprous Technician",
"Gnomeregan",
"enUS",
},
[72847] = {
"Hellscream Annihilator",
"Siege of Orgrimmar",
"enUS",
},
[58198] = {
"Shado-Pan Disciple",
"Shado-Pan Monastery",
"enUS",
},
[212765] = {
"Void-Bound Despoiler",
"The Stonevault",
"enUS",
},
[221858] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[121499] = {
"Fel Surge Totem",
"Artifact - Highmountain - Dual Boss",
"enUS",
},
[16215] = {
"Unholy Staff",
"Naxxramas",
"enUS",
},
[232093] = {
"Tears of the Vale",
"Siege of Orgrimmar",
"enUS",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
"enUS",
},
[71993] = {
"Desperation Spawn",
"Siege of Orgrimmar",
"enUS",
},
[77734] = {
"Teron'gor",
"Auchindoun",
},
[71160] = {
"Iyyokuk the Lucid",
"Siege of Orgrimmar",
"enUS",
},
[181030] = {
"Immolation Trap VI",
"The Nexus",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[178631] = {
"Mawsworn Commander",
"Sanctum of Domination",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[204030] = {
"Goblin Sapper",
"Dawn of the Infinite",
"enUS",
},
[64341] = {
"Instructor Zarik",
"Heart of Fear",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
"enUS",
},
[71771] = {
"Kor'kron Arcweaver",
"Siege of Orgrimmar",
"enUS",
},
[72050] = {
"Crawler Mine",
"Siege of Orgrimmar",
"enUS",
},
[52435] = {
"Gurubashi Villager",
"Zul'Gurub",
"enUS",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[56589] = {
"Striker Ga'dok",
"Gate of the Setting Sun",
"enUS",
},
[72492] = {
"Shimra",
"Siege of Orgrimmar",
"enUS",
},
[26800] = {
"Alliance Berserker",
"The Nexus",
"enUS",
},
[61910] = {
"Resin Flake",
"Siege of Niuzao Temple",
"enUS",
},
[26928] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[177094] = {
"Signe",
"Sanctum of Domination",
"enUS",
},
[131383] = {
"Sporecaller Zancha",
"The Underrot",
"enUS",
},
[213795] = {
"Stormstout Secrets",
"Stormstout Brewery",
"enUS",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[1732] = {
"Defias Squallshaper",
"Deadmines",
"enUS",
},
[223007] = {
"Doodad_Lightray_Dusty_01_toggleable015",
"Siege of Orgrimmar",
"enUS",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[79093] = {
"Skyreach Sun Talon",
"Skyreach",
},
[59223] = {
"Brother Korloff",
"Scarlet Monastery",
"enUS",
},
[12420] = {
"Blackwing Mage",
"Blackwing Lair",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
"enUS",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[24689] = {
"Wretched Bruiser",
"Magisters' Terrace",
"enUS",
},
[39388] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[176581] = {
"Spiked Ball",
"Sanctum of Domination",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
"enUS",
},
[60375] = {
"Zandalari Skullcharger",
"Mogu'shan Vaults",
"enUS",
},
[225568] = {
"Kobold Guardian",
"Kriegval's Rest",
"enUS",
},
[52441] = {
"Curious Jungle Monkey",
"Zul'Gurub",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[61399] = {
"Glintrok Scout",
"Mogu'shan Palace",
},
[28419] = {
"Frenzied Geist",
"Utgarde Keep",
"enUS",
},
[221986] = {
"Blood Horror",
"Nerub-ar Palace",
"enUS",
},
[61783] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[147588] = {
"Treasury Defender",
"Zandalari Treasury",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[17395] = {
"Shadowmoon Summoner",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[272219] = {
"Purple Rune",
"Endless Halls",
"enUS",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[63191] = {
"Garalon",
"Heart of Fear",
"enUS",
},
[163122] = {
"Brittlebone Warrior",
"The Necrotic Wake",
"enUS",
},
[29680] = {
"Slad'ran Viper",
"Gundrak",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[70060] = {
"Shadowed Voodoo Spirit",
"Throne of Thunder",
"enUS",
},
[118690] = {
"Wrathguard Invader",
"Cathedral of Eternal Night",
"enUS",
},
[146744] = {
"Ashen Enforcer",
"8.1 Darkshore Scenario",
},
[18419] = {
"Bloodwarder Greenkeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[212922] = {
"Cache of Tsulong",
"Terrace of Endless Spring",
"enUS",
},
[42333] = {
"High Priestess Azil",
"The Stonecore",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
"enUS",
},
[52442] = {
"Florawing Hive Queen",
"Zul'Gurub",
},
[96934] = {
"Valarjar Trapper",
"Halls of Valor",
},
[146746] = {
"Honorbound Conqueror",
"8.1 Darkshore Scenario",
},
[105636] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[223008] = {
"Doodad_Lightray_Dusty_01_toggleable014",
"Siege of Orgrimmar",
"enUS",
},
[77483] = {
"Grom'kar Gunner",
"Grimrail Depot",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[15930] = {
"Feugen",
"Naxxramas",
"enUS",
},
[26737] = {
"Crazed Mana-Surge",
"The Nexus",
"enUS",
},
[26801] = {
"Horde Ranger",
"The Nexus",
"enUS",
},
[223014] = {
"Doodad_Lightray_Dusty_01_toggleable008",
"Siege of Orgrimmar",
"enUS",
},
[26929] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[11451] = {
"Wildspawn Satyr",
"Dire Maul",
"enUS",
},
[11483] = {
"Mana Remnant",
"Dire Maul",
"enUS",
},
[223016] = {
"Doodad_Lightray_Dusty_01_toggleable006",
"Siege of Orgrimmar",
"enUS",
},
[112803] = {
"Astrologer Jarin",
"The Nighthold",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72365] = {
"Dragonmaw Cannoneer",
"Siege of Orgrimmar",
"enUS",
},
[223015] = {
"Doodad_Lightray_Dusty_01_toggleable007",
"Siege of Orgrimmar",
"enUS",
},
[18344] = {
"Nexus-Prince Shaffar",
"Auchindoun: Mana-Tombs",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[19507] = {
"Sunseeker Gene-Splicer",
"Tempest Keep: The Botanica",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[208314] = {
"Zanzil's Cauldron of Frostburn Formula",
"Zul'Gurub",
"enUS",
},
[39390] = {
"Twilight Drake",
"Grim Batol",
"enUS",
},
[272215] = {
"Blue Rune",
"Endless Halls",
"enUS",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
"enUS",
},
[52059] = {
"High Priestess Kilnara",
"Zul'Gurub",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[112804] = {
"Trained Shadescale",
"The Nighthold",
},
[76205] = {
"Blooded Bladefeather",
"Skyreach",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[223017] = {
"Doodad_Lightray_Dusty_01_toggleable005",
"Siege of Orgrimmar",
"enUS",
},
[149000] = {
"Baleful Guardian Spirit",
"Zandalari Treasury",
},
[272214] = {
"Green Orb",
"Endless Halls",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[74158] = {
"Kor'kron Gunner",
"Siege of Orgrimmar",
"enUS",
},
[20083] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
"enUS",
},
[176949] = {
"Mawsworn Embermage",
"Sanctum of Domination",
"enUS",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
"enUS",
},
[223018] = {
"Doodad_Lightray_Dusty_01_toggleable004",
"Siege of Orgrimmar",
"enUS",
},
[272213] = {
"Yellow Orb",
"Endless Halls",
"enUS",
},
[178624] = {
"Mawsworn Sentry",
"Sanctum of Domination",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[104822] = {
"Flame of Woe",
"Halls of Valor",
},
[336432] = {
"Lavish Refreshment Table",
"Brackenhide Hollow",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[72367] = {
"Dragonmaw Tidal Shaman",
"Siege of Orgrimmar",
"enUS",
},
[223019] = {
"Doodad_Lightray_Dusty_01_toggleable003",
"Siege of Orgrimmar",
"enUS",
},
[68341] = {
"Eye Sentry",
"Throne of Thunder",
"enUS",
},
[12435] = {
"Razorgore the Untamed",
"Blackwing Lair",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[24690] = {
"Wretched Husk",
"Magisters' Terrace",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[72498] = {
"Theramore Citizen",
"Siege of Orgrimmar",
"enUS",
},
[223020] = {
"Doodad_Lightray_Dusty_01_toggleable002",
"Siege of Orgrimmar",
"enUS",
},
[272211] = {
"Blue Orb",
"Endless Halls",
"enUS",
},
[67177] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[376683] = {
"Potion Cauldron of Power |A:Professions-Icon-Quality-Tier2-Small:20:20|a",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[272210] = {
"Red Orb",
"Endless Halls",
"enUS",
},
[201522] = {
"Summitshaper Lorac",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[232165] = {
"Unlocked Stockpile of Pandaren Spoils",
"Siege of Orgrimmar",
"enUS",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
"enUS",
},
[52956] = {
"Zandalari Juggernaut",
"Zul'Gurub",
"enUS",
},
[109038] = {
"Solarist Tel'arn",
"The Nighthold",
},
[18420] = {
"Sunseeker Geomancer",
"Tempest Keep: The Botanica",
"enUS",
},
[73904] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[26802] = {
"Alliance Ranger",
"The Nexus",
"enUS",
},
[72947] = {
"Kor'kron Demolisher",
"Siege of Orgrimmar",
"enUS",
},
[26930] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[26792] = {
"Crystalline Protector",
"The Nexus",
"enUS",
},
[218418] = {
"Displacement Pad",
"Throne of Thunder",
"enUS",
},
[143009] = {
"Daelin Proudmoore",
"Thros, The Blighted Lands",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[71859] = {
"Earthbreaker Haromm",
"Siege of Orgrimmar",
"enUS",
},
[58971] = {
"Webbed Victim",
"Throne of Thunder",
"enUS",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[19508] = {
"Sunseeker Herbalist",
"Tempest Keep: The Botanica",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[218417] = {
"Displacement Pad",
"Throne of Thunder",
"enUS",
},
[23795] = {
"Dark Iron Antagonist",
"Blackrock Depths",
"enUS",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[61947] = {
"Kargesh Ribcrusher",
"Mogu'shan Palace",
},
[146755] = {
"Slavering Skullcleaver",
"8.1 Darkshore Scenario",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[71858] = {
"Wavebinder Kardris",
"Siege of Orgrimmar",
"enUS",
},
[176956] = {
"Shadowsteel Goliath",
"Sanctum of Domination",
"enUS",
},
[2520] = {
"Remote-Controlled Golem",
"Deadmines",
"enUS",
},
[146947] = {
"Maniacal Apothecary",
"8.1 Darkshore Scenario",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[146757] = {
"Dark Executor",
"8.1 Darkshore Scenario",
},
[16389] = {
"Spectral Apprentice",
"Karazhan",
},
[29874] = {
"Drakkari Inciter",
"Gundrak",
"enUS",
},
[78001] = {
"Cloudburst Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[10876] = {
"Undead Scarab",
"Stratholme",
"enUS",
},
[52958] = {
"Zandalari Hierophant",
"Zul'Gurub",
},
[232244] = {
"Anvilrage Artillerist",
"Blackrock Depths",
"enUS",
},
[40320] = {
"Valiona",
"Grim Batol",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[33890] = {
"Brain of Yogg-Saron",
"Ulduar",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113321] = {
"Shambling Hungerer",
"The Nighthold",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
},
[205749] = {
"Restless Pebble",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[11452] = {
"Wildspawn Rogue",
"Dire Maul",
"enUS",
},
[16154] = {
"Risen Squire",
"Naxxramas",
"enUS",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[131402] = {
"Underrot Tick",
"The Underrot",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[107435] = {
"Suspicious Noble",
"Court of Stars",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[71154] = {
"Ka'roz the Locust",
"Siege of Orgrimmar",
"enUS",
},
[146759] = {
"Treasury Protector",
"Zandalari Treasury",
},
[211259] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
"enUS",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[59771] = {
"Zombified Corpse",
"Scarlet Halls",
"enUS",
},
[203199] = {
"Throne of Tides Defense System",
"Throne of the Tides",
"enUS",
},
[223541] = {
"Stolen Loader",
"Nightfall Sanctum",
"enUS",
},
[232243] = {
"High Interrogator Gerstahn",
"Blackrock Depths",
"enUS",
},
[146760] = {
"Mighty Guardian Spirit",
"Zandalari Treasury",
},
[18421] = {
"Sunseeker Researcher",
"Tempest Keep: The Botanica",
"enUS",
},
[215355] = {
"Cache of Tsulong",
"Terrace of Endless Spring",
"enUS",
},
[36666] = {
"Spectral Warden",
"The Forge of Souls",
"enUS",
},
[26803] = {
"Horde Cleric",
"The Nexus",
"enUS",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[119977] = {
"Stranglevine Lasher",
"Cathedral of Eternal Night",
"enUS",
},
[15547] = {
"Spectral Charger",
"Karazhan",
},
[118700] = {
"Felblight Stalker",
"Cathedral of Eternal Night",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[165189] = {
"Rip",
"Heart of Fear",
"enUS",
},
[201467] = {
"Stonebreath Summoner",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[72945] = {
"Dragonmaw Bonecrusher",
"Siege of Orgrimmar",
"enUS",
},
[232245] = {
"Anvilrage Dragoon",
"Blackrock Depths",
"enUS",
},
[181575] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[118698] = {
"Hand from Beyond",
"Dread Scar Rift - Warlock Scenario Platform",
"enUS",
},
[19509] = {
"Sunseeker Harvester",
"Tempest Keep: The Botanica",
"enUS",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[70326] = {
"Stone Sentry",
"Mogu Island Loot Room",
"enUS",
},
[70247] = {
"Venomous Head",
"Throne of Thunder",
"enUS",
},
[119978] = {
"Fulminating Lasher",
"Cathedral of Eternal Night",
"enUS",
},
[232246] = {
"Anvilrage Medic",
"Blackrock Depths",
"enUS",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[180665] = {
"Gibbering Soul",
"Sanctum of Domination",
"enUS",
},
[211260] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[232247] = {
"Anvilrage Officer",
"Blackrock Depths",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[454201] = {
"|cff1EFF00Sturdy Chest",
"Nightfall Sanctum",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"Kriegval's Rest",
"enUS",
},
[70327] = {
"Stone Watcher",
"Mogu Island Loot Room",
"enUS",
},
[6207] = {
"Caverndeep Ambusher",
"Gnomeregan",
"enUS",
},
[6223] = {
"Leprous Defender",
"Gnomeregan",
"enUS",
},
[232248] = {
"Anvilrage Soldier",
"Blackrock Depths",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[8477] = {
"Skeletal Servant",
"Stratholme",
"enUS",
},
[58590] = {
"Scarlet Zealot",
"Scarlet Monastery",
"enUS",
},
[61946] = {
"Harthak Stormcaller",
"Mogu'shan Palace",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[211262] = {
"Ixkreten the Unbreakable",
"The Dawnbreaker",
"enUS",
},
[118703] = {
"Felborne Botanist",
"Cathedral of Eternal Night",
"enUS",
},
[180664] = {
"Mawsworn Infuser",
"Sanctum of Domination",
"enUS",
},
[17398] = {
"Nascent Fel Orc",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17462] = {
"Shattered Hand Zealot",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[111022] = {
"The Demon Within",
"The Nighthold",
},
[70328] = {
"Zandalari Venomblade",
"Mogu Island Loot Room",
"enUS",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[232250] = {
"Anvilrage Enforcer",
"Blackrock Depths",
"enUS",
},
[13020] = {
"Vaelastrasz the Corrupt",
"Blackwing Lair",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[61434] = {
"Sik'thik Vanguard",
"Siege of Niuzao Temple",
"enUS",
},
[226620] = {
"Rat",
"The Dread Pit",
"enUS",
},
[97202] = {
"Olmyr the Enlightened",
"Halls of Valor",
},
[117933] = {
"Inquisitor Variss",
"Artifact - Acquisition - Tank",
},
[113197] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[13276] = {
"Wildspawn Imp",
"Dire Maul",
"enUS",
},
[18422] = {
"Sunseeker Botanist",
"Tempest Keep: The Botanica",
"enUS",
},
[95843] = {
"King Haldor",
"Halls of Valor",
},
[72355] = {
"High Enforcer Thranok",
"Siege of Orgrimmar",
"enUS",
},
[181576] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[126847] = {
"Captain Raoul",
"Freehold",
"enUS",
},
[232252] = {
"Anvilrage Rogue",
"Blackrock Depths",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[71865] = {
"Garrosh Hellscream",
"Siege of Orgrimmar",
"enUS",
},
[104881] = {
"Spellblade Aluriel",
"The Nighthold",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
"enUS",
},
[376405] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[390749] = {
"Challenger's Cache",
"Halls of Infusion",
"enUS",
},
[225708] = {
"Sporbit",
"Mycomancer Cavern",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[59487] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[118704] = {
"Dul'zak",
"Cathedral of Eternal Night",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"Tak-Rethan Abyss",
"enUS",
},
[70586] = {
"Eternal Guardian",
"Throne of Thunder",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[232254] = {
"Fireguard Destroyer",
"Blackrock Depths",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
"enUS",
},
[19958] = {
"White Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[220485] = {
"Peculiar Nerubian",
"The Spiral Weave",
"enUS",
},
[60384] = {
"Zandalari Pterror Wing",
"Mogu'shan Vaults",
"enUS",
},
[69821] = {
"Thunder Lord",
"Throne of Thunder",
"enUS",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[52962] = {
"Zandalari Archon",
"Zul'Gurub",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[225601] = {
"Webbed Victim",
"The Dawnbreaker",
"enUS",
},
[176973] = {
"Unstoppable Abomination",
"Sanctum of Domination",
"enUS",
},
[226625] = {
"Cave Skipper",
"Nightfall Sanctum",
"enUS",
},
[70587] = {
"Shale Stalker",
"Throne of Thunder",
"enUS",
},
[217517] = {
"Nightfall Hopestealer",
"Nightfall Sanctum",
"enUS",
},
[224066] = {
"Sureki Vanguard",
"Nerub-ar Palace",
"enUS",
},
[79545] = {
"Nitrogg Thundertower",
"Grimrail Depot",
},
[376406] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[28579] = {
"Hardened Steel Berserker",
"Halls of Lightning",
"enUS",
},
[11453] = {
"Wildspawn Trickster",
"Dire Maul",
"enUS",
},
[72943] = {
"Dragonmaw Proto-Drake",
"Siege of Orgrimmar",
"enUS",
},
[75452] = {
"Bonemaw",
"Shadowmoon Burial Grounds",
},
[17399] = {
"Seductress",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[218949] = {
"Lei Shen's Burial Trove",
"Mogu Island Loot Room",
"enUS",
},
[52323] = {
"Chosen of Hethiss",
"Zul'Gurub",
"enUS",
},
[232258] = {
"Houndmaster Grebmar",
"Blackrock Depths",
"enUS",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[233282] = {
"Refreshment Table",
"Neltharus",
"enUS",
},
[52322] = {
"Witch Doctor Qu'in",
"Zul'Gurub",
"enUS",
},
[40166] = {
"Molten Giant",
"Grim Batol",
"enUS",
},
[214343] = {
"Kobyss Trickster",
"Tak-Rethan Abyss",
"enUS",
},
[16060] = {
"Gothik the Harvester",
"Naxxramas",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[203594] = {
"Lumbering Boulder",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[72562] = {
"Poison Bolt Totem",
"Siege of Orgrimmar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[28838] = {
"Titanium Vanguard",
"Halls of Lightning",
"enUS",
},
[26805] = {
"Alliance Cleric",
"The Nexus",
"enUS",
},
[70589] = {
"Cavern Burrower",
"Throne of Thunder",
"enUS",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
"enUS",
},
[15548] = {
"Spectral Stallion",
"Karazhan",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[75964] = {
"Ranjit",
"Skyreach",
},
[390747] = {
"Challenger's Cache",
"Brackenhide Hollow",
"enUS",
},
[218440] = {
"Kaheti War Banner",
"Nerub-ar Palace",
"enUS",
},
[13021] = {
"Warpwood Crusher",
"Dire Maul",
"enUS",
},
[72893] = {
"Orgrimmar Peon",
"Siege of Orgrimmar",
"enUS",
},
[390748] = {
"Challenger's Cache",
"Neltharus",
"enUS",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[19511] = {
"Nethervine Inciter",
"Tempest Keep: The Botanica",
"enUS",
},
[15932] = {
"Gluth",
"Naxxramas",
"enUS",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[16028] = {
"Patchwerk",
"Naxxramas",
"enUS",
},
[390750] = {
"Challenger's Cache",
"Uldaman: Legacy of Tyr",
"enUS",
},
[79548] = {
"Assault Cannon",
"Grimrail Depot",
},
[16124] = {
"Unrelenting Trainee",
"Naxxramas",
"enUS",
},
[16156] = {
"Dark Touched Warrior",
"Naxxramas",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[59746] = {
"Scarlet Centurion",
"Scarlet Halls",
"enUS",
},
[56930] = {
"Krik'thik Swarm Bringer",
"Gate of the Setting Sun",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[95674] = {
"Fenryr",
"Halls of Valor",
},
[192337] = {
"Void Tendril",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[214348] = {
"Undersea Abomination",
"Tak-Rethan Abyss",
"enUS",
},
[223050] = {
"Release Lever",
"Siege of Orgrimmar",
"enUS",
},
[211277] = {
"Coffer of Forgotten Souls",
"Scholomance",
"enUS",
},
[68079] = {
"Ro'shak",
"Throne of Thunder",
"enUS",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
"enUS",
},
[232268] = {
"Chiseled War Construct",
"Blackrock Depths",
"enUS",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[230217] = {
"Toxitron Mk. II",
"Blackrock Depths",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[62945] = {
"Bloodthirsty Prowler",
"Greenstone Village",
"enUS",
},
[59520] = {
"Fizzy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[10436] = {
"Baroness Anastari",
"Stratholme",
"enUS",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
"enUS",
},
[17400] = {
"Felguard Annihilator",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17464] = {
"Shattered Hand Gladiator",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[230218] = {
"Electron Mk. II",
"Blackrock Depths",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[4416] = {
"Defias Strip Miner",
"Deadmines",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[232266] = {
"Doomforge Mechanic",
"Blackrock Depths",
"enUS",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[60386] = {
"Zandalari Terror Rider",
"Mogu'shan Vaults",
"enUS",
},
[17976] = {
"Commander Sarannis",
"Tempest Keep: The Botanica",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
"enUS",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[73152] = {
"Storeroom Guard",
"Siege of Orgrimmar",
"enUS",
},
[133990] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[365167] = {
"Anima Cell",
"Sanctum of Domination",
"enUS",
},
[53088] = {
"Temple Rat",
"Zul'Gurub",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[95675] = {
"God-King Skovald",
"Halls of Valor",
},
[45926] = {
"Servant of Asaad",
"The Vortex Pinnacle",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[52325] = {
"Gurubashi Blood Drinker",
"Zul'Gurub",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[72131] = {
"Blind Blademaster",
"Siege of Orgrimmar",
"enUS",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[219984] = {
"Xeph'itik",
"City of Threads",
"enUS",
},
[72429] = {
"Olvia",
"Siege of Orgrimmar",
"enUS",
},
[17371] = {
"Shadowmoon Warlock",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[19512] = {
"Nethervine Reaper",
"Tempest Keep: The Botanica",
"enUS",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[70594] = {
"Mist Lurker",
"Throne of Thunder",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[95676] = {
"Odyn",
"Halls of Valor",
},
[232269] = {
"Fineous Darkvire",
"Blackrock Depths",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[72130] = {
"Kor'jus",
"Siege of Orgrimmar",
"enUS",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[71504] = {
"Siegecrafter Blackfuse",
"Siege of Orgrimmar",
"enUS",
},
[211284] = {
"Lever",
"Gate of the Setting Sun",
"enUS",
},
[61155] = {
"Wily Woodling",
"Greenstone Village",
"enUS",
},
[11486] = {
"Prince Tortheldrin",
"Dire Maul",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[221522] = {
"",
"Siege of Orgrimmar",
"enUS",
},
[16505] = {
"Naxxramas Follower",
"Naxxramas",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[73667] = {
"Windreaver Tar'rath",
"Siege of Orgrimmar",
"enUS",
},
[10398] = {
"Thuzadin Shadowcaster",
"Stratholme",
"enUS",
},
[303147] = {
"Summoning Portal",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[11454] = {
"Wildspawn Betrayer",
"Dire Maul",
"enUS",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
"enUS",
},
[92350] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[64355] = {
"Kor'thik Silentwing",
"Heart of Fear",
"enUS",
},
[198489] = {
"Denizen of the Dream",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[75715] = {
"Reanimated Ritual Bones",
"Shadowmoon Burial Grounds",
},
[73155] = {
"Brute Reinforcements",
"Siege of Orgrimmar",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[17401] = {
"Felhound Manastalker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17465] = {
"Shattered Hand Centurion",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[72428] = {
"Horthus",
"Siege of Orgrimmar",
"enUS",
},
[116409] = {
"Raest Magespear",
"Dread Scar Rift - Warlock Scenario Platform",
"enUS",
},
[237393] = {
"Savage Feast",
"Tempest Keep: The Botanica",
"enUS",
},
[17977] = {
"Warp Splinter",
"Tempest Keep: The Botanica",
"enUS",
},
[72132] = {
"Craven Drok",
"Siege of Orgrimmar",
"enUS",
},
[18105] = {
"Ghaz'an",
"Coilfang: The Underbog",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[44648] = {
"Unyielding Behemoth",
"Throne of the Tides",
"enUS",
},
[61156] = {
"Vengeful Hui",
"Greenstone Village",
"enUS",
},
[218022] = {
"Speaker Davenruth",
"Nightfall Sanctum",
"enUS",
},
[11262] = {
"Onyxian Whelp",
"Onyxia's Lair",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
"enUS",
},
[222038] = {
"Shrillwing Hunter En'kilah",
"Nerub-ar Palace",
"enUS",
},
[70341] = {
"Tormented Spirit",
"Throne of Thunder",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[116410] = {
"Karam Magespear",
"Dread Scar Rift - Warlock Scenario Platform",
"enUS",
},
[52348] = {
"Berserking Boulder Roller",
"Zul'Gurub",
"enUS",
},
[16029] = {
"Sludge Belcher",
"Naxxramas",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[71603] = {
"Sha Puddle",
"Siege of Orgrimmar",
"enUS",
},
[433777] = {
"Summoning Portal",
"Mogu'shan Vaults",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[52327] = {
"Gurubashi Shadow Hunter",
"Zul'Gurub",
},
[16506] = {
"Naxxramas Worshipper",
"Naxxramas",
"enUS",
},
[118714] = {
"Hellblaze Temptress",
"Cathedral of Eternal Night",
"enUS",
},
[19513] = {
"Mutate Fear-Shrieker",
"Tempest Keep: The Botanica",
"enUS",
},
[67361] = {
"Horde Swashbuckler",
"Naval Battle Scenario",
"enUS",
},
[206172] = {
"Nymue",
"UNKNOWN",
"enUS",
},
[204127] = {
"Kobold Taskfinder",
"Kriegval's Rest",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[16061] = {
"Instructor Razuvious",
"Naxxramas",
"enUS",
},
[126969] = {
"Trothak",
"Freehold",
"enUS",
},
[16125] = {
"Unrelenting Death Knight",
"Naxxramas",
"enUS",
},
[129208] = {
"Dread Captain Lockwood",
"Siege of Boralus",
"enUS",
},
[61709] = {
"Spawn of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[69701] = {
"Anima Golem",
"Throne of Thunder",
"enUS",
},
[384641] = {
"Portal to Valdrakken",
"Neltharus",
"enUS",
},
[220508] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[61157] = {
"Sassy Seedling",
"Greenstone Village",
"enUS",
},
[73414] = {
"Kor'kron Reaper",
"Siege of Orgrimmar",
"enUS",
},
[73670] = {
"Gate-Crasher Sav'ah",
"Siege of Orgrimmar",
"enUS",
},
[76778] = {
"Life-Pact Familiar",
"Skyreach",
},
[24696] = {
"Coilskar Witch",
"Magisters' Terrace",
"enUS",
},
[118716] = {
"Bilespray Lasher",
"Cathedral of Eternal Night",
"enUS",
},
[210781] = {
"Vault of Souls",
"Scholomance",
"enUS",
},
[62711] = {
"Amber Monstrosity",
"Heart of Fear",
"enUS",
},
[220509] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[220507] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[75975] = {
"Skyreach Overlord",
"Skyreach",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[29120] = {
"Anub'arak",
"Azjol-Nerub",
"enUS",
},
[72903] = {
"Kor'kron Siegemaster",
"Siege of Orgrimmar",
"enUS",
},
[28580] = {
"Hardened Steel Skycaller",
"Halls of Lightning",
"enUS",
},
[73415] = {
"Ichor of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
"enUS",
},
[59494] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[95832] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
},
[30071] = {
"Stitched Colossus",
"Naxxramas",
"enUS",
},
[64357] = {
"Kor'thik Swarmer",
"Heart of Fear",
"enUS",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[17978] = {
"Thorngrin the Tender",
"Tempest Keep: The Botanica",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
"enUS",
},
[200035] = {
"Carrion Worm",
"Shadowmoon Burial Grounds",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
"enUS",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[220510] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[118717] = {
"Helblaze Imp",
"Cathedral of Eternal Night",
"enUS",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
"enUS",
},
[61670] = {
"Sik'thik Demolisher",
"Siege of Niuzao Temple",
"enUS",
},
[111295] = {
"Domesticated Manasaber",
"The Nighthold",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[91332] = {
"Stoneclaw Hunter",
"Neltharion's Lair",
"enUS",
},
[79303] = {
"Adorned Bladetalon",
"Skyreach",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[75976] = {
"Low-Born Arakkoa",
"Skyreach",
},
[14398] = {
"Eldreth Darter",
"Dire Maul",
"enUS",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
"enUS",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[61159] = {
"Greenstone Terror",
"Greenstone Village",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[69834] = {
"Lightning Guardian",
"Throne of Thunder",
"enUS",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[59751] = {
"Shado-Pan Warden",
"Scholomance",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[178029] = {
"Mawsworn Wingsoldier",
"Sanctum of Domination",
"enUS",
},
[61398] = {
"Xin the Weaponmaster",
"Mogu'shan Palace",
},
[64358] = {
"Set'thik Tempest",
"Heart of Fear",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[221537] = {
"Unstable Experiment",
"Nerub-ar Palace",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[14302] = {
"Chromatic Drakonid",
"Blackwing Lair",
},
[118719] = {
"Wyrmtongue Scavenger",
"Cathedral of Eternal Night",
"enUS",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[16507] = {
"Shattered Hand Sentry",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[24761] = {
"Brightscale Wyrm",
"Magisters' Terrace",
"enUS",
},
[28920] = {
"Stormforged Giant",
"Halls of Lightning",
"enUS",
},
[16699] = {
"Shattered Hand Reaver",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[126983] = {
"Harlan Sweete",
"Freehold",
"enUS",
},
[10463] = {
"Shrieking Banshee",
"Stratholme",
"enUS",
},
[1729] = {
"Defias Evoker",
"Deadmines",
"enUS",
},
[29240] = {
"Stormforged Lieutenant",
"Halls of Lightning",
"enUS",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[17083] = {
"Fel Orc Convert",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[147378] = {
"Treasury Protector",
"Zandalari Treasury",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[222564] = {
"Rupturing Ooze",
"Nerub-ar Palace",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[17723] = {
"Bog Giant",
"Coilfang: The Underbog",
"enUS",
},
[77905] = {
"Felborne Abyssal",
"Auchindoun",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[182607] = {
"Proximity Bomb",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[69069] = {
"Living Fluid",
"Throne of Thunder",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33136] = {
"Guardian of Yogg-Saron",
"Ulduar",
"enUS",
},
[61928] = {
"Sik'thik Guardian",
"Siege of Niuzao Temple",
"enUS",
},
[120770] = {
"Felguard Destroyer",
"Cathedral of Eternal Night",
"enUS",
},
[11455] = {
"Wildspawn Felsworn",
"Dire Maul",
"enUS",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[272166] = {
"Instructions",
"Gnomeregan",
"enUS",
},
[11583] = {
"Nefarian",
"Blackwing Lair",
},
[61929] = {
"Sik'thik Amber-Weaver",
"Siege of Niuzao Temple",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[69070] = {
"Viscous Horror",
"Throne of Thunder",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[59369] = {
"Doctor Theolen Krastinov",
"Scholomance",
"enUS",
},
[63592] = {
"Set'thik Gustwing",
"Heart of Fear",
"enUS",
},
[142950] = {
"Theramore Citizen",
"Thros, The Blighted Lands",
},
[29305] = {
"Moorabi",
"Gundrak",
"enUS",
},
[130522] = {
"Freehold Shipmate",
"Freehold",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[224616] = {
"Animated Shadow",
"The Dawnbreaker",
"enUS",
},
[16126] = {
"Unrelenting Rider",
"Naxxramas",
"enUS",
},
[102295] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[208239] = {
"Skittering Menace",
"Earthcrawl Mines",
"enUS",
},
[118724] = {
"Helblaze Felbringer",
"Cathedral of Eternal Night",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[92387] = {
"Drums of War",
"Neltharion's Lair",
"enUS",
},
[214384] = {
"Cache of Pure Energy",
"Mogu'shan Vaults",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[28729] = {
"Watcher Narjil",
"Azjol-Nerub",
"enUS",
},
[24698] = {
"Ethereum Smuggler",
"Magisters' Terrace",
"enUS",
},
[24762] = {
"Sunblade Keeper",
"Magisters' Terrace",
"enUS",
},
[28921] = {
"Hadronox",
"Azjol-Nerub",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[208242] = {
"Nerubian Darkcaster",
"Earthcrawl Mines",
"enUS",
},
[20923] = {
"Blood Guard Porung",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[221035] = {
"Royal Scribe",
"Nerub-ar Palace",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[18341] = {
"Pandemonius",
"Auchindoun: Mana-Tombs",
"enUS",
},
[72655] = {
"Fragment of Pride",
"Siege of Orgrimmar",
"enUS",
},
[77006] = {
"Corpse Skitterling",
"Shadowmoon Burial Grounds",
},
[61034] = {
"Terror Spawn",
"Terrace of Endless Spring",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[63593] = {
"Set'thik Zephyrian",
"Heart of Fear",
"enUS",
},
[178043] = {
"Mawsworn Lancer",
"Sanctum of Domination",
"enUS",
},
[222572] = {
"Infesting Latcher",
"Nerub-ar Palace",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[17724] = {
"Underbat",
"Coilfang: The Underbog",
"enUS",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[52076] = {
"Gurubashi Cauldron-Mixer",
"Zul'Gurub",
"enUS",
},
[75829] = {
"Nhallish",
"Shadowmoon Burial Grounds",
},
[17980] = {
"Laj",
"Tempest Keep: The Botanica",
"enUS",
},
[28410] = {
"Dragonflayer Spiritualist",
"Utgarde Keep",
"enUS",
},
[214383] = {
"Cache of Pure Energy",
"Mogu'shan Vaults",
"enUS",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
"enUS",
},
[71378] = {
"Quilen Guardian",
"Siege of Orgrimmar",
"enUS",
},
[208241] = {
"Ankle Biter",
"Earthcrawl Mines",
"enUS",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[451226] = {
"Unraveling Sands",
"Mogu'shan Vaults",
"enUS",
},
[26746] = {
"Crazed Mana-Wraith",
"The Nexus",
"enUS",
},
[111303] = {
"Nightborne Sage",
"The Nighthold",
},
[178041] = {
"Mawsworn Shackler",
"Sanctum of Domination",
"enUS",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
"enUS",
},
[130521] = {
"Freehold Deckhand",
"Freehold",
"enUS",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
"enUS",
},
[62442] = {
"Tsulong",
"Terrace of Endless Spring",
"enUS",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[202612] = {
"Cliffkeeper Bouldani",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
"enUS",
},
[62837] = {
"Grand Empress Shek'zeer",
"Heart of Fear",
"enUS",
},
[208243] = {
"Nerubian Slasher",
"Earthcrawl Mines",
"enUS",
},
[14303] = {
"Petrified Guardian",
"Dire Maul",
"enUS",
},
[63594] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
"enUS",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[202613] = {
"Portalkeeper Cimbra",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[52077] = {
"Gurubashi Berserker",
"Zul'Gurub",
},
[19964] = {
"Red Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[221553] = {
"Kor'kron Cage",
"Siege of Orgrimmar",
"enUS",
},
[29119] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[203679] = {
"Anduin Lothar",
"Dawn of the Infinite",
"enUS",
},
[72658] = {
"Amalgamated Hubris",
"Siege of Orgrimmar",
"enUS",
},
[218997] = {
"Cache of Storms",
"Throne of Thunder",
"enUS",
},
[211319] = {
"Relief Bucket",
"Stormstout Brewery",
"enUS",
},
[208245] = {
"Skittering Swarmer",
"Earthcrawl Mines",
"enUS",
},
[165251] = {
"Illusionary Vulpin",
"Mists of Tirna Scithe",
"enUS",
},
[28730] = {
"Watcher Gashra",
"Azjol-Nerub",
"enUS",
},
[14399] = {
"Arcane Torrent",
"Dire Maul",
"enUS",
},
[16573] = {
"Crypt Guard",
"Naxxramas",
"enUS",
},
[28922] = {
"Anub'ar Crusher",
"Azjol-Nerub",
"enUS",
},
[66772] = {
"Beast of Jade",
"Greenstone Village",
"enUS",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
"enUS",
},
[29306] = {
"Gal'darah",
"Gundrak",
"enUS",
},
[18429] = {
"Arcane Fiend",
"Auchindoun: Mana-Tombs",
"enUS",
},
[129989] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[162693] = {
"Nalthor the Rimebinder",
"The Necrotic Wake",
"enUS",
},
[72661] = {
"Zeal",
"Siege of Orgrimmar",
"enUS",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
"enUS",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
"enUS",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
"enUS",
},
[71515] = {
"General Nazgrim",
"Siege of Orgrimmar",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59884] = {
"Fallen Crusader",
"Scarlet Monastery",
"enUS",
},
[17725] = {
"Underbog Lurker",
"Coilfang: The Underbog",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
"enUS",
},
[71380] = {
"Animated Stone Mogu",
"Siege of Orgrimmar",
"enUS",
},
[60396] = {
"Emperor's Rage",
"Mogu'shan Vaults",
"enUS",
},
[58605] = {
"Scarlet Judicator",
"Scarlet Monastery",
"enUS",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
"enUS",
},
[222581] = {
"Ruptured Ooze",
"Nerub-ar Palace",
"enUS",
},
[72422] = {
"Auctioneer Drezmit",
"Siege of Orgrimmar",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[71382] = {
"Burial Urn",
"Siege of Orgrimmar",
"enUS",
},
[52087] = {
"Zanzil Mindslave",
"Zul'Gurub",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[224152] = {
"Twilight Brute",
"Grim Batol",
"enUS",
},
[409270] = {
"To the Fourth Clue",
"Zul'Gurub",
"enUS",
},
[120778] = {
"Wrathguard Invader",
"Cathedral of Eternal Night",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[182145] = {
"Freezing Trap",
"Coilfang: The Underbog",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[69078] = {
"Sul the Sandcrawler",
"Throne of Thunder",
"enUS",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[72358] = {
"Kor'kron Cannon",
"Siege of Orgrimmar",
"enUS",
},
[16063] = {
"Sir Zeliek",
"Naxxramas",
"enUS",
},
[52079] = {
"Gurubashi Bloodrager",
"Zul'Gurub",
},
[60397] = {
"Emperor's Strength",
"Mogu'shan Vaults",
"enUS",
},
[146652] = {
"Bolstered Deathguard",
"8.1 Darkshore Scenario",
},
[72150] = {
"Kor'kron Shadowmage",
"Siege of Orgrimmar",
"enUS",
},
[60781] = {
"Soul Fragment",
"Mogu'shan Vaults",
"enUS",
},
[133007] = {
"Unbound Abomination",
"The Underrot",
"enUS",
},
[174469] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[69591] = {
"Lurker in the Night",
"Throne of Thunder",
"enUS",
},
[28731] = {
"Watcher Silthik",
"Azjol-Nerub",
"enUS",
},
[62701] = {
"Mutated Construct",
"Heart of Fear",
"enUS",
},
[10464] = {
"Wailing Banshee",
"Stratholme",
"enUS",
},
[28923] = {
"Loken",
"Halls of Lightning",
"enUS",
},
[6225] = {
"Mechano-Tank",
"Gnomeregan",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[71383] = {
"Kor'thik Warcaller",
"Siege of Orgrimmar",
"enUS",
},
[120779] = {
"Helblaze Felbringer",
"Cathedral of Eternal Night",
"enUS",
},
[10400] = {
"Thuzadin Necromancer",
"Stratholme",
"enUS",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
"enUS",
},
[29304] = {
"Slad'ran",
"Gundrak",
"enUS",
},
[217519] = {
"Nightfall Shadeguard",
"Nightfall Sanctum",
"enUS",
},
[288477] = {
"Ancient Switch",
"Atal'Dazar",
"enUS",
},
[18430] = {
"Ethereal Apprentice",
"Auchindoun: Mana-Tombs",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[63597] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[29819] = {
"Drakkari Lancer",
"Gundrak",
"enUS",
},
[63853] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[17726] = {
"Wrathfin Myrmidon",
"Coilfang: The Underbog",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[11490] = {
"Zevrim Thornhoof",
"Dire Maul",
"enUS",
},
[60398] = {
"Emperor's Courage",
"Mogu'shan Vaults",
"enUS",
},
[176520] = {
"Ocular Commander",
"Sanctum of Domination",
"enUS",
},
[13280] = {
"Hydrospawn",
"Dire Maul",
"enUS",
},
[72408] = {
"Anti-Air Turret",
"Siege of Orgrimmar",
"enUS",
},
[219006] = {
"Venommaster Nezarox",
"Nerub-ar Palace",
"enUS",
},
[223613] = {
"Weave Drone",
"The Spiral Weave",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[204162] = {
"Blazerunner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[147344] = {
"Opulence",
"Zandalari Treasury",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[213888] = {
"Taran Zhu's Personal Stash",
"Shado-Pan Monastery",
"enUS",
},
[71157] = {
"Xaril the Poisoned Mind",
"Siege of Orgrimmar",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[100818] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[79888] = {
"Iron Infantry",
"Grimrail Depot",
},
[71385] = {
"Sri'thik Bombardier",
"Siege of Orgrimmar",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[101074] = {
"Hatespawn Whelpling",
"Darkheart Thicket",
"enUS",
},
[71734] = {
"Sha of Pride",
"Siege of Orgrimmar",
"enUS",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[169426] = {
"Infernal",
"Grimrail Depot",
},
[216441] = {
"Pale Illusion",
"Tak-Rethan Abyss",
"enUS",
},
[70212] = {
"Flaming Head",
"Throne of Thunder",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
"enUS",
},
[72662] = {
"Vanity",
"Siege of Orgrimmar",
"enUS",
},
[42845] = {
"Rock Borer",
"The Stonecore",
"enUS",
},
[77042] = {
"Sargerei Defender",
"Auchindoun",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[60143] = {
"Gara'jal the Spiritbinder",
"Mogu'shan Vaults",
"enUS",
},
[52081] = {
"Gurubashi Cauldron-Mixer",
"Zul'Gurub",
},
[60399] = {
"Qin-xi",
"Mogu'shan Vaults",
"enUS",
},
[129996] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[72154] = {
"Desecrated Weapon",
"Siege of Orgrimmar",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[59892] = {
"Krik'thik Invader",
"Gate of the Setting Sun",
"enUS",
},
[77890] = {
"Durag the Dominator",
"Auchindoun",
},
[29822] = {
"Drakkari Fire Weaver",
"Gundrak",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[28732] = {
"Anub'ar Warrior",
"Azjol-Nerub",
"enUS",
},
[14400] = {
"Arcane Feedback",
"Dire Maul",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[28924] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[146837] = {
"Treasury Sentinel",
"Zandalari Treasury",
},
[195880] = {
"Roaming Rocks",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[29820] = {
"Drakkari God Hunter",
"Gundrak",
"enUS",
},
[72155] = {
"Cazul",
"Siege of Orgrimmar",
"enUS",
},
[72411] = {
"Kor'kron Provisioner",
"Siege of Orgrimmar",
"enUS",
},
[76057] = {
"Carrion Worm",
"Shadowmoon Burial Grounds",
},
[137625] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[52082] = {
"Gurubashi Cauldron-Mixer",
"Zul'Gurub",
},
[72276] = {
"Amalgam of Corruption",
"Siege of Orgrimmar",
"enUS",
},
[72412] = {
"Kor'kron Grunt",
"Siege of Orgrimmar",
"enUS",
},
[59632] = {
"Champion Sithiss",
"A Brewing Storm",
"enUS",
},
[29118] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[17727] = {
"Wrathfin Sentry",
"Coilfang: The Underbog",
"enUS",
},
[73948] = {
"Commander Ik'tal",
"Siege of Orgrimmar",
"enUS",
},
[71388] = {
"Amber-Encased Kunchong",
"Siege of Orgrimmar",
"enUS",
},
[60400] = {
"Jan-xi",
"Mogu'shan Vaults",
"enUS",
},
[71397] = {
"Zar'thik Amber Priest",
"Siege of Orgrimmar",
"enUS",
},
[213895] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[44404] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[137626] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[103225] = {
"Acidmaw Scorpid",
"The Nighthold",
},
[220551] = {
"Sureki Ironweaver",
"Nerub-ar Palace",
"enUS",
},
[18431] = {
"Ethereal Beacon",
"Auchindoun: Mana-Tombs",
"enUS",
},
[49267] = {
"Crystal Shard",
"The Stonecore",
"enUS",
},
[28734] = {
"Anub'ar Skirmisher",
"Azjol-Nerub",
"enUS",
},
[121553] = {
"Dreadhunter",
"Cathedral of Eternal Night",
"enUS",
},
[149400] = {
"Royal Dreadguard",
"8.1 Darkshore Scenario",
},
[64353] = {
"Set'thik Gale-Slicer",
"Heart of Fear",
"enUS",
},
[11457] = {
"Wildspawn Hellcaller",
"Dire Maul",
"enUS",
},
[11489] = {
"Tendris Warpwood",
"Dire Maul",
"enUS",
},
[112595] = {
"Shal'dorei Archmage",
"The Nighthold",
},
[68036] = {
"Durumu the Forgotten",
"Throne of Thunder",
"enUS",
},
[72157] = {
"Hagrus",
"Siege of Orgrimmar",
"enUS",
},
[58737] = {
"Viletongue Raider",
"A Brewing Storm",
"enUS",
},
[27389] = {
"Dalronn the Controller",
"Utgarde Keep",
"enUS",
},
[3977] = {
"High Inquisitor Whitemane",
"Scarlet Monastery",
"enUS",
},
[15551] = {
"Spectral Stable Hand",
"Karazhan",
},
[230799] = {
"Burning Spirit",
"Blackrock Depths",
"enUS",
},
[126928] = {
"Irontide Corsair",
"Freehold",
"enUS",
},
[73949] = {
"Commander Na'kaz",
"Siege of Orgrimmar",
"enUS",
},
[15936] = {
"Heigan the Unclean",
"Naxxramas",
"enUS",
},
[104918] = {
"Vigilant Duskwatch",
"Court of Stars",
},
[69639] = {
"Humming Crystal",
"Throne of Thunder",
"enUS",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[16064] = {
"Thane Korth'azz",
"Naxxramas",
"enUS",
},
[64368] = {
"Apparition of Fear",
"Terrace of Endless Spring",
"enUS",
},
[112596] = {
"Duskwatch Warden",
"The Nighthold",
},
[52339] = {
"Lesser Priest of Bethekk",
"Zul'Gurub",
},
[72158] = {
"Katis",
"Siege of Orgrimmar",
"enUS",
},
[12129] = {
"Onyxian Warder",
"Onyxia's Lair",
"enUS",
},
[60913] = {
"Energy Charge",
"Mogu'shan Vaults",
"enUS",
},
[215435] = {
"Foreseer Xix'amon",
"Nerub-ar Palace",
"enUS",
},
[232327] = {
"Harbinger of Flames",
"Blackrock Depths",
"enUS",
},
[52085] = {
"Razzashi Adder",
"Zul'Gurub",
},
[144840] = {
"Mottled Fawn",
"8.1 Darkshore Scenario",
},
[28733] = {
"Anub'ar Shadowcaster",
"Azjol-Nerub",
"enUS",
},
[282410] = {
"Door",
"Waycrest Manor",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[60381] = {
"Zandalari Infiltrator",
"Mogu'shan Vaults",
"enUS",
},
[16704] = {
"Shattered Hand Sharpshooter",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[72159] = {
"Muragus",
"Siege of Orgrimmar",
"enUS",
},
[29117] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[71478] = {
"Embodied Anguish",
"Siege of Orgrimmar",
"enUS",
},
[11859] = {
"Doomguard",
"Heart of Fear",
"enUS",
},
[193426] = {
"Four Horsemen Chest",
"Naxxramas",
"enUS",
},
[58738] = {
"Viletongue Skirmisher",
"A Brewing Storm",
"enUS",
},
[70179] = {
"Ritual Guard",
"Throne of Thunder",
"enUS",
},
[72927] = {
"Kovok",
"Siege of Orgrimmar",
"enUS",
},
[60009] = {
"Feng the Accursed",
"Mogu'shan Vaults",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
"enUS",
},
[176535] = {
"Infused Goliath",
"Sanctum of Domination",
"enUS",
},
[217485] = {
"Nightfall Lookout",
"Nightfall Sanctum",
"enUS",
},
[4418] = {
"Defias Wizard",
"Deadmines",
"enUS",
},
[178071] = {
"Maw Assassin",
"Sanctum of Domination",
"enUS",
},
[149406] = {
"Kaldorei Dark Ranger",
"8.1 Darkshore Scenario",
},
[17728] = {
"Murkblood Tribesman",
"Coilfang: The Underbog",
"enUS",
},
[76267] = {
"Solar Zealot",
"Skyreach",
},
[71392] = {
"Shadow Ritualist Phylactery",
"Siege of Orgrimmar",
"enUS",
},
[60402] = {
"Zandalari Fire-Dancer",
"Mogu'shan Vaults",
"enUS",
},
[52340] = {
"Tiki Lord Mu'Loa",
"Zul'Gurub",
"enUS",
},
[69699] = {
"Massive Anima Golem",
"Throne of Thunder",
"enUS",
},
[178072] = {
"Anduin Wrynn",
"Sanctum of Domination",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[73184] = {
"Starved Yeti",
"Siege of Orgrimmar",
"enUS",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
},
[73696] = {
"Grand Master Alchemist Ki'xen",
"Siege of Orgrimmar",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
"enUS",
},
[197835] = {
"Kaurdyth",
"Vault of the Incarnates",
"enUS",
},
[14369] = {
"Shen'dralar Zealot",
"Dire Maul",
"enUS",
},
[72423] = {
"Auctioneer Fazdran",
"Siege of Orgrimmar",
"enUS",
},
[29826] = {
"Drakkari Medicine Man",
"Gundrak",
"enUS",
},
[69700] = {
"Large Anima Golem",
"Throne of Thunder",
"enUS",
},
[71393] = {
"Mogu Shadow Ritualist",
"Siege of Orgrimmar",
"enUS",
},
[127119] = {
"Freehold Deckhand",
"Freehold",
"enUS",
},
[71158] = {
"Rik'kal the Dissector",
"Siege of Orgrimmar",
"enUS",
},
[213905] = {
"Animated Darkness",
"The Dawnbreaker",
"enUS",
},
[58739] = {
"Borokhula the Destroyer",
"A Brewing Storm",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
"enUS",
},
[72929] = {
"Sra'thik Amber-Master",
"Siege of Orgrimmar",
"enUS",
},
[73185] = {
"Enraged Mushan Beast",
"Siege of Orgrimmar",
"enUS",
},
[63346] = {
"The Dark of Night",
"Terrace of Endless Spring",
"enUS",
},
[56867] = {
"Fiery Trickster",
"Stormstout Brewery",
"enUS",
},
[217489] = {
"Anub'arash",
"Nerub-ar Palace",
"enUS",
},
[76266] = {
"High Sage Viryx",
"Skyreach",
},
[230798] = {
"Flamewalker",
"Blackrock Depths",
"enUS",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[71476] = {
"Embodied Misery",
"Siege of Orgrimmar",
"enUS",
},
[104154] = {
"Gul'dan",
"The Nighthold",
},
[12017] = {
"Broodlord Lashlayer",
"Blackwing Lair",
},
[76253] = {
"Dread Raven Hatchling",
"Skyreach",
},
[43430] = {
"Stonecore Berserker",
"The Stonecore",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[52392] = {
"Gurubashi Master Chef",
"Zul'Gurub",
"enUS",
},
[176531] = {
"Deathseeker Eye",
"Sanctum of Domination",
"enUS",
},
[113128] = {
"Withered Skulker",
"The Nighthold",
},
[219304] = {
"Rapier",
"Naval Battle Scenario",
"enUS",
},
[65522] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[217491] = {
"Skeinspinner Takazj",
"Nerub-ar Palace",
"enUS",
},
[14401] = {
"Master Elemental Shaper Krixix",
"Blackwing Lair",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[28926] = {
"Spark of Ionar",
"Halls of Lightning",
"enUS",
},
[166304] = {
"Mistveil Stinger",
"Mists of Tirna Scithe",
"enUS",
},
[62691] = {
"Living Amber",
"Heart of Fear",
"enUS",
},
[71395] = {
"Modified Anima Golem",
"Siege of Orgrimmar",
"enUS",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[71475] = {
"Rook Stonetoe",
"Siege of Orgrimmar",
"enUS",
},
[213894] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[201756] = {
"Maximar",
"Dawn of the Infinite",
"enUS",
},
[146740] = {
"Mag'har Beastlord",
"8.1 Darkshore Scenario",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
"enUS",
},
[71543] = {
"Immerseus",
"Siege of Orgrimmar",
"enUS",
},
[29630] = {
"Fanged Pit Viper",
"Gundrak",
"enUS",
},
[61340] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
},
[233873] = {
"Fireling",
"Blackrock Depths",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[68905] = {
"Lu'lin",
"Throne of Thunder",
"enUS",
},
[178079] = {
"The Jailer",
"Sanctum of Domination",
"enUS",
},
[17729] = {
"Murkblood Spearman",
"Coilfang: The Underbog",
"enUS",
},
[52377] = {
"Florawing Needler",
"Eastern Kingdoms",
"enUS",
},
[52086] = {
"Hakkari Witch Doctor",
"Zul'Gurub",
},
[134701] = {
"Blood Effigy",
"The Underrot",
"enUS",
},
[73538] = {
"Kor'kron War Wolf",
"Siege of Orgrimmar",
"enUS",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[52598] = {
"Gurubashi Soul-Eater",
"Zul'Gurub",
},
[60701] = {
"Zian of the Endless Shadow",
"Mogu'shan Vaults",
"enUS",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[73188] = {
"Captive Cave Bat",
"Siege of Orgrimmar",
"enUS",
},
[146856] = {
"Ashen Raider",
"8.1 Darkshore Scenario",
},
[174773] = {
"Spiteful Shade",
"Ruby Life Pools",
},
[68313] = {
"Roaming Fog",
"Throne of Thunder",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[44658] = {
"Deep Murloc Invader",
"Throne of the Tides",
"enUS",
},
[11458] = {
"Petrified Treant",
"Dire Maul",
"enUS",
},
[146857] = {
"Honorbound Conqueror",
"8.1 Darkshore Scenario",
},
[112603] = {
"Terrace Grove-Tender",
"The Nighthold",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[72421] = {
"Kor'kron Overseer",
"Siege of Orgrimmar",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[29307] = {
"Drakkari Colossus",
"Gundrak",
"enUS",
},
[69390] = {
"Zandalari Storm-Caller",
"Throne of Thunder",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[12416] = {
"Blackwing Legionnaire",
"Blackwing Lair",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[137614] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[23872] = {
"Coren Direbrew",
"Blackrock Depths",
"enUS",
},
[16065] = {
"Lady Blaumeux",
"Naxxramas",
"enUS",
},
[71398] = {
"Zar'thik Swarmer",
"Siege of Orgrimmar",
"enUS",
},
[19969] = {
"Green Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[229783] = {
"Spawn of Bael'Gar",
"Blackrock Depths",
"enUS",
},
[16193] = {
"Skeletal Smith",
"Naxxramas",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[16127] = {
"Spectral Trainee",
"Naxxramas",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[69351] = {
"Greater Cave Bat",
"Throne of Thunder",
"enUS",
},
[11456] = {
"Wildspawn Shadowstalker",
"Dire Maul",
"enUS",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[117193] = {
"Agronox",
"Cathedral of Eternal Night",
"enUS",
},
[28961] = {
"Titanium Siegebreaker",
"Halls of Lightning",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[233328] = {
"Savage Bloodhound Mastiff",
"Blackrock Depths",
"enUS",
},
[162729] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[146861] = {
"Slavering Skullcleaver",
"8.1 Darkshore Scenario",
},
[104415] = {
"Chronomatic Anomaly",
"The Nighthold",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[388868] = {
"Cage Door",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[4417] = {
"Defias Taskmaster",
"Deadmines",
"enUS",
},
[73191] = {
"Aqueous Defender",
"Siege of Orgrimmar",
"enUS",
},
[69352] = {
"Vampiric Cave Bat",
"Throne of Thunder",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[205216] = {
"Neptulon's Cache",
"Throne of the Tides",
"enUS",
},
[17397] = {
"Shadowmoon Adept",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[28578] = {
"Hardened Steel Reaver",
"Halls of Lightning",
"enUS",
},
[194467] = {
"Brackenhide Slasher",
"Brackenhide Hollow",
"enUS",
},
[17730] = {
"Murkblood Healer",
"Coilfang: The Underbog",
"enUS",
},
[166266] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[52088] = {
"Gurubashi Cauldron-Mixer",
"Zul'Gurub",
},
[184693] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[76263] = {
"Sargerei Magus",
"Auchindoun",
},
[72424] = {
"Auctioneer Ralinza",
"Siege of Orgrimmar",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[61046] = {
"Jinlun Kun",
"Terrace of Endless Spring",
"enUS",
},
[61174] = {
"Cursed Jade",
"Greenstone Village",
"enUS",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
"enUS",
},
[16700] = {
"Shattered Hand Legionnaire",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[205218] = {
"Spitfire Totem",
"Blackrock Depths",
"enUS",
},
[111071] = {
"Pulsauron",
"The Nighthold",
},
[61814] = {
"Jin Ironfist",
"Crypt of Forgotten Kings",
"enUS",
},
[194469] = {
"Fledgling Slasher",
"Brackenhide Hollow",
"enUS",
},
[15550] = {
"Attumen the Huntsman",
"Karazhan",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[166264] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[72425] = {
"Auctioneer Xifa",
"Siege of Orgrimmar",
"enUS",
},
[130011] = {
"Irontide Buccaneer",
"Freehold",
"enUS",
},
[28581] = {
"Stormforged Tactician",
"Halls of Lightning",
"enUS",
},
[97219] = {
"Solsten",
"Halls of Valor",
},
[212386] = {
"Weapon Rack",
"Heart of Fear",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[26727] = {
"Mage Hunter Ascendant",
"The Nexus",
"enUS",
},
[385684] = {
"Anvil",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[17653] = {
"Shadowmoon Channeler",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[10399] = {
"Thuzadin Acolyte",
"Stratholme",
"enUS",
},
[220065] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[52089] = {
"Gurubashi Worker",
"Zul'Gurub",
},
[24697] = {
"Sister of Torment",
"Magisters' Terrace",
"enUS",
},
[52345] = {
"Pride of Bethekk",
"Zul'Gurub",
},
[272172] = {
"Inconspicuous Note",
"Gnomeregan",
"enUS",
},
[17624] = {
"Laughing Skull Warden",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[130012] = {
"Irontide Ravager",
"Freehold",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[73194] = {
"Kor'kron Iron Scorpion",
"Siege of Orgrimmar",
"enUS",
},
[44752] = {
"Faceless Sapper",
"Throne of the Tides",
"enUS",
},
[282411] = {
"Door",
"Waycrest Manor",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[13022] = {
"Whip Lasher",
"Dire Maul",
"enUS",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[14498] = {
"Tosamina",
"Siege of Orgrimmar",
"enUS",
},
[10435] = {
"Magistrate Barthilas",
"Stratholme",
"enUS",
},
[10467] = {
"Mana Tide Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[282413] = {
"Door",
"Waycrest Manor",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72427] = {
"Orgrimmar Peon",
"Siege of Orgrimmar",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[105699] = {
"Mana Saber",
"Court of Stars",
},
[203688] = {
"Horde Grunt",
"Dawn of the Infinite",
"enUS",
},
[222042] = {
"Shrillwing",
"Nerub-ar Palace",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
"enUS",
},
[6112] = {
"Windfury Totem",
"Heart of Fear",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190174] = {
"Hypnosis Bat",
"Court of Stars",
},
[219045] = {
"Colossal Spider",
"Nerub-ar Palace",
"enUS",
},
[17731] = {
"Fen Ray",
"Coilfang: The Underbog",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[113307] = {
"Chronowraith",
"The Nighthold",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[65581] = {
"Essence of Hate",
"Crypt of Forgotten Kings",
"enUS",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[36478] = {
"Soulguard Watchman",
"The Forge of Souls",
"enUS",
},
[72490] = {
"Overseer Mojka",
"Siege of Orgrimmar",
"enUS",
},
[73452] = {
"Harbinger of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[77803] = {
"Railmaster Rocketspark",
"Grimrail Depot",
},
[69869] = {
"Essence of Anima",
"Throne of Thunder",
"enUS",
},
[111075] = {
"Chaotoid",
"The Nighthold",
},
[202262] = {
"Blazing Dreadsquall",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[111587] = {
"Nether Elemental",
"The Nighthold",
},
[70893] = {
"Lieutenant Blasthammer",
"Naval Battle Scenario",
"enUS",
},
[11459] = {
"Ironbark Protector",
"Dire Maul",
"enUS",
},
[71405] = {
"Set'thik Wind Wielder",
"Siege of Orgrimmar",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[64346] = {
"Parasitoid Sha",
"Terrace of Endless Spring",
"enUS",
},
[68078] = {
"Iron Qon",
"Throne of Thunder",
"enUS",
},
[121569] = {
"Vilebark Walker",
"Cathedral of Eternal Night",
"enUS",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
"enUS",
},
[72941] = {
"Dragonmaw Grunt",
"Siege of Orgrimmar",
"enUS",
},
[73197] = {
"Lesser Sha Puddle",
"Siege of Orgrimmar",
"enUS",
},
[61347] = {
"Kingsguard",
"Mogu'shan Vaults",
"enUS",
},
[73153] = {
"Arcweaver Reinforcements",
"Siege of Orgrimmar",
"enUS",
},
[69870] = {
"Essence of Vita",
"Throne of Thunder",
"enUS",
},
[16194] = {
"Unholy Axe",
"Naxxramas",
"enUS",
},
[219983] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[72351] = {
"Dragonmaw Flagbearer",
"Siege of Orgrimmar",
"enUS",
},
[16034] = {
"Plague Beast",
"Naxxramas",
"enUS",
},
[19843] = {
"Nethervine Trickster",
"Tempest Keep: The Botanica",
"enUS",
},
[62254] = {
"Quilen Watcher",
"Crypt of Forgotten Kings",
"enUS",
},
[230219] = {
"Arcanotron Mk. II",
"Blackrock Depths",
"enUS",
},
[43878] = {
"Grand Vizier Ertan",
"The Vortex Pinnacle",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
"enUS",
},
[72430] = {
"Shan'ti",
"Siege of Orgrimmar",
"enUS",
},
[40446] = {
"Skar'this the Summoner",
"Coilfang: The Slave Pens",
"enUS",
},
[72942] = {
"Dragonmaw Flagbearer",
"Siege of Orgrimmar",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[69871] = {
"Sanguine Horror",
"Throne of Thunder",
"enUS",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[230216] = {
"Magmatron Mk. II",
"Blackrock Depths",
"enUS",
},
[61945] = {
"Gurthan Iron Maw",
"Mogu'shan Palace",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[71407] = {
"Amber",
"Siege of Orgrimmar",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"Kriegval's Rest",
"enUS",
},
[217516] = {
"Nightfall Executor",
"Nightfall Sanctum",
"enUS",
},
[68080] = {
"Quet'zal",
"Throne of Thunder",
"enUS",
},
[225606] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[105703] = {
"Mana Wyrm",
"Court of Stars",
},
[224070] = {
"Remote-Controlled Golem",
"Deadmines",
"enUS",
},
[11492] = {
"Alzzin the Wildshaper",
"Dire Maul",
"enUS",
},
[45412] = {
"Lord Aurius Rivendare",
"Stratholme",
"enUS",
},
[69872] = {
"Crackling Stalker",
"Throne of Thunder",
"enUS",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
"enUS",
},
[56929] = {
"Krik'thik Protectorate",
"Gate of the Setting Sun",
"enUS",
},
[17975] = {
"High Botanist Freywinn",
"Tempest Keep: The Botanica",
"enUS",
},
[17732] = {
"Lykul Wasp",
"Coilfang: The Underbog",
"enUS",
},
[71152] = {
"Skeer the Bloodseeker",
"Siege of Orgrimmar",
"enUS",
},
[71408] = {
"Kun-Da",
"Siege of Orgrimmar",
"enUS",
},
[60410] = {
"Elegon",
"Mogu'shan Vaults",
"enUS",
},
[217518] = {
"Nightfall Inquisitor",
"The Spiral Weave",
"enUS",
},
[68081] = {
"Dam'ren",
"Throne of Thunder",
"enUS",
},
[40319] = {
"Drahga Shadowburner",
"Grim Batol",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[11197] = {
"Mindless Skeleton",
"Stratholme",
"enUS",
},
[212400] = {
"Void-Touched Elemental",
"The Stonevault",
"enUS",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[181578] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[218543] = {
"Feather of Ji-Kun",
"Throne of Thunder",
"enUS",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[181577] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[71153] = {
"Hisek the Swarmkeeper",
"Siege of Orgrimmar",
"enUS",
},
[71409] = {
"Commander Zak'tar",
"Siege of Orgrimmar",
"enUS",
},
[221103] = {
"Hulking Warshell",
"City of Threads",
"enUS",
},
[71921] = {
"Darkfang",
"Siege of Orgrimmar",
"enUS",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
"enUS",
},
[72433] = {
"Mokvar the Treasurer",
"Siege of Orgrimmar",
"enUS",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[105705] = {
"Bound Energy",
"Court of Stars",
},
[63031] = {
"Set'thik Fanatic",
"Heart of Fear",
"enUS",
},
[68024] = {
"Wandering Eye",
"Throne of Thunder",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[211261] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[226617] = {
"Snake",
"Nightfall Sanctum",
"enUS",
},
[43391] = {
"Millhouse Manastorm",
"The Stonecore",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[15931] = {
"Grobbulus",
"Naxxramas",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[121318] = {
"Fulminating Lasher",
"Cathedral of Eternal Night",
"enUS",
},
[72434] = {
"Treasury Guard",
"Siege of Orgrimmar",
"enUS",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
"enUS",
},
[28546] = {
"Ionar",
"Halls of Lightning",
"enUS",
},
[65402] = {
"Gurthan Swiftblade",
"Mogu'shan Palace",
},
[229296] = {
"Orb of Ascendance",
"The Necrotic Wake",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[111081] = {
"Fulminant",
"The Nighthold",
},
[176957] = {
"Shadowsteel Colossus",
"Sanctum of Domination",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
"enUS",
},
[71155] = {
"Korven the Prime",
"Siege of Orgrimmar",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[28695] = {
"Molten Golem",
"Halls of Lightning",
"enUS",
},
[71923] = {
"Bloodclaw",
"Siege of Orgrimmar",
"enUS",
},
[172991] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[221808] = {
"Lightweight Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[186812] = {
"Refreshment Table",
"Mogu'shan Vaults",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[60480] = {
"Titan Spark",
"Mogu'shan Vaults",
"enUS",
},
[72488] = {
"Innkeeper Gryshka",
"Siege of Orgrimmar",
"enUS",
},
[17477] = {
"Hellfire Imp",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[144839] = {
"Whitetail Doe",
"8.1 Darkshore Scenario",
},
[17669] = {
"Rabid Warhound",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[178623] = {
"Mawsworn Guard",
"Sanctum of Domination",
"enUS",
},
[71156] = {
"Kaz'tik the Manipulator",
"Siege of Orgrimmar",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[79463] = {
"Radiant Supernova",
"Skyreach",
},
[69017] = {
"Primordius",
"Throne of Thunder",
"enUS",
},
[272212] = {
"Purple Orb",
"Endless Halls",
"enUS",
},
[52606] = {
"Gurubashi Warmonger",
"Zul'Gurub",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[18309] = {
"Ethereal Scavenger",
"Auchindoun: Mana-Tombs",
"enUS",
},
[208313] = {
"Zanzil's Cauldron of Burning Blood",
"Zul'Gurub",
"enUS",
},
[61436] = {
"Sik'thik Bladedancer",
"Siege of Niuzao Temple",
"enUS",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
"enUS",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[52405] = {
"Mor'Lek the Dismantler",
"Zul'Gurub",
"enUS",
},
[178625] = {
"Mawsworn Archer",
"Sanctum of Domination",
"enUS",
},
[11460] = {
"Alzzin's Minion",
"Dire Maul",
"enUS",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[168246] = {
"Reanimated Crossbowman",
"The Necrotic Wake",
"enUS",
},
[191729] = {
"Freezing Trap",
"The Nexus",
"enUS",
},
[272216] = {
"Green Rune",
"Endless Halls",
"enUS",
},
[144842] = {
"Tide Crawler",
"8.1 Darkshore Scenario",
},
[42973] = {
"Eye of Naxxramas",
"Stratholme",
"enUS",
},
[178626] = {
"Mawrat",
"Sanctum of Domination",
"enUS",
},
[272217] = {
"Red Rune",
"Endless Halls",
"enUS",
},
[208315] = {
"Zanzil's Cauldron of Toxic Torment",
"Zul'Gurub",
"enUS",
},
[77812] = {
"Sargerei Soulbinder",
"Auchindoun",
},
[213434] = {
"Sporbit",
"Mycomancer Cavern",
"enUS",
},
[272218] = {
"Yellow Rune",
"Endless Halls",
"enUS",
},
[94960] = {
"Hymdall",
"Halls of Valor",
},
[223287] = {
"Rope Pile",
"Siege of Orgrimmar",
"enUS",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[16067] = {
"Deathcharger Steed",
"Naxxramas",
"enUS",
},
[75509] = {
"Sadana Bloodfury",
"Shadowmoon Burial Grounds",
},
[221841] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[16163] = {
"Death Knight Cavalier",
"Naxxramas",
"enUS",
},
[272220] = {
"Inconspicuous Note",
"Endless Halls",
"enUS",
},
[71979] = {
"Kor'kron Warbringer",
"Siege of Orgrimmar",
"enUS",
},
[130024] = {
"Soggy Shiprat",
"Freehold",
"enUS",
},
[178628] = {
"Mawsworn Darkcaster",
"Sanctum of Domination",
"enUS",
},
[28547] = {
"Storming Vortex",
"Halls of Lightning",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[148998] = {
"Furious Guardian Spirit",
"Zandalari Treasury",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[223009] = {
"Doodad_Lightray_Dusty_01_toggleable013",
"Siege of Orgrimmar",
"enUS",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[6211] = {
"Caverndeep Reaver",
"Gnomeregan",
"enUS",
},
[223674] = {
"Caustic Skitterer",
"Nerub-ar Palace",
"enUS",
},
[62205] = {
"Wing Leader Ner'onok",
"Siege of Niuzao Temple",
"enUS",
},
[61389] = {
"Kargesh Highguard",
"Mogu'shan Palace",
},
[76310] = {
"Grand Defense Construct",
"Skyreach",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[205759] = {
"Whirling Torrent",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[117484] = {
"Jormog the Behemoth",
"Artifact - Highmountain - Dual Boss",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[175559] = {
"Kel'Thuzad",
"Sanctum of Domination",
"enUS",
},
[17414] = {
"Shadowmoon Technician",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[177095] = {
"Kyra",
"Sanctum of Domination",
"enUS",
},
[67360] = {
"Horde Cannoneer",
"Naval Battle Scenario",
"enUS",
},
[17670] = {
"Shattered Hand Houndmaster",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[17734] = {
"Underbog Lord",
"Coilfang: The Underbog",
"enUS",
},
[30083] = {
"Marauding Geist",
"Naxxramas",
"enUS",
},
[120556] = {
"Dreadwing",
"Cathedral of Eternal Night",
"enUS",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[17990] = {
"Underbog Mushroom",
"Coilfang: The Underbog",
"enUS",
},
[132051] = {
"Blood Tick",
"The Underrot",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[40579] = {
"Deep Murloc Hunter",
"Throne of the Tides",
"enUS",
},
[72486] = {
"Doyo'da",
"Siege of Orgrimmar",
"enUS",
},
[77559] = {
"Solar Magnifier",
"Skyreach",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[221893] = {
"Stout Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[16025] = {
"Stitched Giant",
"Naxxramas",
"enUS",
},
[190406] = {
"Aqualing",
"Halls of Infusion",
"enUS",
},
[15929] = {
"Stalagg",
"Naxxramas",
"enUS",
},
[138195] = {
"Servant of Thros",
"Thros, The Blighted Lands",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[52305] = {
"Toxic Husk",
"Zul'Gurub",
},
[61131] = {
"Mogu'shan Secret-Keeper",
"Mogu'shan Vaults",
"enUS",
},
[109040] = {
"Arcanist Tel'arn",
"The Nighthold",
},
[143002] = {
"Kirin Tor Invoker",
"Thros, The Blighted Lands",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
[379149] = {
"Hoard of Draconic Delicacies",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[60710] = {
"Subetai the Swift",
"Mogu'shan Vaults",
"enUS",
},
[232893] = {
"Anvilrage Warden",
"Blackrock Depths",
"enUS",
},
[77816] = {
"Borka the Brute",
"Grimrail Depot",
},
[59519] = {
"Stout Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[169421] = {
"Felguard",
"Grimrail Depot",
},
[6392] = {
"Holdout Medic",
"Gnomeregan",
"enUS",
},
[216342] = {
"Skittering Assistant",
"City of Threads",
"enUS",
},
[14020] = {
"Chromaggus",
"Blackwing Lair",
},
[146899] = {
"Ashen Deathguard",
"8.1 Darkshore Scenario",
},
[24069] = {
"Dragonflayer Bonecrusher",
"Utgarde Keep",
"enUS",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
"enUS",
},
[222145] = {
"Voracious Stagshell",
"Nerub-ar Palace",
"enUS",
},
[24815] = {
"Sunblade Imp",
"Magisters' Terrace",
"enUS",
},
[95061] = {
"Greater Fire Elemental",
"Dawn of the Infinite",
"enUS",
},
[72954] = {
"Kor'thik Honor Guard",
"Siege of Orgrimmar",
"enUS",
},
[61183] = {
"Belligerent Blossom",
"Greenstone Village",
"enUS",
},
[146900] = {
"Shambling Deadeye",
"8.1 Darkshore Scenario",
},
[6230] = {
"Peacekeeper Security Suit",
"Gnomeregan",
"enUS",
},
[61567] = {
"Vizier Jin'bak",
"Siege of Niuzao Temple",
"enUS",
},
[16216] = {
"Unholy Swords",
"Naxxramas",
"enUS",
},
[267183] = {
"Portal to Dalaran",
"Artifact - Highmountain - Dual Boss",
"enUS",
},
[61448] = {
"Sik'thik Soldier",
"Siege of Niuzao Temple",
"enUS",
},
[10405] = {
"Plague Ghoul",
"Stratholme",
"enUS",
},
[10437] = {
"Nerub'enkan",
"Stratholme",
"enUS",
},
[146901] = {
"Maniacal Apothecary",
"8.1 Darkshore Scenario",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
"enUS",
},
[62847] = {
"Dissonance Field",
"Heart of Fear",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[73723] = {
"Jun-Wei",
"Siege of Orgrimmar",
"enUS",
},
[229826] = {
"Boulder",
"Blackrock Depths",
"enUS",
},
[172312] = {
"Spinemaw Gorger",
"Mists of Tirna Scithe",
"enUS",
},
[169425] = {
"Felhound",
"Skyreach",
},
[17671] = {
"Shattered Hand Champion",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[17735] = {
"Wrathfin Warrior",
"Coilfang: The Underbog",
"enUS",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
"enUS",
},
[71420] = {
"Hungry Kunchong",
"Siege of Orgrimmar",
"enUS",
},
[15956] = {
"Anub'Rekhan",
"Naxxramas",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[7603] = {
"Leprous Assistant",
"Gnomeregan",
"enUS",
},
[69792] = {
"Pheaorrix",
"Mogu'shan Vaults",
"enUS",
},
[118637] = {
"Shadowy Fiend",
"Dread Scar Rift - Warlock Scenario Platform",
"enUS",
},
[18311] = {
"Ethereal Crypt Raider",
"Auchindoun: Mana-Tombs",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[73724] = {
"Zu Yin",
"Siege of Orgrimmar",
"enUS",
},
[15928] = {
"Thaddius",
"Naxxramas",
"enUS",
},
[146714] = {
"Bilegut",
"8.1 Darkshore Scenario",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[17626] = {
"Laughing Skull Legionnaire",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[11461] = {
"Warpwood Guardian",
"Dire Maul",
"enUS",
},
[146905] = {
"Deranged Plaguefiend",
"8.1 Darkshore Scenario",
},
[96247] = {
"Vileshard Crawler",
"Neltharion's Lair",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
"enUS",
},
[112678] = {
"Shal'dorei Naturalist",
"The Nighthold",
},
[169428] = {
"Wrathguard",
"Skyreach",
},
[120374] = {
"Felguard Destroyer",
"Cathedral of Eternal Night",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[218885] = {
"Lever",
"Mogu Island Loot Room",
"enUS",
},
[146906] = {
"Festering Hulk",
"8.1 Darkshore Scenario",
},
[73725] = {
"Xiang-Lin",
"Siege of Orgrimmar",
"enUS",
},
[59521] = {
"Bubbling Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[423915] = {
"Stolen Relic",
"Nightfall Sanctum",
"enUS",
},
[169429] = {
"Shivarra",
"Grimrail Depot",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
"enUS",
},
[16036] = {
"Frenzied Bat",
"Naxxramas",
"enUS",
},
[121711] = {
"Bilespray Lasher",
"Cathedral of Eternal Night",
"enUS",
},
[232902] = {
"Bloodhound Mastiff",
"Blackrock Depths",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[16164] = {
"Shade of Naxxramas",
"Naxxramas",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[169430] = {
"Ur'zul",
"Grimrail Depot",
},
[76309] = {
"Grand Defense Construct",
"Skyreach",
},
[72958] = {
"Dragonmaw Tidal Shaman",
"Siege of Orgrimmar",
"enUS",
},
[61445] = {
"Haiyan the Unstoppable",
"Mogu'shan Palace",
},
[69375] = {
"Hidden Fog",
"Throne of Thunder",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[221907] = {
"Lightweight Crate of Mogu Origin",
"Siege of Orgrimmar",
"enUS",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
"enUS",
},
[62637] = {
"Cursed Brew",
"Greenstone Village",
"enUS",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[15978] = {
"Crypt Reaver",
"Naxxramas",
"enUS",
},
[33966] = {
"Crusher Tentacle",
"Ulduar",
"enUS",
},
[17356] = {
"Creeping Ooze",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[72966] = {
"Resonating Amber",
"Siege of Orgrimmar",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
"enUS",
},
[72191] = {
"Overlord Runthak",
"Siege of Orgrimmar",
"enUS",
},
[15952] = {
"Maexxna",
"Naxxramas",
"enUS",
},
[210894] = {
"Gold Coins",
"Scarlet Halls",
"enUS",
},
[113512] = {
"Putrid Sludge",
"The Nighthold",
},
[29573] = {
"Drakkari Elemental",
"Gundrak",
"enUS",
},
[29637] = {
"Crafty Snake",
"Gundrak",
"enUS",
},
[43014] = {
"Imp",
"The Stonecore",
"enUS",
},
[59522] = {
"Sudsy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[70400] = {
"God-Hulk Gulkan",
"Mogu Island Loot Room",
"enUS",
},
[16151] = {
"Midnight",
"Karazhan",
},
[226459] = {
"Glowmite",
"Nightfall Sanctum",
"enUS",
},
[30085] = {
"Vigilant Shade",
"Naxxramas",
"enUS",
},
[33719] = {
"Emerald Consort",
"Ulduar",
"enUS",
},
[17771] = {
"Murkblood Oracle",
"Coilfang: The Underbog",
"enUS",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[219198] = {
"Ravenous Scarab",
"City of Threads",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[223181] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[105720] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[18312] = {
"Ethereal Spellbinder",
"Auchindoun: Mana-Tombs",
"enUS",
},
[13285] = {
"Death Lash",
"Dire Maul",
"enUS",
},
[61442] = {
"Kuai the Brute",
"Mogu'shan Palace",
},
[10412] = {
"Crypt Crawler",
"Stratholme",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[70401] = {
"Zandalari Arcweaver",
"Mogu Island Loot Room",
"enUS",
},
[223182] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[214251] = {
"Kobyss Witherer",
"Tak-Rethan Abyss",
"enUS",
},
[642] = {
"Sneed's Shredder",
"Deadmines",
"enUS",
},
[19016] = {
"Hellfire Familiar",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[14327] = {
"Lethtendris",
"Dire Maul",
"enUS",
},
[636] = {
"Defias Blackguard",
"Deadmines",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[63106] = {
"Sik'thik Swarmer",
"Siege of Niuzao Temple",
"enUS",
},
[81407] = {
"Grimrail Bombardier",
"Grimrail Depot",
},
[220624] = {
"Suspicious Niffen",
"Tak-Rethan Abyss",
"enUS",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[403731] = {
"Frozen Rune",
"Naxxramas",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"Tak-Rethan Abyss",
"enUS",
},
[101002] = {
"Krosus",
"The Nighthold",
},
[39450] = {
"Trogg Dweller",
"Grim Batol",
"enUS",
},
[214504] = {
"Rasha'nan",
"Nerub-ar Palace",
"enUS",
},
[657] = {
"Defias Pirate",
"Deadmines",
"enUS",
},
[226314] = {
"Moira Bronzebeard",
"Blackrock Depths",
"enUS",
},
[24071] = {
"Dragonflayer Heartsplitter",
"Utgarde Keep",
"enUS",
},
[29774] = {
"Spitting Cobra",
"Gundrak",
"enUS",
},
[72194] = {
"Hellscream Demolisher",
"Siege of Orgrimmar",
"enUS",
},
[226309] = {
"Dope'rel",
"Blackrock Depths",
"enUS",
},
[202481] = {
"Obsidian Tormentor",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"enUS",
},
[40584] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[97788] = {
"Storm Drake",
"Halls of Valor",
},
[220626] = {
"Blood Parasite",
"Nerub-ar Palace",
"enUS",
},
[180782] = {
"Consumed Soul",
"Sanctum of Domination",
"enUS",
},
[41096] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
"enUS",
},
[61699] = {
"Sik'thik Amberwing",
"Siege of Niuzao Temple",
"enUS",
},
[232550] = {
"Prototype Arcane Golem",
"Blackrock Depths",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[10406] = {
"Ghoul Ravener",
"Stratholme",
"enUS",
},
[10438] = {
"Maleki the Pallid",
"Stratholme",
"enUS",
},
[379298] = {
"Forge",
"Ruby Life Pools",
"enUS",
},
[232459] = {
"Weapon Technician",
"Blackrock Depths",
"enUS",
},
[36620] = {
"Soulguard Adept",
"The Forge of Souls",
"enUS",
},
[232593] = {
"Phalanx",
"Blackrock Depths",
"enUS",
},
[72451] = {
"Kor'kron Dark Shaman",
"Siege of Orgrimmar",
"enUS",
},
[15990] = {
"Kel'Thuzad",
"Naxxramas",
"enUS",
},
[24723] = {
"Selin Fireheart",
"Magisters' Terrace",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[210479] = {
"Carnivorous Lasher",
"Mycomancer Cavern",
"enUS",
},
[13196] = {
"Phase Lasher",
"Dire Maul",
"enUS",
},
[231554] = {
"Shadowforge Flame Keeper",
"Blackrock Depths",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[73250] = {
"Kor'kron Wild Gun",
"Siege of Orgrimmar",
"enUS",
},
[290702] = {
"Door",
"Waycrest Manor",
"enUS",
},
[455526] = {
"|cff1EFF00Sturdy Chest",
"Nightfall Sanctum",
"enUS",
},
[72238] = {
"Embodied Despair",
"Siege of Orgrimmar",
"enUS",
},
[175727] = {
"Soulrender Dormazain",
"Sanctum of Domination",
"enUS",
},
[228953] = {
"Skittering Intruder",
"The Spiral Weave",
"enUS",
},
[17993] = {
"Bloodwarder Protector",
"Tempest Keep: The Botanica",
"enUS",
},
[129526] = {
"Bilge Rat Swabby",
"Freehold",
"enUS",
},
[72452] = {
"Kor'kron Dire Wolf",
"Siege of Orgrimmar",
"enUS",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
"enUS",
},
[72964] = {
"Goro'dan",
"Siege of Orgrimmar",
"enUS",
},
[18313] = {
"Ethereal Sorcerer",
"Auchindoun: Mana-Tombs",
"enUS",
},
[175726] = {
"Skyja",
"Sanctum of Domination",
"enUS",
},
[61444] = {
"Ming the Cunning",
"Mogu'shan Palace",
},
[224853] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[52151] = {
"Bloodlord Mandokir",
"Zul'Gurub",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"The Spiral Weave",
"enUS",
},
[17827] = {
"Claw",
"Coilfang: The Underbog",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[11462] = {
"Warpwood Treant",
"Dire Maul",
"enUS",
},
[129371] = {
"Riptide Shredder",
"Siege of Boralus",
"enUS",
},
[226303] = {
"Bael'Gar",
"Blackrock Depths",
"enUS",
},
[100713] = {
"Rockbait Fisher",
"Neltharion's Lair",
"enUS",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[62980] = {
"Imperial Vizier Zor'lok",
"Heart of Fear",
"enUS",
},
[33716] = {
"Influence Tentacle",
"Ulduar",
"enUS",
},
[138220] = {
"Blighted Malice",
"Thros, The Blighted Lands",
},
[69382] = {
"Malignant Ooze",
"Throne of Thunder",
"enUS",
},
[226308] = {
"Vile'rel",
"Blackrock Depths",
"enUS",
},
[226302] = {
"Ambassador Flamelash",
"Blackrock Depths",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[226311] = {
"Hate'rel",
"Blackrock Depths",
"enUS",
},
[64132] = {
"Amber Growth",
"Heart of Fear",
"enUS",
},
[232443] = {
"Twilight Bodyguard",
"Blackrock Depths",
"enUS",
},
[226307] = {
"Anger'rel",
"Blackrock Depths",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
"enUS",
},
[16165] = {
"Necro Knight",
"Naxxramas",
"enUS",
},
[72198] = {
"Empowered Desecrated Weapon",
"Siege of Orgrimmar",
"enUS",
},
[175725] = {
"Eye of the Jailer",
"Sanctum of Domination",
"enUS",
},
[219723] = {
"Royal Whisperer",
"Nerub-ar Palace",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[223839] = {
"Queen's Guard Ge'zah",
"Nerub-ar Palace",
"enUS",
},
[69383] = {
"Quivering Blob",
"Throne of Thunder",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[12422] = {
"Death Talon Dragonspawn",
"Blackwing Lair",
},
[178661] = {
"Mawsworn Interceptor",
"Sanctum of Domination",
"enUS",
},
[29063] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[137405] = {
"Gripping Terror",
"Siege of Boralus",
"enUS",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
"enUS",
},
[72455] = {
"Overseer Komak",
"Siege of Orgrimmar",
"enUS",
},
[203951] = {
"Kobold Skullface",
"Kriegval's Rest",
"enUS",
},
[180387] = {
"Mawsworn Paindrinker",
"Sanctum of Domination",
"enUS",
},
[73223] = {
"Pterrordax",
"Siege of Orgrimmar",
"enUS",
},
[224731] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[135258] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[180781] = {
"Frothing Hound",
"Sanctum of Domination",
"enUS",
},
[221344] = {
"Gloom Hatchling",
"Nerub-ar Palace",
"enUS",
},
[225423] = {
"Volatile Ooze",
"Nerub-ar Palace",
"enUS",
},
[218315] = {
"Kaheti Sentry",
"Nerub-ar Palace",
"enUS",
},
[17826] = {
"Swamplord Musel'ek",
"Coilfang: The Underbog",
"enUS",
},
[67081] = {
"Forgotten King",
"Crypt of Forgotten Kings",
"enUS",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[112638] = {
"Astral Defender",
"The Nighthold",
},
[17994] = {
"Bloodwarder Falconer",
"Tempest Keep: The Botanica",
"enUS",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
"enUS",
},
[72456] = {
"Korgra the Snake",
"Siege of Orgrimmar",
"enUS",
},
[225817] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[223204] = {
"Chamber Guardian",
"Nerub-ar Palace",
"enUS",
},
[18314] = {
"Nexus Stalker",
"Auchindoun: Mana-Tombs",
"enUS",
},
[216648] = {
"Nx",
"City of Threads",
"enUS",
},
[213577] = {
"Spitfire Charger",
"The Waterworks",
"enUS",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[70153] = {
"Fungal Growth",
"Throne of Thunder",
"enUS",
},
[220643] = {
"Deepwater Makura",
"Tak-Rethan Abyss",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
"enUS",
},
[226460] = {
"Undercrawler Hatchling",
"The Dread Pit",
"enUS",
},
[220206] = {
"Crazed Skardyn",
"The Dread Pit",
"enUS",
},
[71433] = {
"Spark of Life",
"Siege of Orgrimmar",
"enUS",
},
[196581] = {
"White Tiger Statue",
"Heart of Fear",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[221855] = {
"Massive Crate of Mantid Origin",
"Siege of Orgrimmar",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[62982] = {
"Voidling",
"Dawn of the Infinite",
"enUS",
},
[180389] = {
"Mawsworn Rageguard",
"Sanctum of Domination",
"enUS",
},
[29064] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[171500] = {
"Shuffling Corpse",
"The Necrotic Wake",
"enUS",
},
[23561] = {
"Soldier of the Frozen Wastes",
"Naxxramas",
"enUS",
},
[71715] = {
"Orgrimmar Faithful",
"Siege of Orgrimmar",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[29128] = {
"Anub'ar Prime Guard",
"Azjol-Nerub",
"enUS",
},
[223200] = {
"Blood Collector",
"Nerub-ar Palace",
"enUS",
},
[23961] = {
"Dragonflayer Ironhelm",
"Utgarde Keep",
"enUS",
},
[14022] = {
"Corrupted Red Whelp",
"Blackwing Lair",
},
[12464] = {
"Death Talon Seether",
"Blackwing Lair",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[24201] = {
"Dalronn the Controller",
"Utgarde Keep",
"enUS",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
"enUS",
},
[229501] = {
"Skeletal Minion",
"Utgarde Keep",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[73226] = {
"Lesser Sha Puddle",
"Siege of Orgrimmar",
"enUS",
},
[29209] = {
"Carrion Beetle",
"Azjol-Nerub",
"enUS",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["ui_parent_scale_tune"] = 1.406249965948519,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["number_region_first_run"] = true,
["saved_cvars"] = {
["nameplateMinAlpha"] = "0.90135484",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelectedAlpha"] = "1",
["nameplateShowAll"] = "1",
["nameplateShowEnemies"] = "1",
["nameplateMotion"] = "0",
["nameplateShowFriends"] = "0",
},
["patch_version"] = 38,
["aura2_y_offset"] = 5,
["login_counter"] = 4168,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1680485200,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1669340967,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 137,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"197697",
"59544",
},
["__TrashAt"] = 1683736482,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
},
["Name"] = "Add - Health Markers [P]",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["__TrashAt"] = 1724372415,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Options"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1724372415,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
["__TrashAt"] = 1724372415,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            self.FrameOverlay.LeapArrow1:Show()\n            self.FrameOverlay.LeapArrow2:Show()\n            self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        local animation = texture.animation\n        animation:Stop()\n        texture:Hide()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1722356313,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 119,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
},
["Name"] = "Cast - Heroic Leap [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Rename Spell",
["Value"] = true,
["Key"] = "bRenameSpell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Name"] = "Spell Name",
["Value"] = "Heroic Leap",
["Key"] = "spellName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color",
["Value"] = false,
["Key"] = "bUseCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["__TrashAt"] = 1724440362,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1719710916,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 79,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["__TrashAt"] = 1725063635,
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["__TrashAt"] = 1732424218,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Countdown",
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["SpellIds"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["__TrashAt"] = 1732424218,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["NpcNames"] = {
},
},
},
["first_run3"] = true,
["ghost_auras"] = {
["auras"] = {
["WARRIOR"] = {
[5] = {
},
},
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
[5] = {
},
},
["ROGUE"] = {
[5] = {
},
},
["MAGE"] = {
[5] = {
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["plate_config"] = {
["global_health_width"] = 112,
["global_health_height"] = 12,
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Hide Neutral Units"] = 1,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Execute Range"] = 1,
["Extra Border"] = 2,
},
["aura_y_offset"] = 5,
},
["Quazii Plater"] = {
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1694734826,
["semver"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["Revision"] = 663,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["SpellIds"] = {
377991,
},
["Prio"] = 99,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Name"] = "Cast - Small Alert [Plater]",
["PlaterCore"] = 1,
["Enabled"] = false,
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1711469681,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 112,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["Name"] = "Aura - Invalidate Unit [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
261265,
261266,
271590,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1711469713,
["semver"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Desc"] = "Add the buff name in the trigger box.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Revision"] = 635,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Prio"] = 99,
["Name"] = "Aura - Buff Alert [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1702402951,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["url"] = "",
["NpcNames"] = {
},
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Enabled"] = false,
["Revision"] = 838,
["semver"] = "",
["version"] = -1,
["Prio"] = 91,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Name"] = "Cast - Very Important [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1711469714,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 371,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["Author"] = "Tercioo-Sylvanas",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "Add the debuff name in the trigger box.",
["Name"] = "Aura - Debuff Alert [Plater]",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["Enabled"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
["animSpeed"] = 0.199999988079071,
["arrowAlpha"] = 1,
["desaturateArrow"] = false,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1712213024,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["Icon"] = 1958262,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["Revision"] = 827,
["semver"] = "",
["NpcNames"] = {
},
["Prio"] = 99,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["SpellIds"] = {
265540,
226304,
375327,
372202,
260894,
226406,
193505,
375348,
413529,
408141,
412215,
197974,
200913,
164357,
169179,
428293,
169929,
372222,
384696,
384868,
387629,
382277,
376892,
376683,
393432,
369409,
382712,
},
["PlaterCore"] = 1,
["Name"] = "Quazii FRONTALS",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Key"] = "animSpeed",
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = false,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Show above the nameplate who is the player fixated",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1711469721,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
["Enabled"] = true,
["Revision"] = 140,
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["Desc"] = "Show the energy amount above the nameplate",
["Name"] = "UnitPower [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Icon"] = 136048,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = false,
["Revision"] = 279,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
"Illusionary Vulpin",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
["Time"] = 1541606626,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 45,
["Options"] = {
},
["Author"] = "抹了油的大叔-白银之手",
["Desc"] = "NameplaterColor with Special Buff ID",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
["SpellIds"] = {
277242,
},
["PlaterCore"] = 1,
["Name"] = "NameplaterColor with Special Buff ID",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Icon"] = "INTERFACE\\ICONS\\Achievement_PVP_P_01",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["useNameplateColor"] = true,
["castBarHeight"] = 6,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1711467377,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["url"] = "",
["Icon"] = 2175503,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 550,
["semver"] = "",
["Name"] = "Explosion Affix M+ [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
273577,
382712,
},
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["NpcNames"] = {
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Time"] = 1694734704,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["Icon"] = 135024,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 72,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Color Change [Plater]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
["Enabled"] = false,
["NpcNames"] = {
"141851",
},
},
{
["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Time"] = 1620152446,
["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["Icon"] = 133006,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["Revision"] = 48,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura - Border Color [Plater]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
["Enabled"] = false,
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = false,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["Name"] = "Aura - Blink by Time Left [Plater]",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local isTanking = UnitDetailedThreatSituation (\"player\", unitId)\n    if (not isTanking) then \n        Plater.SetNameplateColor (unitFrame, \"pink\") \n    end\n    \nend\n\n\n\n\n",
["Time"] = 1550589160,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
"surf darter",
},
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["Revision"] = 5,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local isTanking = UnitDetailedThreatSituation (\"player\", unitId)\n    if (not isTanking) then \n        Plater.SetNameplateColor (unitFrame, \"pink\") \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "New Script",
["OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["Enabled"] = false,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1610463043,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["Icon"] = "INTERFACE\\ICONS\\Spell_Fire_FelFlameStrike",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Revision"] = 1384,
["Options"] = {
},
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
["SpellIds"] = {
258153,
258313,
274569,
278020,
261635,
272700,
268030,
278567,
278602,
258128,
257791,
258938,
265089,
272183,
269972,
270901,
270492,
263215,
268797,
262554,
250368,
278504,
266106,
268309,
269302,
263202,
278755,
272180,
263066,
267273,
265912,
274438,
268317,
268375,
276767,
264105,
270464,
265468,
256897,
280604,
268702,
253583,
278456,
262092,
257270,
267818,
262540,
263318,
257069,
256849,
267459,
268008,
267981,
272659,
264396,
264390,
274400,
269029,
272827,
269266,
263912,
258864,
256955,
265540,
270003,
270507,
257337,
268415,
275907,
268865,
260669,
260280,
265541,
256709,
277596,
276268,
263905,
265781,
257170,
268846,
270514,
258622,
258199,
256627,
259711,
258917,
263891,
268027,
268348,
269313,
272711,
268260,
269399,
268239,
264574,
261563,
257288,
257757,
267899,
255741,
264757,
260894,
263583,
276292,
272874,
264101,
264407,
271456,
262515,
275192,
270084,
257785,
267237,
266951,
267433,
255577,
270891,
267357,
258338,
257169,
270927,
273995,
260926,
264027,
267257,
253721,
260924,
263309,
266206,
268187,
260067,
274507,
276068,
263278,
258317,
256594,
268391,
268230,
260852,
267763,
268706,
264734,
288693,
288694,
270590,
290787,
72286,
},
["Prio"] = 99,
["Name"] = "M+ Important Spells [Plater]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["Enabled"] = false,
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["castColor"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1694734765,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Name"] = "Health Bar Height Mod",
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.5,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Name"] = "Arrow Height",
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["url"] = "",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 695,
["semver"] = "",
["Name"] = "Cast - Ultra Important [P]",
["Prio"] = 99,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
426905,
},
["PlaterCore"] = 1,
["Enabled"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1694734910,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["NpcNames"] = {
},
["Desc"] = "Auto set skull marker",
["Enabled"] = false,
["Revision"] = 67,
["semver"] = "",
["Name"] = "Auto Set Skull",
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = false,
["Revision"] = 234,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1711646355,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["NpcNames"] = {
},
["Desc"] = "Show the energy amount above the nameplate.",
["Enabled"] = true,
["Revision"] = 245,
["semver"] = "",
["Name"] = "Unit - Show Energy [Plater]",
["Prio"] = 99,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Icon"] = 136048,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Time"] = 1694734898,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 1216,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["Name"] = "Cast - Alert + Timer [P]",
["Prio"] = 99,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1694734852,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Desc"] = "Highlight the target name",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["Revision"] = 885,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Frame Height",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameHeight",
},
},
["version"] = -1,
["Prio"] = 99,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Name"] = "Cast - Important Target [P]",
["PlaterCore"] = 1,
["Enabled"] = false,
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = false,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["Name"] = "Fixate by Unit Buff [P]",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castColor"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1694734860,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Name"] = "Amount of Segments",
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Revision"] = 549,
["semver"] = "",
["version"] = -1,
["Prio"] = 99,
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["SpellIds"] = {
373201,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Name"] = "Cast - Glowing [P]",
["PlaterCore"] = 1,
["Enabled"] = false,
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1694734866,
["Options"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["NpcNames"] = {
},
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["Revision"] = 39,
["semver"] = "",
["Name"] = "Cast - Effect After Cast [P]",
["Prio"] = 99,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Enabled"] = false,
["Icon"] = 134229,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1694734891,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.3,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["url"] = "",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["Revision"] = 163,
["semver"] = "",
["version"] = -1,
["Prio"] = 99,
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["Name"] = "Cast - Circle AoE [P]",
["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Enabled"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 572,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Key"] = "nameplateSizeOffset",
["Value"] = 3,
["Name"] = "Nameplate Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Key"] = "skullAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 161,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["Name"] = "Add - Tag Number [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["semver"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Time"] = 1694734836,
["semver"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Desc"] = "Play a very fast flash when the cast start",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["Revision"] = 888,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["SpellIds"] = {
},
["Prio"] = 99,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Name"] = "Cast - Quick Flash [P]",
["PlaterCore"] = 1,
["Enabled"] = false,
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 162,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["Desc"] = "Change the color of  add",
["semver"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1694740636,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Name"] = "Nameplate Scale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["Revision"] = 113,
["semver"] = "",
["version"] = -1,
["Prio"] = 99,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["Name"] = "Add - Non Elite Trash [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Enabled"] = false,
["Icon"] = "interface/addons/plater/media/duck_64",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1694734831,
["semver"] = "",
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["Revision"] = 102,
["Options"] = {
},
["SpellIds"] = {
},
["Prio"] = 99,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Shield Interrupt [P]",
["PlaterCore"] = 1,
["Enabled"] = false,
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1694734893,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["url"] = "",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["Revision"] = 508,
["semver"] = "",
["version"] = -1,
["Prio"] = 99,
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["Name"] = "Cast - Stop Casting [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Enabled"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = false,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["Name"] = "Add - Explode on Die [P]",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Name"] = "Shake Amplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1711515606,
["semver"] = "",
["url"] = "",
["Icon"] = 236209,
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["Enabled"] = true,
["Revision"] = 24,
["Options"] = {
},
["Name"] = "Aura While Casting [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1694734841,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["Revision"] = 74,
["semver"] = "",
["version"] = -1,
["Prio"] = 99,
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Cast - On Going Cast [P]",
["PlaterCore"] = 1,
["Enabled"] = false,
["Icon"] = 4038101,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castbarColor"] = {
1,
0.4313725829124451,
0,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["UID"] = "0x6602f3de1af11f4f",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1712213038,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["Revision"] = 1570,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["Enabled"] = true,
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Prio"] = 99,
["SpellIds"] = {
263365,
395872,
265089,
278755,
266106,
272183,
265523,
202181,
374080,
400386,
88010,
410870,
266209,
342797,
204243,
279118,
225562,
264390,
265346,
264407,
411300,
412378,
412233,
407891,
416139,
165213,
169839,
388863,
387975,
387564,
386025,
386015,
387125,
387596,
373395,
397394,
367503,
372711,
395427,
436841,
},
["PlaterCore"] = 1,
["Name"] = "Quazii MUST INTERRUPT",
["Icon"] = 1305153,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["ScriptType"] = 2,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["saved_cvars_last_change"] = {
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:1600",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1600",
["SoftTargetInteract"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowEnemies"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:1600",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:1600",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater.lua:1600",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:1600",
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:1600",
},
["indicator_raidmark_scale"] = 0.699999988079071,
["aura2_y_offset"] = 0,
["buffs_on_aura2"] = true,
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.49411764705882,
0.49803921568628,
0.50196078431373,
0.96000000089407,
},
["npc_cache"] = {
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[26735] = {
"Azure Scale-Binder",
"The Nexus",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[6232] = {
"Arcane Nullifier X-21",
"Gnomeregan",
"enUS",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[183496] = {
"Foul Gorger",
"Sepulcher of the First Ones",
"enUS",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[213434] = {
"Sporbit",
"Fungal Folly",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
"enUS",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[190406] = {
"Aqualing",
"Halls of Infusion",
"enUS",
},
[379149] = {
"Hoard of Draconic Delicacies",
"Vault of the Incarnates",
"enUS",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
[19507] = {
"Sunseeker Gene-Splicer",
"Tempest Keep: The Botanica",
"enUS",
},
[29774] = {
"Spitting Cobra",
"Gundrak",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[29838] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[219066] = {
"Afflicted Civilian",
"The Rookery",
"enUS",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[23953] = {
"Prince Keleseth",
"Utgarde Keep",
"enUS",
},
[183500] = {
"Thieving Agent",
"Sepulcher of the First Ones",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[183501] = {
"Artificer Xy'mox",
"Sepulcher of the First Ones",
"enUS",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[174802] = {
"Venomous Sniper",
"Plaguefall",
},
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
"enUS",
},
[18420] = {
"Sunseeker Geomancer",
"Tempest Keep: The Botanica",
"enUS",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[26800] = {
"Alliance Berserker",
"The Nexus",
"enUS",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[26928] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
},
[22962] = {
"Mistress of Woe",
"Black Temple",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[131818] = {
"Marked Sister",
"Waycrest Manor",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[197835] = {
"Kaurdyth",
"Vault of the Incarnates",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17429] = {
"Fel Orc Neophyte",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[218306] = {
"Scarab Captain Vul'akan",
"Nerub-ar Palace",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[219586] = {
"Hardened Netting",
"Nerub-ar Palace",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[23954] = {
"Ingvar the Plunderer",
"Utgarde Keep",
"enUS",
},
[187602] = {
"Qalashi Scaleripper",
"10.0 Dragon Isles",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[24082] = {
"Proto-Drake Handler",
"Utgarde Keep",
"enUS",
},
[227775] = {
"Captured Waxtail",
"Nerub-ar Palace",
"enUS",
},
[232893] = {
"Anvilrage Warden",
"Blackrock Depths",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
"enUS",
},
[217541] = {
"Nightfall Initiate",
"Skittering Breach",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[26737] = {
"Crazed Mana-Surge",
"The Nexus",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[26929] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
"enUS",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[29680] = {
"Slad'ran Viper",
"Gundrak",
"enUS",
},
[19509] = {
"Sunseeker Harvester",
"Tempest Keep: The Botanica",
"enUS",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[173280] = {
"Stone Legion Skirmisher",
"Castle Nathria",
"enUS",
},
[39450] = {
"Trogg Dweller",
"Grim Batol",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[218315] = {
"Kaheti Sentry",
"Nerub-ar Palace",
"enUS",
},
[24083] = {
"Enslaved Proto-Drake",
"Utgarde Keep",
"enUS",
},
[131318] = {
"Elder Leaxa",
"The Underrot",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[218316] = {
"Kaheti Vanguard",
"Nerub-ar Palace",
"enUS",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[181982] = {
"Cell Door Lever",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[137716] = {
"Bottom Feeder",
"The MOTHERLODE!!",
},
[218317] = {
"Woven Threadmancer",
"Nerub-ar Palace",
"enUS",
},
[232902] = {
"Bloodhound Mastiff",
"Blackrock Depths",
"enUS",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[384309] = {
"Dragon Tea Set",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[26802] = {
"Alliance Ranger",
"The Nexus",
"enUS",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184533] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
"enUS",
},
[36666] = {
"Spectral Warden",
"The Forge of Souls",
"enUS",
},
[22964] = {
"Priestess of Delight",
"Black Temple",
"enUS",
},
[7800] = {
"Mekgineer Thermaplugg",
"Gnomeregan",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[223181] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[36497] = {
"Bronjahm",
"The Forge of Souls",
"enUS",
},
[227373] = {
"Vicious Spiderling",
"Fungal Folly",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[218320] = {
"Web Acolyte",
"Nerub-ar Palace",
"enUS",
},
[36551] = {
"Spiteful Apparition",
"The Forge of Souls",
"enUS",
},
[173798] = {
"Rat of Unusual Size",
"Castle Nathria",
"enUS",
},
[223182] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[36522] = {
"Soul Horror",
"The Forge of Souls",
"enUS",
},
[228044] = {
"Reno Jackson",
"Kriegval's Rest",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[220624] = {
"Suspicious Niffen",
"Tak-Rethan Abyss",
"enUS",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[29713] = {
"Slad'ran Constrictor",
"Gundrak",
"enUS",
},
[16243] = {
"Plague Slime",
"Naxxramas",
"enUS",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
"enUS",
},
[384317] = {
"Crumpled Schematic",
"Neltharus",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[216275] = {
"Brann's Epic Egg",
"Fungal Folly",
"enUS",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
"enUS",
},
[39388] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[230082] = {
"Tock",
"Karazhan Catacombs",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[23956] = {
"Dragonflayer Strategist",
"Utgarde Keep",
"enUS",
},
[228030] = {
"Sir Finley Mrrgglton",
"Kriegval's Rest",
"enUS",
},
[220626] = {
"Blood Parasite",
"Nerub-ar Palace",
"enUS",
},
[223674] = {
"Caustic Skitterer",
"Nerub-ar Palace",
"enUS",
},
[24084] = {
"Tunneling Ghoul",
"Utgarde Keep",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[138464] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[173800] = {
"Sewer Rat",
"Castle Nathria",
"enUS",
},
[183499] = {
"Hired Muscle",
"Sepulcher of the First Ones",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[183498] = {
"Illicit Collector",
"Sepulcher of the First Ones",
"enUS",
},
[228537] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
"enUS",
},
[451834] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[181224] = {
"Dausegne",
"Sepulcher of the First Ones",
"enUS",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
"enUS",
},
[171500] = {
"Shuffling Corpse",
"The Necrotic Wake",
"enUS",
},
[179944] = {
"Meeting Stone Summoning Portal",
"Black Temple",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[24080] = {
"Dragonflayer Weaponsmith",
"Utgarde Keep",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[185574] = {
"Dominated Saboteur",
"Sepulcher of the First Ones",
"enUS",
},
[184539] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[6225] = {
"Mechano-Tank",
"Gnomeregan",
"enUS",
},
[6233] = {
"Mechanized Sentry",
"Gnomeregan",
"enUS",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
"enUS",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
},
[22965] = {
"Devoted Steward",
"Black Temple",
"enUS",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[118791] = {
"Sturdy Love Fool",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[455914] = {
"Mislaid Curiosity",
"Earthcrawl Mines",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[220119] = {
"Speaker Xanventh",
"Skittering Breach",
"enUS",
},
[422154] = {
"Brann's Cozy Campfire",
"Fungal Folly",
"enUS",
},
[6329] = {
"Irradiated Pillager",
"Gnomeregan",
"enUS",
},
[17975] = {
"High Botanist Freywinn",
"Tempest Keep: The Botanica",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[113930] = {
"Running Bomb",
"Gnomeregan",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[163058] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[17400] = {
"Felguard Annihilator",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[19511] = {
"Nethervine Inciter",
"Tempest Keep: The Botanica",
"enUS",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[17653] = {
"Shadowmoon Channeler",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[29874] = {
"Drakkari Inciter",
"Gundrak",
"enUS",
},
[17624] = {
"Laughing Skull Warden",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[39390] = {
"Twilight Drake",
"Grim Batol",
"enUS",
},
[18421] = {
"Sunseeker Researcher",
"Tempest Keep: The Botanica",
"enUS",
},
[119930] = {
"Dreadwing",
"Cathedral of Eternal Night",
"enUS",
},
[166644] = {
"Artificer Xy'mox",
"Castle Nathria",
"enUS",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[165067] = {
"Margore",
"Castle Nathria",
"enUS",
},
[227507] = {
"Sureki Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[451835] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[19508] = {
"Sunseeker Herbalist",
"Tempest Keep: The Botanica",
"enUS",
},
[229296] = {
"Orb of Ascendance",
"The Necrotic Wake",
"enUS",
},
[76446] = {
"Shadowmoon Dominator",
"Shadowmoon Burial Grounds",
},
[221103] = {
"Hulking Warshell",
"City of Threads",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[165111] = {
"Drust Spiteclaw",
"Mists of Tirna Scithe",
"enUS",
},
[165066] = {
"Huntsman Altimor",
"Castle Nathria",
"enUS",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[228538] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[224731] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[174069] = {
"Hulking Gargon",
"Castle Nathria",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[138247] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[23222] = {
"Bonechewer Brawler",
"Black Temple",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[174070] = {
"Kennel Overseer",
"Castle Nathria",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[165597] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[143622] = {
"Imp Gang Boss",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[174071] = {
"Vicious Gargon",
"Castle Nathria",
"enUS",
},
[19512] = {
"Nethervine Reaper",
"Tempest Keep: The Botanica",
"enUS",
},
[164552] = {
"Rotmarrow Slime",
"Plaguefall",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
"enUS",
},
[19608] = {
"Frayer Wildling",
"Tempest Keep: The Botanica",
"enUS",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[223200] = {
"Blood Collector",
"Nerub-ar Palace",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[214502] = {
"The Bloodbound Horror",
"Nerub-ar Palace",
"enUS",
},
[220130] = {
"Speaker Xanventh",
"Skittering Breach",
"enUS",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[435015] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[18105] = {
"Ghaz'an",
"Coilfang: The Underbog",
"enUS",
},
[220643] = {
"Deepwater Makura",
"Tak-Rethan Abyss",
"enUS",
},
[17977] = {
"Warp Splinter",
"Tempest Keep: The Botanica",
"enUS",
},
[435016] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[435017] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[129928] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[435018] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[221667] = {
"Lost Watcher",
"Nerub-ar Palace",
"enUS",
},
[174842] = {
"Belligerent Waiter",
"Castle Nathria",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[214503] = {
"Sikran",
"Nerub-ar Palace",
"enUS",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
"enUS",
},
[451396] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
"enUS",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[26805] = {
"Alliance Cleric",
"The Nexus",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186812] = {
"Refreshment Table",
"Black Temple",
"enUS",
},
[223204] = {
"Chamber Guardian",
"Nerub-ar Palace",
"enUS",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[128650] = {
"Chopper Redhook",
"Siege of Boralus",
"enUS",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[128651] = {
"Hadal Darkfathom",
"Siege of Boralus",
"enUS",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
"enUS",
},
[182777] = {
"Rygelon",
"Sepulcher of the First Ones",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[214506] = {
"Broodtwister Ovi'nax",
"Nerub-ar Palace",
"enUS",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[227300] = {
"Bile-Soaked Spawn",
"Nerub-ar Palace",
"enUS",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
"enUS",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[17370] = {
"Laughing Skull Enforcer",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[376176] = {
"Meat Storage",
"Brackenhide Hollow",
"enUS",
},
[223207] = {
"Black Blood",
"Nerub-ar Palace",
"enUS",
},
[19513] = {
"Mutate Fear-Shrieker",
"Tempest Keep: The Botanica",
"enUS",
},
[168962] = {
"Reborn Phoenix",
"Castle Nathria",
"enUS",
},
[173568] = {
"Anima Crazed Worker",
"Castle Nathria",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[17626] = {
"Laughing Skull Legionnaire",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[19865] = {
"Mutate Horror",
"Tempest Keep: The Botanica",
"enUS",
},
[119952] = {
"Felguard Destroyer",
"Cathedral of Eternal Night",
"enUS",
},
[128652] = {
"Viq'Goth",
"Siege of Boralus",
"enUS",
},
[138002] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[220138] = {
"Regurgitating Monstrosity",
"Nerub-ar Palace",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[17882] = {
"The Black Stalker",
"Coilfang: The Underbog",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
"enUS",
},
[17978] = {
"Thorngrin the Tender",
"Tempest Keep: The Botanica",
"enUS",
},
[180990] = {
"The Jailer",
"Sepulcher of the First Ones",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[220139] = {
"Slithering Spew",
"Nerub-ar Palace",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
"enUS",
},
[174338] = {
"Stinky Feedhauler",
"Castle Nathria",
"enUS",
},
[36516] = {
"Soulguard Animator",
"The Forge of Souls",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[23223] = {
"Bonechewer Spectator",
"Black Temple",
"enUS",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[222700] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[7849] = {
"Mobile Alert System",
"Gnomeregan",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[455511] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[455512] = {
"|cff1EFF00Sturdy Chest",
"The Waterworks",
"enUS",
},
[376191] = {
"Vault Door",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[188673] = {
"Burning Colossus",
"Vault of the Incarnates",
"enUS",
},
[17371] = {
"Shadowmoon Warlock",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[204536] = {
"Blight Chunk",
"Dawn of the Infinite",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[224240] = {
"Twilight Flamerender",
"Grim Batol",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[376193] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[185346] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
"enUS",
},
[220401] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[222193] = {
"Hollow Frostweaver",
"Nerub-ar Palace",
"enUS",
},
[376196] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
},
[17723] = {
"Bog Giant",
"Coilfang: The Underbog",
"enUS",
},
[221427] = {
"Zekvir",
"Zekvir's Lair",
"enUS",
},
[376195] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[23960] = {
"Dragonflayer Runecaster",
"Utgarde Keep",
"enUS",
},
[168973] = {
"High Torturer Darithos",
"Castle Nathria",
"enUS",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[19962] = {
"Blue Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[464729] = {
"|cff0070ddBountiful Heavy Trunk",
"Fungal Folly",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[121364] = {
"Satirical Animated Book",
"Cathedral of Eternal Night",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[174090] = {
"Nathrian Hierarch",
"Castle Nathria",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[18331] = {
"Ethereal Darkcaster",
"Auchindoun: Mana-Tombs",
"enUS",
},
[214263] = {
"Waxface",
"The Waterworks",
"enUS",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[413046] = {
"Bismuth",
"Earthcrawl Mines",
"enUS",
},
[6218] = {
"Irradiated Slime",
"Gnomeregan",
"enUS",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[6234] = {
"Mechanized Guardian",
"Gnomeregan",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[18587] = {
"Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[174092] = {
"Nathrian Gargon Rider",
"Castle Nathria",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[413049] = {
"Ironclaw",
"Earthcrawl Mines",
"enUS",
},
[218103] = {
"Nerubian Lord",
"The Dread Pit",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[181271] = {
"Dreaming Glory",
"Tempest Keep: The Botanica",
"enUS",
},
[232443] = {
"Twilight Bodyguard",
"Blackrock Depths",
"enUS",
},
[186128] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[192520] = {
"Altar of the Drakkari Colossus",
"Gundrak",
"enUS",
},
[413563] = {
"|cff1EFF00Heavy Trunk",
"Earthcrawl Mines",
"enUS",
},
[165138] = {
"Blight Bag",
"The Necrotic Wake",
"enUS",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[233205] = {
"Anvilrage Dragoon",
"Blackrock Depths",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[7079] = {
"Viscous Fallout",
"Gnomeregan",
"enUS",
},
[201738] = {
"Renewed Hatchling",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[223995] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[222455] = {
"Black Blood Harvester",
"Nerub-ar Palace",
"enUS",
},
[185268] = {
"Ebonsteel Construct",
"Sepulcher of the First Ones",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[192518] = {
"Altar of Slad'ran",
"Gundrak",
"enUS",
},
[28695] = {
"Molten Golem",
"Halls of Lightning",
"enUS",
},
[226305] = {
"Emperor Dagran Thaurissan",
"Blackrock Depths",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[298935] = {
"Bench",
"Siege of Boralus",
"enUS",
},
[185610] = {
"Unmade Steward",
"Sepulcher of the First Ones",
"enUS",
},
[181011] = {
"Ancient Guardian",
"Sepulcher of the First Ones",
"enUS",
},
[233203] = {
"Flamewalker",
"Blackrock Depths",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17724] = {
"Underbat",
"Coilfang: The Underbog",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[221945] = {
"Forgotten Harbinger",
"Nerub-ar Palace",
"enUS",
},
[23961] = {
"Dragonflayer Ironhelm",
"Utgarde Keep",
"enUS",
},
[136483] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[216320] = {
"The Coaglamation",
"City of Threads",
"enUS",
},
[167956] = {
"Dark Acolyte",
"Sanguine Depths",
},
[17980] = {
"Laj",
"Tempest Keep: The Botanica",
"enUS",
},
[184594] = {
"Portal to Shattrath",
"Black Temple",
"enUS",
},
[40166] = {
"Molten Giant",
"Grim Batol",
"enUS",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
},
[401814] = {
"Void-Touched Chest",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[222214] = {
"Frenzied Leaper",
"Nerub-ar Palace",
"enUS",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[222459] = {
"Congealing Mass",
"Nerub-ar Palace",
"enUS",
},
[379299] = {
"Anvil",
"Ruby Life Pools",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
"enUS",
},
[226304] = {
"Lord Incendius",
"Blackrock Depths",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[24078] = {
"Dragonflayer Metalworker",
"Utgarde Keep",
"enUS",
},
[115484] = {
"Fel Bat",
"Return to Karazhan",
"enUS",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[174100] = {
"Nathrian Singuard",
"Castle Nathria",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[220158] = {
"Under-Lord Vik'tis",
"The Dread Pit",
"enUS",
},
[222461] = {
"Congealed Mass",
"Nerub-ar Palace",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
"enUS",
},
[445633] = {
"Challenger's Cache",
"The Dawnbreaker",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
"enUS",
},
[210437] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[226307] = {
"Anger'rel",
"Blackrock Depths",
"enUS",
},
[172312] = {
"Spinemaw Gorger",
"Mists of Tirna Scithe",
"enUS",
},
[216328] = {
"Unstable Test Subject",
"City of Threads",
"enUS",
},
[222368] = {
"Exalted Priest",
"Nerub-ar Palace",
"enUS",
},
[226302] = {
"Ambassador Flamelash",
"Blackrock Depths",
"enUS",
},
[218370] = {
"Queen Ansurek",
"Nerub-ar Palace",
"enUS",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[220065] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[17725] = {
"Underbog Lurker",
"Coilfang: The Underbog",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[226303] = {
"Bael'Gar",
"Blackrock Depths",
"enUS",
},
[379298] = {
"Forge",
"Ruby Life Pools",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[464761] = {
"|cff0070ddBountiful Heavy Trunk",
"Fungal Folly",
"enUS",
},
[78001] = {
"Cloudburst Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[168988] = {
"Overgrowth",
"Mists of Tirna Scithe",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[134701] = {
"Blood Effigy",
"The Underrot",
},
[206602] = {
"Guild Chest",
"Vault of the Incarnates",
"enUS",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
"enUS",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[220164] = {
"Darkened Husk",
"The Dread Pit",
"enUS",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
"enUS",
},
[246779] = {
"Font of Power",
"Halls of Infusion",
"enUS",
},
[206603] = {
"Guild Chest",
"Vault of the Incarnates",
"enUS",
},
[413590] = {
"|cffA335EEBountiful Coffer",
"Fungal Folly",
"enUS",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
"enUS",
},
[226306] = {
"Golem Lord Argelmach",
"Blackrock Depths",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"Earthcrawl Mines",
"enUS",
},
[28920] = {
"Stormforged Giant",
"Halls of Lightning",
"enUS",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[22939] = {
"Temple Acolyte",
"Black Temple",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[216584] = {
"Nerubian Captain",
"Earthcrawl Mines",
"enUS",
},
[222981] = {
"Fatal Nightmare",
"Nerub-ar Palace",
"enUS",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[29240] = {
"Stormforged Lieutenant",
"Halls of Lightning",
"enUS",
},
[17726] = {
"Wrathfin Myrmidon",
"Coilfang: The Underbog",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[226308] = {
"Vile'rel",
"Blackrock Depths",
"enUS",
},
[220423] = {
"Retired Lord Vul'azak",
"City of Threads",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
"enUS",
},
[23419] = {
"Essence of Desire",
"Black Temple",
"enUS",
},
[226309] = {
"Dope'rel",
"Blackrock Depths",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Ruby Life Pools",
"enUS",
},
[226312] = {
"Seeth'rel",
"Blackrock Depths",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[201746] = {
"Sundered Naturalist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[226459] = {
"Glowmite",
"Tak-Rethan Abyss",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184603] = {
"Ancient Bufonid",
"Sepulcher of the First Ones",
"enUS",
},
[226313] = {
"Gloom'rel",
"Blackrock Depths",
"enUS",
},
[28825] = {
"Cyclone",
"Halls of Lightning",
"enUS",
},
[226311] = {
"Hate'rel",
"Blackrock Depths",
"enUS",
},
[202262] = {
"Blazing Dreadsquall",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163622] = {
"Goregrind Bits",
"The Necrotic Wake",
"enUS",
},
[384944] = {
"Reverberating Boulder",
"Vault of the Incarnates",
"enUS",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[181278] = {
"Ancient Lichen",
"Auchindoun: Mana-Tombs",
"enUS",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[163623] = {
"Rotspew Leftovers",
"The Necrotic Wake",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[197801] = {
"Awakened Terrasentry",
"Vault of the Incarnates",
"enUS",
},
[181279] = {
"Netherbloom",
"Tempest Keep: The Botanica",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
"enUS",
},
[118690] = {
"Wrathguard Invader",
"Cathedral of Eternal Night",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[26746] = {
"Crazed Mana-Wraith",
"The Nexus",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214801] = {
"Skipper",
"Nerub-ar Palace",
"enUS",
},
[173604] = {
"Sinister Antiquarian",
"Castle Nathria",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[22876] = {
"Coilskar Soothsayer",
"Black Temple",
"enUS",
},
[165560] = {
"Gormling Larva",
"Mists of Tirna Scithe",
"enUS",
},
[226315] = {
"Lord Roccor",
"Blackrock Depths",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[23420] = {
"Essence of Anger",
"Black Temple",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[29305] = {
"Moorabi",
"Gundrak",
"enUS",
},
[226316] = {
"General Angerforge",
"Blackrock Depths",
"enUS",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[232458] = {
"Doomforge Arcanasmith",
"Blackrock Depths",
"enUS",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
"enUS",
},
[207638] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
},
[19486] = {
"Sunseeker Chemist",
"Tempest Keep: The Botanica",
"enUS",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
"enUS",
},
[207639] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"Tak-Rethan Abyss",
"enUS",
},
[180773] = {
"Vigilant Guardian",
"Sepulcher of the First Ones",
"enUS",
},
[190496] = {
"Terros",
"Vault of the Incarnates",
"enUS",
},
[17727] = {
"Wrathfin Sentry",
"Coilfang: The Underbog",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[455073] = {
"Feast of the Midnight Masquerade",
"The Necrotic Wake",
"enUS",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
"enUS",
},
[173609] = {
"Nathrian Conservator",
"Castle Nathria",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[440229] = {
"Minecart",
"The Stonevault",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[376264] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[201756] = {
"Jurvichious",
"Dawn of the Infinite",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"Tak-Rethan Abyss",
"enUS",
},
[28410] = {
"Dragonflayer Spiritualist",
"Utgarde Keep",
"enUS",
},
[54983] = {
"Treant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[455072] = {
"Feast of the Divine Day",
"Nerub-ar Palace",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[454049] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[177193] = {
"Doom Portal",
"Nerub-ar Palace",
"enUS",
},
[216342] = {
"Skittering Assistant",
"City of Threads",
"enUS",
},
[232464] = {
"Shadowforge Senator",
"Blackrock Depths",
"enUS",
},
[18431] = {
"Ethereal Beacon",
"Auchindoun: Mana-Tombs",
"enUS",
},
[163122] = {
"Brittlebone Warrior",
"The Necrotic Wake",
"enUS",
},
[455074] = {
"The Sushi Special",
"The Stonevault",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[232463] = {
"Twilight's Hammer Ambassador",
"Blackrock Depths",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
"enUS",
},
[189988] = {
"Thing From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[6219] = {
"Corrosive Lurker",
"Gnomeregan",
"enUS",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[224276] = {
"Twilight Enforcer",
"Grim Batol",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[173613] = {
"Nathrian Registrar",
"Castle Nathria",
"enUS",
},
[423349] = {
"Sacred Flame",
"Priory of the Sacred Flame",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[181546] = {
"Prototype of Renewal",
"Sepulcher of the First Ones",
"enUS",
},
[29306] = {
"Gal'darah",
"Gundrak",
"enUS",
},
[232465] = {
"Dark Iron Imperial Guard",
"Blackrock Depths",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[29836] = {
"Drakkari Battle Rider",
"Gundrak",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[199715] = {
"Nokhud Battleguard",
"The Nokhud Offensive",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[181548] = {
"Prototype of Absolution",
"Sepulcher of the First Ones",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[17728] = {
"Murkblood Tribesman",
"Coilfang: The Underbog",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
"enUS",
},
[181549] = {
"Prototype of War",
"Sepulcher of the First Ones",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[222235] = {
"Bloodthirsty Swarmer",
"Nerub-ar Palace",
"enUS",
},
[164406] = {
"Shriekwing",
"Castle Nathria",
"enUS",
},
[225817] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168246] = {
"Reanimated Crossbowman",
"The Necrotic Wake",
"enUS",
},
[229399] = {
"Blood Drainer",
"Nerub-ar Palace",
"enUS",
},
[119977] = {
"Stranglevine Lasher",
"Cathedral of Eternal Night",
"enUS",
},
[164407] = {
"Sludgefist",
"Castle Nathria",
"enUS",
},
[136005] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
},
[202789] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[26716] = {
"Azure Warder",
"The Nexus",
"enUS",
},
[136006] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[119978] = {
"Fulminating Lasher",
"Cathedral of Eternal Night",
"enUS",
},
[28923] = {
"Loken",
"Halls of Lightning",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[184623] = {
"Ancient Avian",
"Sepulcher of the First Ones",
"enUS",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[22898] = {
"Supremus",
"Black Temple",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[135240] = {
"Soul Essence",
"UNKNOWN",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[184880] = {
"Dominated Disrupter",
"Sepulcher of the First Ones",
"enUS",
},
[29307] = {
"Drakkari Colossus",
"Gundrak",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
"enUS",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[236056] = {
"Stool",
"FW Horde Garrison Level 3",
"enUS",
},
[220193] = {
"Sureki Venomblade",
"City of Threads",
"enUS",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
"enUS",
},
[114350] = {
"Shade of Medivh",
"Return to Karazhan",
"enUS",
},
[17377] = {
"Keli'dan the Breaker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[118700] = {
"Felblight Stalker",
"Cathedral of Eternal Night",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[11859] = {
"Doomguard",
"Nerub-ar Palace",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[29819] = {
"Drakkari Lancer",
"Gundrak",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
"enUS",
},
[181556] = {
"Adamantite Deposit",
"Auchindoun: Mana-Tombs",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[17729] = {
"Murkblood Spearman",
"Coilfang: The Underbog",
"enUS",
},
[197793] = {
"Awakened Juggernaut",
"Vault of the Incarnates",
"enUS",
},
[184627] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
"enUS",
},
[236058] = {
"Stool",
"FW Horde Garrison Level 3",
"enUS",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
"enUS",
},
[185584] = {
"Naj'entus Spine",
"UNKNOWN",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[221986] = {
"Blood Horror",
"Nerub-ar Palace",
"enUS",
},
[16193] = {
"Skeletal Smith",
"Naxxramas",
"enUS",
},
[16145] = {
"Death Knight Captain",
"Naxxramas",
"enUS",
},
[172858] = {
"Stone Legion Goliath",
"Castle Nathria",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[236060] = {
"Doodad_6oc_orcclans_bench002",
"FW Horde Garrison Level 3",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
"enUS",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
"enUS",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[138061] = {
"Venture Co. Longshoreman",
"The MOTHERLODE!!",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[167999] = {
"Echo of Sin",
"Castle Nathria",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
"enUS",
},
[120366] = {
"Hellblaze Temptress",
"Cathedral of Eternal Night",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[118703] = {
"Felborne Botanist",
"Cathedral of Eternal Night",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
},
[138063] = {
"Posh Vacationer",
"The MOTHERLODE!!",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
"enUS",
},
[220199] = {
"Battle Scarab",
"City of Threads",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[210478] = {
"Infected Beast",
"Fungal Folly",
"enUS",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[17826] = {
"Swamplord Musel'ek",
"Coilfang: The Underbog",
"enUS",
},
[163503] = {
"Etherdiver",
"Spires of Ascension",
},
[165189] = {
"Gondria",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[138064] = {
"Posh Vacationer",
"The MOTHERLODE!!",
},
[210479] = {
"Carnivorous Lasher",
"Fungal Folly",
"enUS",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[118704] = {
"Dul'zak",
"Cathedral of Eternal Night",
"enUS",
},
[402922] = {
"Suspicious Lever",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[236065] = {
"Bench",
"FW Horde Garrison Level 3",
"enUS",
},
[29820] = {
"Drakkari God Hunter",
"Gundrak",
"enUS",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[216619] = {
"Orator Krix'vizk",
"City of Threads",
"enUS",
},
[101437] = {
"Burning Geode",
"Neltharion's Lair",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[17730] = {
"Murkblood Healer",
"Coilfang: The Underbog",
"enUS",
},
[380921] = {
"Lost Tome of Tyr",
"Uldaman: Legacy of Tyr",
"enUS",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[173633] = {
"Nathrian Archivist",
"Castle Nathria",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[7603] = {
"Leprous Assistant",
"Gnomeregan",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[208945] = {
"Dwarven Bomber",
"Dawn of the Infinite",
"enUS",
},
[381946] = {
"Challenger's Cache",
"The Azure Vault",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[444374] = {
"Minecart",
"The Stonevault",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[36916] = {
"Ghoul Minion",
"The Forge of Souls",
"enUS",
},
[378898] = {
"Yusa's Hearty Stew",
"Vault of the Incarnates",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[26782] = {
"Crystalline Keeper",
"The Nexus",
"enUS",
},
[381955] = {
"Challenger's Cache",
"Ruby Life Pools",
"enUS",
},
[380930] = {
"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
"enUS",
},
[28926] = {
"Spark of Ionar",
"Halls of Lightning",
"enUS",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[205365] = {
"Time-Lost Tidehunter",
"Dawn of the Infinite",
"enUS",
},
[114364] = {
"Mana-Gorged Wyrm",
"Return to Karazhan",
"enUS",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[226100] = {
"Kaheti Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[205366] = {
"Time-Lost Wakethrasher",
"Dawn of the Infinite",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23232] = {
"Mutant War Hound",
"Black Temple",
"enUS",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
"enUS",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[381966] = {
"Challenger's Cache",
"The Nokhud Offensive",
"enUS",
},
[164427] = {
"Reanimated Warrior",
"The Necrotic Wake",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[120371] = {
"Helblaze Imp",
"Cathedral of Eternal Night",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[135002] = {
"Demonic Tyrant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[135258] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[211262] = {
"Ixkreten the Unbreakable",
"The Dawnbreaker",
"enUS",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[185154] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
"enUS",
},
[380927] = {
"Crumbling Rock Vein",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17732] = {
"Lykul Wasp",
"Coilfang: The Underbog",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[380928] = {
"Crumbling Rock Vein",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17731] = {
"Fen Ray",
"Coilfang: The Underbog",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
},
[185155] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
"enUS",
},
[380929] = {
"Crumbling Rock Vein",
"Uldaman: Legacy of Tyr",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[16146] = {
"Death Knight",
"Naxxramas",
"enUS",
},
[138338] = {
"Reanimated Guardian",
"The Underrot",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
"enUS",
},
[173145] = {
"Gorging Mite",
"Castle Nathria",
"enUS",
},
[380931] = {
"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[129208] = {
"Dread Captain Lockwood",
"Siege of Boralus",
"enUS",
},
[208441] = {
"Water Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[226617] = {
"Snake",
"Fungal Folly",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[232247] = {
"Anvilrage Officer",
"Blackrock Depths",
"enUS",
},
[303147] = {
"Summoning Portal",
"Black Temple",
"enUS",
},
[165470] = {
"Nathrian Executor",
"Castle Nathria",
"enUS",
},
[184733] = {
"Dominated Grunt",
"Sepulcher of the First Ones",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[303148] = {
"Soulwell",
"Black Temple",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
},
[120374] = {
"Felguard Destroyer",
"Cathedral of Eternal Night",
"enUS",
},
[224066] = {
"Sureki Vanguard",
"Nerub-ar Palace",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[223541] = {
"Stolen Loader",
"Earthcrawl Mines",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
"enUS",
},
[92612] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[17381] = {
"The Maker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[17414] = {
"Shadowmoon Technician",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17252] = {
"Az-amal",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[29630] = {
"Fanged Pit Viper",
"Gundrak",
"enUS",
},
[17380] = {
"Broggok",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[211261] = {
"Ascendant Vis'coxria",
"The Dawnbreaker",
"enUS",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[29822] = {
"Drakkari Fire Weaver",
"Gundrak",
"enUS",
},
[232327] = {
"Harbinger of Flames",
"Blackrock Depths",
"enUS",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[381967] = {
"Challenger's Cache",
"Algeth'ar Academy",
"enUS",
},
[23970] = {
"Vrykul Skeleton",
"Utgarde Keep",
"enUS",
},
[29982] = {
"Drakkari Raider",
"Gundrak",
"enUS",
},
[184651] = {
"Subjugator Zeltoth",
"Sepulcher of the First Ones",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
},
[19843] = {
"Nethervine Trickster",
"Tempest Keep: The Botanica",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[232252] = {
"Anvilrage Rogue",
"Blackrock Depths",
"enUS",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[378899] = {
"Grand Banquet of the Kalu'ak",
"Halls of Infusion",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[225606] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[232245] = {
"Anvilrage Dragoon",
"Blackrock Depths",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
"enUS",
},
[133990] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[222786] = {
"Parasitic Worm",
"Nerub-ar Palace",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[18404] = {
"Bloodwarder Steward",
"Tempest Keep: The Botanica",
"enUS",
},
[118714] = {
"Hellblaze Temptress",
"Cathedral of Eternal Night",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[182607] = {
"Proximity Bomb",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"The Waterworks",
"enUS",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[232254] = {
"Fireguard Destroyer",
"Blackrock Depths",
"enUS",
},
[217485] = {
"Nightfall Lookout",
"Skittering Breach",
"enUS",
},
[222275] = {
"Training Dummy",
"Nerub-ar Palace",
"enUS",
},
[219198] = {
"Ravenous Scarab",
"City of Threads",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
},
[232248] = {
"Anvilrage Soldier",
"Blackrock Depths",
"enUS",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
"enUS",
},
[214343] = {
"Kobyss Trickster",
"Tak-Rethan Abyss",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[336432] = {
"Lavish Refreshment Table",
"Vault of the Incarnates",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[173142] = {
"Dread Feaster",
"Castle Nathria",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"Tak-Rethan Abyss",
"enUS",
},
[215435] = {
"Foreseer Xix'amon",
"Nerub-ar Palace",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[229691] = {
"Swarmbot",
"Awakening The Machine",
"enUS",
},
[23394] = {
"Promenade Sentinel",
"Black Temple",
"enUS",
},
[232250] = {
"Anvilrage Enforcer",
"Blackrock Depths",
"enUS",
},
[165472] = {
"Nathrian Siphoner",
"Castle Nathria",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
"enUS",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
"enUS",
},
[118716] = {
"Bilespray Lasher",
"Cathedral of Eternal Night",
"enUS",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
"enUS",
},
[17477] = {
"Hellfire Imp",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[218440] = {
"Kaheti War Banner",
"Nerub-ar Palace",
"enUS",
},
[213577] = {
"Spitfire Charger",
"The Waterworks",
"enUS",
},
[232258] = {
"Houndmaster Grebmar",
"Blackrock Depths",
"enUS",
},
[219725] = {
"Chitin Knight",
"Nerub-ar Palace",
"enUS",
},
[184659] = {
"Dominated Sentinel",
"Sepulcher of the First Ones",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[222273] = {
"Sureki Silkbow",
"Nerub-ar Palace",
"enUS",
},
[164517] = {
"Tred'ova",
"Mists of Tirna Scithe",
"enUS",
},
[165469] = {
"Nathrian Enforcer",
"Castle Nathria",
"enUS",
},
[118717] = {
"Helblaze Imp",
"Cathedral of Eternal Night",
"enUS",
},
[233282] = {
"Refreshment Table",
"Vault of the Incarnates",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[222274] = {
"Sureki Darkblade",
"Nerub-ar Palace",
"enUS",
},
[231554] = {
"Shadowforge Flame Keeper",
"Blackrock Depths",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[192337] = {
"Void Tendril",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[229695] = {
"Corrupted Machinist",
"Awakening The Machine",
"enUS",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[18309] = {
"Ethereal Scavenger",
"Auchindoun: Mana-Tombs",
"enUS",
},
[18341] = {
"Pandemonius",
"Auchindoun: Mana-Tombs",
"enUS",
},
[226625] = {
"Cave Skipper",
"Fungal Folly",
"enUS",
},
[18405] = {
"Tempest-Forge Peacekeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[220485] = {
"Peculiar Nerubian",
"The Spiral Weave",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[129371] = {
"Riptide Shredder",
"Siege of Boralus",
"enUS",
},
[29768] = {
"Unyielding Constrictor",
"Gundrak",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[22947] = {
"Mother Shahraz",
"Black Temple",
"enUS",
},
[218439] = {
"Sureki War Banner",
"Nerub-ar Palace",
"enUS",
},
[216648] = {
"Nx",
"City of Threads",
"enUS",
},
[118719] = {
"Wyrmtongue Scavenger",
"Cathedral of Eternal Night",
"enUS",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[23235] = {
"Bonechewer Blade Fury",
"Black Temple",
"enUS",
},
[165474] = {
"Nathrian Assassin",
"Castle Nathria",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[19557] = {
"Greater Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[214348] = {
"Undersea Abomination",
"Tak-Rethan Abyss",
"enUS",
},
[185946] = {
"Frost Trap",
"Black Temple",
"enUS",
},
[223876] = {
"Impaling Spike",
"Nerub-ar Palace",
"enUS",
},
[219983] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[17734] = {
"Underbog Lord",
"Coilfang: The Underbog",
"enUS",
},
[232266] = {
"Doomforge Mechanic",
"Blackrock Depths",
"enUS",
},
[219984] = {
"Xeph'itik",
"City of Threads",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
"enUS",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
"enUS",
},
[17990] = {
"Underbog Mushroom",
"Coilfang: The Underbog",
"enUS",
},
[219723] = {
"Royal Whisperer",
"Nerub-ar Palace",
"enUS",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[232268] = {
"Chiseled War Construct",
"Blackrock Depths",
"enUS",
},
[23397] = {
"Illidari Blood Lord",
"Black Temple",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[219724] = {
"Court Attendant",
"Nerub-ar Palace",
"enUS",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
"enUS",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[26722] = {
"Azure Magus",
"The Nexus",
"enUS",
},
[230216] = {
"Magmatron Mk. II",
"Blackrock Depths",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[28961] = {
"Titanium Siegebreaker",
"Halls of Lightning",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[230217] = {
"Toxitron Mk. II",
"Blackrock Depths",
"enUS",
},
[22948] = {
"Gurtogg Bloodboil",
"Black Temple",
"enUS",
},
[218447] = {
"Web Cocoon",
"Nerub-ar Palace",
"enUS",
},
[165481] = {
"Court Assassin",
"Castle Nathria",
"enUS",
},
[120770] = {
"Felguard Destroyer",
"Cathedral of Eternal Night",
"enUS",
},
[213895] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[229706] = {
"Explosive Bomberbot",
"Awakening The Machine",
"enUS",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[183398] = {
"Ancient Sentinel",
"Sepulcher of the First Ones",
"enUS",
},
[23236] = {
"Bonechewer Shield Disciple",
"Black Temple",
"enUS",
},
[28578] = {
"Hardened Steel Reaver",
"Halls of Lightning",
"enUS",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[220501] = {
"Royal Shackles",
"Nerub-ar Palace",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"The Waterworks",
"enUS",
},
[223822] = {
"Queen's Guard Re'zah",
"Nerub-ar Palace",
"enUS",
},
[230219] = {
"Arcanotron Mk. II",
"Blackrock Depths",
"enUS",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[181859] = {
"Volatile Materium",
"Sepulcher of the First Ones",
"enUS",
},
[118724] = {
"Helblaze Felbringer",
"Cathedral of Eternal Night",
"enUS",
},
[204127] = {
"Kobold Taskfinder",
"The Waterworks",
"enUS",
},
[26729] = {
"Steward",
"The Nexus",
"enUS",
},
[418860] = {
"Portal to Valdrakken",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[207454] = {
"Fungal Gutter",
"Fungal Folly",
"enUS",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[19016] = {
"Hellfire Familiar",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[17735] = {
"Wrathfin Warrior",
"Coilfang: The Underbog",
"enUS",
},
[454188] = {
"Spoils of K'aresh",
"Nerub-ar Palace",
"enUS",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[114247] = {
"The Curator",
"Return to Karazhan",
"enUS",
},
[28584] = {
"Unbound Firestorm",
"Halls of Lightning",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[18317] = {
"Ethereal Priest",
"Auchindoun: Mana-Tombs",
"enUS",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[16164] = {
"Shade of Naxxramas",
"Naxxramas",
"enUS",
},
[222042] = {
"Shrillwing",
"Nerub-ar Palace",
"enUS",
},
[232269] = {
"Fineous Darkvire",
"Blackrock Depths",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[16244] = {
"Infectious Ghoul",
"Naxxramas",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[36478] = {
"Soulguard Watchman",
"The Forge of Souls",
"enUS",
},
[207450] = {
"Fungal Stabber",
"Fungal Folly",
"enUS",
},
[18311] = {
"Ethereal Crypt Raider",
"Auchindoun: Mana-Tombs",
"enUS",
},
[18343] = {
"Tavarok",
"Auchindoun: Mana-Tombs",
"enUS",
},
[18312] = {
"Ethereal Spellbinder",
"Auchindoun: Mana-Tombs",
"enUS",
},
[28579] = {
"Hardened Steel Berserker",
"Halls of Lightning",
"enUS",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[26723] = {
"Keristrasza",
"The Nexus",
"enUS",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[100943] = {
"Earthen Wall Totem",
"Grim Batol",
"enUS",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
},
[183407] = {
"Eternal Artisan",
"Sepulcher of the First Ones",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[22949] = {
"Gathios the Shatterer",
"Black Temple",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Fungal Folly",
"enUS",
},
[222038] = {
"Shrillwing Hunter En'kilah",
"Nerub-ar Palace",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[23237] = {
"Bonechewer Blood Prophet",
"Black Temple",
"enUS",
},
[224853] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[223318] = {
"Devoted Worshipper",
"Nerub-ar Palace",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[120778] = {
"Wrathguard Invader",
"Cathedral of Eternal Night",
"enUS",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[222305] = {
"Palace Guardian",
"Nerub-ar Palace",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[29826] = {
"Drakkari Medicine Man",
"Gundrak",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"The Dread Pit",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
"enUS",
},
[129879] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[207456] = {
"Fungal Speartender",
"Fungal Folly",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[183404] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
"enUS",
},
[168058] = {
"Infused Quill-feather",
"Sanguine Depths",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[24069] = {
"Dragonflayer Bonecrusher",
"Utgarde Keep",
"enUS",
},
[188522] = {
"Arcane Trap",
"The Nexus",
"enUS",
},
[16165] = {
"Necro Knight",
"Naxxramas",
"enUS",
},
[219739] = {
"Infested Spawn",
"Nerub-ar Palace",
"enUS",
},
[117194] = {
"Thrashbite the Scornful",
"Cathedral of Eternal Night",
"enUS",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[220507] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228951] = {
"Nerubian Stalker",
"The Dread Pit",
"enUS",
},
[28419] = {
"Frenzied Geist",
"Utgarde Keep",
"enUS",
},
[174194] = {
"Court Executor",
"Castle Nathria",
"enUS",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
},
[28547] = {
"Storming Vortex",
"Halls of Lightning",
"enUS",
},
[183406] = {
"Colossal Realmcrafter",
"Sepulcher of the First Ones",
"enUS",
},
[220508] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
"enUS",
},
[221537] = {
"Unstable Experiment",
"Nerub-ar Palace",
"enUS",
},
[207459] = {
"Fungal Rotcaster",
"Fungal Folly",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
},
[28835] = {
"Stormforged Construct",
"Halls of Lightning",
"enUS",
},
[220509] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228953] = {
"Skittering Intruder",
"Earthcrawl Mines",
"enUS",
},
[129989] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[390748] = {
"Challenger's Cache",
"Neltharus",
"enUS",
},
[166264] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[203878] = {
"Kobold Mystic",
"The Waterworks",
"enUS",
},
[220510] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228954] = {
"Nerubian Marauder",
"Earthcrawl Mines",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[135816] = {
"Vilefiend",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[28580] = {
"Hardened Steel Skycaller",
"Halls of Lightning",
"enUS",
},
[61245] = {
"Capacitor Totem",
"Grim Batol",
"enUS",
},
[40319] = {
"Drahga Shadowburner",
"Grim Batol",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[166266] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[113998] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[120651] = {
"Explosives",
"Court of Stars",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[188528] = {
"Ormorok's Containment Sphere",
"The Nexus",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[223839] = {
"Queen's Guard Ge'zah",
"Nerub-ar Palace",
"enUS",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
"enUS",
},
[133007] = {
"Unbound Abomination",
"The Underrot",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[62005] = {
"Beast",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[219746] = {
"Silken Tomb",
"Nerub-ar Palace",
"enUS",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[441927] = {
"Challenger's Cache",
"The Stonevault",
"enUS",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[390749] = {
"Challenger's Cache",
"Halls of Infusion",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[17993] = {
"Bloodwarder Protector",
"Tempest Keep: The Botanica",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[390750] = {
"Challenger's Cache",
"Uldaman: Legacy of Tyr",
"enUS",
},
[183413] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
"enUS",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[390751] = {
"Potion Cauldron of Ultimate Power |A:Professions-Icon-Quality-Tier2-Small:20:20|a",
"Vault of the Incarnates",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Fungal Folly",
"enUS",
},
[184693] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[28836] = {
"Stormforged Runeshaper",
"Halls of Lightning",
"enUS",
},
[18313] = {
"Ethereal Sorcerer",
"Auchindoun: Mana-Tombs",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
},
[137614] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[173949] = {
"Nathrian Soldier",
"Castle Nathria",
"enUS",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
"enUS",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
"enUS",
},
[222564] = {
"Rupturing Ooze",
"Nerub-ar Palace",
"enUS",
},
[22951] = {
"Lady Malande",
"Black Temple",
"enUS",
},
[405084] = {
"Primal Relics of the Past",
"Dawn of the Infinite",
"enUS",
},
[97369] = {
"Liquid Magma Totem",
"Grim Batol",
"enUS",
},
[229729] = {
"Nullbot",
"Awakening The Machine",
"enUS",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[183416] = {
"Bound Realmbreaker",
"Sepulcher of the First Ones",
"enUS",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[137103] = {
"Blood Visage",
"The Underrot",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
"enUS",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[215657] = {
"Ulgrax the Devourer",
"Nerub-ar Palace",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
"enUS",
},
[191605] = {
"Portable Mailbox",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23239] = {
"Bonechewer Combatant",
"Black Temple",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[219006] = {
"Venommaster Nezarox",
"Nerub-ar Palace",
"enUS",
},
[23399] = {
"Suffering Soul Fragment",
"Black Temple",
"enUS",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[165251] = {
"Illusionary Vulpin",
"Mists of Tirna Scithe",
"enUS",
},
[169601] = {
"Stone Legion Commando",
"Castle Nathria",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
"enUS",
},
[129227] = {
"Azerokk",
"The MOTHERLODE!!",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[162693] = {
"Nalthor the Rimebinder",
"The Necrotic Wake",
"enUS",
},
[26792] = {
"Crystalline Protector",
"The Nexus",
"enUS",
},
[208239] = {
"Skittering Menace",
"Earthcrawl Mines",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
"enUS",
},
[174208] = {
"Court Executor",
"Castle Nathria",
"enUS",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
"enUS",
},
[17770] = {
"Hungarfen",
"Coilfang: The Underbog",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[187021] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[224616] = {
"Animated Shadow",
"The Dawnbreaker",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[24071] = {
"Dragonflayer Heartsplitter",
"Utgarde Keep",
"enUS",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
"enUS",
},
[17994] = {
"Bloodwarder Falconer",
"Tempest Keep: The Botanica",
"enUS",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[129996] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[221035] = {
"Royal Scribe",
"Nerub-ar Palace",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
"enUS",
},
[28583] = {
"Blistering Steamrager",
"Halls of Lightning",
"enUS",
},
[18314] = {
"Nexus Stalker",
"Auchindoun: Mana-Tombs",
"enUS",
},
[28581] = {
"Stormforged Tactician",
"Halls of Lightning",
"enUS",
},
[208242] = {
"Nerubian Darkcaster",
"Earthcrawl Mines",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[232550] = {
"Prototype Arcane Golem",
"Blackrock Depths",
"enUS",
},
[121553] = {
"Dreadhunter",
"Cathedral of Eternal Night",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[208243] = {
"Nerubian Slasher",
"Earthcrawl Mines",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[232551] = {
"Prototype Fire Golem",
"Blackrock Depths",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[28965] = {
"Titanium Thunderer",
"Halls of Lightning",
"enUS",
},
[113621] = {
"Endgineer Omegaplugg",
"Gnomeregan",
"enUS",
},
[26918] = {
"Chaotic Rift",
"The Nexus",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
"enUS",
},
[173444] = {
"Caramain",
"Castle Nathria",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
"enUS",
},
[22952] = {
"Veras Darkshadow",
"Black Temple",
"enUS",
},
[173445] = {
"Sindrel",
"Castle Nathria",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
"enUS",
},
[173446] = {
"Hargitas",
"Castle Nathria",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[229995] = {
"Sureki Arbalest",
"Nerub-ar Palace",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[232553] = {
"Prototype Toxic Golem",
"Blackrock Depths",
"enUS",
},
[208245] = {
"Skittering Swarmer",
"Earthcrawl Mines",
"enUS",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[177807] = {
"Customs Security",
"Tazavesh, the Veiled Market",
"enUS",
},
[229739] = {
"Malfunctioning Pylon",
"Awakening The Machine",
"enUS",
},
[184961] = {
"Gnarled Skitter",
"Sepulcher of the First Ones",
"enUS",
},
[29573] = {
"Drakkari Elemental",
"Gundrak",
"enUS",
},
[29637] = {
"Crafty Snake",
"Gundrak",
"enUS",
},
[414317] = {
"Orbinid",
"The Waterworks",
"enUS",
},
[171656] = {
"Venomous Sniper Captain",
"Plaguefall",
},
[126928] = {
"Irontide Corsair",
"Freehold",
},
[23400] = {
"Illidari Archon",
"Black Temple",
"enUS",
},
[137625] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[184962] = {
"Gnarled Scavenger",
"Sepulcher of the First Ones",
"enUS",
},
[29829] = {
"Drakkari Earthshaker",
"Gundrak",
"enUS",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[173448] = {
"Dragost",
"Castle Nathria",
"enUS",
},
[95072] = {
"Greater Earth Elemental",
"Sepulcher of the First Ones",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[137626] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[17771] = {
"Murkblood Oracle",
"Coilfang: The Underbog",
"enUS",
},
[169875] = {
"Shackled Soul",
"Theater of Pain",
},
[224368] = {
"Chamber Expeller",
"Nerub-ar Palace",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[24849] = {
"Proto-Drake Rider",
"Utgarde Keep",
"enUS",
},
[211063] = {
"Fungal Podling",
"Fungal Folly",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[24200] = {
"Skarvald the Constructor",
"Utgarde Keep",
"enUS",
},
[183429] = {
"Ebon Chainguard",
"Sepulcher of the First Ones",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[18155] = {
"Bloodfalcon",
"Tempest Keep: The Botanica",
"enUS",
},
[223357] = {
"Sureki Conscript",
"City of Threads",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[207482] = {
"Invasive Sporecap",
"Earthcrawl Mines",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[28582] = {
"Stormforged Mender",
"Halls of Lightning",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[167566] = {
"Bleakwing Assassin",
"Castle Nathria",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
"enUS",
},
[26727] = {
"Mage Hunter Ascendant",
"The Nexus",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[28838] = {
"Titanium Vanguard",
"Halls of Lightning",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[6206] = {
"Caverndeep Burrower",
"Gnomeregan",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[6222] = {
"Leprous Technician",
"Gnomeregan",
"enUS",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[222581] = {
"Ruptured Ooze",
"Nerub-ar Palace",
"enUS",
},
[165521] = {
"Lady Inerva Darkvein",
"Castle Nathria",
"enUS",
},
[233328] = {
"Savage Bloodhound Mastiff",
"Blackrock Depths",
"enUS",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[216441] = {
"Pale Illusion",
"Tak-Rethan Abyss",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[23401] = {
"Hungering Soul Fragment",
"Black Temple",
"enUS",
},
[115417] = {
"Rat",
"Return to Karazhan",
"enUS",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[441966] = {
"Moldy Chest",
"Fungal Folly",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
},
[168337] = {
"Moldovaak",
"Castle Nathria",
"enUS",
},
[19307] = {
"Nexus Terror",
"Auchindoun: Mana-Tombs",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
},
[183432] = {
"Ebon Dominator",
"Sepulcher of the First Ones",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[441968] = {
"Portal to Dornogal",
"Nerub-ar Palace",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[29830] = {
"Living Mojo",
"Gundrak",
"enUS",
},
[18315] = {
"Ethereal Theurgist",
"Auchindoun: Mana-Tombs",
"enUS",
},
[414335] = {
"Irradiated Mycobloom",
"Fungal Folly",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[384641] = {
"Portal to Valdrakken",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
"enUS",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[204162] = {
"Chabelium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[463977] = {
"Hearty Feast of the Midnight Masquerade",
"Nerub-ar Palace",
"enUS",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[28231] = {
"Crystalline Tender",
"The Nexus",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[24201] = {
"Dalronn the Controller",
"Utgarde Keep",
"enUS",
},
[19306] = {
"Mana Leech",
"Auchindoun: Mana-Tombs",
"enUS",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[173714] = {
"Mistveil Nightblossom",
"Mists of Tirna Scithe",
"enUS",
},
[232552] = {
"Prototype Electric Golem",
"Blackrock Depths",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[222572] = {
"Infesting Latcher",
"Nerub-ar Palace",
"enUS",
},
[28837] = {
"Stormforged Sentinel",
"Halls of Lightning",
"enUS",
},
[183438] = {
"Chainbound Construct",
"Sepulcher of the First Ones",
"enUS",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
"enUS",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
"enUS",
},
[208241] = {
"Ankle Biter",
"Earthcrawl Mines",
"enUS",
},
[40320] = {
"Valiona",
"Grim Batol",
"enUS",
},
[385684] = {
"Anvil",
"Vault of the Incarnates",
"enUS",
},
[26728] = {
"Mage Hunter Initiate",
"The Nexus",
"enUS",
},
[173953] = {
"Loyal Gargon",
"Castle Nathria",
"enUS",
},
[183439] = {
"Mawsworn Annihilator",
"Sepulcher of the First Ones",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[184954] = {
"Ancient Shaper",
"Sepulcher of the First Ones",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[173973] = {
"Nathrian Tracker",
"Castle Nathria",
"enUS",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[232569] = {
"Shadowforge Senator",
"Blackrock Depths",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[390752] = {
"Potion Cauldron of Ultimate Power |A:Professions-Icon-Quality-Tier3-Small:20:20|a",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[173178] = {
"Stone Legion Goliath",
"Castle Nathria",
"enUS",
},
[23402] = {
"Illidari Battle-mage",
"Black Temple",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[181395] = {
"Skolex",
"Sepulcher of the First Ones",
"enUS",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[183412] = {
"Dominated Saboteur",
"Sepulcher of the First Ones",
"enUS",
},
[190351] = {
"D.I.S.C.O.",
"Vault of the Incarnates",
"enUS",
},
[29735] = {
"Savage Worg",
"Utgarde Keep",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[232571] = {
"Pyromancer Loregrain",
"Blackrock Depths",
"enUS",
},
[173464] = {
"Deplina",
"Castle Nathria",
"enUS",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
"enUS",
},
[120779] = {
"Helblaze Felbringer",
"Cathedral of Eternal Night",
"enUS",
},
[23398] = {
"Angered Soul Fragment",
"Black Temple",
"enUS",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[409747] = {
"Construct Canker",
"Fungal Folly",
"enUS",
},
[214625] = {
"Kobyss Necromancer",
"Tak-Rethan Abyss",
"enUS",
},
[22950] = {
"High Nethermancer Zerevor",
"Black Temple",
"enUS",
},
[390747] = {
"Challenger's Cache",
"Brackenhide Hollow",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
"enUS",
},
[228952] = {
"Nerubian Skulker",
"The Dread Pit",
"enUS",
},
[213894] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[181398] = {
"Mal'Ganis",
"Sepulcher of the First Ones",
"enUS",
},
[173466] = {
"Fara",
"Castle Nathria",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[225409] = {
"Surging Totem",
"Grim Batol",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[443526] = {
"Supply Bag",
"The Dread Pit",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[181399] = {
"Kin'tessa",
"Sepulcher of the First Ones",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
"enUS",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[26793] = {
"Crystalline Frayer",
"The Nexus",
"enUS",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[18344] = {
"Nexus-Prince Shaffar",
"Auchindoun: Mana-Tombs",
"enUS",
},
[166304] = {
"Mistveil Stinger",
"Mists of Tirna Scithe",
"enUS",
},
[39625] = {
"General Umbriss",
"Grim Batol",
"enUS",
},
[28546] = {
"Ionar",
"Halls of Lightning",
"enUS",
},
[22955] = {
"Charming Patron",
"Black Temple",
"enUS",
},
[173469] = {
"Kullan",
"Castle Nathria",
"enUS",
},
[183396] = {
"Eternal Forger",
"Sepulcher of the First Ones",
"enUS",
},
[182169] = {
"Lihuvim",
"Sepulcher of the First Ones",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
},
[211339] = {
"Dream Seedling",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[216658] = {
"Izo, the Grand Splicer",
"City of Threads",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[220551] = {
"Sureki Ironweaver",
"Nerub-ar Palace",
"enUS",
},
[230218] = {
"Electron Mk. II",
"Blackrock Depths",
"enUS",
},
[118723] = {
"Gazerax",
"Cathedral of Eternal Night",
"enUS",
},
[311502] = {
"Sanguinated Feast",
"Nerub-ar Palace",
"enUS",
},
[23371] = {
"Shadowmoon Fallen",
"Black Temple",
"enUS",
},
[23403] = {
"Illidari Assassin",
"Black Temple",
"enUS",
},
[185181] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
"enUS",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[104295] = {
"Blazing Imp",
"Court of Stars",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
"enUS",
},
[231555] = {
"Anvilrage Officer",
"Blackrock Depths",
"enUS",
},
[47238] = {
"Whipping Wind",
"The Vortex Pinnacle",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[29832] = {
"Drakkari Golem",
"Gundrak",
"enUS",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[130011] = {
"Irontide Buccaneer",
"Freehold",
},
[231556] = {
"Anvilrage Soldier",
"Blackrock Depths",
"enUS",
},
[164261] = {
"Hungering Destroyer",
"Castle Nathria",
"enUS",
},
[195222] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
"enUS",
},
[208461] = {
"Scorching Roots",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[19949] = {
"Sapling",
"Tempest Keep: The Botanica",
"enUS",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[231557] = {
"Anvilrage Sapper",
"Blackrock Depths",
"enUS",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
"enUS",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"The Waterworks",
"enUS",
},
[216205] = {
"Ravenous Spawn",
"Nerub-ar Palace",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[225601] = {
"Mereldar Citizen",
"The Dawnbreaker",
"enUS",
},
[168357] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[36620] = {
"Soulguard Adept",
"The Forge of Souls",
"enUS",
},
[28585] = {
"Slag",
"Halls of Lightning",
"enUS",
},
[173146] = {
"Winged Ravager",
"Castle Nathria",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
},
[211089] = {
"Anub'ikkaj",
"The Dawnbreaker",
"enUS",
},
[210759] = {
"Brann Bronzebeard",
"Fungal Folly",
"enUS",
},
[26730] = {
"Mage Slayer",
"The Nexus",
"enUS",
},
[162729] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[26794] = {
"Ormorok the Tree-Shaper",
"The Nexus",
"enUS",
},
[121569] = {
"Vilebark Walker",
"Cathedral of Eternal Night",
"enUS",
},
[216649] = {
"Vx",
"City of Threads",
"enUS",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[223372] = {
"Prime Slime",
"Nerub-ar Palace",
"enUS",
},
[229769] = {
"Medbot",
"Awakening The Machine",
"enUS",
},
[202824] = {
"Erratic Remnant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[213905] = {
"Animated Darkness",
"The Dawnbreaker",
"enUS",
},
[22956] = {
"Priestess of Torment",
"Black Temple",
"enUS",
},
[18894] = {
"Felguard Brute",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[130909] = {
"Fetid Maggot",
"Zandalar",
},
[225164] = {
"Disheartened Worm",
"Nerub-ar Palace",
"enUS",
},
[231561] = {
"Anvilrage Medic",
"Blackrock Depths",
"enUS",
},
[232246] = {
"Anvilrage Medic",
"Blackrock Depths",
"enUS",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[232244] = {
"Anvilrage Artillerist",
"Blackrock Depths",
"enUS",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[231562] = {
"Anvilrage Dragoon",
"Blackrock Depths",
"enUS",
},
[217489] = {
"Anub'arash",
"Nerub-ar Palace",
"enUS",
},
[378046] = {
"Stormforged Treasure Trove",
"Vault of the Incarnates",
"enUS",
},
[23436] = {
"Image of Dementia",
"Black Temple",
"enUS",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[231563] = {
"Anvilrage Rogue",
"Blackrock Depths",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[19598] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
"enUS",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[17827] = {
"Claw",
"Coilfang: The Underbog",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[194108] = {
"Summoning Portal",
"Vault of the Incarnates",
"enUS",
},
[217491] = {
"Skeinspinner Takazj",
"Nerub-ar Palace",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[6220] = {
"Irradiated Horror",
"Gnomeregan",
"enUS",
},
[6212] = {
"Dark Iron Agent",
"Gnomeregan",
"enUS",
},
[17871] = {
"Underbog Shambler",
"Coilfang: The Underbog",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
"enUS",
},
[231565] = {
"Anvilrage Artillerist",
"Blackrock Depths",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[217748] = {
"Nexus-Princess Ky'veza",
"Nerub-ar Palace",
"enUS",
},
[234024] = {
"Egg Cocoon",
"Zekvir's Lair",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[231566] = {
"Harbinger of Flames",
"Blackrock Depths",
"enUS",
},
[29304] = {
"Slad'ran",
"Gundrak",
"enUS",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[28586] = {
"General Bjarngrim",
"Halls of Lightning",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[193558] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
"enUS",
},
[137405] = {
"Gripping Terror",
"Siege of Boralus",
"enUS",
},
[184742] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
"enUS",
},
[26731] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[26763] = {
"Anomalus",
"The Nexus",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[6207] = {
"Caverndeep Ambusher",
"Gnomeregan",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
"enUS",
},
[6223] = {
"Leprous Defender",
"Gnomeregan",
"enUS",
},
[229918] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[221845] = {
"Xur'khun the Defiled",
"Nerub-ar Palace",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[22957] = {
"Mistress of Dementia",
"Black Temple",
"enUS",
},
[120550] = {
"Wrathguard Invader",
"Cathedral of Eternal Night",
"enUS",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[194467] = {
"Brackenhide Slasher",
"Brackenhide Hollow",
"enUS",
},
[168112] = {
"General Kaal",
"Castle Nathria",
"enUS",
},
[229778] = {
"Automatic Ironstrider",
"Awakening The Machine",
"enUS",
},
[180906] = {
"Halondrus",
"Sepulcher of the First Ones",
"enUS",
},
[203679] = {
"Anduin Lothar",
"Dawn of the Infinite",
"enUS",
},
[232593] = {
"Phalanx",
"Blackrock Depths",
"enUS",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[90997] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[168113] = {
"General Grashaal",
"Castle Nathria",
"enUS",
},
[233873] = {
"Fireling",
"Blackrock Depths",
"enUS",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[23469] = {
"Enslaved Soul",
"Black Temple",
"enUS",
},
[236053] = {
"Stool",
"FW Horde Garrison Level 3",
"enUS",
},
[181551] = {
"Prototype of Duty",
"Sepulcher of the First Ones",
"enUS",
},
[194469] = {
"Fledgling Slasher",
"Brackenhide Hollow",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[449709] = {
"Bouncy Shroom",
"Earthcrawl Mines",
"enUS",
},
[29834] = {
"Drakkari Frenzy",
"Gundrak",
"enUS",
},
[121384] = {
"Fictional Animated Book",
"Cathedral of Eternal Night",
"enUS",
},
[189669] = {
"Binding Spear",
"Neltharus",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[224152] = {
"Twilight Brute",
"Grim Batol",
"enUS",
},
[24085] = {
"Dragonflayer Overseer",
"Utgarde Keep",
"enUS",
},
[98035] = {
"Dreadstalker",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[229782] = {
"Awakened Phalanx",
"Awakening The Machine",
"enUS",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
"enUS",
},
[198310] = {
"Flame Tarasek",
"Vault of the Incarnates",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
},
[28826] = {
"Stormfury Revenant",
"Halls of Lightning",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[28587] = {
"Volkhan",
"Halls of Lightning",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[232459] = {
"Weapon Technician",
"Blackrock Depths",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[26796] = {
"Commander Stoutbeard",
"The Nexus",
"enUS",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[23196] = {
"Bonechewer Behemoth",
"Black Temple",
"enUS",
},
[22894] = {
"Cyclone Totem",
"Black Temple",
"enUS",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[114541] = {
"Spectral Patron",
"Return to Karazhan",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[226314] = {
"Moira Bronzebeard",
"Blackrock Depths",
"enUS",
},
[217870] = {
"Devouring Shade",
"Skittering Breach",
"enUS",
},
[185008] = {
"Volatile Sentry",
"Sepulcher of the First Ones",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[226460] = {
"Undercrawler Hatchling",
"The Dread Pit",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[91001] = {
"Tarspitter Lurker",
"Neltharion's Lair",
},
[228361] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[223646] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[226310] = {
"Doom'rel",
"Blackrock Depths",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[193709] = {
"Primalist Earthwarden",
"Vault of the Incarnates",
"enUS",
},
[114338] = {
"Mana Confluence",
"Return to Karazhan",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
"enUS",
},
[216329] = {
"Congealed Droplet",
"City of Threads",
"enUS",
},
[221344] = {
"Gloom Hatchling",
"Nerub-ar Palace",
"enUS",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[19632] = {
"Lykul Stinger",
"Coilfang: The Underbog",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[29931] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
"enUS",
},
[120556] = {
"Dreadwing",
"Cathedral of Eternal Night",
"enUS",
},
[222881] = {
"Royal Weaver",
"Nerub-ar Palace",
"enUS",
},
[446146] = {
"Recovered Nightfall Relics",
"The Dawnbreaker",
"enUS",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
"enUS",
},
[445635] = {
"Challenger's Cache",
"Ara-Kara, City of Echoes",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[129640] = {
"Snarling Dockhound",
"Siege of Boralus",
"enUS",
},
[185363] = {
"Manifestor Krugan",
"Sepulcher of the First Ones",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
},
[23418] = {
"Essence of Suffering",
"Black Temple",
"enUS",
},
[222974] = {
"Hungry Scarab",
"City of Threads",
"enUS",
},
[445637] = {
"Challenger's Cache",
"City of Threads",
"enUS",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[232440] = {
"Twilight Emissary",
"Blackrock Depths",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
"enUS",
},
[219045] = {
"Colossal Spider",
"Nerub-ar Palace",
"enUS",
},
[166079] = {
"Brittlebone Crossbowman",
"The Necrotic Wake",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[445639] = {
"Challenger's Cache",
"Mists of Tirna Scithe",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[232436] = {
"Shadowforge Citizen",
"Blackrock Depths",
"enUS",
},
[192519] = {
"Altar of Moorabi",
"Gundrak",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[229537] = {
"Void Emissary",
"The Dawnbreaker",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"Tak-Rethan Abyss",
"enUS",
},
[445641] = {
"Challenger's Cache",
"The Necrotic Wake",
"enUS",
},
[185271] = {
"Stellar Mote",
"Sepulcher of the First Ones",
"enUS",
},
[22959] = {
"Ardent Host",
"Black Temple",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[445642] = {
"Challenger's Cache",
"Siege of Boralus",
"enUS",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[445643] = {
"Challenger's Cache",
"Grim Batol",
"enUS",
},
[220148] = {
"Gem Hoarder",
"The Dread Pit",
"enUS",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[40484] = {
"Erudax",
"Grim Batol",
"enUS",
},
[62982] = {
"Voidling",
"Sepulcher of the First Ones",
"enUS",
},
[203951] = {
"Kobold Skullface",
"The Waterworks",
"enUS",
},
[36499] = {
"Soulguard Reaper",
"The Forge of Souls",
"enUS",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
"enUS",
},
[172991] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[185347] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[19505] = {
"Sunseeker Channeler",
"Tempest Keep: The Botanica",
"enUS",
},
[214504] = {
"Rasha'nan",
"Nerub-ar Palace",
"enUS",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
"enUS",
},
[19633] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
"enUS",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[121711] = {
"Bilespray Lasher",
"Cathedral of Eternal Night",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[185275] = {
"Kelmortos",
"Sepulcher of the First Ones",
"enUS",
},
[236206] = {
"War Planning Map",
"FW Horde Garrison Level 3",
"enUS",
},
[26930] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[24079] = {
"Dragonflayer Forge Master",
"Utgarde Keep",
"enUS",
},
[203763] = {
"Alliance Footman",
"Dawn of the Infinite",
"enUS",
},
[217516] = {
"Nightfall Executor",
"Skittering Breach",
"enUS",
},
[175616] = {
"Zo'phex",
"Tazavesh, the Veiled Market",
"enUS",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
"enUS",
},
[174336] = {
"Kennel Overseer",
"Castle Nathria",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[153292] = {
"Training Dummy",
"Eastern Kingdoms",
},
[214251] = {
"Kobyss Witherer",
"Tak-Rethan Abyss",
"enUS",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
},
[217517] = {
"Nightfall Hopestealer",
"Skittering Breach",
"enUS",
},
[36564] = {
"Soulguard Bonecaster",
"The Forge of Souls",
"enUS",
},
[221669] = {
"Blight Swarmer",
"Nerub-ar Palace",
"enUS",
},
[169157] = {
"Mudlump",
"Castle Nathria",
"enUS",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[20465] = {
"Underbog Frenzy",
"Coilfang: The Underbog",
"enUS",
},
[169925] = {
"Begrudging Waiter",
"Castle Nathria",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[217518] = {
"Nightfall Inquisitor",
"Skittering Breach",
"enUS",
},
[26734] = {
"Azure Enforcer",
"The Nexus",
"enUS",
},
[186353] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[478443] = {
"Mislaid Curiosity",
"The Waterworks",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[222145] = {
"Voracious Stagshell",
"Nerub-ar Palace",
"enUS",
},
[217519] = {
"Nightfall Shadeguard",
"Skittering Breach",
"enUS",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[181234] = {
"Icebellow Anvil",
"Naxxramas",
"enUS",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[171463] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[181954] = {
"Anduin Wrynn",
"Sepulcher of the First Ones",
"enUS",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[119923] = {
"Helblaze Soulmender",
"Cathedral of Eternal Night",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[18422] = {
"Sunseeker Botanist",
"Tempest Keep: The Botanica",
"enUS",
},
[17976] = {
"Commander Sarannis",
"Tempest Keep: The Botanica",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
"enUS",
},
[17397] = {
"Shadowmoon Adept",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17395] = {
"Shadowmoon Summoner",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[16156] = {
"Dark Touched Warrior",
"Naxxramas",
"enUS",
},
[18419] = {
"Bloodwarder Greenkeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[17491] = {
"Laughing Skull Rogue",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[213684] = {
"Void Chunk",
"The Rookery",
"enUS",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"Earthcrawl Mines",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[455906] = {
"Box of Candy",
"Nerub-ar Palace",
"enUS",
},
[226484] = {
"Larva",
"The Dread Pit",
"enUS",
},
[224970] = {
"Caustic Bomber",
"Nerub-ar Palace",
"enUS",
},
[173276] = {
"Stone Legion Commando",
"Castle Nathria",
"enUS",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[184530] = {
"Eternal Sentry",
"Sepulcher of the First Ones",
"enUS",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[217268] = {
"Weeping Shade",
"Skittering Breach",
"enUS",
},
[167406] = {
"Sire Denathrius",
"Castle Nathria",
"enUS",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[167117] = {
"Spinemaw Larva",
"Mists of Tirna Scithe",
"enUS",
},
[17398] = {
"Nascent Fel Orc",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
"enUS",
},
[115831] = {
"Mana Devourer",
"Return to Karazhan",
"enUS",
},
[36502] = {
"Devourer of Souls",
"The Forge of Souls",
"enUS",
},
[184535] = {
"Overthrown Artisan",
"Sepulcher of the First Ones",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
},
["aura_grow_direction"] = 3,
["health_selection_overlay_alpha"] = 0.2999999821186066,
["aura_stack_shadow_color"] = {
nil,
nil,
nil,
0,
},
["minor_height_scale"] = 0.9999999403953552,
["aura_padding"] = 2,
["indicator_worldboss"] = false,
["last_news_time"] = 1702345503,
["aura_width2"] = 16,
["plater_resources_align"] = "horizontal",
["plater_resources_scale"] = 0.8,
["cast_colors"] = {
[372107] = {
true,
"orangered",
"",
},
[383823] = {
true,
"orchid",
"",
},
[375727] = {
true,
"orangered",
"",
},
[369409] = {
true,
"orangered",
"",
},
[397889] = {
true,
"mediumturquoise",
"",
},
[369061] = {
true,
"orangered",
"",
},
[375348] = {
true,
"orangered",
"",
},
[269843] = {
true,
"orangered",
"",
},
[375251] = {
true,
"orangered",
"",
},
[387950] = {
true,
"orangered",
"",
},
[396812] = {
true,
"orchid",
"",
},
[375351] = {
true,
"orangered",
"",
},
[376683] = {
true,
"orangered",
"",
},
[369573] = {
true,
"orangered",
"",
},
[88194] = {
false,
"white",
},
[265019] = {
true,
"orangered",
"",
},
[257870] = {
true,
"orchid",
"",
},
[253517] = {
false,
"white",
},
[377383] = {
true,
"orangered",
"",
},
[377034] = {
true,
"orangered",
"",
},
[257756] = {
true,
"orchid",
"",
},
[257899] = {
false,
"lightslategray",
},
[272609] = {
true,
"orangered",
"",
},
[279118] = {
false,
"blue",
},
[369828] = {
true,
"orchid",
"",
},
[372201] = {
true,
"orangered",
"",
},
[268202] = {
true,
"orchid",
"",
},
[412215] = {
true,
"orangered",
"",
},
[385958] = {
true,
"orangered",
"",
},
[388911] = {
true,
"orchid",
"",
},
[265372] = {
true,
"orangered",
"",
},
[372087] = {
true,
"orangered",
"",
},
[385578] = {
true,
"orangered",
"",
},
[200768] = {
true,
"orangered",
"",
},
[255567] = {
true,
"orangered",
"",
},
[388976] = {
true,
"orangered",
"",
},
[382277] = {
true,
"orangered",
"",
},
[408141] = {
true,
"orangered",
"",
},
[384868] = {
true,
"orangered",
"",
},
[257426] = {
true,
"orangered",
"",
},
[200291] = {
true,
"orchid",
"",
},
[397931] = {
true,
"mediumturquoise",
"",
},
[386660] = {
true,
"orangered",
"",
},
[378818] = {
true,
"orchid",
"",
},
[412505] = {
true,
"orangered",
"",
},
[384597] = {
false,
"white",
},
[367484] = {
true,
"orchid",
"",
},
[200784] = {
true,
"orchid",
"",
},
[201226] = {
true,
"orangered",
"",
},
[375327] = {
true,
"orangered",
"",
},
[411300] = {
false,
"blue",
},
[200261] = {
true,
"orangered",
"",
},
[183465] = {
true,
"orangered",
"",
},
[388060] = {
true,
"orangered",
"",
},
[226296] = {
true,
"orangered",
"",
},
[384524] = {
true,
"orangered",
"",
},
[372311] = {
true,
"orangered",
"",
},
[396665] = {
true,
"orangered",
"",
},
[411012] = {
true,
"orangered",
"",
},
[260793] = {
true,
"orangered",
"",
},
[88308] = {
true,
"orangered",
"",
},
[412129] = {
true,
"orangered",
"",
},
[437719] = {
true,
"orchid",
"",
},
[200913] = {
true,
"orangered",
"",
},
[377204] = {
true,
"orangered",
"",
},
[169179] = {
true,
"orangered",
"",
},
[209628] = {
true,
"blue",
"",
},
[367521] = {
true,
"orchid",
"",
},
[395184] = {
false,
"orangered",
"",
},
[87618] = {
true,
"orangered",
"",
},
[257397] = {
true,
"darkorange",
"",
},
[156718] = {
true,
"darkorange",
"",
},
[265568] = {
false,
"white",
},
[265540] = {
true,
"orchid",
"",
},
[266209] = {
true,
"white",
"",
},
[372222] = {
true,
"orangered",
"",
},
[381525] = {
true,
"orangered",
"",
},
[428293] = {
true,
"orangered",
},
[419351] = {
true,
"orangered",
"",
},
[393432] = {
true,
"orangered",
"",
},
[164357] = {
true,
"orangered",
"",
},
[169929] = {
true,
"orangered",
"",
},
[412200] = {
true,
"orchid",
"",
},
[188404] = {
true,
"orangered",
"",
},
[183088] = {
true,
"orangered",
"",
},
[370764] = {
true,
"orchid",
"",
},
[376892] = {
true,
"orangered",
"",
},
[377559] = {
true,
"orangered",
"",
},
[188169] = {
true,
"orangered",
"",
},
[426645] = {
true,
"orangered",
},
[387910] = {
true,
"orchid",
"",
},
[200345] = {
true,
"orchid",
"",
},
[427376] = {
true,
"orchid",
},
[199151] = {
true,
"blue",
"",
},
[391118] = {
true,
"orangered",
"",
},
[372735] = {
true,
"orchid",
"",
},
[369465] = {
true,
"orchid",
"",
},
[388801] = {
true,
"orchid",
"",
},
[413529] = {
true,
"orangered",
"",
},
[197974] = {
true,
"orangered",
"",
},
[375943] = {
true,
"orangered",
"",
},
[391723] = {
true,
"orangered",
"",
},
[416139] = {
true,
"orangered",
"",
},
[373742] = {
true,
"orangered",
"",
},
[412012] = {
true,
"orchid",
"",
},
[260894] = {
true,
"orangered",
"",
},
[377732] = {
true,
"orchid",
"",
},
[369563] = {
true,
"orangered",
"",
},
[193505] = {
true,
"orangered",
"",
},
[382708] = {
true,
"orangered",
"",
},
[372615] = {
false,
"orangered",
"",
},
[382712] = {
true,
"orangered",
"",
},
[388392] = {
true,
"darkorange",
"",
},
[426905] = {
false,
"white",
"",
},
[382233] = {
true,
"orangered",
"",
},
[226406] = {
true,
"orangered",
"",
},
[375439] = {
true,
"orangered",
"",
},
[411994] = {
true,
"darkorange",
"",
},
[226304] = {
true,
"orangered",
"",
},
[376170] = {
true,
"orangered",
"",
},
[385536] = {
true,
"orchid",
"",
},
[253721] = {
true,
"orchid",
"",
},
[374361] = {
true,
"orangered",
"",
},
[413607] = {
false,
"white",
"",
},
},
["castbar_target_anchor"] = {
["side"] = 11,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["extra_icon_anchor"] = {
["y"] = -8,
["x"] = 2,
["side"] = 7,
},
["range_check_alpha"] = 1,
["semver"] = "1.0.2",
["plater_resources_padding"] = 2,
["aura_frame2_anchor"] = {
["y"] = 0,
["x"] = 2.099990844726563,
["side"] = 6,
},
["aura_alpha"] = 0.84999996423721,
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["aura_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\transparent",
["show_healthbars_on_not_attackable"] = true,
["plater_resources_show_number"] = false,
["extra_icon_show_purge"] = true,
["aura_consolidate"] = true,
["extra_icon_width"] = 16,
["health_statusbar_texture"] = "Solid",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Extra Border"] = 2,
["Monk Statue"] = 2,
},
["minor_width_scale"] = 0.9999999403953552,
["castbar_target_text_size"] = 9,
["aura_frame1_anchor"] = {
["y"] = 2,
["side"] = 1,
},
["indicator_rare"] = false,
["extra_icon_stack_font"] = "Accidental Presidency",
["aura_height"] = 10,
["cast_statusbar_bgtexture"] = "PlaterBackground",
["plater_resources_personal_bar"] = false,
["target_indicator"] = "NONE",
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["nameplateOverlapV"] = "1.1",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "1",
["nameplateTargetRadialPosition"] = "1",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "100",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1.0",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "0",
["nameplateMotionSpeed"] = "0.05",
["nameplateGlobalScale"] = "1.0",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1.15",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateOtherTopInset"] = "0.085",
["NamePlateHorizontalScale"] = "1",
["nameplateSelfBottomInset"] = "0.2",
["nameplateOccludedAlphaMult"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "0.75",
["nameplateSelfTopInset"] = "0.5",
["ShowClassColorInNameplate"] = "1",
["nameplateLargeTopInset"] = "0.085",
["nameplateMinAlphaDistance"] = "-158489.31924611",
},
["login_counter"] = 19305,
["extra_icon_caster_name"] = false,
["aura_cooldown_show_swipe"] = false,
["aura_stack_font"] = "Accidental Presidency",
["auto_toggle_combat"] = {
["blizz_healthbar_ic"] = true,
["blizz_healthbar_ooc"] = true,
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["aura_timer_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["auras_per_row_amount"] = 4,
["plater_resources_show_depleted"] = false,
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "Accidental Presidency",
["power_percent_text_enabled"] = false,
["level_text_font"] = "Accidental Presidency",
["actorname_text_font"] = "Accidental Presidency",
["big_actortitle_text_font"] = "Accidental Presidency",
["spellname_text_font"] = "Accidental Presidency",
["click_through"] = true,
["big_actorname_text_font"] = "Accidental Presidency",
["power_percent_text_color"] = {
1,
1,
1,
},
["percent_text_font"] = "Accidental Presidency",
["power_percent_text_font"] = "Accidental Presidency",
},
["friendlyplayer"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Accidental Presidency",
["level_text_size"] = 8,
["actorname_use_class_color"] = true,
["cast"] = {
120,
1,
},
["spellpercent_text_anchor"] = {
["x"] = 1,
["side"] = 5,
},
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellpercent_text_outline"] = "NONE",
["level_text_font"] = "Accidental Presidency",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
nil,
4,
},
["actorname_use_guild_color"] = false,
["all_names"] = true,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "Accidental Presidency",
["spellpercent_text_size"] = 9,
["level_text_anchor"] = {
["x"] = 1,
["side"] = 5,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
120,
1,
},
["power_percent_text_font"] = "Accidental Presidency",
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["big_actortitle_text_size"] = 10,
["spellname_text_font"] = "Accidental Presidency",
["big_actorname_text_outline"] = "OUTLINE",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 12,
["big_actorname_text_font"] = "Accidental Presidency",
["actorname_use_friends_color"] = false,
["percent_text_size"] = 8,
["percent_text_ooc"] = true,
["percent_show_health"] = true,
["spellpercent_text_enabled"] = true,
["actorname_text_font"] = "Accidental Presidency",
["percent_text_font"] = "Accidental Presidency",
["buff_frame_y_offset"] = 0,
["percent_text_outline"] = "NONE",
["mana"] = {
nil,
4,
},
["percent_text_enabled"] = true,
["health_incombat"] = {
120,
1,
},
["health"] = {
120,
1,
},
["spellname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = -3,
["x"] = -1,
["side"] = 1,
},
["quest_enabled"] = true,
["level_text_alpha"] = 0.29999998211861,
["level_text_enabled"] = true,
},
["friendlynpc"] = {
["spellpercent_text_font"] = "Accidental Presidency",
["level_text_size"] = 8,
["cast"] = {
120,
1,
},
["spellpercent_text_anchor"] = {
["x"] = 1,
["side"] = 5,
},
["enabled"] = false,
["spellpercent_text_outline"] = "NONE",
["level_text_font"] = "Accidental Presidency",
["actorname_text_font"] = "Accidental Presidency",
["actorname_text_outline"] = "OUTLINE",
["quest_color_enemy"] = {
1,
0.369,
0,
},
["big_actortitle_text_font"] = "Accidental Presidency",
["spellpercent_text_size"] = 9,
["level_text_anchor"] = {
["x"] = 1,
["side"] = 5,
},
["cast_incombat"] = {
nil,
1,
},
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["power_percent_text_font"] = "Accidental Presidency",
["spellname_text_font"] = "Accidental Presidency",
["only_names"] = false,
["percent_text_ooc"] = true,
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 11,
["percent_text_enabled"] = true,
["big_actorname_text_size"] = 10,
["health_incombat"] = {
nil,
1,
},
["percent_show_health"] = true,
["percent_text_size"] = 8,
["big_actortitle_text_size"] = 10,
["percent_text_font"] = "Accidental Presidency",
["percent_text_outline"] = "NONE",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["spellname_text_size"] = 9,
["health"] = {
120,
1,
},
["big_actorname_text_font"] = "Accidental Presidency",
["actorname_text_anchor"] = {
["y"] = -3,
["x"] = -1,
["side"] = 1,
},
["spellpercent_text_enabled"] = true,
["level_text_alpha"] = 0.29999998211861,
["level_text_enabled"] = true,
},
["enemynpc"] = {
["spellpercent_text_font"] = "ViklunD's SexFont",
["cast"] = {
120,
8,
},
["spellpercent_text_anchor"] = {
["y"] = -0.8000030517578125,
["x"] = 3.899993896484375,
["side"] = 5,
},
["level_text_font"] = "Accidental Presidency",
["actorname_text_font"] = "Accidental Presidency",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["big_actortitle_text_font"] = "Accidental Presidency",
["spellpercent_text_size"] = 9,
["level_text_anchor"] = {
["y"] = 100,
["x"] = 1,
["side"] = 5,
},
["cast_incombat"] = {
nil,
8,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["y"] = 0.09999847412109375,
["x"] = -0.8000030517578125,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = -9.930000305175781,
["x"] = 1.099998474121094,
["side"] = 7,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["actorname_text_size"] = 9,
["power_percent_text_font"] = "Accidental Presidency",
["percent_text_show_decimals"] = false,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_alpha"] = 0.29999998211861,
["percent_text_font"] = "Accidental Presidency",
["spellname_text_font"] = "Accidental Presidency",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_size"] = 9,
["health"] = {
120,
11,
},
["big_actorname_text_font"] = "Accidental Presidency",
["actorname_text_anchor"] = {
["y"] = -9.930000305175781,
["x"] = 0.9000015258789062,
["side"] = 1,
},
["percent_show_health"] = false,
["health_incombat"] = {
nil,
11,
},
["level_text_enabled"] = false,
},
["global_health_height"] = 10,
["enemyplayer"] = {
["spellpercent_text_font"] = "ViklunD's SexFont",
["level_text_size"] = 8,
["cast"] = {
120,
8,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_anchor"] = {
["x"] = 1,
["side"] = 5,
},
["percent_text_show_decimals"] = false,
["spellpercent_text_outline"] = "NONE",
["level_text_font"] = "Accidental Presidency",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["mana_incombat"] = {
120,
1,
},
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["big_actortitle_text_font"] = "Accidental Presidency",
["spellpercent_text_size"] = 9,
["level_text_anchor"] = {
["y"] = 100,
["x"] = 1,
["side"] = 5,
},
["cast_incombat"] = {
nil,
8,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 4.649993896484375,
["side"] = 5,
},
["spellname_text_font"] = "Accidental Presidency",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Accidental Presidency",
["big_actortitle_text_size"] = 10,
["big_actorname_text_size"] = 10,
["actorname_text_anchor"] = {
["y"] = -0.4000015258789063,
["x"] = -1,
["side"] = 1,
},
["percent_text_size"] = 10,
["percent_text_font"] = "Accidental Presidency",
["actorname_text_font"] = "Accidental Presidency",
["percent_show_percent"] = false,
["power_percent_text_font"] = "Accidental Presidency",
["mana"] = {
120,
1,
},
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["health_incombat"] = {
nil,
10,
},
["health"] = {
120,
10,
},
["level_text_alpha"] = 0.29999998211861,
["percent_show_health"] = false,
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["level_text_enabled"] = false,
},
["global_health_width"] = 120,
},
["aura_y_offset"] = 2,
["use_ui_parent"] = true,
["indicator_elite"] = false,
["plater_resources_grow_direction"] = "center",
["resources_settings"] = {
["chr"] = {
["Player-3725-0C1533F1"] = "ComboPoints",
["Player-5764-000264AF"] = "ComboPoints",
["Player-3725-0C1632F3"] = "HolyPower",
["Player-4609-0014BD91"] = "SoulShards",
["Player-4609-0014B9A9"] = "ArcaneCharges",
["Player-1171-0A96B17F"] = "Essence",
["Player-5764-000166DE"] = "HolyPower",
["Player-4184-003D46E0"] = "Chi",
["Player-3725-0C16E871"] = "HolyPower",
["Player-3725-0AA8E1EF"] = "Runes",
["Player-4609-0014B1DA"] = "ComboPoints",
["Player-4609-0014C179"] = "HolyPower",
["Player-3725-0C194479"] = "Essence",
["Player-11-0E532B60"] = "Runes",
["Player-3725-0A9FE377"] = "Chi",
["Player-11-0E532B0D"] = "Chi",
["Player-3296-009336A2"] = "HolyPower",
["Player-11-0E532B15"] = "HolyPower",
["Player-5764-0002671B"] = "HolyPower",
["Player-11-0E532B17"] = "ComboPoints",
["Player-4609-0014B1D9"] = "Essence",
["Player-5764-000944AE"] = "Chi",
},
},
["cast_statusbar_spark_offset"] = -13,
["npc_colors"] = {
[141283] = {
false,
false,
"navajowhite",
},
[190403] = {
true,
false,
"aqua",
},
[81820] = {
true,
false,
"fuchsia",
},
[153292] = {
false,
false,
"fuchsia",
},
[190340] = {
true,
false,
"aqua",
},
[190404] = {
true,
false,
"aqua",
},
[59546] = {
true,
false,
"fuchsia",
},
[186125] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"fuchsia",
},
[141285] = {
false,
false,
"lightgreen",
},
[190405] = {
true,
false,
"fuchsia",
},
[130909] = {
true,
false,
"aqua",
},
[137517] = {
false,
false,
"peru",
},
[190342] = {
true,
false,
"fuchsia",
},
[95842] = {
true,
false,
"fuchsia",
},
[129600] = {
true,
false,
"fuchsia",
},
[135474] = {
true,
false,
"fuchsia",
},
[186191] = {
true,
false,
"fuchsia",
},
[40943] = {
true,
false,
"fuchsia",
},
[190407] = {
true,
false,
"fuchsia",
},
[164921] = {
true,
false,
"fuchsia",
},
[98813] = {
true,
false,
"fuchsia",
},
[208165] = {
true,
false,
"fuchsia",
},
[168627] = {
true,
false,
"fuchsia",
},
[133432] = {
false,
false,
"lightskyblue",
},
[190345] = {
true,
false,
"fuchsia",
},
[204206] = {
true,
false,
"fuchsia",
},
[113537] = {
true,
false,
"aqua",
},
[184022] = {
true,
false,
"fuchsia",
},
[126919] = {
true,
false,
"fuchsia",
},
[137713] = {
false,
false,
"paleturquoise",
},
[129602] = {
true,
false,
"aqua",
},
[75979] = {
true,
false,
"fuchsia",
},
[127111] = {
false,
false,
"fuchsia",
},
[184023] = {
true,
false,
"fuchsia",
},
[134137] = {
false,
false,
"dodgerblue",
},
[102232] = {
true,
false,
"fuchsia",
},
[196671] = {
true,
false,
"aqua",
},
[168886] = {
true,
false,
"fuchsia",
},
[187602] = {
true,
false,
"dodgerblue",
},
[187155] = {
true,
false,
"fuchsia",
},
[137716] = {
false,
false,
"blue",
},
[163458] = {
true,
false,
"fuchsia",
},
[134012] = {
false,
false,
"lightsalmon",
},
[81985] = {
true,
false,
"fuchsia",
},
[131585] = {
false,
false,
"navajowhite",
},
[168058] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"fuchsia",
},
[189265] = {
true,
false,
"fuchsia",
},
[131586] = {
false,
false,
"peru",
},
[136249] = {
false,
false,
"plum",
},
[197697] = {
true,
false,
"aqua",
},
[130435] = {
false,
false,
"magenta",
},
[206065] = {
true,
false,
"fuchsia",
},
[189266] = {
true,
false,
"aqua",
},
[136186] = {
false,
false,
"honeydew",
},
[168443] = {
true,
false,
"fuchsia",
},
[205363] = {
true,
false,
"fuchsia",
},
[206066] = {
true,
false,
"fuchsia",
},
[192333] = {
true,
false,
"fuchsia",
},
[104247] = {
true,
false,
"fuchsia",
},
[200126] = {
true,
false,
"fuchsia",
},
[196102] = {
true,
false,
"fuchsia",
},
[168572] = {
true,
false,
"fuchsia",
},
[84957] = {
true,
false,
"fuchsia",
},
[84989] = {
true,
false,
"fuchsia",
},
[187160] = {
true,
false,
"aqua",
},
[45912] = {
true,
false,
"fuchsia",
},
[101437] = {
false,
false,
"fuchsia",
},
[204918] = {
true,
false,
"fuchsia",
},
[193293] = {
true,
false,
"aqua",
},
[168318] = {
true,
false,
"fuchsia",
},
[135167] = {
false,
false,
"peru",
},
[170490] = {
true,
false,
"fuchsia",
},
[98691] = {
false,
false,
"aqua",
},
[84990] = {
true,
false,
"fuchsia",
},
[194316] = {
true,
false,
"fuchsia",
},
[166275] = {
true,
false,
"fuchsia",
},
[47238] = {
true,
false,
"fuchsia",
},
[181861] = {
true,
false,
"aqua",
},
[194317] = {
true,
false,
"fuchsia",
},
[166276] = {
true,
false,
"fuchsia",
},
[174197] = {
true,
false,
"magenta",
},
[164552] = {
true,
false,
"fuchsia",
},
[195851] = {
false,
false,
"white",
},
[190294] = {
true,
false,
"fuchsia",
},
[196043] = {
true,
false,
"fuchsia",
},
[189464] = {
true,
false,
"fuchsia",
},
[199748] = {
true,
false,
"fuchsia",
},
[194894] = {
true,
false,
"fuchsia",
},
[135235] = {
false,
false,
"goldenrod",
},
[168578] = {
true,
false,
"fuchsia",
},
[199877] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"fuchsia",
},
[167876] = {
true,
false,
"magenta",
},
[196045] = {
true,
false,
"fuchsia",
},
[167493] = {
true,
false,
"fuchsia",
},
[41139] = {
true,
false,
"fuchsia",
},
[206074] = {
true,
false,
"fuchsia",
},
[205691] = {
true,
false,
"fuchsia",
},
[90997] = {
true,
false,
"aqua",
},
[135365] = {
true,
false,
"fuchsia",
},
[167111] = {
true,
false,
"fuchsia",
},
[134024] = {
true,
false,
"fuchsia",
},
[134599] = {
false,
false,
"lightskyblue",
},
[45930] = {
true,
false,
"fuchsia",
},
[136005] = {
false,
false,
"blue",
},
[129227] = {
false,
false,
"maroon",
},
[134600] = {
false,
false,
"peru",
},
[135239] = {
false,
false,
"paleturquoise",
},
[170690] = {
true,
false,
"magenta",
},
[98280] = {
true,
false,
"fuchsia",
},
[126928] = {
false,
false,
"navajowhite",
},
[170882] = {
true,
false,
"magenta",
},
[129547] = {
false,
false,
"fuchsia",
},
[135240] = {
true,
false,
"fuchsia",
},
[189470] = {
true,
false,
"fuchsia",
},
[133835] = {
true,
false,
"fuchsia",
},
[59552] = {
true,
false,
"fuchsia",
},
[135049] = {
true,
false,
"fuchsia",
},
[135241] = {
false,
false,
"peru",
},
[133836] = {
true,
false,
"fuchsia",
},
[98792] = {
true,
false,
"aqua",
},
[208698] = {
true,
false,
"fuchsia",
},
[196115] = {
true,
false,
"fuchsia",
},
[137478] = {
false,
false,
"lightskyblue",
},
[133007] = {
true,
false,
"aqua",
},
[193944] = {
true,
false,
"fuchsia",
},
[91000] = {
true,
false,
"aqua",
},
[131858] = {
false,
false,
"dodgerblue",
},
[199749] = {
true,
false,
"aqua",
},
[197905] = {
true,
false,
"fuchsia",
},
[105715] = {
true,
false,
"fuchsia",
},
[134158] = {
false,
false,
"navajowhite",
},
[130436] = {
false,
false,
"aqua",
},
[189531] = {
true,
false,
"fuchsia",
},
[45477] = {
true,
false,
"aqua",
},
[126918] = {
false,
false,
"lightskyblue",
},
[213806] = {
true,
false,
"fuchsia",
},
[196044] = {
true,
false,
"fuchsia",
},
[136139] = {
false,
false,
"peru",
},
[172265] = {
true,
false,
"fuchsia",
},
[91001] = {
true,
false,
"aqua",
},
[45928] = {
true,
false,
"aqua",
},
[97197] = {
true,
false,
"fuchsia",
},
[134331] = {
false,
false,
"lightskyblue",
},
[134990] = {
false,
false,
"honeydew",
},
[136076] = {
false,
false,
"lightcoral",
},
[195927] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"fuchsia",
},
[197698] = {
true,
false,
"aqua",
},
[122971] = {
true,
false,
"fuchsia",
},
[174210] = {
true,
false,
"magenta",
},
[165076] = {
true,
false,
"magenta",
},
[187033] = {
true,
false,
"aqua",
},
[195928] = {
true,
false,
"fuchsia",
},
[193373] = {
true,
false,
"fuchsia",
},
[133436] = {
false,
false,
"lightskyblue",
},
[131670] = {
false,
false,
"palegreen",
},
[127315] = {
false,
false,
"plum",
},
[171656] = {
true,
false,
"fuchsia",
},
[134417] = {
false,
false,
"lightskyblue",
},
[201223] = {
true,
false,
"fuchsia",
},
[208438] = {
true,
false,
"aqua",
},
[208193] = {
true,
false,
"fuchsia",
},
[195929] = {
true,
false,
"fuchsia",
},
[213942] = {
true,
false,
"fuchsia",
},
[122972] = {
true,
false,
"fuchsia",
},
[59545] = {
true,
false,
"fuchsia",
},
[134418] = {
false,
false,
"dodgerblue",
},
[102788] = {
true,
false,
"fuchsia",
},
[192800] = {
true,
false,
"fuchsia",
},
[138187] = {
true,
false,
"fuchsia",
},
[190373] = {
true,
false,
"fuchsia",
},
[113998] = {
true,
false,
"aqua",
},
[170572] = {
true,
false,
"fuchsia",
},
[205384] = {
true,
false,
"fuchsia",
},
[131864] = {
true,
false,
"fuchsia",
},
[128434] = {
true,
false,
"fuchsia",
},
[195930] = {
true,
false,
"fuchsia",
},
[43873] = {
true,
false,
"aqua",
},
[186220] = {
true,
false,
"fuchsia",
},
[165872] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"fuchsia",
},
[98370] = {
true,
false,
"fuchsia",
},
[137486] = {
false,
false,
"lightskyblue",
},
[138061] = {
false,
false,
"magenta",
},
[137103] = {
false,
false,
"lightsalmon",
},
[134338] = {
false,
false,
"navajowhite",
},
[163459] = {
true,
false,
"fuchsia",
},
[137511] = {
false,
false,
"navajowhite",
},
[133685] = {
true,
false,
"fuchsia",
},
[168594] = {
true,
false,
"fuchsia",
},
[189340] = {
true,
false,
"aqua",
},
[128435] = {
false,
false,
"aqua",
},
[137830] = {
true,
false,
"fuchsia",
},
[167956] = {
true,
false,
"fuchsia",
},
[129553] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"fuchsia",
},
[162057] = {
true,
false,
"fuchsia",
},
[165529] = {
true,
false,
"magenta",
},
[100485] = {
true,
false,
"aqua",
},
[138063] = {
false,
false,
"blue",
},
[195842] = {
true,
false,
"fuchsia",
},
[138255] = {
false,
false,
"maroon",
},
[190377] = {
true,
false,
"fuchsia",
},
[196798] = {
true,
false,
"fuchsia",
},
[59555] = {
true,
false,
"fuchsia",
},
[127757] = {
false,
false,
"lightcoral",
},
[133912] = {
true,
false,
"fuchsia",
},
[138064] = {
false,
false,
"blue",
},
[131677] = {
false,
false,
"lightskyblue",
},
[133593] = {
false,
false,
"honeydew",
},
[125977] = {
false,
false,
"plum",
},
[134232] = {
false,
false,
"goldenrod",
},
[98406] = {
false,
false,
"transparent",
},
[186339] = {
true,
false,
"fuchsia",
},
[131545] = {
true,
false,
"fuchsia",
},
[132126] = {
false,
false,
"honeydew",
},
[92612] = {
true,
false,
"aqua",
},
[169875] = {
true,
false,
"magenta",
},
[139425] = {
false,
false,
"honeydew",
},
[91006] = {
true,
false,
"fuchsia",
},
[134251] = {
false,
false,
"honeydew",
},
[203857] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"fuchsia",
},
[205152] = {
true,
false,
"aqua",
},
[136470] = {
false,
false,
"honeydew",
},
[166299] = {
true,
false,
"fuchsia",
},
[136214] = {
false,
false,
"plum",
},
[196576] = {
true,
false,
"fuchsia",
},
[186420] = {
true,
false,
"fuchsia",
},
[144071] = {
false,
false,
"lightskyblue",
},
[40633] = {
true,
false,
"aqua",
},
[212673] = {
true,
false,
"aqua",
},
[197535] = {
true,
false,
"fuchsia",
},
[186229] = {
true,
false,
"aqua",
},
[190381] = {
true,
false,
"fuchsia",
},
[186658] = {
true,
false,
"fuchsia",
},
[134157] = {
false,
false,
"peru",
},
[133852] = {
false,
false,
"olivedrab",
},
[45935] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"fuchsia",
},
[95766] = {
true,
false,
"aqua",
},
[186741] = {
true,
false,
"fuchsia",
},
[198047] = {
true,
false,
"fuchsia",
},
[135258] = {
false,
false,
"peru",
},
[206351] = {
true,
false,
"fuchsia",
},
[134364] = {
false,
false,
"honeydew",
},
[185528] = {
true,
false,
"fuchsia",
},
[185656] = {
true,
false,
"fuchsia",
},
[195876] = {
true,
false,
"fuchsia",
},
[166302] = {
true,
false,
"fuchsia",
},
[165919] = {
true,
false,
"fuchsia",
},
[167963] = {
true,
false,
"fuchsia",
},
[137521] = {
false,
false,
"cornflowerblue",
},
[191847] = {
true,
false,
"fuchsia",
},
[185529] = {
true,
false,
"fuchsia",
},
[214209] = {
true,
false,
"fuchsia",
},
[195877] = {
true,
false,
"fuchsia",
},
[197985] = {
true,
false,
"fuchsia",
},
[134174] = {
false,
false,
"honeydew",
},
[136549] = {
false,
false,
"lightcoral",
},
[186226] = {
true,
false,
"fuchsia",
},
[207969] = {
true,
false,
"fuchsia",
},
[40634] = {
true,
false,
"fuchsia",
},
[141284] = {
false,
false,
"lightskyblue",
},
[189235] = {
true,
false,
"fuchsia",
},
[188067] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"aqua",
},
[167965] = {
true,
false,
"fuchsia",
},
[129366] = {
false,
false,
"goldenrod",
},
[133345] = {
false,
false,
"goldenrod",
},
[131492] = {
true,
false,
"fuchsia",
},
[131587] = {
true,
false,
"fuchsia",
},
[134150] = {
false,
false,
"navajowhite",
},
[131685] = {
true,
false,
"fuchsia",
},
[163503] = {
true,
false,
"fuchsia",
},
[76446] = {
true,
false,
"dodgerblue",
},
[45919] = {
true,
false,
"aqua",
},
[100527] = {
true,
false,
"fuchsia",
},
[133430] = {
false,
false,
"cornflowerblue",
},
[135007] = {
false,
false,
"lightskyblue",
},
[130404] = {
false,
false,
"peru",
},
[168357] = {
true,
false,
"fuchsia",
},
[135263] = {
false,
false,
"maroon",
},
[167967] = {
true,
false,
"fuchsia",
},
[129367] = {
false,
false,
"honeydew",
},
[130488] = {
false,
false,
"lightsalmon",
},
[174802] = {
true,
false,
"fuchsia",
},
[130485] = {
false,
false,
"peru",
},
[95769] = {
true,
false,
"fuchsia",
},
[195878] = {
true,
false,
"fuchsia",
},
[129559] = {
false,
false,
"navajowhite",
},
[187897] = {
true,
false,
"aqua",
},
[139949] = {
false,
false,
"honeydew",
},
[102287] = {
true,
false,
"aqua",
},
[160495] = {
true,
false,
"magenta",
},
[190348] = {
true,
false,
"fuchsia",
},
[165222] = {
true,
false,
"fuchsia",
},
[131821] = {
true,
false,
"fuchsia",
},
[75713] = {
true,
false,
"fuchsia",
},
[165414] = {
true,
false,
"magenta",
},
[135329] = {
false,
false,
"plum",
},
[196202] = {
true,
false,
"fuchsia",
},
[186116] = {
true,
false,
"fuchsia",
},
[131436] = {
true,
false,
"aqua",
},
[184130] = {
true,
false,
"aqua",
},
[44404] = {
true,
false,
"fuchsia",
},
[173016] = {
true,
false,
"fuchsia",
},
[163882] = {
true,
false,
"fuchsia",
},
[205337] = {
true,
false,
"fuchsia",
},
[131817] = {
true,
false,
"aqua",
},
[190368] = {
true,
false,
"fuchsia",
},
[105704] = {
true,
false,
"fuchsia",
},
[193457] = {
true,
false,
"aqua",
},
[199717] = {
true,
false,
"fuchsia",
},
[168418] = {
true,
false,
"fuchsia",
},
[134629] = {
false,
false,
"navajowhite",
},
[136353] = {
false,
false,
"royalblue",
},
[131818] = {
false,
false,
"plum",
},
[184132] = {
true,
false,
"fuchsia",
},
[129369] = {
false,
false,
"lightsalmon",
},
[95771] = {
true,
false,
"fuchsia",
},
[129529] = {
false,
false,
"goldenrod",
},
[135204] = {
false,
false,
"honeydew",
},
[100531] = {
true,
false,
"aqua",
},
[75459] = {
true,
false,
"fuchsia",
},
[131819] = {
true,
false,
"fuchsia",
},
[168992] = {
true,
false,
"fuchsia",
},
[184580] = {
true,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[96664] = {
true,
false,
"fuchsia",
},
[168420] = {
true,
false,
"fuchsia",
},
[120651] = {
true,
false,
"darkorange",
},
[129370] = {
false,
false,
"lightskyblue",
},
[134139] = {
false,
false,
"lightskyblue",
},
[190362] = {
true,
false,
"fuchsia",
},
[184581] = {
true,
false,
"aqua",
},
[194315] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"fuchsia",
},
[131666] = {
true,
false,
"fuchsia",
},
[171799] = {
true,
false,
"fuchsia",
},
[139422] = {
false,
false,
"lightskyblue",
},
[195696] = {
true,
false,
"magenta",
},
[104295] = {
true,
false,
"fuchsia",
},
[133482] = {
false,
false,
"maroon",
},
[128455] = {
true,
false,
"aqua",
},
[200137] = {
true,
false,
"fuchsia",
},
[131812] = {
true,
false,
"fuchsia",
},
[104300] = {
true,
false,
"fuchsia",
},
[83892] = {
true,
false,
"fuchsia",
},
[138465] = {
false,
false,
"lightcoral",
},
[104278] = {
true,
false,
"fuchsia",
},
[163121] = {
true,
false,
"fuchsia",
},
[136006] = {
false,
false,
"blue",
},
[205151] = {
true,
false,
"aqua",
},
[193462] = {
true,
false,
"fuchsia",
},
[138338] = {
true,
false,
"fuchsia",
},
[122984] = {
false,
false,
"peru",
},
[100532] = {
true,
false,
"fuchsia",
},
[137484] = {
false,
false,
"lightskyblue",
},
[98243] = {
true,
false,
"aqua",
},
[189247] = {
true,
false,
"fuchsia",
},
[169893] = {
true,
false,
"magenta",
},
[205727] = {
true,
false,
"fuchsia",
},
[136295] = {
false,
false,
"peru",
},
[83893] = {
true,
false,
"fuchsia",
},
[136934] = {
false,
false,
"navajowhite",
},
[191164] = {
true,
false,
"fuchsia",
},
[191739] = {
true,
false,
"aqua",
},
[130011] = {
true,
false,
"aqua",
},
[186246] = {
true,
false,
"fuchsia",
},
[128967] = {
false,
false,
"palegreen",
},
[197912] = {
true,
false,
"fuchsia",
},
[195265] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"fuchsia",
},
[98521] = {
true,
false,
"fuchsia",
},
[190207] = {
true,
false,
"fuchsia",
},
[99366] = {
true,
false,
"fuchsia",
},
[129788] = {
true,
false,
"fuchsia",
},
[104270] = {
true,
false,
"fuchsia",
},
[163891] = {
true,
false,
"fuchsia",
},
[128969] = {
false,
false,
"goldenrod",
},
[133870] = {
true,
false,
"fuchsia",
},
[162039] = {
true,
false,
"fuchsia",
},
[134514] = {
false,
false,
"lightgreen",
},
[122969] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[134701] = {
false,
false,
"maroon",
},
[168942] = {
true,
false,
"fuchsia",
},
[199603] = {
true,
false,
"fuchsia",
},
[127106] = {
false,
false,
"peru",
},
[162040] = {
true,
false,
"fuchsia",
},
[163126] = {
true,
false,
"fuchsia",
},
[137516] = {
false,
false,
"lightsalmon",
},
[98275] = {
true,
false,
"aqua",
},
[190401] = {
true,
false,
"aqua",
},
[81819] = {
true,
false,
"fuchsia",
},
[192788] = {
true,
false,
"fuchsia",
},
[130661] = {
false,
false,
"lightgreen",
},
[205158] = {
true,
false,
"fuchsia",
},
[192789] = {
true,
false,
"aqua",
},
[184301] = {
true,
false,
"fuchsia",
},
[132491] = {
false,
false,
"palegreen",
},
[196548] = {
true,
false,
"fuchsia",
},
[138281] = {
true,
false,
"aqua",
},
[134144] = {
false,
false,
"lightgreen",
},
[131318] = {
false,
false,
"fuchsia",
},
[134284] = {
true,
false,
"fuchsia",
},
[163128] = {
true,
false,
"fuchsia",
},
[132532] = {
false,
false,
"palegreen",
},
[90998] = {
true,
false,
"fuchsia",
},
},
["plater_resources_show"] = false,
["cast_statusbar_spark_half"] = true,
["extra_icon_height"] = 10,
["hook_data"] = {
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 363,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Name"] = "Attacking Specific Unit [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["Enabled"] = false,
["Revision"] = 95,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Hide Neutral Units [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1553450458,
["Icon"] = 1990989,
["LastHookEdited"] = "Constructor",
},
{
["Enabled"] = false,
["Revision"] = 185,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Name"] = "Players Targeting a Target [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1551825362,
["Icon"] = 1966587,
["LastHookEdited"] = "Constructor",
},
{
["Enabled"] = false,
["Revision"] = 94,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1613211428,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Current Target Color [Plater]",
["Icon"] = 878211,
["PlaterCore"] = 1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Name"] = "Combo Points [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 197,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled and unitFrame.ActorType == \"enemyplayer\") then\n        \n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n        \n    else\n        envTable.BorderFrame:Hide() \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1613211728,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Extra Border [Plater]",
["Icon"] = 133689,
["PlaterCore"] = 1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Reorder Nameplate [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 107,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Options"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Color Automation [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1551825317,
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["LastHookEdited"] = "Constructor",
},
{
["Enabled"] = false,
["Revision"] = 139,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Ahwa-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --second execute range (UseCustomExecutePercent must be enabled)\n    envTable.SecondRangeStart = 0.999\n    envTable.SecondRangeEnd = 0.8\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame, divisorPercent)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n        \n        if (percent <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.ExecutePercent)\n            envTable.InExecuteRange = true\n            \n        elseif (percent < envTable.SecondRangeStart and percent >= envTable.SecondRangeEnd) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.SecondRangeEnd)\n            envTable.InExecuteRange = true\n            \n        else\n            if (envTable.InExecuteRange) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                Plater.RefreshNameplateColor (unitFrame)\n                Plater.SetBorderColor (unitFrame)\n                envTable.InExecuteRange = false\n            end\n        end\n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Advanced Execute Range",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1551825289,
["Icon"] = 135358,
["HooksTemp"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1699162519,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 360,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 236,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Kastfall-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
},
["Name"] = "Jaina Encounter [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
["1"] = 2281,
["Enabled"] = true,
},
["spec"] = {
},
},
["Time"] = 1551894760,
["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 81,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Kastfall-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
},
["Name"] = "Stormwall Encounter [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
["1"] = 2280,
["Enabled"] = true,
},
["spec"] = {
},
},
["Time"] = 1551887545,
["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 58,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Herith�gue-Proudmoore",
["OptionsValues"] = {
},
["Desc"] = "Change the border of the focus target.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.BorderThickness = 3\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.UpdateBorder (unitFrame, unit)\n        local plateFrame = unitFrame:GetParent()\n        \n        if (UnitIsUnit (\"focus\", unit)) then\n            Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            local borderSize = envTable.BorderThickness\n            unitFrame.healthBar.border:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.border:UpdateSizes()        \n            \n        else\n            Plater.SetBorderColor (unitFrame)\n            Plater.UpdatePlateBorderThickness (unitFrame.PlateFrame)\n            unitFrame.healthBar.border:UpdateSizes()\n        end\n    end\nend\n\n\n\n",
},
["Name"] = "Focus Target Border",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1552962607,
["Icon"] = 133006,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 48,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
["Prio"] = 99,
["Name"] = "Don't Have Aura [Plater]",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Time"] = 1613211434,
["Icon"] = 136207,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = false,
["Revision"] = 55,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Name"] = "M+ Bwonsamdi Reaping",
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["Time"] = 1579030189,
["Icon"] = 2446016,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
["Enabled"] = true,
["117"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = false,
["Revision"] = 36,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Options"] = {
},
["Desc"] = "Show the name of the unit current target ",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --max length of the text\n    envTable.TextMaxLength = 100\n    \n    --update the spell name text\n    function envTable.UpdateSpellNameText (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        local textString = castBar.Text\n        local spellName = castBar.SpellName\n        \n        if (unitFrame.targetUnitID) then\n            local targetName = UnitName (unitFrame.targetUnitID)\n            \n            if (targetName) then\n                textString:SetText (spellName .. \" > \" .. targetName) \n                \n                if (envTable.TextMaxLength) then\n                    Plater.LimitTextSize (textString, envTable.TextMaxLength)\n                end\n                \n            else\n                textString:SetText (spellName)\n            end\n        else\n            textString:SetText (spellName)\n        end\n    end\nend",
},
["Prio"] = 99,
["Name"] = "Cast Target",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Time"] = 1620347099,
["Icon"] = 413580,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = false,
["Revision"] = 43,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Kastfall-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Only show nameplates while in combat, see the constructor for more options.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Zone Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckIfCanShowNameplate (unitFrame)\n        if (Plater.IsInCombat()) then\n            \n            if (not unitFrame.healthBar:IsShown()) then\n                Plater.ShowHealthBar (unitFrame)\n                Plater.EnableHighlight (unitFrame)\n            end\n            \n        else\n            \n            if (unitFrame.healthBar:IsShown()) then\n                Plater.HideHealthBar (unitFrame)\n                Plater.DisableHighlight (unitFrame)\n            end\n            \n        end        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Only in Combat",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1551825361,
["Icon"] = 135473,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 35,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Add an exclamation icon on units with color set in the Npc Colors tab with the \"Only Script\" box selected.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local npcColor = Plater.GetNpcColor (unitFrame)\n    if (npcColor) then\n        unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n        unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)        \n        unitFrame.NpcColorCodeTexture:Show()\n        \n    else\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.IconTexture = [[Interface\\AddOns\\Plater\\media\\exclamation_64]]\n    envTable.Alpha = 0.8\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetTexture (envTable.IconTexture)\n        \n        --texture side | anchor to which frame | frame side | x offset | y offset\n        unitFrame.NpcColorCodeTexture:SetPoint (\"right\", unitFrame.healthBar, \"right\", -2, 0)\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Npc Colors Icon",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1553450716,
["Icon"] = "Interface\\AddOns\\Plater\\media\\exclamation_64",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 68,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Add a color tag on units with color set in the Npc Colors tab with the \"Only Script\" box selected.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateColorTag (unitFrame)   \n    \nend\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateTexture (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Alpha = 0.75\n    \n    envTable.Anchor = {\n        side = 11, --right side inside the nameplate\n        x = -3,\n        y = 0\n    }\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetColorTexture (1, 1, 1, 1)\n        \n    end\n    \n    function  envTable.UpdateColorTag (unitFrame)\n        local npcColor = Plater.GetNpcColor (unitFrame)\n        if (npcColor) then\n            unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n            unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)           \n            unitFrame.NpcColorCodeTexture:Show()        \n        end\n    end\n    \n    function  envTable.UpdateTexture (unitFrame)\n        Plater.SetAnchor (unitFrame.NpcColorCodeTexture, envTable.Anchor)\n        unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight() - 4, unitFrame.healthBar:GetHeight() - 4)\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n        envTable.UpdateColorTag (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Npc Colors Tag",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1553450705,
["Icon"] = "Interface\\AddOns\\Plater\\media\\radio_64",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 44,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Options"] = {
},
["Desc"] = "Change the color of the aura timer by it's time left",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Prio"] = 99,
["Name"] = "Paint Aura Timers",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Time"] = 1613211753,
["Icon"] = "Interface\\Timer\\Challenges-Logo",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = true,
["Revision"] = 129,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "????????-Illidan",
["OptionsValues"] = {
},
["Desc"] = "Config aura borders",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["Prio"] = 99,
["Time"] = 1620348411,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Advanced Debuff Border",
["Icon"] = 133006,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 35,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "�r��ne-Kel'thuzad",
["OptionsValues"] = {
},
["Desc"] = "Show yellow star for elite; Silver star for rares",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.UpdateIndicator (unitFrame, unitId)\n        local unitClassification = UnitClassification (unitId)\n        local unitName = UnitName (unitId)\n        unitName = unitName or UNKNOWN\n        \n        if (unitClassification == \"rareelite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. \"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t \" .. unitName)\n            \n        elseif (unitClassification == \"rare\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. unitName)\n            \n        elseif (unitClassification == \"elite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t\" .. unitName)\n            \n        end\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Rarity in the Name",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1551825364,
["Icon"] = "Interface\\AddOns\\Plater\\media\\star_full_64",
["HooksTemp"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 77,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "Cyclopes-Turalyon",
["OptionsValues"] = {
},
["Desc"] = "Add an icon to indicate an unit has Aggro on you. By default only show for units using a custom color from Npc Colors.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateThreatState (unitFrame, unitId)\n    \nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Anchor = {side = 11, x = -2, y = 0}\n    envTable.Texture = \"Interface\\\\AddOns\\\\Plater\\\\media\\\\exclamation2_64\"\n    \n    --it'll only use the icon if the nameplate has a color from the Npc Colors tab and \"Only Scripts\" disabled.\n    envTable.OnlyWhenUsingNpcColor = true --if false, it'll always use the icon\n    \n    --private\n    envTable.PlayerRole = \"NONE\" --automatically changed by the script\n    \n    function envTable.CreateIndicator (unitFrame)\n        if (not unitFrame.ThreatIcon) then\n            unitFrame.ThreatIcon = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        end\n    end\n    \n    function envTable.UpdateIndicator (unitFrame)\n        envTable.CreateIndicator (unitFrame)\n        \n        unitFrame.ThreatIcon:SetTexture (envTable.Texture)\n        Plater.SetAnchor (unitFrame.ThreatIcon, envTable.Anchor)\n        unitFrame.ThreatIcon:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateThreatState (unitFrame, unitId)\n        if (not unitFrame.ThreatIcon) then --if there's no icon created yet\n            return\n            \n        elseif (not Plater.IsInCombat()) then --not in combat\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (unitFrame.IsSelf) then --personal bar\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (envTable.OnlyWhenUsingNpcColor) then --must be using a npc color?\n            if (not unitFrame.UsingCustomColor) then\n                unitFrame.ThreatIcon:Hide()\n                return\n            end\n        end\n        \n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation (\"player\", unitId)\n        \n        if (isTanking) then\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Hide()\n            else\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateAggroColor))\n            end\n        else\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateNoAggroColor))                \n            else\n                unitFrame.ThreatIcon:Hide()                \n            end\n        end\n    end\n    \n    function envTable.UpdatePlayerRole (unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            envTable.NameplateAggroColor = profile.tank.colors.aggro\n            envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n            envTable.NameplateAggroColor = profile.dps.colors.aggro\n            envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            \n        end        \n    end\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend",
},
["Prio"] = 99,
["Time"] = 1711787342,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Aggro Indicator",
["Icon"] = 132344,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 20,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Edit the Constructor script setting the font you want in the FONT = \"\", then /reload.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
},
["Name"] = "Change All Fonts",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1551825316,
["Icon"] = 134331,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 50,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Show the power bar for specific units",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.PowerBarAnchor = {side = 4, x = 0, y = -10}\n    \n    function envTable.UpdatePowerBar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        Plater.SetAnchor (unitFrame.powerBar, envTable.PowerBarAnchor)\n        \n    end\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\") then\n        \n        local arenaEnemies = GetNumArenaOpponentSpecs()\n        local found = false\n        for i = 1, arenaEnemies do\n            local guid = UnitGUID (\"arena\" .. i)\n            print (guid)\n            if (guid == unitFrame.namePlateUnitGUID) then\n                \n                local spec = GetArenaOpponentSpec (i)\n                print (spec)\n                if (spec) then\n                    local id, name, description, icon, role, class = GetSpecializationInfoByID (spec)\n                    print (name)\n                    if (role == \"HEALER\") then\n                        envTable.UpdatePowerBar (unitFrame)\n                    end\n                    print (role)\n                end\n                \n                break\n            end\n        end\n        \n        return\n    end\n    \n    --show for enemy players\n    if (unitFrame.ActorType == \"enemyplayer\") then\n        envTable.UpdatePowerBar (unitFrame)\n        return\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Power Bar",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1553450521,
["Icon"] = 1375677,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 140,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
},
["Prio"] = 99,
["Time"] = 1620346604,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Cast Icon Anchor",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 65,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, 0)\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\", -1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, 0)\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\", 1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1620346604,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Cast Icon Border",
["Icon"] = 133004,
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 98,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1699163950,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Cast Bar Border",
["Icon"] = 133004,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 46,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "????????-Illidan",
["Options"] = {
},
["Desc"] = "Debuff timer show decimal values",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --minimum time left to take effect\n    envTable.MinTime = 9.999\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then\n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then            \n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end        \n    end    \nend",
},
["Prio"] = 99,
["Name"] = "Decimal Debuff Timer",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Time"] = 1613211431,
["Icon"] = 609811,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = true,
["Revision"] = 86,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "?????-Illidan",
["OptionsValues"] = {
},
["Desc"] = "Format Buff Special icons like the regular aura icons.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, profile.aura_timer_text_size)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
},
["Prio"] = 99,
["Time"] = 1699162520,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Buff Special Mod",
["Icon"] = 136139,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 29,
["Options"] = {
},
["LastHookEdited"] = "Player Talent Update",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Adds two arrows into the target indicators options.",
["Hooks"] = {
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
},
["Name"] = "Arrow Target Indicators",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1551887544,
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_right_64",
["HooksTemp"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 12,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Set the unit name to be above the target shading texture.",
["Hooks"] = {
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.unitName:SetDrawLayer (\"overlay\", 7)\nend\n\n\n\n\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1620348420,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Unit Name Over Target Shading",
["Icon"] = 237377,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 25,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Set the spark height to the same size of the cast bar.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1620348421,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Adjust Spark Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\spark6",
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 71,
["Options"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["OptionsValues"] = {
},
["Desc"] = "Show power bar for some units.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = true\n    envTable.ShowForEnemyNpcs = false\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [\"the rock\"] = true, --npc name\n        [225] = true, --npcId\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 13, --inside the healthbar, bottom side\n        x = 0, \n        y = 0,\n    }\n    \n    --power bar height\n    envTable.Height = 1\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = false\n    envTable.PercentTextAnchor = {\n        side = 7, --top right\n        x = 2, \n        y = 0,\n    }\n    \n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        powerBar:SetSize (unitFrame.healthBar:GetWidth(), envTable.Height)\n        \n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_font)\n            Plater:SetFontSize (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_size)\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n        else\n            powerBar.percentText:Hide()\n        end\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar) then\n            envTable.ShowPowerbar (unitFrame)\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\") then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
},
["Prio"] = 99,
["Time"] = 1620346758,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Power Bar",
["Icon"] = "Interface/Addons/Plater/Media/fire_64",
["PlaterCore"] = 1,
},
{
["OptionsValues"] = {
["showIcon"] = false,
["useFullSize"] = false,
["iconOnLeftSide"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1620347016,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 352,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast Bar Icon Settings [P]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Icon Settings:",
["Name"] = "Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showIcon",
["Value"] = true,
["Name"] = "Show Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Key"] = "iconOnLeftSide",
["Value"] = true,
["Name"] = "Icon on Left Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Name"] = "Icon Size Offset",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option5",
["Value"] = "Can't Interrupt Texture:",
["Name"] = "Interrupt Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTexture",
["Value"] = true,
["Name"] = "Show Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Key"] = "iconTexturePath",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Name"] = "Texture Path",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Key"] = "desaturatedTexture",
["Value"] = true,
["Name"] = "Texture Desaturated",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Name"] = "Texture Width",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Name"] = "Texture Position",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Name"] = "Texture Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local name = unitFrame.healthBar.unitName:GetText()\n    \n    if (name) then\n        unitFrame.healthBar.unitName:SetText(name:gsub('(%S+) ',function(t) return t:sub(0,0)..'' end))\n    end\nend\n\n\n\n\n\n\n\n",
},
["Time"] = 1678558061,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/Rcm39UnZV/2",
["Icon"] = "INTERFACE\\ICONS\\Ability_Spy",
["Enabled"] = true,
["Revision"] = 447,
["semver"] = "1.0.1",
["Author"] = "Zenshoes-Area 52",
["Desc"] = "Abbreviates names on nameplates",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Abbreviated Names",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --Disable in PVP\n        if (UnitPlayerControlled(unitFrame.unit))\n        then \n            return     \n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1711812508,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/id_wRWfKp/2",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 43,
["semver"] = "1.0.1",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Force Threat Color",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
},
["auras_per_row_amount2"] = 2,
["aura_width"] = 16,
["health_statusbar_bgcolor"] = {
0.0431372,
0.0431372,
0.0431372,
1,
},
["buff_frame_anchor_and_size_migrated"] = true,
["pet_width_scale"] = 0.9999999403953552,
["aura_cooldown_reverse"] = false,
["aura_show_tooltip"] = true,
["quick_hide"] = true,
["target_highlight_color"] = {
nil,
0.52156862745098,
},
["castbar_framelevel"] = 0,
["cast_statusbar_spark_alpha"] = 0.7199999690055847,
["resources"] = {
["y_offset"] = 1,
["y_offset_target"] = 9,
["scale"] = 0.79999995231628,
},
["click_space"] = {
115,
},
["extra_icon_auras"] = {
277242,
},
["aura2_grow_direction"] = 3,
["castbar_target_outline"] = "NONE",
["url"] = "https://wago.io/kvgdjO6_L/3",
["extra_icon_show_enrage"] = true,
["target_shady_combat_only"] = false,
["cast_statusbar_spark_color"] = {
0.98823529411765,
[3] = 0.94117647058823,
},
["pet_height_scale"] = 0.9999999403953552,
["aura_x_offset"] = 0,
["first_run3"] = true,
["ui_parent_scale_tune"] = 1.562500034924597,
["ui_parent_buff_strata"] = "LOW",
["healthbar_framelevel"] = 0,
["health_statusbar_bgtexture"] = "PlaterBackground",
["indicator_raidmark_anchor"] = {
["x"] = -7.1300048828125,
},
["tank"] = {
["colors"] = {
["aggro"] = {
0.501960813999176,
0.501960813999176,
},
["noaggro"] = {
[3] = 0.1960784494876862,
},
["pulling"] = {
nil,
0,
0.77647058823529,
},
},
},
["aura_tracker"] = {
["buff_banned"] = {
["333553"] = true,
["281242"] = true,
["61573"] = true,
["206150"] = true,
["61574"] = true,
},
["debuff_banned"] = {
["331653"] = true,
["330911"] = true,
["327980"] = true,
["284678"] = true,
["281242"] = true,
["299151"] = true,
["340007"] = true,
},
["debuff"] = {
224991,
277950,
},
["debuff_tracked"] = {
["341408"] = true,
["281242"] = true,
["342938"] = true,
["324652"] = false,
},
["buff_tracked"] = {
["280001"] = true,
["328501"] = false,
[233210] = true,
[297133] = true,
["329181"] = false,
[163689] = true,
[227931] = true,
},
},
["castbar_target_show"] = true,
["cast_statusbar_color"] = {
nil,
0.85882352941176,
nil,
0.96000000089407,
},
["update_throttle"] = 0.09999999403953552,
["color_override"] = false,
["target_shady_alpha"] = 0.59999996423721,
["tocversion"] = 100206,
["castbar_icon_show"] = false,
["not_affecting_combat_alpha"] = 0.7999999523162842,
["use_health_animation"] = true,
["target_highlight_alpha"] = 1,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["click_space_friendly"] = {
92,
1,
},
["plater_resources_anchor"] = {
["y"] = 40,
["x"] = 0,
["side"] = 8,
},
["target_highlight_height"] = 18,
["aura_sort"] = true,
["hover_highlight_alpha"] = 0.29999998211861,
["version"] = 3,
["cast_statusbar_fadein_time"] = 0.02081192471087,
["target_shady_enabled"] = false,
["first_run2"] = true,
["color_override_colors"] = {
[3] = {
nil,
0.2784313,
0.2078431,
},
[4] = {
1,
0.83921568627451,
0,
},
[5] = {
0.29019607843137,
1,
0.19607843137255,
},
},
["extra_icon_auras_mine"] = {
["277242"] = false,
["224991"] = true,
},
["health_animation_time_dilatation"] = 2.869999885559082,
["patch_version"] = 38,
["no_spellname_length_limit"] = true,
["aura_timer_text_size"] = 10,
["extra_icon_show_timer"] = false,
["number_region_first_run"] = true,
["cast_statusbar_fadeout_time"] = 0.4899999797344208,
["aura_height2"] = 10,
["ghost_auras"] = {
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
},
},
["cast_audiocues"] = {
[372107] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[383823] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[375727] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369409] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[397889] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[374839] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369061] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375348] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[269843] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[396812] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[376683] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[265019] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377732] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[377383] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377034] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369573] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[272609] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[257756] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[369828] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[387950] = "nil",
[419351] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412215] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[385958] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388911] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[265372] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375251] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[385578] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[374563] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[255567] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388976] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382277] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[385536] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[257870] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[257426] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200291] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[397931] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[386660] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[378818] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[412505] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[226406] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[197974] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[268202] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[200768] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375327] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372311] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[408141] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[183465] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200261] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388060] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200784] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[367484] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[396665] = "nil",
[260793] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[373742] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[88308] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[226304] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[437719] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[200913] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412129] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[193505] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[226296] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[188404] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[367521] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[257397] = "nil",
[411012] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[156718] = "nil",
[169179] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[199151] = "nil",
[416139] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372222] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[413529] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[428293] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[87618] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Jump.ogg",
[393432] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[381525] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[384524] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[387910] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[427376] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[183088] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[370764] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[376892] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377559] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369465] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[426645] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372735] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[200345] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[188169] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[391118] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412200] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[169929] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[164357] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388801] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[372223] = "nil",
[266209] = "nil",
[375943] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[391723] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[395184] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377204] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412012] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[260894] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[265540] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[369563] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[387629] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382708] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[209628] = "nil",
[382712] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388392] = "nil",
[384868] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382233] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[411994] = "nil",
[375439] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372087] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372201] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[376170] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[201226] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[253721] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[374361] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375351] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
},
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1711469712,
["__TrashAt"] = 1724369563,
["semver"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Enabled"] = true,
["Revision"] = 148,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["SpellIds"] = {
},
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Add - Health Markers [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1711515606,
["__TrashAt"] = 1724369563,
["semver"] = "",
["url"] = "",
["Icon"] = 610472,
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 81,
["Options"] = {
},
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Prio"] = 99,
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            self.FrameOverlay.LeapArrow1:Show()\n            self.FrameOverlay.LeapArrow2:Show()\n            self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        local animation = texture.animation\n        animation:Stop()\n        texture:Hide()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1722356313,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 119,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Rename Spell",
["Value"] = true,
["Key"] = "bRenameSpell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Name"] = "Spell Name",
["Value"] = "Heroic Leap",
["Key"] = "spellName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color",
["Value"] = false,
["Key"] = "bUseCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["SpellIds"] = {
447141,
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1724470658,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1719710916,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 79,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Options"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1725063838,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1694734694,
["__TrashAt"] = 1732237307,
["Options"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["NpcNames"] = {
},
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["Enabled"] = false,
["Revision"] = 212,
["semver"] = "",
["Name"] = "Countdown",
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["url"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1610463138,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["NpcNames"] = {
},
["__TrashAt"] = 1732237307,
["Enabled"] = false,
["Revision"] = 267,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate On You [Plater]",
["Author"] = "Tecno-Azralon",
["Prio"] = 99,
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["semver"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Icon"] = 841383,
["url"] = "",
},
},
["ui_parent_cast_strata"] = "DIALOG",
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Fixate On You"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Blink by Time Left"] = 1,
["Aura - Is Cast Bar [P]"] = 1,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Cast - Stop Casting"] = 4,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Cast - Glowing [P]"] = 10,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Fixate"] = 11,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Tank Interrupt"] = 12,
["Cast - AoE With Range [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - Voidzone [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Important Target [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Cast - Shield Interrupt"] = 2,
["Cast - Quick Flash"] = 2,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Spiteful Affix"] = 3,
["Add - Warning [P]"] = 5,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Unit - Important"] = 11,
["Cast - Heal Cut [P]"] = 3,
["Auto Set Skull"] = 11,
["Color Change"] = 1,
["Cast - AoE Hit All [P]"] = 3,
["Add - Non Elite Trash [P]"] = 4,
["Unit - Health Markers"] = 12,
["Aura Border Color"] = 1,
["Countdown"] = 12,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Shining Green [P]"] = 3,
["Cast - Circular Swipe"] = 4,
["Unit - Show Energy"] = 11,
},
["castbar_target_font"] = "Accidental Presidency",
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.79781,
},
["cast_statusbar_texture"] = "Solid",
["dps"] = {
["colors"] = {
["aggro"] = {
nil,
0.0470588281750679,
},
["pulling"] = {
nil,
0.96078431372549,
0.95294117647059,
},
},
},
["aura2_x_offset"] = 2.099990844726563,
["indicator_pet"] = false,
["aura_timer_text_font"] = "Accidental Presidency",
["cast_statusbar_spark_width"] = 25,
},
},
["performance_units"] = {
[196642] = true,
[219746] = true,
[189707] = true,
[220626] = true,
[216205] = true,
[167999] = true,
[211306] = true,
[214441] = true,
[176920] = true,
},
["InterruptableSpells"] = {
[15122] = true,
[407122] = true,
[201837] = true,
[8092] = true,
[412233] = true,
[407124] = true,
[407891] = true,
[322938] = true,
[76711] = true,
[377488] = true,
[373017] = true,
[169839] = true,
[124682] = true,
[376725] = true,
[385029] = true,
[264050] = true,
[388862] = true,
[132409] = true,
[169840] = true,
[382731] = true,
[374045] = true,
[253517] = true,
[169841] = true,
[417481] = true,
[190984] = true,
[428086] = true,
[200630] = true,
[429109] = true,
[2061] = true,
[253583] = true,
[429110] = true,
[445207] = true,
[377500] = true,
[374563] = true,
[411994] = true,
[412378] = true,
[201399] = true,
[377503] = true,
[433841] = true,
[5176] = true,
[387596] = true,
[268278] = true,
[147362] = true,
[422090] = true,
[198590] = true,
[408805] = true,
[373803] = true,
[443427] = true,
[33871] = true,
[427459] = true,
[373932] = true,
[374699] = true,
[443430] = true,
[442536] = true,
[386071] = true,
[375596] = true,
[373680] = true,
[451097] = true,
[428103] = true,
[227913] = true,
[105174] = true,
[275826] = true,
[143343] = true,
[378282] = true,
[383009] = true,
[378155] = true,
[374706] = true,
[377389] = true,
[385310] = true,
[123986] = true,
[2139] = true,
[191634] = true,
[377008] = true,
[194509] = true,
[372538] = true,
[451871] = true,
[387613] = true,
[200642] = true,
[382249] = true,
[369602] = true,
[188443] = true,
[48181] = true,
[76369] = true,
[387618] = true,
[384808] = true,
[201411] = true,
[351338] = true,
[321828] = true,
[263959] = true,
[451113] = true,
[326046] = true,
[265876] = true,
[377402] = true,
[451114] = true,
[395160] = true,
[320171] = true,
[427609] = true,
[449455] = true,
[265368] = true,
[374339] = true,
[15407] = true,
[388392] = true,
[454440] = true,
[134091] = true,
[412922] = true,
[417011] = true,
[324776] = true,
[372683] = true,
[47528] = true,
[97547] = true,
[225562] = true,
[686] = true,
[426596] = true,
[347008] = true,
[188196] = true,
[369365] = true,
[395427] = true,
[11978] = true,
[417018] = true,
[387125] = true,
[334748] = true,
[260696] = true,
[15615] = true,
[428263] = true,
[260697] = true,
[326319] = true,
[324914] = true,
[426731] = true,
[416256] = true,
[333602] = true,
[260698] = true,
[34914] = true,
[451261] = true,
[431333] = true,
[260699] = true,
[429545] = true,
[384194] = true,
[164887] = true,
[324536] = true,
[260700] = true,
[400165] = true,
[200658] = true,
[428526] = true,
[168082] = true,
[381770] = true,
[260701] = true,
[417030] = true,
[252781] = true,
[381516] = true,
[201298] = true,
[37470] = true,
[436322] = true,
[36033] = true,
[257063] = true,
[434793] = true,
[267824] = true,
[266036] = true,
[356995] = true,
[165213] = true,
[436841] = true,
[372711] = true,
[373861] = true,
[320462] = true,
[377950] = true,
[320336] = true,
[442210] = true,
[204243] = true,
[434802] = true,
[322767] = true,
[338353] = true,
[415770] = true,
[91807] = true,
[168092] = true,
[387411] = true,
[369399] = true,
[418200] = true,
[447966] = true,
[369400] = true,
[376171] = true,
[264390] = true,
[263165] = true,
[373395] = true,
[351252] = true,
[418202] = true,
[434122] = true,
[278444] = true,
[374544] = true,
[415437] = true,
[399491] = true,
[392398] = true,
[392576] = true,
[164965] = true,
[433662] = true,
[257732] = true,
[197797] = true,
[386012] = true,
[446086] = true,
[452099] = true,
[272571] = true,
[413607] = true,
[415435] = true,
[407121] = true,
[377384] = true,
[431309] = true,
[200248] = true,
[384197] = true,
[116705] = true,
[386015] = true,
[255824] = true,
[252923] = true,
[426768] = true,
[253562] = true,
[187707] = true,
[31935] = true,
[266225] = true,
[388863] = true,
[40823] = true,
[387843] = true,
[426541] = true,
[73510] = true,
[6552] = true,
[369411] = true,
[253544] = true,
[432520] = true,
[382474] = true,
[391054] = true,
[436679] = true,
[372223] = true,
[395694] = true,
[461904] = true,
[328406] = true,
[139867] = true,
[271174] = true,
[57994] = true,
[443433] = true,
[384161] = true,
[369823] = true,
[272581] = true,
[327130] = true,
[340544] = true,
[430097] = true,
[383651] = true,
[367500] = true,
[386024] = true,
[411958] = true,
[77472] = true,
[220543] = true,
[377338] = true,
[264024] = true,
[392924] = true,
[384365] = true,
[369674] = true,
[367503] = true,
[452201] = true,
[328667] = true,
[369675] = true,
[164973] = true,
[259572] = true,
[404754] = true,
[377341] = true,
[73920] = true,
[228260] = true,
[468940] = true,
[372743] = true,
[168040] = true,
[14914] = true,
[93985] = true,
[39120] = true,
[32375] = true,
[19647] = true,
[426783] = true,
[387564] = true,
[139425] = true,
[114074] = true,
[204896] = true,
[392451] = true,
[429422] = true,
[183752] = true,
[386026] = true,
[8004] = true,
[373897] = true,
[394976] = true,
[448248] = true,
[335143] = true,
[429176] = true,
[322274] = true,
[391528] = true,
[386546] = true,
[256957] = true,
[324293] = true,
[255041] = true,
[32747] = true,
[51505] = true,
[371984] = true,
[396640] = true,
[450756] = true,
[11972] = true,
[391403] = true,
[323057] = true,
[76813] = true,
[384633] = true,
[449734] = true,
[411300] = true,
[199663] = true,
[431303] = true,
[201839] = true,
[96231] = true,
[452162] = true,
[434786] = true,
[413427] = true,
[173563] = true,
[432031] = true,
[1766] = true,
[383231] = true,
[426283] = true,
[450983] = true,
[46036] = true,
[361469] = true,
},
["captured_casts"] = {
[36807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[398796] = {
["source"] = "Farscale Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 200486,
},
[124800] = {
["source"] = "Sra'thik Warcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61502,
},
[413131] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[376272] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191225,
},
[361938] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["npcID"] = 181549,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2544,
},
[327127] = {
["source"] = "Flesh Crafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 165872,
},
[168699] = {
["source"] = "Mokrik Blackfingers",
["event"] = "SPELL_CAST_START",
["npcID"] = 73459,
},
[413133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[49350] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plague Eruptor",
["npcID"] = 27611,
},
[421325] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[124289] = {
["source"] = "Lon the Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 50333,
},
[427469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[413135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[456138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[327130] = {
["isChanneled"] = true,
["source"] = "Flesh Crafter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165872,
},
[394706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Frost",
["npcID"] = 198702,
},
[413136] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[275937] = {
["source"] = "Frigidus",
["event"] = "SPELL_CAST_START",
["npcID"] = 204425,
},
[409041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[456140] = {
["source"] = "Grimslice",
["event"] = "SPELL_CAST_START",
["npcID"] = 221551,
},
[392660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skald the Impaler",
["npcID"] = 193708,
},
[390613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarglebone",
["npcID"] = 197344,
},
[376279] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[464333] = {
["encounterName"] = "The Seven",
["source"] = "Doom'rel",
["npcID"] = 226310,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[384471] = {
["source"] = "Lava Tarantula",
["event"] = "SPELL_CAST_START",
["npcID"] = 191672,
},
[464334] = {
["encounterName"] = "The Seven",
["source"] = "Doom'rel",
["npcID"] = 226310,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[260852] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[40904] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[404951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[392665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Thunderhide",
["npcID"] = 187258,
},
[259829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hissing Swell",
["npcID"] = 128768,
},
[34761] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["npcID"] = 17975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1926,
},
[119684] = {
["encounterName"] = "Xin the Weaponmaster",
["source"] = "Xin the Weaponmaster",
["encounterID"] = 1441,
["event"] = "SPELL_CAST_START",
["npcID"] = 61398,
},
[456147] = {
["source"] = "Bandtail Kestrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 220300,
},
[384476] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[413145] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[146180] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Staff of Resonating Water",
["npcID"] = 72810,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[400859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Magma",
["npcID"] = 199835,
},
[437719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[456149] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Perchfather",
["npcID"] = 221648,
},
[386526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nullmagic Hornswog",
["npcID"] = 187246,
},
[413147] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[54983] = {
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24082,
},
[31717] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["encounterID"] = 1948,
["event"] = "SPELL_CAST_START",
["npcID"] = 17882,
},
[392671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Ice Borer",
["npcID"] = 186392,
},
[56775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Magus",
["npcID"] = 26722,
},
[390624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarglebone",
["npcID"] = 197344,
},
[427484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[425437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Lasher",
["npcID"] = 210111,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[382435] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[34762] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[407009] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["npcID"] = 202791,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[464347] = {
["encounterName"] = "The Seven",
["source"] = "Anger'rel",
["npcID"] = 226307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[310766] = {
["source"] = "Eye of the Depths",
["event"] = "SPELL_CAST_START",
["npcID"] = 159510,
},
[447966] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[137994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 69702,
},
[396774] = {
["source"] = "Cragsworn Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 195839,
},
[396775] = {
["source"] = "Cragsworn Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 195839,
},
[137995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 69702,
},
[255741] = {
["source"] = "Faithless Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 134320,
},
[167688] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["npcID"] = 82721,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[265721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorachna",
["npcID"] = 200349,
},
[34763] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[366062] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["npcID"] = 181549,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[384492] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[394731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Earth",
["npcID"] = 198709,
},
[177928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zulian Crewman",
["npcID"] = 130808,
},
[15284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nethervine Reaper",
["npcID"] = 19512,
},
[384493] = {
["source"] = "Shikaar Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 191065,
},
[396780] = {
["source"] = "Rimebound Subjugator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195837,
},
[392685] = {
["isChanneled"] = true,
["source"] = "Awakened Terrasentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198081,
},
[429545] = {
["source"] = "Voidtouched Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 223469,
},
[439784] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[400877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Hound",
["npcID"] = 199823,
},
[427498] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[464358] = {
["encounterName"] = "The Seven",
["source"] = "Gloom'rel",
["npcID"] = 226313,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[464359] = {
["encounterName"] = "The Seven",
["source"] = "Gloom'rel",
["npcID"] = 226313,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[282110] = {
["source"] = "Kaldorei Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210645,
},
[124297] = {
["source"] = "Lon the Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 50333,
},
[386546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[136976] = {
["source"] = "Defiant Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 67477,
},
[415215] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[396786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chillwind Yeti",
["npcID"] = 215141,
},
[439789] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[425455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Lasher",
["npcID"] = 210111,
},
[464363] = {
["encounterName"] = "The Seven",
["source"] = "Hate'rel",
["npcID"] = 226311,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[400883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[404980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[423410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Isaqa",
["npcID"] = 209919,
},
[443888] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[445936] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[404982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[464367] = {
["encounterName"] = "The Seven",
["source"] = "Fire Elemental",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 231410,
},
[214794] = {
["source"] = "Forsaken Deathguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 135886,
},
[439795] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[427509] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[126347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmaster Sydow",
["npcID"] = 63240,
},
[400889] = {
["source"] = "Rampant Tide",
["event"] = "SPELL_CAST_START",
["npcID"] = 201463,
},
[427510] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1757,
},
[119692] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[209676] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[261894] = {
["source"] = "Siroccan",
["event"] = "SPELL_CAST_START",
["npcID"] = 135006,
},
[372223] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[464372] = {
["encounterName"] = "Ambassador Flamelash",
["source"] = "Ambassador Flamelash",
["encounterID"] = 3047,
["event"] = "SPELL_CAST_START",
["npcID"] = 226302,
},
[394749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Storm",
["npcID"] = 198716,
},
[265741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[343556] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[372225] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[166675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Gunner",
["npcID"] = 80937,
},
[372226] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[114062] = {
["encounterName"] = "Jandice Barov",
["source"] = "Jandice Barov",
["npcID"] = 59184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1427,
},
[57547] = {
["source"] = "Brynja",
["event"] = "SPELL_CAST_START",
["npcID"] = 147033,
},
[407039] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Voice From Beyond",
["npcID"] = 203812,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2684,
},
[400896] = {
["source"] = "Rampant Tide",
["event"] = "SPELL_CAST_START",
["npcID"] = 201463,
},
[34254] = {
["source"] = "Sunseeker Botanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 18422,
},
[275984] = {
["source"] = "Vigil Hill Marine",
["event"] = "SPELL_CAST_START",
["npcID"] = 130695,
},
[419327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[447996] = {
["source"] = "Rustcloud Runt",
["event"] = "SPELL_CAST_START",
["npcID"] = 222796,
},
[433662] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Black Blood",
["npcID"] = 216856,
},
[136985] = {
["source"] = "Fleshcrafter Hoku",
["event"] = "SPELL_CAST_START",
["npcID"] = 69435,
},
[464379] = {
["encounterName"] = "Ambassador Flamelash",
["source"] = "Ambassador Flamelash",
["npcID"] = 226302,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3047,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["npcID"] = 133007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2123,
},
[124302] = {
["source"] = "Lon the Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 50333,
},
[46029] = {
["source"] = "Sunblade Blood Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 24684,
},
[396805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kapraku",
["npcID"] = 203466,
},
[407045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[396807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[366091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Guardian",
["npcID"] = 181011,
},
[157465] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["npcID"] = 75839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1686,
},
[382474] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[341520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrian Tracker",
["npcID"] = 173973,
},
[452099] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Animated Shadow",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 224616,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[394763] = {
["source"] = "Motivator Krathos",
["event"] = "SPELL_CAST_START",
["npcID"] = 201561,
},
[252687] = {
["source"] = "Shadowblade Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 122970,
},
[288281] = {
["source"] = "Kaldorei Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 146771,
},
[396812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[314903] = {
["source"] = "Hepthys",
["event"] = "SPELL_CAST_START",
["npcID"] = 161745,
},
[316951] = {
["source"] = "Corrosive Digester",
["event"] = "SPELL_CAST_START",
["npcID"] = 162828,
},
[278044] = {
["source"] = "Morlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 201549,
},
[47310] = {
["source"] = "Coren Direbrew",
["event"] = "SPELL_CAST_START",
["npcID"] = 23872,
},
[388623] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[265759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[265760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[407055] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Seer Jhatal",
["npcID"] = 199842,
},
[345623] = {
["source"] = "Nar'zudah",
["event"] = "SPELL_CAST_START",
["npcID"] = 165824,
},
[118162] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[80279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Rift Conjurer",
["npcID"] = 42691,
},
[396819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[448013] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[359960] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["npcID"] = 181398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[415250] = {
["source"] = "Invasive Sporecap",
["event"] = "SPELL_CAST_START",
["npcID"] = 207482,
},
[407060] = {
["source"] = "High Seer Jhatal",
["event"] = "SPELL_CAST_START",
["npcID"] = 199842,
},
[280101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Advisor Ko'jan",
["npcID"] = 141717,
},
[396823] = {
["source"] = "Fuming Ice Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 197177,
},
[276006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Poacher",
["npcID"] = 147249,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[378394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burgeoning Seaborne Colossus",
["npcID"] = 215494,
},
[198428] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[431637] = {
["source"] = "Nightfall Shadowalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213895,
},
[77721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightbane Shadow Weaver",
["npcID"] = 533,
},
[419351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Saboteur",
["npcID"] = 208438,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194999,
},
[378397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amephyst",
["npcID"] = 200743,
},
[276010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Poacher",
["npcID"] = 147249,
},
[278058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claim Jumper Mk. 3",
["npcID"] = 202654,
},
[396828] = {
["source"] = "Fuming Ice Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 197177,
},
[392733] = {
["source"] = "Springshell Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 196619,
},
[405020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Watcher",
["npcID"] = 200407,
},
[204574] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[70043] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[192288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
},
[443929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Sentry",
["npcID"] = 218315,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[253721] = {
["isChanneled"] = true,
["source"] = "Shieldbearer of Zul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 127879,
},
[41169] = {
["source"] = "Illidari Heartseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23339,
},
[12470] = {
["source"] = "Gold Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 32340,
},
[370212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Ironskin",
["npcID"] = 191524,
},
[431645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Apothecary",
["npcID"] = 219651,
},
[392738] = {
["source"] = "Kargpaw the Fetid",
["event"] = "SPELL_CAST_START",
["npcID"] = 186660,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[325163] = {
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[359975] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["npcID"] = 181395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2542,
},
[372262] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[439838] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[450077] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[396836] = {
["source"] = "Colossal Glacier",
["event"] = "SPELL_CAST_START",
["npcID"] = 194798,
},
[448030] = {
["source"] = "Agile Pursuer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223181,
},
[452127] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[445984] = {
["source"] = "Gluttonous Jawcrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 223931,
},
[423459] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["npcID"] = 209800,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2708,
},
[359979] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["npcID"] = 181395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2542,
},
[310834] = {
["source"] = "Demented Knife-Twister",
["event"] = "SPELL_CAST_START",
["npcID"] = 159417,
},
[402983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[41426] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[464417] = {
["encounterName"] = "General Angerforge",
["source"] = "Shadowforge Flame Keeper",
["npcID"] = 231554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3045,
},
[402985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[355887] = {
["source"] = "Mawsworn Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 181403,
},
[269882] = {
["source"] = "Gilnean Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 147993,
},
[378413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Fury",
["npcID"] = 188413,
},
[355888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Customs Security",
["npcID"] = 177807,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[284218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Downwind Dori",
["npcID"] = 150755,
},
[310839] = {
["source"] = "Occult Shadowmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 159425,
},
[212773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Reinforcement",
["npcID"] = 107073,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[450088] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1049,
},
[146222] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Blade of the Hundred Steps",
["npcID"] = 72787,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[310842] = {
["source"] = "Occult Shadowmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 159425,
},
[394800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Earthcaller",
["npcID"] = 198500,
},
[423469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mosa Umbramane",
["npcID"] = 210070,
},
[146223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellscream Annihilator",
["npcID"] = 72847,
},
[394802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Stormcaller",
["npcID"] = 198502,
},
[445996] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[269890] = {
["source"] = "Irontide Ruffian",
["event"] = "SPELL_CAST_START",
["npcID"] = 126720,
},
[242468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bile Spitter",
["npcID"] = 121460,
},
[429615] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[154415] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1685,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[405043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[46035] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 24685,
},
[226087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Endgineer Omegaplugg",
["npcID"] = 113621,
},
[77216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dun Morogh Rifleman",
["npcID"] = 41898,
},
[450095] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[396854] = {
["source"] = "Spellsworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 200284,
},
[133939] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[355900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Customs Security",
["npcID"] = 177807,
},
[396856] = {
["source"] = "Firava the Rekindler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195915,
},
[327233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[323138] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[42708] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[378428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Boulder",
["npcID"] = 200547,
},
[407097] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[400954] = {
["source"] = "Volgoth the Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[121244] = {
["source"] = "Malevolent Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 61333,
},
[396859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gargantuan Vessel",
["npcID"] = 202835,
},
[366143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[197422] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 95888,
},
[183088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mightstone Breaker",
["npcID"] = 113998,
},
[46036] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 24685,
},
[396861] = {
["source"] = "Arcane Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 203434,
},
[39125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Botanist",
["npcID"] = 18422,
},
[431674] = {
["source"] = "Kaheti Silk Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 221327,
},
[427579] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[470582] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[276046] = {
["source"] = "Dunegorger Kraulok",
["event"] = "SPELL_CAST_START",
["npcID"] = 138794,
},
[384577] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[41173] = {
["isChanneled"] = true,
["source"] = "Illidari Heartseeker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23339,
},
[339527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kullan",
["npcID"] = 173469,
},
[374339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[427581] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[235308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karam Magespear",
["npcID"] = 116410,
},
[360006] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["npcID"] = 181398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[59603] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Heartsplitter",
["npcID"] = 24071,
},
[120222] = {
["source"] = "Seething Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 61610,
},
[129437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Hissing Wasp",
["npcID"] = 65802,
},
[274002] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2098,
},
[212784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watchful Inquisitor",
["npcID"] = 105715,
},
[323149] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["npcID"] = 164567,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[407107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[192307] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[427585] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[372296] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[407108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[39126] = {
["source"] = "Sunseeker Botanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 18422,
},
[191284] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[138043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warscout",
["npcID"] = 69768,
},
[212786] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[470591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Hopestealer",
["npcID"] = 217517,
},
[125343] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krosh",
["npcID"] = 56833,
},
[470592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadeguard",
["npcID"] = 217519,
},
[162617] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["npcID"] = 77816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[470593] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218034,
},
[366159] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Necrotic Ritualist",
["npcID"] = 182045,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2544,
},
[400971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfuric Rager",
["npcID"] = 202622,
},
[454213] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[382542] = {
["source"] = "Ice Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 190319,
},
[376399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burned Ravager",
["npcID"] = 204207,
},
[117665] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Sha of Doubt",
["npcID"] = 56439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1439,
},
[111010] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[290395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giruma Bloodpelt",
["npcID"] = 144537,
},
[191288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crashin' Thrashin' Flamer",
["npcID"] = 76640,
},
[400974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebringer Shaman",
["npcID"] = 203700,
},
[386640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Looter",
["npcID"] = 187242,
},
[396879] = {
["source"] = "Geothermus",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[370259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tectonus",
["npcID"] = 200619,
},
[466504] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Moira Bronzebeard",
["npcID"] = 226314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[394833] = {
["source"] = "Magmammoth Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194912,
},
[76711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[400977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["npcID"] = 203857,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[378453] = {
["isChanneled"] = true,
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186735,
},
[372310] = {
["source"] = "Ice Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 201034,
},
[407122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Warlock",
["npcID"] = 203857,
},
[384597] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[378454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Boulder",
["npcID"] = 200547,
},
[372311] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[427601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[355930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Interrogation Specialist",
["npcID"] = 177816,
},
[407124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Knight",
["npcID"] = 208165,
},
[450127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegehold Defender",
["npcID"] = 216016,
},
[39128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Chemist",
["npcID"] = 19486,
},
[470605] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Moira Bronzebeard",
["npcID"] = 226314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[407125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Knight",
["npcID"] = 208165,
},
[450128] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[388696] = {
["source"] = "Gahz'raxes",
["event"] = "SPELL_CAST_START",
["npcID"] = 200537,
},
[57046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[409174] = {
["source"] = "Incarnation of Entropy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203811,
},
[372315] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[382555] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[470609] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Moira Bronzebeard",
["npcID"] = 226314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[409177] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[403034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fyrakk",
["npcID"] = 200832,
},
[44504] = {
["source"] = "Wretched Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 24690,
},
[427609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[339557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deplina",
["npcID"] = 173464,
},
[325223] = {
["source"] = "Mistveil Stinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 166304,
},
[468566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fineous Darkvire",
["npcID"] = 232269,
},
[382561] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[82858] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priestess Azil",
["npcID"] = 42333,
},
[456281] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 226646,
},
[386658] = {
["source"] = "Yaankhi",
["event"] = "SPELL_CAST_START",
["npcID"] = 195101,
},
[388706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turbulent Gust",
["npcID"] = 186917,
},
[382563] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[468569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fineous Darkvire",
["npcID"] = 232269,
},
[366182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illicit Collector",
["npcID"] = 183498,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[366183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illicit Collector",
["npcID"] = 183498,
},
[106920] = {
["event"] = "SPELL_CAST_START",
["source"] = "Regenerating Sha",
["npcID"] = 56763,
},
[421473] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2708,
},
[183108] = {
["source"] = "Larivi",
["event"] = "SPELL_CAST_START",
["npcID"] = 192747,
},
[450142] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[136010] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[38618] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Stoutbeard",
["npcID"] = 26796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 519,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[462430] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[431714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Apothecary",
["npcID"] = 219651,
},
[145226] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["npcID"] = 72276,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1624,
},
[366187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Muscle",
["npcID"] = 183499,
},
[376426] = {
["source"] = "Charged Drakeling",
["event"] = "SPELL_CAST_START",
["npcID"] = 201786,
},
[468575] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fineous Darkvire",
["npcID"] = 232269,
},
[290421] = {
["source"] = "Treasury Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 147588,
},
[448098] = {
["isChanneled"] = true,
["source"] = "Black Blood Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222455,
},
[425573] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[154442] = {
["encounterName"] = "Ner'zhul",
["source"] = "Ner'zhul",
["npcID"] = 76407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1682,
},
[132941] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Horde Swashbuckler",
["npcID"] = 67361,
},
[448100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Blood Harvester",
["npcID"] = 222455,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[22127] = {
["source"] = "Sunseeker Herbalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 19508,
},
[396907] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Yu'lon",
["npcID"] = 56762,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[382573] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[468579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chiseled War Construct",
["npcID"] = 232268,
},
[314998] = {
["source"] = "Aqir Shadowcrafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 161416,
},
[46042] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 24686,
},
[468580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chiseled War Construct",
["npcID"] = 232268,
},
[31598] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wildspawn Hellcaller",
["npcID"] = 11457,
},
[384623] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[39131] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["npcID"] = 17978,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1928,
},
[315000] = {
["source"] = "Aqir Shadowcrafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 161416,
},
[382576] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[145230] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Mogu Shadow Ritualist",
["npcID"] = 71393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1594,
},
[448105] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[139087] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["npcID"] = 69473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[382578] = {
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[427629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[125865] = {
["source"] = "Zar'thik Augurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 64454,
},
[366197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thieving Agent",
["npcID"] = 183500,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[276099] = {
["source"] = "Void Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 140639,
},
[46043] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 24686,
},
[394869] = {
["source"] = "Boneshaper Jardak",
["event"] = "SPELL_CAST_START",
["npcID"] = 188693,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[335485] = {
["source"] = "Stygian Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 181064,
},
[394870] = {
["isChanneled"] = true,
["source"] = "Primalist Voltweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198501,
},
[290435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giruma Bloodpelt",
["npcID"] = 144537,
},
[384633] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[140115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Prophet",
["npcID"] = 70557,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[290438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giruma Bloodpelt",
["npcID"] = 144537,
},
[126379] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Prophet Khar'zul",
["npcID"] = 61541,
},
[427638] = {
["source"] = "Nuoberon",
["event"] = "SPELL_CAST_START",
["npcID"] = 209113,
},
[255814] = {
["source"] = "Reanimated Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127757,
},
[431734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chitinous Goliath",
["npcID"] = 220917,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[137045] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[394876] = {
["source"] = "Phenran",
["event"] = "SPELL_CAST_START",
["npcID"] = 193688,
},
[46044] = {
["source"] = "Sunblade Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 24815,
},
[209741] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Image of Advisor Melandrus",
["npcID"] = 105754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[396925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 197149,
},
[38621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Handler",
["npcID"] = 24082,
},
[433785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reinforced Drone",
["npcID"] = 216363,
},
[394878] = {
["isChanneled"] = true,
["source"] = "Primalist Tempestmaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198500,
},
[405117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[144214] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[382593] = {
["source"] = "Cruel Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 186206,
},
[370307] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[421501] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[317066] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Thought Harvester",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 162933,
},
[394881] = {
["isChanneled"] = true,
["source"] = "Council Flamecaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198502,
},
[409216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[470649] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Avatar of Ragnaros",
["npcID"] = 231006,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[358023] = {
["source"] = "Soul Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 180474,
},
[409217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[138073] = {
["source"] = "Ancient Mogu Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 69767,
},
[6685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dun Morogh Rifleman",
["npcID"] = 41898,
},
[388741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Researcher",
["npcID"] = 203013,
},
[386694] = {
["source"] = "Stormsurge Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 194897,
},
[398981] = {
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 198263,
},
[147289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death Adder",
["npcID"] = 72841,
},
[111024] = {
["source"] = "Spirit of Redemption",
["event"] = "SPELL_CAST_START",
["npcID"] = 58592,
},
[388743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Bakar",
["npcID"] = 188510,
},
[384648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarls",
["npcID"] = 197354,
},
[237391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellblaze Temptress",
["npcID"] = 120366,
},
[388745] = {
["source"] = "Icy Blue Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 197862,
},
[265881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[398985] = {
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_START",
["npcID"] = 198214,
},
[335505] = {
["source"] = "Stygian Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 181064,
},
[256846] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[257870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Buccaneer",
["npcID"] = 130011,
},
[394891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Braekkas",
["npcID"] = 196855,
},
[331412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Starving Corpsehound",
["npcID"] = 177130,
},
[46046] = {
["source"] = "Sunblade Physician",
["event"] = "SPELL_CAST_START",
["npcID"] = 24687,
},
[427657] = {
["source"] = "Nuoberon",
["event"] = "SPELL_CAST_START",
["npcID"] = 209113,
},
[452231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[255824] = {
["source"] = "Dazar'ai Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 122971,
},
[456327] = {
["source"] = "Gong'tze the Riverhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221974,
},
[394895] = {
["source"] = "Phenran",
["event"] = "SPELL_CAST_START",
["npcID"] = 193688,
},
[366227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foul Gorger",
["npcID"] = 183496,
},
[41183] = {
["source"] = "Ashtongue Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[256849] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[409231] = {
["source"] = "Colossal Draconic Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 203826,
},
[452235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Stonestalker",
["npcID"] = 217624,
},
[405137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[464523] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xur'khun the Defiled",
["npcID"] = 221845,
},
[452237] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[384663] = {
["source"] = "Forgewrought Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 194816,
},
[57054] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crystalline Tender",
["npcID"] = 28231,
},
[106421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Guardian",
["npcID"] = 59741,
},
[427668] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[274087] = {
["source"] = "Dark Iron Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 148929,
},
[191325] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1838,
},
[125363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scritch",
["npcID"] = 50831,
},
[448147] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Guardian",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 223204,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[427670] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[382620] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[374430] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[368287] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[427672] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[308903] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[269996] = {
["source"] = "Cutwater Duelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 129025,
},
[193375] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[69051] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Summoner",
["npcID"] = 4463,
},
[403101] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[11962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethtendris",
["npcID"] = 14327,
},
[272046] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Sharkbait",
["npcID"] = 126841,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[407198] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[198496] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[407199] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[386722] = {
["source"] = "Stormbrand Ko'mal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206684,
},
[125877] = {
["source"] = "Set'thik Windblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 64453,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[69564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[26098] = {
["source"] = "Invading Spirit-mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 146159,
},
[52960] = {
["encounterName"] = "Loken",
["source"] = "Loken",
["npcID"] = 28923,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1986,
},
[388773] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[317102] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[394917] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 199233,
},
[27634] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Garaxxas",
["npcID"] = 24555,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[411300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[339629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorging Mite",
["npcID"] = 173145,
},
[407205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Destroyer",
["npcID"] = 208208,
},
[143210] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["npcID"] = 71479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[258908] = {
["source"] = "Sethrak Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 136916,
},
[372394] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[57056] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crystalline Frayer",
["npcID"] = 26793,
},
[41186] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[228193] = {
["encounterName"] = "Opera Hall",
["source"] = "Luminore",
["npcID"] = 114329,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1957,
},
[394922] = {
["isChanneled"] = true,
["source"] = "Braekkas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196855,
},
[372397] = {
["source"] = "Shadepaw Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 190188,
},
[120760] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61634,
},
[129975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnation of Despair",
["npcID"] = 65872,
},
[353969] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[415403] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189813,
},
[204646] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[256864] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[32370] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Apprentice",
["npcID"] = 18430,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[396975] = {
["source"] = "Firava the Rekindler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195915,
},
[147310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brilliant Windfeather",
["npcID"] = 72762,
},
[41187] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[165740] = {
["source"] = "Bonesaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 82010,
},
[399024] = {
["source"] = "Farscale Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 200486,
},
[226149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Endgineer Omegaplugg",
["npcID"] = 113621,
},
[17140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[399025] = {
["source"] = "Conjured Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200285,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[427694] = {
["source"] = "Reefbreaker Moruud",
["event"] = "SPELL_CAST_START",
["npcID"] = 209898,
},
[142192] = {
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 61783,
},
[106428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[190315] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 147032,
},
[116155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yeasty Brew Alemental",
["npcID"] = 66413,
},
[278211] = {
["source"] = "Blood Prince Dreven",
["event"] = "SPELL_CAST_START",
["npcID"] = 142308,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[55266] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark Touched Warrior",
["npcID"] = 16156,
},
[128954] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Sho Lien",
["npcID"] = 60769,
},
[169839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[366267] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Sentry",
["npcID"] = 185008,
},
[278214] = {
["source"] = "Shandris Feathermoon",
["event"] = "SPELL_CAST_START",
["npcID"] = 142358,
},
[386745] = {
["source"] = "Stormbrand Ko'mal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206684,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[50403] = {
["source"] = "Wastes Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 28005,
},
[169840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[399033] = {
["source"] = "Weyrn Spellslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 200736,
},
[126907] = {
["isChanneled"] = true,
["source"] = "Kor'thik Fleshrender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64902,
},
[419511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[135029] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 78116,
},
[137077] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Spear-Shaper",
["npcID"] = 69388,
},
[394940] = {
["source"] = "Skald the Impaler",
["event"] = "SPELL_CAST_START",
["npcID"] = 193708,
},
[116157] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["event"] = "SPELL_CAST_START",
["npcID"] = 60009,
},
[423610] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[351939] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawforged Summoner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177891,
},
[419516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[396991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[427708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[388801] = {
["source"] = "Risen Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 195855,
},
[125373] = {
["source"] = "Lith'ik the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 50734,
},
[427710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sporbit",
["npcID"] = 213434,
},
[366278] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Xy'pro",
["npcID"] = 185032,
},
[388804] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[394948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashbinder Tornecha",
["npcID"] = 192344,
},
[257899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Ravager",
["npcID"] = 130012,
},
[313039] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[421570] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[407236] = {
["source"] = "Shrinekeeper Qanosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199839,
},
[341709] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[419524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loose Time",
["npcID"] = 209170,
},
[252781] = {
["source"] = "Zanchuli Witch-Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122969,
},
[34791] = {
["source"] = "Tempest-Forge Peacekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18405,
},
[413385] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[366287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Xy'pro",
["npcID"] = 185032,
},
[417481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[364240] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["npcID"] = 181549,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[413387] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[415435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[415436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[257904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ludwig Von Tortollan",
["npcID"] = 129699,
},
[415437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Leech",
["npcID"] = 206066,
},
[131968] = {
["source"] = "Sik'thik Battle-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 67093,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[116162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fizzy Brew Alemental",
["npcID"] = 59520,
},
[226165] = {
["source"] = "Endgineer Omegaplugg",
["event"] = "SPELL_CAST_START",
["npcID"] = 113621,
},
[17142] = {
["source"] = "Anchorite Caalen",
["event"] = "SPELL_CAST_START",
["npcID"] = 22862,
},
[397010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[120770] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Needle Sprite",
["npcID"] = 55593,
},
[272098] = {
["source"] = "Blacktooth Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 129121,
},
[397011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[205689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Poacher",
["npcID"] = 147249,
},
[401108] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["npcID"] = 202791,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[117187] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60585,
},
[388822] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[399061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[204666] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[321247] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 163157,
},
[372441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Umbraclaw",
["npcID"] = 211401,
},
[399062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[257908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Officer",
["npcID"] = 127106,
},
[419540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[57062] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["encounterID"] = 2009,
["event"] = "SPELL_CAST_START",
["npcID"] = 26763,
},
[204667] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[131972] = {
["source"] = "Sik'thik Battle-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 67093,
},
[141187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hagman",
["npcID"] = 67426,
},
[327393] = {
["source"] = "Zolramus Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 163618,
},
[399065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[448213] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[392924] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[394972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 197148,
},
[409307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[399069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Tidelord",
["npcID"] = 200488,
},
[155524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Spirit-Tender",
["npcID"] = 77131,
},
[128964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Runekeeper",
["npcID"] = 65598,
},
[121285] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Knucklethump Smasher",
["npcID"] = 59410,
},
[145286] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["npcID"] = 71405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[106439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[394976] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magus of the Dead",
["npcID"] = 198757,
},
[311019] = {
["source"] = "Monstrous Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 159303,
},
[444123] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[399073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Tidelord",
["npcID"] = 200488,
},
[403169] = {
["source"] = "Ishyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200579,
},
[317164] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Mycelial Cyst",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157461,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[145288] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["npcID"] = 71395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[317165] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Mycelial Cyst",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157461,
},
[288497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[284402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Draeleth",
["npcID"] = 144567,
},
[372456] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[69069] = {
["source"] = "Soulguard Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 36564,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[382696] = {
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[137099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Water-Binder",
["npcID"] = 69455,
},
[40938] = {
["source"] = "Illidari Fearbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 22954,
},
[200580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Festerhide Grizzly",
["npcID"] = 95779,
},
[42730] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[198533] = {
["encounterName"] = "Gnarlroot",
["source"] = "Jade Serpent Statue",
["encounterID"] = 2820,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60849,
},
[15228] = {
["source"] = "Zandalari Fire-Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60402,
},
[456420] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[221059] = {
["source"] = "Gelatinized Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 111004,
},
[341747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wailing Soul",
["npcID"] = 174158,
},
[125384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highlands Mushan",
["npcID"] = 59670,
},
[405228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[211845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Avatar of Bloodshed",
["npcID"] = 150805,
},
[382704] = {
["source"] = "Spellsworn Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 203736,
},
[386800] = {
["source"] = "Galnmor",
["event"] = "SPELL_CAST_START",
["npcID"] = 193853,
},
[153485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[40683] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[417517] = {
["source"] = "Houndmaster Grebmar",
["event"] = "SPELL_CAST_START",
["npcID"] = 232258,
},
[386801] = {
["source"] = "Cragsworn Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191661,
},
[390897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalepiercer",
["npcID"] = 186632,
},
[392945] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198214,
},
[258945] = {
["source"] = "Sethrak Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 136916,
},
[368373] = {
["source"] = "The Engulfer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183516,
},
[427758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[382708] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[128969] = {
["isChanneled"] = true,
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61783,
},
[397043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[427760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[360185] = {
["source"] = "Lured Mite",
["event"] = "SPELL_CAST_START",
["npcID"] = 181879,
},
[413427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pendule",
["npcID"] = 206074,
},
[366329] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Foul Controller",
["npcID"] = 185537,
},
[382712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[128970] = {
["isChanneled"] = true,
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61783,
},
[263943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Runeweaver",
["npcID"] = 131677,
},
[372474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Fighter",
["npcID"] = 187297,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[148370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windreaver Tar'rath",
["npcID"] = 73667,
},
[397048] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostbreath Arachnid",
["npcID"] = 199333,
},
[117708] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60708,
},
[311045] = {
["source"] = "Void Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 160182,
},
[397051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[311046] = {
["source"] = "Umbral Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 159219,
},
[392957] = {
["source"] = "Sparring Vorquin",
["event"] = "SPELL_CAST_START",
["npcID"] = 195048,
},
[125900] = {
["isChanneled"] = true,
["source"] = "Kor'thik Warsinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64458,
},
[407292] = {
["source"] = "Erupting Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199838,
},
[388863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 101028,
},
[427771] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[390912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Lasher",
["npcID"] = 197219,
},
[106447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[438012] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[195473] = {
["source"] = "Gritslime Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 91786,
},
[311052] = {
["source"] = "Maddened Conscript",
["event"] = "SPELL_CAST_START",
["npcID"] = 159305,
},
[403201] = {
["source"] = "Ishyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200579,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[390916] = {
["source"] = "Salkii",
["event"] = "SPELL_CAST_START",
["npcID"] = 193885,
},
[403203] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[150424] = {
["source"] = "Amani Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215675,
},
[125902] = {
["isChanneled"] = true,
["source"] = "Kor'thik Warsinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64458,
},
[415492] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[263959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[448257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreseer Xix'amon",
["npcID"] = 215435,
},
[131022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Grunt",
["npcID"] = 66398,
},
[263961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[409352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[323347] = {
["source"] = "Zolramus Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 165137,
},
[372495] = {
["source"] = "Ensnaring Current",
["event"] = "SPELL_CAST_START",
["npcID"] = 191328,
},
[456453] = {
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[374544] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[15869] = {
["source"] = "Drakkari Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 27555,
},
[419595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[41455] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[116178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sudsy Brew Alemental",
["npcID"] = 59522,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2682,
},
[411407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[388882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[69080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Bonecaster",
["npcID"] = 36564,
},
[69592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitelash Warrior",
["npcID"] = 6190,
},
[411408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Skytalon",
["npcID"] = 204430,
},
[78807] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1058,
},
[44271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garaxxas",
["npcID"] = 24555,
},
[154527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulbinder",
["npcID"] = 77812,
},
[143265] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["npcID"] = 71504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1601,
},
[395029] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melidrussa Chillworn",
["npcID"] = 195119,
},
[388886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[390934] = {
["source"] = "Salkii",
["event"] = "SPELL_CAST_START",
["npcID"] = 193885,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[80344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp",
["npcID"] = 43014,
},
[186269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightshard Shaper",
["npcID"] = 90998,
},
[196508] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Deranged Mindflayer",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99657,
},
[272167] = {
["source"] = "Bilescourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 136404,
},
[390938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggravated Skitterfly",
["npcID"] = 197406,
},
[444180] = {
["isChanneled"] = true,
["source"] = "Xur'khun the Defiled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[333602] = {
["source"] = "Brittlebone Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 163126,
},
[176032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Cinderseer",
["npcID"] = 88163,
},
[395035] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[97239] = {
["source"] = "Gurubashi Shadow Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 52327,
},
[382749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Hornswog",
["npcID"] = 191619,
},
[446230] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[325413] = {
["source"] = "Spinemaw Acidgullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 167113,
},
[341796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Sinsear",
["npcID"] = 174161,
},
[31865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seductress",
["npcID"] = 17399,
},
[120789] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["event"] = "SPELL_CAST_START",
["npcID"] = 61634,
},
[362275] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[306986] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[196512] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[374563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazzling Dragonfly",
["npcID"] = 190362,
},
[12542] = {
["encounterName"] = "Blood Guard Porung",
["source"] = "Shadowmoon Darkcaster",
["encounterID"] = 1935,
["event"] = "SPELL_CAST_START",
["npcID"] = 17694,
},
[306988] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[311084] = {
["source"] = "Maddened Conscript",
["event"] = "SPELL_CAST_START",
["npcID"] = 159305,
},
[148391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gate-Crasher Sav'ah",
["npcID"] = 73670,
},
[366374] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[413473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Deviation",
["npcID"] = 206063,
},
[147368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Grazer",
["npcID"] = 72843,
},
[266036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[272180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grotesque Horror",
["npcID"] = 138187,
},
[202658] = {
["source"] = "Malignant Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 102584,
},
[407332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Dustmoth",
["npcID"] = 202316,
},
[196515] = {
["source"] = "Binder Ashioi",
["event"] = "SPELL_CAST_START",
["npcID"] = 100250,
},
[397094] = {
["source"] = "Malsegan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193212,
},
[374569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[384808] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186339,
},
[160680] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[347949] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["npcID"] = 175616,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2425,
},
[390952] = {
["source"] = "Grand Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 188009,
},
[196516] = {
["source"] = "Ritualist Lesha",
["event"] = "SPELL_CAST_START",
["npcID"] = 100248,
},
[397096] = {
["source"] = "Malsegan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193212,
},
[401192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Farmhand",
["npcID"] = 205035,
},
[137132] = {
["source"] = "Itoka",
["event"] = "SPELL_CAST_START",
["npcID"] = 69461,
},
[423718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balboan",
["npcID"] = 210559,
},
[401193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Farmhand",
["npcID"] = 205035,
},
[142252] = {
["source"] = "Forgotten King",
["event"] = "SPELL_CAST_START",
["npcID"] = 67081,
},
[409385] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[234401] = {
["source"] = "Inquisitor Variss",
["event"] = "SPELL_CAST_START",
["npcID"] = 117933,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[203685] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99676,
},
[22651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zevrim Thornhoof",
["npcID"] = 11490,
},
[397100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[22907] = {
["encounterName"] = "Blood Guard Porung",
["source"] = "Shattered Hand Houndmaster",
["encounterID"] = 1935,
["event"] = "SPELL_CAST_START",
["npcID"] = 17670,
},
[454438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Commander",
["npcID"] = 128969,
},
[372529] = {
["source"] = "Shadepaw Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 183343,
},
[411437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[454440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Pillager",
["npcID"] = 135241,
},
[191401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[411439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[413487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Fusion",
["npcID"] = 206068,
},
[126937] = {
["source"] = "Sra'thik Ambercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 64917,
},
[143280] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Skeer the Bloodseeker",
["npcID"] = 71152,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[419632] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 208945,
},
[446253] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Mass",
["npcID"] = 222461,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[397108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seaborne Colossus",
["npcID"] = 214437,
},
[395061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonewrecker Tokara",
["npcID"] = 193442,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[333629] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Reanimated Crossbowman",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 168246,
},
[401205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[397110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Diruption",
["npcID"] = 201598,
},
[270150] = {
["source"] = "Feathered Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 132409,
},
[280389] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[372538] = {
["source"] = "Lava Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 189470,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[409398] = {
["source"] = "Crystalline Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 203831,
},
[397112] = {
["source"] = "Primal Stonescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 200581,
},
[358205] = {
["source"] = "Screamspike",
["event"] = "SPELL_CAST_START",
["npcID"] = 178862,
},
[339776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anima Crazed Worker",
["npcID"] = 173568,
},
[423734] = {
["source"] = "Doomfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 210910,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[388923] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[113629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneweaver",
["npcID"] = 59193,
},
[407354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Shalewing",
["npcID"] = 204311,
},
[388925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[401212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goopal",
["npcID"] = 203477,
},
[137142] = {
["source"] = "Itoka",
["event"] = "SPELL_CAST_START",
["npcID"] = 69461,
},
[382783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Tyrant",
["npcID"] = 202483,
},
[39413] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[158644] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[135095] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[274254] = {
["source"] = "Cutwater Scoundrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 129030,
},
[407359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Shalewing",
["npcID"] = 204311,
},
[401216] = {
["source"] = "Nevroll",
["event"] = "SPELL_CAST_START",
["npcID"] = 203039,
},
[307020] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157354,
},
[382787] = {
["source"] = "Disease Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187315,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[446268] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Mass",
["npcID"] = 222461,
},
[390979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodial Protector",
["npcID"] = 192694,
},
[450364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Weaver",
["npcID"] = 222881,
},
[468795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomforge Mechanic",
["npcID"] = 232266,
},
[405316] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[382791] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[147385] = {
["source"] = "Ironfur Great Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 72844,
},
[372553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Howler",
["npcID"] = 195273,
},
[39670] = {
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[390984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 197129,
},
[425796] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[264024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[440131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alleria Windrunner",
["npcID"] = 215014,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[382795] = {
["isChanneled"] = true,
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193944,
},
[140220] = {
["source"] = "Zandalari Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 69405,
},
[372557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Howler",
["npcID"] = 195273,
},
[390987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 197129,
},
[390988] = {
["source"] = "Titan Defense Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 193244,
},
[197558] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[388941] = {
["source"] = "Water Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201718,
},
[284506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Draeleth",
["npcID"] = 144567,
},
[200630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mindshattered Screecher",
["npcID"] = 95769,
},
[388942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[358226] = {
["source"] = "Mawsworn Embermage",
["event"] = "SPELL_CAST_START",
["npcID"] = 176949,
},
[419659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ignit the Firebranded",
["npcID"] = 209620,
},
[372561] = {
["source"] = "Qalashi Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189227,
},
[39671] = {
["isChanneled"] = true,
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22853,
},
[388944] = {
["source"] = "Water Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201718,
},
[114658] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[382802] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194241,
},
[137152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hidden Fog",
["npcID"] = 69375,
},
[228277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undying Servant",
["npcID"] = 114634,
},
[372565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Terrasentry",
["npcID"] = 188067,
},
[114147] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Fearmaster",
["npcID"] = 59656,
},
[388949] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["encounterID"] = 2614,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196679,
},
[325469] = {
["source"] = "Decrepit Bilespawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 166928,
},
[401236] = {
["source"] = "Nidharr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201310,
},
[372568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Juggernaut",
["npcID"] = 188067,
},
[427858] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[87527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dustbelcher Initiate",
["npcID"] = 46694,
},
[234423] = {
["source"] = "Inquisitor Variss",
["event"] = "SPELL_CAST_START",
["npcID"] = 117933,
},
[388952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echoed Lurker",
["npcID"] = 202636,
},
[360284] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["npcID"] = 181399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[395097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberdusk",
["npcID"] = 203664,
},
[210875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[34809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Mender",
["npcID"] = 19633,
},
[59638] = {
["encounterName"] = "Eranog",
["source"] = "Mirror Image",
["npcID"] = 31216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[391003] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[200637] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[427863] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[413529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[374622] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["npcID"] = 190690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[139205] = {
["encounterName"] = "Council of Elders",
["source"] = "Zandalari Prophet",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 70557,
},
[37113] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[374623] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[388958] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[391006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blisterhide",
["npcID"] = 197353,
},
[196543] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[407389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brimstone Serpent",
["npcID"] = 202272,
},
[409437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[32637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomwalker",
["npcID"] = 167749,
},
[147398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Pool Tender",
["npcID"] = 73342,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[193473] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Set'thik Zephyrian",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192337,
},
[341864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrian Hawkeye",
["npcID"] = 173189,
},
[264050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[78827] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zzarc' Vul",
["npcID"] = 300,
},
[317292] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 162480,
},
[384868] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[18431] = {
["encounterName"] = "Onyxia",
["source"] = "Onyxia",
["encounterID"] = 1084,
["event"] = "SPELL_CAST_START",
["npcID"] = 10184,
},
[106984] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["npcID"] = 56747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[341867] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrian Enforcer",
["npcID"] = 165469,
},
[200642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Ruiner",
["npcID"] = 95771,
},
[153544] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[448351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[198595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Thundercaller",
["npcID"] = 95842,
},
[39674] = {
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[409445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[442210] = {
["encounterName"] = "Anub'zekt",
["source"] = "Bloodstained Webmage",
["npcID"] = 220599,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 194367,
},
[256957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Waveshaper",
["npcID"] = 129370,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["npcID"] = 186151,
["encounterID"] = 2580,
},
[378731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Guardian",
["npcID"] = 199592,
},
[127463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Antiquator",
["npcID"] = 58928,
},
[413544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[391019] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[128999] = {
["source"] = "Thundermaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 58456,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Gnarled Ancient",
["npcID"] = 84400,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[30846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Technician",
["npcID"] = 17414,
},
[256959] = {
["source"] = "Reanimated Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127757,
},
[143309] = {
["encounterName"] = "Immerseus",
["source"] = "Immerseus",
["npcID"] = 71543,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1602,
},
[307064] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[450407] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[403309] = {
["source"] = "Expulsion Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 202592,
},
[79854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43300,
},
[388976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[195528] = {
["source"] = "Animated Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 95920,
},
[41467] = {
["encounterName"] = "The Illidari Council",
["source"] = "Gathios the Shatterer",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22949,
},
[207815] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[427885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[391026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[405361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[120810] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tormented Spirit",
["npcID"] = 60825,
},
[36604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Emerald Lasher",
["npcID"] = 208750,
},
[37372] = {
["encounterName"] = "Keli'dan the Breaker",
["source"] = "Keli'dan the Breaker",
["npcID"] = 17377,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1923,
},
[372600] = {
["source"] = "Sentinel Talondras",
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[55802] = {
["encounterName"] = "Kel'Thuzad",
["source"] = "Kel'Thuzad",
["npcID"] = 15990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1114,
},
[79856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43300,
},
[405366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[450417] = {
["source"] = "Plaguehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 219267,
},
[138196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightning Guardian",
["npcID"] = 69834,
},
[126955] = {
["source"] = "Mogu'shan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 64061,
},
[427894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[43516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Prisoner",
["npcID"] = 24255,
},
[51963] = {
["source"] = "Ebon Gargoyle",
["event"] = "SPELL_CAST_START",
["npcID"] = 27829,
},
[79857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43300,
},
[22272] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethereal Sorcerer",
["npcID"] = 18313,
},
[140245] = {
["source"] = "Ancient Stone Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 69238,
},
[413562] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Lurking Tempest",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 204337,
},
[427897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[421754] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moltenbinder's Disciple",
["npcID"] = 208658,
},
[407420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Runestone",
["npcID"] = 204001,
},
[214989] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[11969] = {
["source"] = "Blazebound Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 38896,
},
[450424] = {
["source"] = "Congealed Wax-hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223206,
},
[427899] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1751,
},
[376706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[440188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chitin Knight",
["npcID"] = 219725,
},
[384899] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[140248] = {
["source"] = "Ancient Stone Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 69238,
},
[111599] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[409473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[138201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Lord",
["npcID"] = 69821,
},
[147416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Candlekeeper",
["npcID"] = 72875,
},
[372615] = {
["npcID"] = 189247,
},
[200658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Ruiner",
["npcID"] = 95771,
},
[136154] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Crimson Fog",
["npcID"] = 69050,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[126958] = {
["source"] = "Mogu'shan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 64061,
},
[444288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Acolyte",
["npcID"] = 218320,
},
[111600] = {
["encounterName"] = "Raigonn",
["source"] = "Krik'thik Swarm Bringer",
["npcID"] = 56930,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[409477] = {
["source"] = "Shadeisethal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203411,
},
[113136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
},
[352141] = {
["encounterName"] = "Kel'Thuzad",
["source"] = "Soul Reaver",
["encounterID"] = 2422,
["event"] = "SPELL_CAST_START",
["npcID"] = 176974,
},
[440195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalescing Shadow",
["npcID"] = 217649,
},
[137180] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["npcID"] = 69465,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1577,
},
[391050] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[139228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari High Priest",
["npcID"] = 69906,
},
[378764] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[22273] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethereal Sorcerer",
["npcID"] = 18313,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[83445] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["encounterID"] = 1052,
["event"] = "SPELL_CAST_START",
["npcID"] = 44577,
},
[76790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Invader",
["npcID"] = 39616,
},
[444296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[255952] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["npcID"] = 126832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[391055] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[147422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Candlekeeper",
["npcID"] = 72875,
},
[346006] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["npcID"] = 175616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2425,
},
[41471] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[59389] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["npcID"] = 23953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2026,
},
[79351] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["npcID"] = 42333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1057,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[256979] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Eudora",
["npcID"] = 126848,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[448399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[409492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Afflicted Soul",
["npcID"] = 204773,
},
[442257] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 220626,
},
[450449] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 221427,
},
[41472] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[352158] = {
["source"] = "Soulrender Dormazain",
["event"] = "SPELL_CAST_START",
["npcID"] = 175727,
},
[429973] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[450451] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 221427,
},
[436117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 135552,
},
[113141] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1430,
},
[364447] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Custodian",
["npcID"] = 184522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2512,
},
[450454] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[278444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[127476] = {
["isChanneled"] = true,
["source"] = "Jung Duk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60801,
},
[468886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phalanx",
["npcID"] = 232593,
},
[323496] = {
["source"] = "Flesh Crafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 165872,
},
[440218] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[3105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalvan Mistmantle",
["npcID"] = 315,
},
[374691] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[193505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[382883] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194241,
},
[25602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mana Leech",
["npcID"] = 19306,
},
[432030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[73212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Shaman",
["npcID"] = 38326,
},
[384933] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[315311] = {
["encounterName"] = "The Hivemind",
["source"] = "Aqir Drone",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157255,
},
[405413] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2693,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[113656] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jediflippin",
["npcID"] = 205353,
},
[221153] = {
["source"] = "Pulsauron",
["event"] = "SPELL_CAST_START",
["npcID"] = 111072,
},
[405415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[199652] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Haldor",
["npcID"] = 95843,
},
[143339] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Rik'kal the Dissector",
["npcID"] = 71158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[413607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[444324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[456611] = {
["source"] = "Zillix",
["event"] = "SPELL_CAST_START",
["npcID"] = 221976,
},
[79869] = {
["isChanneled"] = true,
["source"] = "Zandalari Arcweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69224,
},
[22275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackwing Spellbinder",
["npcID"] = 12457,
},
[61184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Huntress",
["npcID"] = 58070,
},
[440231] = {
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[125432] = {
["source"] = "Sra'thik Pool-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 63570,
},
[68607] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Hummel",
["encounterID"] = 2879,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36296,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[386991] = {
["source"] = "Primal Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 184869,
},
[56065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naxxramas Acolyte",
["npcID"] = 15981,
},
[153581] = {
["source"] = "Soaring Chakram Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 76132,
},
[374706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[395184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[143343] = {
["encounterName"] = "Thok the Bloodthirsty",
["source"] = "Thok the Bloodthirsty",
["npcID"] = 71529,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1599,
},
[202728] = {
["source"] = "Dreadlord Mendacius",
["event"] = "SPELL_CAST_START",
["npcID"] = 99649,
},
[427950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[129017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dojani Enforcer",
["npcID"] = 65626,
},
[44547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sister of Torment",
["npcID"] = 24697,
},
[448429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Mystic",
["npcID"] = 203878,
},
[122874] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60585,
},
[370615] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 44704,
},
[266181] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[69633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Warden",
["npcID"] = 36666,
},
[321471] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[268230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Deckhand",
["npcID"] = 138464,
},
[129018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dojani Enforcer",
["npcID"] = 65626,
},
[137203] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[458672] = {
["source"] = "Archavon the Stone Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 227257,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[450483] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[268234] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Bile Oozeling",
["npcID"] = 136541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[401338] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[129531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mo Mo",
["npcID"] = 59805,
},
[440246] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[131067] = {
["source"] = "Strongarm Medic",
["event"] = "SPELL_CAST_START",
["npcID"] = 65842,
},
[30851] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[374719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Patches",
["npcID"] = 215147,
},
[389054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Forager",
["npcID"] = 196694,
},
[374720] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2582,
},
[401341] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[55811] = {
["source"] = "Iron Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 29984,
},
[199663] = {
["source"] = "Ghostly Councilor",
["event"] = "SPELL_CAST_START",
["npcID"] = 98370,
},
[401342] = {
["source"] = "Magmaclaw Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203934,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[57091] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["npcID"] = 26723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2011,
},
[384961] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[427964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Incarnation",
["npcID"] = 213559,
},
[274383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vermin Trapper",
["npcID"] = 130404,
},
[6306] = {
["encounterName"] = "Cookie",
["source"] = "Cookie",
["npcID"] = 645,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2986,
},
[12675] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[374724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[147447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Farseer",
["npcID"] = 72770,
},
[452539] = {
["source"] = "Terror of the Forge",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98965,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[450492] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 221427,
},
[411585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jalgon Stoutburn",
["npcID"] = 204426,
},
[147448] = {
["source"] = "Foreboding Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 73162,
},
[37638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harala the Firespeaker",
["npcID"] = 60030,
},
[194547] = {
["source"] = "Yalia Sagewhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 62825,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["npcID"] = 97788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[264150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thornguard",
["npcID"] = 131858,
},
[411589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jalgon Stoutburn",
["npcID"] = 204426,
},
[458688] = {
["source"] = "Awakened Volcanic Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[372683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Whelp",
["npcID"] = 187894,
},
[384970] = {
["isChanneled"] = true,
["source"] = "Vicious Hyena",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185691,
},
[378827] = {
["source"] = "Qalashi Plunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192786,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[214003] = {
["source"] = "Risen Swordsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 102094,
},
[15043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yu'lon Adept",
["npcID"] = 57316,
},
[136189] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["npcID"] = 69078,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[446405] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2895,
},
[131071] = {
["source"] = "Strongarm Airman",
["event"] = "SPELL_CAST_START",
["npcID"] = 65840,
},
[22661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alzzin the Wildshaper",
["npcID"] = 11492,
},
[374735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[356306] = {
["source"] = "Mawsworn Annihilator",
["event"] = "SPELL_CAST_START",
["npcID"] = 182214,
},
[38663] = {
["source"] = "Blackscale Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 45985,
},
[378832] = {
["source"] = "Spellsworn Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203389,
},
[434122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ascended Neophyte",
["npcID"] = 216326,
},
[56837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Ascendant",
["npcID"] = 26727,
},
[440266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Hound",
["npcID"] = 217698,
},
[147454] = {
["source"] = "Spirit of Jadefire",
["event"] = "SPELL_CAST_START",
["npcID"] = 72769,
},
[448458] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Devoted Worshipper",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 223318,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[419790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[274400] = {
["source"] = "Cutwater Duelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 129559,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[401361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossian",
["npcID"] = 204093,
},
[401362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Heatbinder",
["npcID"] = 200452,
},
[154623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Spirit-Tender",
["npcID"] = 77131,
},
[450509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[354265] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["source"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["event"] = "SPELL_CAST_START",
["npcID"] = 175730,
},
[199674] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Bjorn",
["npcID"] = 97081,
},
[468940] = {
["source"] = "Phalanx",
["event"] = "SPELL_CAST_START",
["npcID"] = 232593,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[446416] = {
["source"] = "Honey-fused Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 213697,
},
[142338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Shaman",
["npcID"] = 72451,
},
[143362] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber Parasite",
["npcID"] = 71578,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1593,
},
[226296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[456656] = {
["source"] = "Worldcarver Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 221964,
},
[450513] = {
["isChanneled"] = true,
["source"] = "Rhahk'Zor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 644,
},
[401368] = {
["source"] = "Volcanic Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 200808,
},
[419798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[430037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[450515] = {
["source"] = "Rhahk'Zor",
["event"] = "SPELL_CAST_START",
["npcID"] = 644,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[79881] = {
["source"] = "Twilight Vanquisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 38913,
},
[236537] = {
["source"] = "Smoldering Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 118065,
},
[387037] = {
["source"] = "Primal Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 195917,
},
[378847] = {
["source"] = "Qalashi Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192787,
},
[69131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Animator",
["npcID"] = 36516,
},
[434137] = {
["source"] = "Royal Venomshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 220730,
},
[452567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[307177] = {
["source"] = "Spellbound Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 162716,
},
[39945] = {
["encounterName"] = "Shade of Akama",
["source"] = "Akama",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23191,
},
[444377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Grizzly",
["npcID"] = 226195,
},
[421852] = {
["event"] = "SPELL_CAST_START",
["source"] = "Resilient Gladehart",
["npcID"] = 207620,
},
[391136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[384993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gareed",
["npcID"] = 200722,
},
[378850] = {
["source"] = "Destabilized Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 181536,
},
[41481] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22950,
},
[266225] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[17287] = {
["source"] = "Bloodwarder Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 19633,
},
[329706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Outrider",
["npcID"] = 175882,
},
[268274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Booty Fanatic",
["npcID"] = 136539,
},
[79883] = {
["event"] = "SPELL_CAST_START",
["source"] = "John J. Keeshan",
["npcID"] = 43812,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200927,
},
[252923] = {
["source"] = "Zanchuli Witch-Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122969,
},
[387045] = {
["source"] = "Overseer Xymra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200186,
},
[372711] = {
["isChanneled"] = true,
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186220,
},
[137226] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[440288] = {
["source"] = "Cowed Mongrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 229099,
},
[268278] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[79884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritualist Tarak",
["npcID"] = 43363,
},
[226304] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["npcID"] = 214608,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[387049] = {
["source"] = "Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 192873,
},
[399336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Frostclaw",
["npcID"] = 201035,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[395241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Voltweaver",
["npcID"] = 198868,
},
[137228] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[401385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[438245] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[374765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 197133,
},
[233473] = {
["source"] = "Prophet Velen",
["event"] = "SPELL_CAST_START",
["npcID"] = 117042,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[137229] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[114185] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[385005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understone Drudge",
["npcID"] = 105636,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[436200] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[137230] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[212997] = {
["encounterName"] = "Tichondrius",
["source"] = "Tichondrius",
["encounterID"] = 1862,
["event"] = "SPELL_CAST_START",
["npcID"] = 103685,
},
[79886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritualist Tarak",
["npcID"] = 43363,
},
[272382] = {
["source"] = "Ankylodon Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 123093,
},
[137231] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[436203] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[41483] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22950,
},
[407535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Destroyer",
["npcID"] = 203861,
},
[262145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Bladeguard",
["npcID"] = 141499,
},
[76815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41096,
},
[436205] = {
["source"] = "Unstable Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[462826] = {
["source"] = "Explosive Bomberbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229706,
},
[448492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[136209] = {
["encounterName"] = "Primordius",
["source"] = "Primordius",
["npcID"] = 69017,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1574,
},
[354297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Support Officer",
["npcID"] = 177817,
},
[207881] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[450542] = {
["source"] = "Gilnid",
["event"] = "SPELL_CAST_START",
["npcID"] = 1763,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[432113] = {
["source"] = "Overlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[425970] = {
["source"] = "Verdant Boughwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213576,
},
[395254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Tempestmaker",
["npcID"] = 198878,
},
[307201] = {
["encounterName"] = "The Hivemind",
["source"] = "Ka'zir",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157253,
},
[432114] = {
["source"] = "Dogmatic Forgecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 212884,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[432116] = {
["source"] = "Boss Whiskerlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 220385,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[288774] = {
["isChanneled"] = true,
["source"] = "Malfunctioning Pylon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229739,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[425974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[387067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 186740,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[428023] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[22664] = {
["encounterName"] = "Nefarian",
["source"] = "Lord Victor Nefarius",
["npcID"] = 10162,
["event"] = "SPELL_CAST_START",
["encounterID"] = 617,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[432120] = {
["source"] = "Overlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[450550] = {
["source"] = "Mr. Smite",
["event"] = "SPELL_CAST_START",
["npcID"] = 646,
},
[237578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Helblaze Soulmender",
["npcID"] = 119923,
},
[411644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[385024] = {
["source"] = "Crystal Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205079,
},
[456696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Brute",
["npcID"] = 224152,
},
[41229] = {
["source"] = "Bonechewer Blood Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 23237,
},
[136216] = {
["encounterName"] = "Primordius",
["source"] = "Primordius",
["npcID"] = 69017,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1574,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[131097] = {
["source"] = "Captain Doren",
["event"] = "SPELL_CAST_START",
["npcID"] = 66052,
},
[307213] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[272402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cutwater Knife Juggler",
["npcID"] = 129599,
},
[153623] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[146456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goro'dan",
["npcID"] = 72964,
},
[385029] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 186246,
},
[403459] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[143385] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["npcID"] = 71504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1601,
},
[76820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41139,
},
[164887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Mender",
["npcID"] = 81820,
},
[307217] = {
["encounterName"] = "The Hivemind",
["source"] = "Aqir Darter",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157256,
},
[191508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[301075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taruka Flamehand",
["npcID"] = 154037,
},
[313362] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[395273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormsentry",
["npcID"] = 196856,
},
[59148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[352271] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[387083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boulderfist Ogre",
["npcID"] = 215774,
},
[413704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ducks Devil",
["npcID"] = 200751,
},
[374797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Divebeak Ohuna",
["npcID"] = 189373,
},
[385036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[52493] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Silthik",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28731,
},
[432135] = {
["source"] = "Candlelit Pebblemaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 218658,
},
[22665] = {
["encounterName"] = "Nefarian",
["source"] = "Lord Victor Nefarius",
["npcID"] = 10162,
["event"] = "SPELL_CAST_START",
["encounterID"] = 617,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[409612] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[456711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[425995] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[462856] = {
["source"] = "Nullbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229729,
},
[456713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[376851] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[17290] = {
["encounterName"] = "Razorgore the Untamed",
["source"] = "Blackwing Mage",
["npcID"] = 12420,
["event"] = "SPELL_CAST_START",
["encounterID"] = 610,
},
[387091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Sunseeker",
["npcID"] = 187239,
},
[432142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian War-Weaver",
["npcID"] = 219657,
},
[270370] = {
["source"] = "Bilgewater Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 137149,
},
[428047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[462859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[270371] = {
["source"] = "Bilgewater Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 137149,
},
[385046] = {
["source"] = "Skulking Gutstabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 186242,
},
[272420] = {
["source"] = "Crawg Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 128267,
},
[307232] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[9734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Prisoner",
["npcID"] = 24255,
},
[148513] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Kun-Da",
["npcID"] = 71408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[448528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[79896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit Worg",
["npcID"] = 60131,
},
[259092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Stormcaller",
["npcID"] = 126919,
},
[189469] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[200732] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[136228] = {
["encounterName"] = "Primordius",
["source"] = "Primordius",
["npcID"] = 69017,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1574,
},
[428054] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[397338] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[391195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bisquius",
["npcID"] = 197557,
},
[121876] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62405,
},
[415769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[140325] = {
["source"] = "Creeping Moor Beast",
["event"] = "SPELL_CAST_START",
["npcID"] = 67772,
},
[405531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claim Jumper Mk. 3",
["npcID"] = 202654,
},
[415770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[397341] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[415773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Interval",
["npcID"] = 206065,
},
[352293] = {
["encounterName"] = "Kel'Thuzad",
["source"] = "Kel'Thuzad",
["encounterID"] = 2422,
["event"] = "SPELL_CAST_START",
["npcID"] = 175559,
},
[148518] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zu Yin",
["npcID"] = 73724,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[456729] = {
["source"] = "Hairless the Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 213550,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[430109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Thunderer",
["npcID"] = 207198,
},
[59151] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Construct",
["npcID"] = 28835,
},
[59663] = {
["source"] = "Thexal Deathchill",
["event"] = "SPELL_CAST_START",
["npcID"] = 31775,
},
[53520] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["npcID"] = 29120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1973,
},
[374823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[385063] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[329774] = {
["encounterName"] = "Hungering Destroyer",
["source"] = "Hungering Destroyer",
["npcID"] = 164261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2383,
},
[389159] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[207906] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[444449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[148522] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72958,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[59152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Construct",
["npcID"] = 28835,
},
[385068] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[130583] = {
["source"] = "Thunder Hold Cannoneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 66395,
},
[139309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckbat",
["npcID"] = 70232,
},
[191527] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[54801] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["npcID"] = 29573,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[118297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Fire Elemental",
["npcID"] = 61029,
},
[442408] = {
["source"] = "Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214649,
},
[164907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Ritual Bones",
["npcID"] = 75715,
},
[397358] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[423979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Cursed Crusher",
["npcID"] = 214419,
},
[469030] = {
["source"] = "High Interrogator Gerstahn",
["event"] = "SPELL_CAST_START",
["npcID"] = 232243,
},
[113690] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[139311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Scavenger",
["npcID"] = 70224,
},
[469031] = {
["source"] = "High Interrogator Gerstahn",
["event"] = "SPELL_CAST_START",
["npcID"] = 232243,
},
[387122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 186740,
},
[146479] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goro'dan",
["npcID"] = 72964,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[156718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Corpse Spider",
["npcID"] = 76104,
},
[79903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gath'Ilzogg",
["npcID"] = 334,
},
[113691] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[81439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[387125] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[462892] = {
["source"] = "Malfunctioning Pylon",
["event"] = "SPELL_CAST_START",
["npcID"] = 229739,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[54290] = {
["source"] = "Anub'ar Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 29335,
},
[411700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[372793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[456751] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[469038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Dread",
["npcID"] = 232894,
},
[372794] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[81440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[59154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Giant",
["npcID"] = 28920,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["npcID"] = 186151,
["encounterID"] = 2580,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[389179] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[30091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necro Knight",
["npcID"] = 16165,
},
[106526] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[274507] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Swabby",
["npcID"] = 129526,
},
[199726] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Ranulf",
["npcID"] = 97083,
},
[226347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneclaw Hunter",
["npcID"] = 91332,
},
[372800] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187125,
},
[391230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bisquius",
["npcID"] = 197557,
},
[387135] = {
["source"] = "Primalist Arcblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 194898,
},
[32011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitescale Siren",
["npcID"] = 38301,
},
[440377] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[81442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[139319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 70236,
},
[274511] = {
["source"] = "Extraction Point Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 137148,
},
[193585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockbound Trapper",
["npcID"] = 102232,
},
[456762] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[442428] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[313420] = {
["encounterName"] = "The Hivemind",
["source"] = "Acidic Aqir",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 161019,
},
[350280] = {
["encounterName"] = "The Tarragrue",
["source"] = "The Tarragrue",
["npcID"] = 175611,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2423,
},
[208944] = {
["encounterName"] = "Grand Magistrix Elisande",
["source"] = "Elisande",
["encounterID"] = 1872,
["event"] = "SPELL_CAST_START",
["npcID"] = 106643,
},
[122398] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Mutated Construct",
["npcID"] = 62701,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[270419] = {
["source"] = "Worldcarver Strongback",
["event"] = "SPELL_CAST_START",
["npcID"] = 221960,
},
[192563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Purifier",
["npcID"] = 97197,
},
[242733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tugar Bloodtotem",
["npcID"] = 117230,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[350283] = {
["encounterName"] = "The Nine",
["source"] = "Signe",
["encounterID"] = 2429,
["event"] = "SPELL_CAST_START",
["npcID"] = 177094,
},
[442432] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[272469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Reach",
["npcID"] = 138538,
},
[417860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Umbraclaw",
["npcID"] = 211401,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[387145] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[374859] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[75813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[370764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[204852] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Dweller",
["npcID"] = 101991,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[166969] = {
["source"] = "Olin Umberhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 79315,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[370766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Thrasher",
["npcID"] = 196117,
},
[446533] = {
["source"] = "Mycotic Shalehorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 212704,
},
[456772] = {
["source"] = "Workmaster Nast",
["event"] = "SPELL_CAST_START",
["npcID"] = 213200,
},
[311382] = {
["source"] = "Deresh of the Nothingness",
["event"] = "SPELL_CAST_START",
["npcID"] = 159768,
},
[438343] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[374865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Konkhular",
["npcID"] = 194544,
},
[417868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Umbraclaw",
["npcID"] = 211401,
},
[139327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Focused Eye",
["npcID"] = 70249,
},
[143423] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[393298] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[35096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anchorite Caalen",
["npcID"] = 22862,
},
[397394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[385108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Podling",
["npcID"] = 209630,
},
[454732] = {
["source"] = "Tka'ktath",
["event"] = "SPELL_CAST_START",
["npcID"] = 216046,
},
[122402] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["npcID"] = 62711,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[450637] = {
["source"] = "Nerubian Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 218103,
},
[411730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Hound",
["npcID"] = 205611,
},
[383062] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[9672] = {
["source"] = "Blackscale Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 45985,
},
[393302] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[346204] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["npcID"] = 175616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2425,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[346205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Extractor",
["npcID"] = 173717,
},
[65301] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[438355] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[143427] = {
["source"] = "Kor'kron Ironblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 71770,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[372828] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[110117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Sha",
["npcID"] = 65414,
},
[393306] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[393307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[22414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warpwood Tangler",
["npcID"] = 11464,
},
[393308] = {
["source"] = "Primalist Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 201560,
},
[411738] = {
["source"] = "Rashok",
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[389213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[413787] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[146501] = {
["isChanneled"] = true,
["source"] = "Sra'thik Amber-Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72929,
},
[352355] = {
["encounterName"] = "Kel'Thuzad",
["source"] = "Remnant of Kel'Thuzad",
["encounterID"] = 2422,
["event"] = "SPELL_CAST_START",
["npcID"] = 176929,
},
[383073] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[123429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broketooth Sneaker",
["npcID"] = 60195,
},
[462936] = {
["source"] = "Medbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229769,
},
[200768] = {
["source"] = "Crazed Razorbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 95766,
},
[212031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Energy",
["npcID"] = 105705,
},
[434269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daetan Swiftplume",
["npcID"] = 218738,
},
[374885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Astral Attendant",
["npcID"] = 189555,
},
[376933] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[122406] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62397,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[280690] = {
["source"] = "Horde Bombardier",
["event"] = "SPELL_CAST_START",
["npcID"] = 145800,
},
[372839] = {
["source"] = "Nokhud Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 193840,
},
[411747] = {
["source"] = "Twisted Elementium",
["event"] = "SPELL_CAST_START",
["npcID"] = 205628,
},
[428130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[256060] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["encounterID"] = 2093,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 126832,
},
[436322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atik",
["npcID"] = 217533,
},
[430179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Oracle",
["npcID"] = 214439,
},
[432227] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[364652] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["npcID"] = 182169,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2539,
},
[124967] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60410,
},
[374892] = {
["source"] = "Magmammoth Calf",
["event"] = "SPELL_CAST_START",
["npcID"] = 180705,
},
[409704] = {
["source"] = "Shadeisethal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203411,
},
[403561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fael'lin",
["npcID"] = 198916,
},
[383084] = {
["source"] = "Primalist Iceslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 204441,
},
[249919] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[121896] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62397,
},
[122408] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["encounterID"] = 1499,
["event"] = "SPELL_CAST_START",
["npcID"] = 62711,
},
[411754] = {
["source"] = "Conduit Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 205478,
},
[376943] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[411755] = {
["source"] = "Conduit Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 205478,
},
[434281] = {
["source"] = "Weeping Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217268,
},
[403565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fael'lin",
["npcID"] = 198916,
},
[403566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flare Elemental",
["npcID"] = 202683,
},
[374898] = {
["source"] = "Predatory Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 198779,
},
[403567] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[372851] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[395377] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[146511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Amber-Master",
["npcID"] = 72929,
},
[395378] = {
["source"] = "Malsegan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193212,
},
[142416] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71160,
},
[249923] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[260162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Hexxer",
["npcID"] = 141711,
},
[138321] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["npcID"] = 69473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[403571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fael'lin",
["npcID"] = 198916,
},
[454765] = {
["source"] = "Tka'ktath",
["event"] = "SPELL_CAST_START",
["npcID"] = 216046,
},
[434288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daetan Swiftplume",
["npcID"] = 218738,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[260163] = {
["source"] = "Possessed Dockworker",
["event"] = "SPELL_CAST_START",
["npcID"] = 125957,
},
[352379] = {
["encounterName"] = "Kel'Thuzad",
["source"] = "Remnant of Kel'Thuzad",
["encounterID"] = 2422,
["event"] = "SPELL_CAST_START",
["npcID"] = 176929,
},
[387191] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[135251] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[403574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fael'lin",
["npcID"] = 198916,
},
[397431] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[81456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jorgensen",
["npcID"] = 43546,
},
[385145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Raptor",
["npcID"] = 187256,
},
[403576] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[270473] = {
["source"] = "Tamer Khuwaza",
["event"] = "SPELL_CAST_START",
["npcID"] = 128801,
},
[428150] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[409721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Dezran",
["npcID"] = 202610,
},
[144468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[372862] = {
["source"] = "Diverted Stream",
["event"] = "SPELL_CAST_START",
["npcID"] = 187948,
},
[450677] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[321669] = {
["encounterName"] = "Mistcaller",
["source"] = "Illusionary Clone",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 165108,
},
[389245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Ruinstalker",
["npcID"] = 199379,
},
[465012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[409724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 201668,
},
[79922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Flayer",
["npcID"] = 42808,
},
[144470] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[138327] = {
["encounterName"] = "Ra-den",
["source"] = "Unharnessed Power",
["npcID"] = 69869,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1580,
},
[140375] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loa Speaker",
["npcID"] = 69302,
},
[448634] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[200784] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[144471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[389250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Slayer",
["npcID"] = 201831,
},
[270481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Demonic Tyrant",
["npcID"] = 135002,
},
[389251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Over-Pollinated Lasher",
["npcID"] = 196495,
},
[319628] = {
["source"] = "Larion Sire",
["event"] = "SPELL_CAST_START",
["npcID"] = 157761,
},
[81459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[385157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Riverbeast",
["npcID"] = 194145,
},
[462972] = {
["encounterName"] = "Bael'Gar",
["source"] = "Bael'Gar",
["encounterID"] = 3044,
["event"] = "SPELL_CAST_START",
["npcID"] = 226303,
},
[144473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[462974] = {
["encounterName"] = "Bael'Gar",
["source"] = "Bael'Gar",
["npcID"] = 226303,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3044,
},
[448640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[458879] = {
["encounterName"] = "Speaker Xanventh",
["source"] = "Speaker Xanventh",
["npcID"] = 220119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2947,
},
[56860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Initiate",
["npcID"] = 26728,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[268440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 126918,
},
[389258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slobberclaw",
["npcID"] = 195972,
},
[403593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[405641] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[448644] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[417928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Amberpaw",
["npcID"] = 207144,
},
[15241] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26928,
},
[106546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloated Brew Alemental",
["npcID"] = 59518,
},
[379023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hillside Forager",
["npcID"] = 191240,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[238674] = {
["isChanneled"] = true,
["source"] = "Fulminating Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 119978,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["npcID"] = 207800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[272542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Sniper",
["npcID"] = 128967,
},
[462983] = {
["source"] = "Automatic Ironstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 229778,
},
[106547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[399504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Frostclaw",
["npcID"] = 201035,
},
[393361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightrot",
["npcID"] = 188707,
},
[144479] = {
["encounterName"] = "Norushen",
["source"] = "Essence of Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 71976,
},
[409744] = {
["source"] = "Shadeisethal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203411,
},
[403601] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[389267] = {
["source"] = "Sunscale Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192776,
},
[385172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[272546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Buccaneer",
["npcID"] = 129366,
},
[389268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187135,
},
[147552] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["npcID"] = 72353,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[389269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonscale Expedition Defender",
["npcID"] = 203273,
},
[125490] = {
["source"] = "Amber Searsting",
["event"] = "SPELL_CAST_START",
["npcID"] = 63569,
},
[389270] = {
["source"] = "Dragonscale Expedition Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 203273,
},
[325790] = {
["source"] = "Bitter Memory",
["event"] = "SPELL_CAST_START",
["npcID"] = 158629,
},
[147553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Y'Shaarj",
["npcID"] = 73452,
},
[119347] = {
["source"] = "Sik'thik Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61434,
},
[389271] = {
["source"] = "Sunscale Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192776,
},
[407701] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 204030,
},
[379033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodcrazed Warhound",
["npcID"] = 195753,
},
[138339] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["npcID"] = 69473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[411798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oozing Sludge",
["npcID"] = 205644,
},
[389273] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[199772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Champion",
["npcID"] = 97087,
},
[389274] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[59166] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Tactician",
["npcID"] = 28581,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[424087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Devastator",
["npcID"] = 207089,
},
[260182] = {
["source"] = "Parasitic Mindstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 125959,
},
[138341] = {
["encounterName"] = "Ra-den",
["source"] = "Sanguine Horror",
["npcID"] = 69871,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[198750] = {
["encounterName"] = "Odyn",
["source"] = "Stormforged Obliterator",
["npcID"] = 102019,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[456853] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[136294] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[446615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Dark Architect",
["npcID"] = 213885,
},
[448663] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[409756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[111670] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[120373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reclaimer Zuan",
["npcID"] = 61305,
},
[409757] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[146534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggron",
["npcID"] = 72981,
},
[148582] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Xiang-Lin",
["npcID"] = 73725,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[157797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Arbiter",
["npcID"] = 77080,
},
[450714] = {
["source"] = "Nerubian Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 218103,
},
[193633] = {
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98275,
},
[325802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeneye Bowman",
["npcID"] = 166936,
},
[204896] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodscent Felhound",
["npcID"] = 98813,
},
[164965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[119862] = {
["encounterName"] = "Sha of Fear",
["source"] = "Jinlun Kun",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 61046,
},
[376997] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[411809] = {
["source"] = "Pahi'rys",
["event"] = "SPELL_CAST_START",
["npcID"] = 205540,
},
[146536] = {
["source"] = "Kor'thik Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72954,
},
[270515] = {
["source"] = "Azerite-Infused Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 137905,
},
[454813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 225817,
},
[450718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[411811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Slime",
["npcID"] = 205651,
},
[405668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drazos Blackwing",
["npcID"] = 205623,
},
[146537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggron",
["npcID"] = 72981,
},
[426147] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[28434] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Carrion Spinner",
["npcID"] = 15975,
},
[442530] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 210231,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[395433] = {
["isChanneled"] = true,
["source"] = "Jumping Spiderling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198878,
},
[377004] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[405673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overflowing Magma",
["npcID"] = 203277,
},
[79933] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Utroka the Keymistress",
["npcID"] = 43350,
},
[80957] = {
["source"] = "Thunderhead Hippogryph",
["event"] = "SPELL_CAST_START",
["npcID"] = 6375,
},
[272571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Tempest",
["npcID"] = 129367,
},
[405675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[442536] = {
["source"] = "Covert Webmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223844,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[120377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nakk'rakas",
["npcID"] = 60572,
},
[450728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[59169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storming Vortex",
["npcID"] = 28547,
},
[164973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[226406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113537,
},
[52770] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1984,
},
[204905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99676,
},
[256099] = {
["source"] = "Blood Marquis",
["event"] = "SPELL_CAST_START",
["npcID"] = 140602,
},
[191595] = {
["source"] = "Felsworn Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 96587,
},
[9739] = {
["source"] = "Kengtus Pranch the Patient",
["event"] = "SPELL_CAST_START",
["npcID"] = 82012,
},
[264390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[454831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 225817,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[348350] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["npcID"] = 175616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2425,
},
[276679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trained Sabertusk",
["npcID"] = 141502,
},
[270536] = {
["source"] = "Sentinel Aeolyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 140303,
},
[145523] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Stone Statue",
["npcID"] = 72535,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[448691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Deepflayer",
["npcID"] = 218657,
},
[207980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baalgar the Watchful",
["npcID"] = 104274,
},
[201837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Summoner",
["npcID"] = 99366,
},
[383165] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[446646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Hulk",
["npcID"] = 223118,
},
[117309] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60586,
},
[407740] = {
["source"] = "Aurantia",
["event"] = "SPELL_CAST_START",
["npcID"] = 203047,
},
[147573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Great Turtle",
["npcID"] = 72765,
},
[129084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruqin Elder",
["npcID"] = 59826,
},
[411837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Fire",
["npcID"] = 205971,
},
[356548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portalmancer Zo'honn",
["npcID"] = 179334,
},
[440506] = {
["source"] = "Stream Skipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 213700,
},
[270543] = {
["source"] = "Kirin Tor Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 143002,
},
[307403] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 162719,
},
[448698] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rampaging Deepflayer",
["npcID"] = 218657,
},
[272592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 138281,
},
[422078] = {
["source"] = "Emerald Wingguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210278,
},
[12747] = {
["source"] = "Verdant Emerald Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208750,
},
[119358] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[256106] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["npcID"] = 126832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[129085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Guard",
["npcID"] = 60826,
},
[144504] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Desperation",
["npcID"] = 71482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[13323] = {
["source"] = "Gold Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 32341,
},
[140409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Caller",
["npcID"] = 69286,
},
[194675] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 98963,
},
[270549] = {
["source"] = "Soulspitter Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 128356,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[465086] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Moira Bronzebeard",
["npcID"] = 226314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[140411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Caller",
["npcID"] = 69286,
},
[83012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Filthmonger",
["npcID"] = 69228,
},
[260205] = {
["source"] = "Baleful Guardian Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 149000,
},
[465089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Imperial Guard",
["npcID"] = 232465,
},
[119360] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60410,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[393419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Penumbrus",
["npcID"] = 189289,
},
[146556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Honor Guard",
["npcID"] = 72954,
},
[147580] = {
["source"] = "Mag'har Beastlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 146740,
},
[387277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torch Revenant",
["npcID"] = 201472,
},
[438471] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[84037] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[452806] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[422090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treant",
["npcID"] = 54983,
},
[55077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savage Worg",
["npcID"] = 29735,
},
[127552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Sorcerer",
["npcID"] = 65133,
},
[141438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Drak'on",
["npcID"] = 67391,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[106563] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[350422] = {
["encounterName"] = "Soulrender Dormazain",
["source"] = "Soulrender Dormazain",
["encounterID"] = 2434,
["event"] = "SPELL_CAST_START",
["npcID"] = 175727,
},
[33832] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azure Scale-Binder",
["npcID"] = 26746,
},
[137344] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[272609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 138281,
},
[224374] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["npcID"] = 112668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[194682] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 98963,
},
[391380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Windlord",
["npcID"] = 200390,
},
[430288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Fragment",
["npcID"] = 207202,
},
[224375] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["npcID"] = 112668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[278755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Befouled Spirit",
["npcID"] = 133685,
},
[193659] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[235638] = {
["source"] = "Treant Grovetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207616,
},
[391382] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 197671,
},
[385239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flare Elemental",
["npcID"] = 202683,
},
[340189] = {
["source"] = "Mistveil Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 173655,
},
[137347] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[424148] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[393432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[411862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animation Fluid",
["npcID"] = 203939,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[42024] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Elementalist",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23523,
},
[387290] = {
["source"] = "Morlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 201549,
},
[393434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Belligerent Dracthyr",
["npcID"] = 200877,
},
[119364] = {
["isChanneled"] = true,
["source"] = "Beast of Jade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66772,
},
[239736] = {
["source"] = "Prophet Velen",
["event"] = "SPELL_CAST_START",
["npcID"] = 117042,
},
[199805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[130115] = {
["source"] = "Apparition of Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 66100,
},
[30741] = {
["source"] = "Grand Warlock Nethekurse",
["event"] = "SPELL_CAST_START",
["npcID"] = 16807,
},
[119365] = {
["source"] = "Sorcerer Mogu",
["event"] = "SPELL_CAST_START",
["npcID"] = 61250,
},
[393439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Belligerent Dracthyr",
["npcID"] = 200877,
},
[289004] = {
["source"] = "Stone Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 147063,
},
[106055] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[147590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Great Turtle",
["npcID"] = 72765,
},
[387297] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 201677,
},
[446682] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Oozekhan",
["npcID"] = 216049,
},
[407775] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[368868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Automa",
["npcID"] = 184738,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[393443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veshrak of the North",
["npcID"] = 188713,
},
[387300] = {
["source"] = "Mana Wyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203734,
},
[18327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baroness Anastari",
["npcID"] = 10436,
},
[81995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43826,
},
[424161] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Apostle",
["npcID"] = 209911,
},
[143497] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[201858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Deadeye",
["npcID"] = 100539,
},
[221312] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greystone Shardcaster",
["npcID"] = 111184,
},
[450784] = {
["source"] = "Xeph'itik",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[193668] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[130630] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gyrocopter Turret",
["npcID"] = 66299,
},
[81996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43826,
},
[272631] = {
["source"] = "Reanimated Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127757,
},
[372971] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[209027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Guard",
["npcID"] = 104246,
},
[145547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Shaman",
["npcID"] = 72451,
},
[391402] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189492,
},
[440549] = {
["source"] = "Kobyss Shellbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213598,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[428263] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[145548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Poison Bolt Totem",
["npcID"] = 72562,
},
[114249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broketooth Tosser",
["npcID"] = 59416,
},
[434407] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[440551] = {
["source"] = "Kobyss Shellbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213598,
},
[393453] = {
["source"] = "Dracthyr Stoneclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201079,
},
[395501] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[117833] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60708,
},
[393454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Hauler",
["npcID"] = 201341,
},
[444648] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[270590] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["npcID"] = 137614,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[145550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Shadowmage",
["npcID"] = 72150,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[395504] = {
["isChanneled"] = true,
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192769,
},
[42027] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Spiritbinder",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23524,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Void Chunk",
["npcID"] = 213684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2836,
},
[145551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Shadowmage",
["npcID"] = 72150,
},
[393458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Defender",
["npcID"] = 199941,
},
[307453] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157354,
},
[120394] = {
["encounterName"] = "Sha of Fear",
["source"] = "Dread Spawn",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 61003,
},
[145552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Coin Counter",
["npcID"] = 202398,
},
[424176] = {
["source"] = "Ancient Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 210637,
},
[311550] = {
["source"] = "Jesh'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 159764,
},
[403699] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[311551] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 156575,
},
[136338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalak",
["npcID"] = 69099,
},
[145553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mokvar the Treasurer",
["npcID"] = 72433,
},
[424178] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[270597] = {
["source"] = "Blighted Malice",
["event"] = "SPELL_CAST_START",
["npcID"] = 141943,
},
[234631] = {
["source"] = "Smoldering Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 118065,
},
[5159] = {
["source"] = "Goblin Craftsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 1731,
},
[299268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Draeleth",
["npcID"] = 144567,
},
[258181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 130400,
},
[136340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalak",
["npcID"] = 69099,
},
[145555] = {
["source"] = "Kor'kron Warshaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 71773,
},
[139413] = {
["source"] = "Zandalari Spiritweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 69285,
},
[379134] = {
["source"] = "Cragsworn Stonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 201149,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[329989] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Gargon",
["npcID"] = 174069,
},
[145557] = {
["source"] = "Healing Tide Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 72563,
},
[383231] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[139414] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Soultwister",
["npcID"] = 69296,
},
[11981] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[270606] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 145642,
},
[442618] = {
["source"] = "Bazaar Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 211816,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[411903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[59179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Titanium Thunderer",
["npcID"] = 28965,
},
[418047] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[256138] = {
["source"] = "Dazar'ai Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127799,
},
[383236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Sea-Shaman",
["npcID"] = 214435,
},
[193682] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[446717] = {
["source"] = "Elder Shadeweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 221102,
},
[383237] = {
["source"] = "Unleashed Lavaburst",
["event"] = "SPELL_CAST_START",
["npcID"] = 188666,
},
[139417] = {
["isChanneled"] = true,
["source"] = "Zandalari Arcanital",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69281,
},
[411906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[321807] = {
["source"] = "Zolramus Bonecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 163619,
},
[95826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fizzsprings Guard",
["npcID"] = 140935,
},
[272662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Raider",
["npcID"] = 129369,
},
[387337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[463104] = {
["source"] = "Brood Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 222167,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40633,
},
[50989] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wintergrasp Catapult",
["npcID"] = 27881,
},
[411912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[119888] = {
["encounterName"] = "Sha of Fear",
["source"] = "Jinlun Kun",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 61046,
},
[407817] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[418056] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[145564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Arcweaver",
["npcID"] = 71771,
},
[22425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorgore the Untamed",
["npcID"] = 12435,
},
[22681] = {
["encounterName"] = "Nefarian",
["source"] = "Lord Victor Nefarius",
["npcID"] = 10162,
["event"] = "SPELL_CAST_START",
["encounterID"] = 617,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[418059] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[411916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[377105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Guard",
["npcID"] = 190510,
},
[145566] = {
["source"] = "Kor'kron Ironblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 71770,
},
[156829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gul'kosh",
["npcID"] = 78437,
},
[257169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Demolisher",
["npcID"] = 135245,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[444683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moss-Draped Ramolith",
["npcID"] = 218191,
},
[34352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Researcher",
["npcID"] = 18421,
},
[17434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[257170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Raider",
["npcID"] = 129369,
},
[145568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Runthak",
["npcID"] = 72191,
},
[403731] = {
["source"] = "Duzalgor",
["event"] = "SPELL_CAST_START",
["npcID"] = 200610,
},
[444687] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[145569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellscream Demolisher",
["npcID"] = 72194,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[375065] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[79960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jorgensen",
["npcID"] = 43827,
},
[144546] = {
["source"] = "Moonfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 71992,
},
[389401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beguiled Aquamancer",
["npcID"] = 195960,
},
[242839] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 118719,
},
[405784] = {
["source"] = "Tarasek Boarder",
["event"] = "SPELL_CAST_START",
["npcID"] = 203307,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 190023,
},
[284968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caz'lek the Sleetbringer",
["npcID"] = 150747,
},
[321828] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[424217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparring Sentinel",
["npcID"] = 216676,
},
[385310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shockcaster",
["npcID"] = 195119,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[373024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[448791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ardent Paladin",
["npcID"] = 206704,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[409885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201578,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[385313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shockcaster",
["npcID"] = 195119,
},
[444698] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[373027] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[321834] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[59183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Firestorm",
["npcID"] = 28584,
},
[17435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[358695] = {
["source"] = "Feeding Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 180426,
},
[375079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[426273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strange Winged Goblin",
["npcID"] = 214483,
},
[237726] = {
["encounterName"] = "Thrashbite the Scornful",
["source"] = "Thrashbite the Scornful",
["npcID"] = 117194,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2057,
},
[14030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverblade Bloodletter",
["npcID"] = 58986,
},
[79964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jorgensen",
["npcID"] = 43305,
},
[444705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Templar",
["npcID"] = 207949,
},
[373034] = {
["source"] = "Mudfin Mudrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 186690,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[399656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[313652] = {
["encounterName"] = "The Hivemind",
["source"] = "Ka'zir",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157253,
},
[199845] = {
["isChanneled"] = true,
["source"] = "Psyfiend",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101398,
},
[115289] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["encounterID"] = 1423,
["event"] = "SPELL_CAST_START",
["npcID"] = 59789,
},
[215204] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Vigilant Duskwatch",
["npcID"] = 104918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[440615] = {
["source"] = "Salien Carapiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223377,
},
[450854] = {
["source"] = "Deathscreamer Iken'tak",
["event"] = "SPELL_CAST_START",
["npcID"] = 211263,
},
[391470] = {
["source"] = "Clove",
["event"] = "SPELL_CAST_START",
["npcID"] = 194457,
},
[139438] = {
["source"] = "Risen Ancestor",
["event"] = "SPELL_CAST_START",
["npcID"] = 69237,
},
[446760] = {
["isChanneled"] = true,
["source"] = "Infesting Latcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222572,
},
[183465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarspitter Lurker",
["npcID"] = 91001,
},
[426283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[146606] = {
["source"] = "Kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 72927,
},
[393520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ceeqa the Peacetaker",
["npcID"] = 188708,
},
[340279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Nightblossom",
["npcID"] = 173714,
},
[399664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[33844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rapidly Grown Treant",
["npcID"] = 209218,
},
[34356] = {
["isChanneled"] = true,
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18420,
},
[146607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Skullsplitter",
["npcID"] = 72983,
},
[411952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[295231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taruka Flamehand",
["npcID"] = 154037,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[375094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swift Hornstrider",
["npcID"] = 190029,
},
[188587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understone Demolisher",
["npcID"] = 102253,
},
[393525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ceeqa the Peacetaker",
["npcID"] = 188708,
},
[160943] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Grom'kar Gunner",
["npcID"] = 77483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[389430] = {
["source"] = "Charged Stormcrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 201794,
},
[270663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Demolisher",
["npcID"] = 137622,
},
[411958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iridikron's Creation",
["npcID"] = 205691,
},
[389433] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Interrogator Gerstahn",
["npcID"] = 232243,
},
[448818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[450866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildspawn Hellcaller",
["npcID"] = 11457,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[389435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Spirit-Caller",
["npcID"] = 195267,
},
[448820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[360767] = {
["source"] = "Lured Mite",
["event"] = "SPELL_CAST_START",
["npcID"] = 181879,
},
[387388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Cultist",
["npcID"] = 185595,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[217260] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[428345] = {
["source"] = "Molten Scorpid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213696,
},
[138422] = {
["source"] = "Skumblade Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 69338,
},
[221356] = {
["source"] = "Twilight Stardancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 111164,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[399678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebringer Elementalist",
["npcID"] = 203705,
},
[137399] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["npcID"] = 69465,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1577,
},
[377154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[373059] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[383298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[34358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Chemist",
["npcID"] = 19486,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[465210] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Emperor Dagran Thaurissan",
["npcID"] = 226305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[360775] = {
["source"] = "Sandskim Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 185511,
},
[53044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Spiritualist",
["npcID"] = 28410,
},
[432448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[116831] = {
["source"] = "Konk",
["event"] = "SPELL_CAST_START",
["npcID"] = 55509,
},
[387398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Brute",
["npcID"] = 185589,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[385351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Arcanogolem",
["npcID"] = 201554,
},
[138427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurubashi Berserker",
["npcID"] = 69905,
},
[193717] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[340304] = {
["source"] = "Mistveil Gorgegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 173720,
},
[395594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zurgaz Corebreaker",
["npcID"] = 193680,
},
[340305] = {
["source"] = "Mistveil Gorgegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 173720,
},
[120416] = {
["source"] = "Agitated Seedstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61302,
},
[377166] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[428360] = {
["source"] = "Firelands Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210293,
},
[15503] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Eramas Brightblaze",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24554,
},
[409931] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[444743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mage",
["npcID"] = 221760,
},
[31516] = {
["source"] = "Horde Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 214154,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[291163] = {
["source"] = "Tiki Mask",
["event"] = "SPELL_CAST_START",
["npcID"] = 149975,
},
[120929] = {
["source"] = "Abomination of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 61707,
},
[147646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[463176] = {
["source"] = "Voracious Stagshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 222145,
},
[387410] = {
["source"] = "Boss",
["event"] = "SPELL_CAST_START",
["npcID"] = 194404,
},
[34360] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[34616] = {
["source"] = "Nethervine Inciter",
["event"] = "SPELL_CAST_START",
["npcID"] = 19511,
},
[385363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maneet",
["npcID"] = 188704,
},
[387411] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[403794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[138433] = {
["source"] = "Skumblade Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 69338,
},
[368983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veteran Cauterizer",
["npcID"] = 200593,
},
[123490] = {
["source"] = "Enslaved Bonesmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63030,
},
[407891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[368984] = {
["source"] = "Dragonbane Firebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186605,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[147649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stalker",
["npcID"] = 72805,
},
[463182] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[317792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
},
[40248] = {
["source"] = "Shattered Hand Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 17670,
},
[147650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mischievous Ferret",
["npcID"] = 143361,
},
[414038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquifon",
["npcID"] = 203468,
},
[124515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Needlebeak",
["npcID"] = 63796,
},
[373084] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[138436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Seadragon",
["npcID"] = 69226,
},
[270697] = {
["source"] = "Cutwater Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 129029,
},
[428374] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[368990] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[405850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drazos Blackwing",
["npcID"] = 205623,
},
[138437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Seadragon",
["npcID"] = 69226,
},
[147652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stalker",
["npcID"] = 72805,
},
[411994] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Chronoweaver",
["npcID"] = 205384,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[448854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Drunkard",
["npcID"] = 218655,
},
[321894] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[446807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222787,
},
[147653] = {
["source"] = "Tsavo'ka",
["event"] = "SPELL_CAST_START",
["npcID"] = 72808,
},
[381280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uktulut Trainee",
["npcID"] = 193204,
},
[438618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Crawler",
["npcID"] = 214840,
},
[407902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[393569] = {
["isChanneled"] = true,
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198214,
},
[448859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Drunkard",
["npcID"] = 218655,
},
[387427] = {
["source"] = "Conjured Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200285,
},
[393571] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Concentrated Storm",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 198370,
},
[438622] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Engorged Crawler",
["npcID"] = 214840,
},
[139465] = {
["source"] = "Risen Ancestor",
["event"] = "SPELL_CAST_START",
["npcID"] = 69237,
},
[200898] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 96015,
},
[389478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Spirit-Caller",
["npcID"] = 195267,
},
[385383] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[307569] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[448864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[295283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marksman Rakatu",
["npcID"] = 144563,
},
[315762] = {
["encounterName"] = "Vexiona",
["source"] = "Shadow of Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 162308,
},
[142539] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["npcID"] = 71397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[385386] = {
["source"] = "Menial Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 203946,
},
[139468] = {
["event"] = "SPELL_CAST_START",
["source"] = "No'ku Stormsayer",
["npcID"] = 70276,
},
[200901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solsten",
["npcID"] = 97219,
},
[53049] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Runeshaper",
["npcID"] = 28836,
},
[358769] = {
["source"] = "Consumed Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 180782,
},
[385390] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[405868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invoq",
["npcID"] = 203627,
},
[412012] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Timeslicer",
["npcID"] = 205408,
},
[389487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veteran Cauterizer",
["npcID"] = 200593,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[295291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marksman Rakatu",
["npcID"] = 144563,
},
[387440] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[389488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veteran Cauterizer",
["npcID"] = 200593,
},
[393584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gladehorn Armoredon",
["npcID"] = 196555,
},
[49722] = {
["source"] = "Enslaved Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 24083,
},
[250050] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[140496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Haruspex",
["npcID"] = 69297,
},
[315772] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[307582] = {
["encounterName"] = "The Hivemind",
["source"] = "Aqir Drone",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157255,
},
[448877] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[393588] = {
["isChanneled"] = true,
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198214,
},
[428400] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[428401] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[260291] = {
["source"] = "Zandalari Exile",
["event"] = "SPELL_CAST_START",
["npcID"] = 135311,
},
[55098] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["npcID"] = 29305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1980,
},
[379256] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["npcID"] = 192955,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2585,
},
[215241] = {
["source"] = "Duskwatch Executor",
["event"] = "SPELL_CAST_START",
["npcID"] = 111620,
},
[395639] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[389496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[450929] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[395640] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[389497] = {
["source"] = "Sand Devil",
["event"] = "SPELL_CAST_START",
["npcID"] = 227795,
},
[409975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[153810] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[395642] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[52027] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[387452] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Revenant",
["npcID"] = 200720,
},
[114285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hateful Ko Ko",
["npcID"] = 59430,
},
[295304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marksman Rakatu",
["npcID"] = 144563,
},
[387453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[326021] = {
["source"] = "Spinemaw Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 172312,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[147669] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Grunt",
["npcID"] = 72941,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[63802] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[175314] = {
["source"] = "Corselle",
["event"] = "SPELL_CAST_START",
["npcID"] = 81994,
},
[360835] = {
["source"] = "Engorged Annelid",
["event"] = "SPELL_CAST_START",
["npcID"] = 180722,
},
[313737] = {
["source"] = "Abyssal Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161173,
},
[405886] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dragonfire Golem",
["npcID"] = 203230,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[395648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sogglmoggl",
["npcID"] = 188859,
},
[399744] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[395650] = {
["source"] = "Conjured Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 199014,
},
[446844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parasitic Worm",
["npcID"] = 222786,
},
[399746] = {
["source"] = "Warp Crystal",
["event"] = "SPELL_CAST_START",
["npcID"] = 201082,
},
[200913] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[450941] = {
["source"] = "Cinderbee Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 222820,
},
[107120] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Commander Ri'mok",
["npcID"] = 56636,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1406,
},
[457085] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[152792] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[405893] = {
["source"] = "Tidesmith Zarviss",
["event"] = "SPELL_CAST_START",
["npcID"] = 200730,
},
[14033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felhound Manastalker",
["npcID"] = 17401,
},
[144602] = {
["source"] = "Moonfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 71992,
},
[438658] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[147674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Oathguard",
["npcID"] = 72892,
},
[387465] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Revenant",
["npcID"] = 200720,
},
[360845] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["npcID"] = 181551,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[385419] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[424328] = {
["source"] = "Boss Whiskerlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 220385,
},
[295320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marksman Rakatu",
["npcID"] = 144563,
},
[134366] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[418187] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[393615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Amaa",
["npcID"] = 188715,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[295324] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marksman Rakatu",
["npcID"] = 144563,
},
[403855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[352663] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[405905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amniotic Ooze",
["npcID"] = 203072,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[144608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Niuzao",
["npcID"] = 71954,
},
[114291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hopper",
["npcID"] = 59464,
},
[360856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Sentinel",
["npcID"] = 185314,
},
[124018] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62980,
},
[448910] = {
["source"] = "Darklost Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 216260,
},
[326046] = {
["source"] = "Spinemaw Staghorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 167111,
},
[369049] = {
["encounterName"] = "Emberon",
["source"] = "Vault Keeper",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 186107,
},
[395670] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[448912] = {
["source"] = "Shadowguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 216263,
},
[369050] = {
["source"] = "Primalist Stormsage",
["event"] = "SPELL_CAST_START",
["npcID"] = 193750,
},
[152801] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[383385] = {
["source"] = "Filth Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185656,
},
[147682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Oathguard",
["npcID"] = 72892,
},
[463248] = {
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[144611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Niuzao",
["npcID"] = 71954,
},
[444820] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[438677] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[418200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[395675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embar Firepath",
["npcID"] = 187767,
},
[405914] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[369055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Crustshaper",
["npcID"] = 186110,
},
[319910] = {
["source"] = "Ravenous Etherwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 158771,
},
[63038] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Guardian of Yogg-Saron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33136,
},
[397726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Whelp",
["npcID"] = 188100,
},
[375201] = {
["source"] = "Bright Gustfeather",
["event"] = "SPELL_CAST_START",
["npcID"] = 195002,
},
[81530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[412062] = {
["source"] = "Lead Researcher Sytorian",
["event"] = "SPELL_CAST_START",
["npcID"] = 203067,
},
[463256] = {
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[412063] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Epoch Ripper",
["npcID"] = 205435,
},
[393634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rakkesh of the Flow",
["npcID"] = 193849,
},
[119414] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60999,
},
[88186] = {
["source"] = "Empyrean Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 45922,
},
[144616] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Siege Engineer",
["npcID"] = 71984,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1623,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[140521] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spirit-Bound Sentry",
["npcID"] = 69335,
},
[455069] = {
["source"] = "Arax'ne",
["event"] = "SPELL_CAST_START",
["npcID"] = 217465,
},
[410019] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2693,
},
[405924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krono Sandtongue",
["npcID"] = 205622,
},
[55104] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["encounterID"] = 1980,
["event"] = "SPELL_CAST_START",
["npcID"] = 29305,
},
[147689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Oathguard",
["npcID"] = 72892,
},
[14034] = {
["source"] = "Hellfire Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 19016,
},
[360875] = {
["source"] = "Engorged Annelid",
["event"] = "SPELL_CAST_START",
["npcID"] = 180722,
},
[321968] = {
["source"] = "Tirnenn Villager",
["event"] = "SPELL_CAST_START",
["npcID"] = 164929,
},
[81020] = {
["source"] = "Blackscale Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 45984,
},
[3589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Banshee",
["npcID"] = 10463,
},
[3605] = {
["source"] = "Goblin Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 622,
},
[134380] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[338353] = {
["source"] = "Corpse Collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 173016,
},
[405929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Crecheguard",
["npcID"] = 203368,
},
[399786] = {
["isChanneled"] = true,
["source"] = "Volcanic Deepstrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201117,
},
[459171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unknown",
["npcID"] = 227940,
},
[381357] = {
["source"] = "Saltwhisker Ottuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 199784,
},
[407978] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Ahnzon",
["npcID"] = 201792,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[196838] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 99868,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[315830] = {
["source"] = "Anubisath Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 161571,
},
[369072] = {
["source"] = "Magmaclaw Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203934,
},
[369073] = {
["source"] = "Plainswalker Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 187937,
},
[395694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shocktrooper",
["npcID"] = 199037,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[32674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Reanimated Crusader",
["npcID"] = 226096,
},
[198888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 97068,
},
[152814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[138480] = {
["encounterName"] = "Dark Animus",
["source"] = "Large Anima Golem",
["npcID"] = 69700,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[118906] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reclaimer Zuan",
["npcID"] = 61305,
},
[142576] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["npcID"] = 71155,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[412081] = {
["source"] = "Colossal Draconic Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 203826,
},
[137457] = {
["source"] = "Oondasta",
["event"] = "SPELL_CAST_START",
["npcID"] = 69161,
},
[138481] = {
["source"] = "Skumblade Saur-Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 69229,
},
[377270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Waterweaver",
["npcID"] = 214434,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[340412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Research",
["npcID"] = 202446,
},
[140530] = {
["isChanneled"] = true,
["source"] = "Zandalari Haruspex",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69297,
},
[448944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[389560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Tyrant",
["npcID"] = 202483,
},
[309698] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158367,
},
[198892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 97068,
},
[49987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defendo-tank 66D",
["npcID"] = 25758,
},
[152818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[432565] = {
["source"] = "Manifested Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[128123] = {
["source"] = "Shan'ze Electrocutioner",
["event"] = "SPELL_CAST_START",
["npcID"] = 69216,
},
[191726] = {
["source"] = "Greater Lightning Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[377277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volethi",
["npcID"] = 200727,
},
[121468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raigonn",
["npcID"] = 61177,
},
[430519] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Doomshadow",
["npcID"] = 208029,
},
[428472] = {
["isChanneled"] = true,
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210295,
},
[124028] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[145653] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Gloom",
["npcID"] = 71477,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[79490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckdweller",
["npcID"] = 43532,
},
[459191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[412093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Titan Watcher",
["npcID"] = 203834,
},
[448953] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1051,
},
[147702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[144631] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[147703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[375237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[88194] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[80515] = {
["isChanneled"] = true,
["source"] = "Skumblade Fleshripper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69210,
},
[389572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Umbraclaw",
["npcID"] = 211401,
},
[146680] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blackfuse Sellsword",
["npcID"] = 72986,
},
[147704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[124030] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[138490] = {
["source"] = "Skumblade Saur-Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 69229,
},
[191732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[451008] = {
["source"] = "Cinderbee Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 222820,
},
[387528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborne Charger",
["npcID"] = 201471,
},
[145658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomlord",
["npcID"] = 72564,
},
[383433] = {
["isChanneled"] = true,
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194147,
},
[140539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcanital Ra'kul",
["npcID"] = 69300,
},
[136444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loa-Infused Bloodhorn",
["npcID"] = 69193,
},
[328146] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 164702,
},
[174328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
},
[405962] = {
["source"] = "Bronogg the Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 203386,
},
[401867] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[140541] = {
["source"] = "Mana-Engorged Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 107778,
},
[191735] = {
["source"] = "Felsworn Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 98954,
},
[279003] = {
["source"] = "Champion of the Horde",
["event"] = "SPELL_CAST_START",
["npcID"] = 158990,
},
[46406] = {
["source"] = "Ahunite Coldwave",
["event"] = "SPELL_CAST_START",
["npcID"] = 25756,
},
[7978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Grenadier",
["npcID"] = 141712,
},
[389583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Wyrmling",
["npcID"] = 205300,
},
[375249] = {
["source"] = "Whitecrested Waddler",
["event"] = "SPELL_CAST_START",
["npcID"] = 196240,
},
[375250] = {
["source"] = "Luttrok",
["event"] = "SPELL_CAST_START",
["npcID"] = 200742,
},
[369107] = {
["source"] = "Ancient Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200286,
},
[197880] = {
["source"] = "Bonespeaker Runeaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 93066,
},
[198904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotheart Dryad",
["npcID"] = 99358,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[391634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[118914] = {
["source"] = "Shado-Pan Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61252,
},
[369110] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[146688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Cannoneer",
["npcID"] = 72365,
},
[53318] = {
["source"] = "Anub'ar Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 28922,
},
[107140] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[37704] = {
["source"] = "Wyrmcult Hewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 21810,
},
[420306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebound Sentinel",
["npcID"] = 206900,
},
[255220] = {
["source"] = "Blood Marquis",
["event"] = "SPELL_CAST_START",
["npcID"] = 140602,
},
[412117] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[397783] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[41032] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[10452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thaurissan Firewalker",
["npcID"] = 7037,
},
[451026] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[383452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowscruff Bakar",
["npcID"] = 193401,
},
[80009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murdunk",
["npcID"] = 43327,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["npcID"] = 201790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[201983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113537,
},
[274926] = {
["source"] = "John J. Keeshan",
["event"] = "SPELL_CAST_START",
["npcID"] = 140288,
},
[285165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nethercaster Vandryn",
["npcID"] = 144579,
},
[467415] = {
["encounterName"] = "General Angerforge",
["source"] = "General Angerforge",
["npcID"] = 226316,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3045,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[438749] = {
["encounterName"] = "The Silken Court",
["source"] = "Shattershell Scarab",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218884,
},
[352744] = {
["encounterName"] = "The Nine",
["source"] = "Skyja",
["encounterID"] = 2429,
["event"] = "SPELL_CAST_START",
["npcID"] = 175726,
},
[412129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[367079] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[164102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Laborer",
["npcID"] = 81235,
},
[46153] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["npcID"] = 24723,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1897,
},
[369129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Modak Flamespit",
["npcID"] = 186509,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[111752] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[120455] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[424420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
},
[403943] = {
["source"] = "Veltrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 200904,
},
[424421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
},
[420326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebound Sentinel",
["npcID"] = 206900,
},
[397801] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[147723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Fire-Watcher",
["npcID"] = 72894,
},
[412136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[424423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sergeant Shaynemail",
["npcID"] = 211291,
},
[451044] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[387564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Lasher",
["npcID"] = 196102,
},
[162058] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["npcID"] = 80005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1736,
},
[385517] = {
["source"] = "Rotbow Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 187021,
},
[395756] = {
["source"] = "Dragonbane Cauldron Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186606,
},
[136462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Squallshaper",
["npcID"] = 69202,
},
[247041] = {
["source"] = "Seereel, the Spring",
["event"] = "SPELL_CAST_START",
["npcID"] = 193710,
},
[360949] = {
["source"] = "Fettered Gunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 182430,
},
[420334] = {
["source"] = "Keeper Adranas",
["event"] = "SPELL_CAST_START",
["npcID"] = 209931,
},
[319995] = {
["source"] = "Ravenous Etherwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 158771,
},
[428526] = {
["encounterName"] = "Ozumat",
["source"] = "Splotch",
["npcID"] = 213806,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[120458] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[80015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackmane Tracker",
["npcID"] = 60434,
},
[395763] = {
["source"] = "Dragonbane Cauldron Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186606,
},
[121994] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[53322] = {
["source"] = "Anub'ar Crypt Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 29118,
},
[305663] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[381430] = {
["source"] = "Sedentary Sediment",
["event"] = "SPELL_CAST_START",
["npcID"] = 194284,
},
[377335] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[393718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Amaa",
["npcID"] = 188715,
},
[428530] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[137491] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Suen",
["npcID"] = 68904,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1560,
},
[377338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqualing",
["npcID"] = 190406,
},
[116364] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60009,
},
[326146] = {
["source"] = "Excruciating Memory",
["event"] = "SPELL_CAST_START",
["npcID"] = 158630,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[377341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[162066] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["npcID"] = 80005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1736,
},
[381438] = {
["source"] = "Angered Steam",
["event"] = "SPELL_CAST_START",
["npcID"] = 190694,
},
[37965] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[453110] = {
["source"] = "The Puppetmaster?",
["event"] = "SPELL_CAST_START",
["npcID"] = 220507,
},
[455158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmother",
["npcID"] = 220286,
},
[375296] = {
["source"] = "Spellsworn Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203389,
},
[377344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Eagle",
["npcID"] = 192329,
},
[420347] = {
["source"] = "Kaldorei Archdruid",
["event"] = "SPELL_CAST_START",
["npcID"] = 211066,
},
[257288] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Cleaver",
["npcID"] = 129879,
},
[385536] = {
["isChanneled"] = true,
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[387585] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[125069] = {
["source"] = "Amber-Ridden Mushan",
["event"] = "SPELL_CAST_START",
["npcID"] = 63568,
},
[369157] = {
["source"] = "Primal Tarasek",
["event"] = "SPELL_CAST_START",
["npcID"] = 188372,
},
[428542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[381444] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["npcID"] = 204918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[369158] = {
["source"] = "Amalgam",
["event"] = "SPELL_CAST_START",
["npcID"] = 185841,
},
[444925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drifting Sporebloom",
["npcID"] = 214961,
},
[61515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[196883] = {
["source"] = "Lord Etheldrin Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98521,
},
[383496] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[395784] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[34639] = {
["source"] = "Sunseeker Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 19509,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[15253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Fiend",
["npcID"] = 18429,
},
[379406] = {
["source"] = "Qalashi Lavabearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 189472,
},
[198934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[37967] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[136478] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[315927] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[449031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[264734] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[391696] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["encounterID"] = 2605,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190690,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194990,
},
[453129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Bomber",
["npcID"] = 224970,
},
[216342] = {
["source"] = "Koralune Ettin",
["event"] = "SPELL_CAST_START",
["npcID"] = 99791,
},
[467464] = {
["encounterName"] = "General Angerforge",
["source"] = "Shadowforge Flame Keeper",
["encounterID"] = 3045,
["event"] = "SPELL_CAST_START",
["npcID"] = 231554,
},
[338456] = {
["source"] = "Kyrian Stitchwerk",
["event"] = "SPELL_CAST_START",
["npcID"] = 172981,
},
[17194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Mender",
["npcID"] = 19633,
},
[408080] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[315932] = {
["source"] = "Iron-Willed Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 162718,
},
[36176] = {
["source"] = "Anchorite Caalen",
["event"] = "SPELL_CAST_START",
["npcID"] = 22862,
},
[137505] = {
["source"] = "Oondasta",
["event"] = "SPELL_CAST_START",
["npcID"] = 69161,
},
[222487] = {
["source"] = "Felsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 111929,
},
[142625] = {
["source"] = "Wily Woodling",
["event"] = "SPELL_CAST_START",
["npcID"] = 61155,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[395797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Frostsculptor",
["npcID"] = 198424,
},
[358938] = {
["source"] = "Frostbound Devoted",
["event"] = "SPELL_CAST_START",
["npcID"] = 180840,
},
[393750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taresh",
["npcID"] = 188711,
},
[444944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bounty Swiftlet",
["npcID"] = 221897,
},
[438801] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[387608] = {
["isChanneled"] = true,
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195842,
},
[444946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Saurolisk Ambusher",
["npcID"] = 224725,
},
[10966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Laughing Skull Legionnaire",
["npcID"] = 17626,
},
[225562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Burster",
["npcID"] = 100532,
},
[453140] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[30633] = {
["encounterName"] = "Warbringer O'mrogg",
["source"] = "Warbringer O'mrogg",
["encounterID"] = 1937,
["event"] = "SPELL_CAST_START",
["npcID"] = 16809,
},
[106646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flying Snow",
["npcID"] = 56473,
},
[387613] = {
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 195842,
},
[381470] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[375327] = {
["npcID"] = 190404,
},
[387614] = {
["source"] = "Ukhel Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195851,
},
[471573] = {
["source"] = "Houndmaster Grebmar",
["event"] = "SPELL_CAST_START",
["npcID"] = 232258,
},
[285228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nethercaster Vandryn",
["npcID"] = 144579,
},
[444953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xur'khun the Defiled",
["npcID"] = 221845,
},
[145702] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["npcID"] = 71385,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208459,
},
[198944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Shieldmaiden",
["npcID"] = 95832,
},
[375331] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[451098] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Sureki Militant",
["npcID"] = 213932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[387618] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primalist Infuser",
["npcID"] = 196043,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[315947] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[34642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Gene-Splicer",
["npcID"] = 19507,
},
[451099] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Sureki Militant",
["npcID"] = 213932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[444956] = {
["isChanneled"] = true,
["source"] = "Xur'khun the Defiled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[285232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nethercaster Vandryn",
["npcID"] = 144579,
},
[395811] = {
["source"] = "Qalashi Rampager",
["event"] = "SPELL_CAST_START",
["npcID"] = 186727,
},
[146728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72367,
},
[54096] = {
["encounterName"] = "Grand Widow Faerlina",
["source"] = "Naxxramas Worshipper",
["npcID"] = 16506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1110,
},
[385574] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[264757] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[227615] = {
["encounterName"] = "Shade of Medivh",
["source"] = "Shade of Medivh",
["npcID"] = 114350,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1965,
},
[432673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Looter",
["npcID"] = 216303,
},
[377384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[442913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[442914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[395816] = {
["source"] = "Dragonbane Shieldcracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186609,
},
[159017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zipteq",
["npcID"] = 78734,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[395817] = {
["isChanneled"] = true,
["source"] = "Primalist Frostsculptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198424,
},
[275000] = {
["source"] = "Katherine Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 140396,
},
[369197] = {
["source"] = "Dragonbane Firebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186605,
},
[412200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[455203] = {
["event"] = "SPELL_CAST_START",
["source"] = "XT-Minecrusher 8700",
["npcID"] = 216034,
},
[391723] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[377389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[395819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187908,
},
[15254] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Beacon",
["npcID"] = 18431,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[393772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hihveer",
["npcID"] = 188717,
},
[387629] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[438823] = {
["source"] = "Diabolic Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 219161,
},
[208165] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[442919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[391726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[55633] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Golem",
["npcID"] = 29832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[422443] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[358963] = {
["source"] = "High Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 180864,
},
[438826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atik",
["npcID"] = 217533,
},
[451113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[222501] = {
["source"] = "7th Legion Sailor",
["event"] = "SPELL_CAST_START",
["npcID"] = 135858,
},
[159021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[426541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[375348] = {
["npcID"] = 190401,
},
[436781] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarab Captain Vul'akan",
["npcID"] = 218306,
},
[258338] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["npcID"] = 126847,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[144688] = {
["source"] = "Ordos",
["event"] = "SPELL_CAST_START",
["npcID"] = 72057,
},
[145712] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["npcID"] = 71385,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[393780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[257315] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Irontide Grenadier",
["npcID"] = 129758,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[393781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[389686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[449071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[451119] = {
["source"] = "Ascendant Vis'coxria",
["event"] = "SPELL_CAST_START",
["npcID"] = 211261,
},
[397878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Living Water",
["npcID"] = 59873,
},
[449072] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[393783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[153905] = {
["source"] = "Whirling Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 77605,
},
[377402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[420405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[434740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Inquisitor",
["npcID"] = 217518,
},
[412215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[397881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Living Water",
["npcID"] = 59873,
},
[457266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenhorn Extra",
["npcID"] = 228307,
},
[118940] = {
["encounterName"] = "Gekkan",
["source"] = "Glintrok Oracle",
["encounterID"] = 2129,
["event"] = "SPELL_CAST_START",
["npcID"] = 61339,
},
[395834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 197121,
},
[393787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[334404] = {
["encounterName"] = "Huntsman Altimor",
["source"] = "Huntsman Altimor",
["npcID"] = 165066,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2418,
},
[46164] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24664,
},
[55635] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Golem",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29832,
},
[397886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Droplet",
["npcID"] = 62358,
},
[257320] = {
["source"] = "Blood Prince Dreven",
["event"] = "SPELL_CAST_START",
["npcID"] = 140603,
},
[451128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparking Haulbot",
["npcID"] = 219497,
},
[444985] = {
["source"] = "Territorial Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 226291,
},
[358980] = {
["source"] = "High Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 180864,
},
[279118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[115358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Needle Sprite",
["npcID"] = 55593,
},
[397888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[395841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 197120,
},
[397889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[358982] = {
["source"] = "Twisted Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 180865,
},
[270929] = {
["source"] = "Zandalari Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 148016,
},
[140600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Burrower",
["npcID"] = 70589,
},
[111775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lilian Voss",
["npcID"] = 58722,
},
[358983] = {
["source"] = "Twisted Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 180865,
},
[262739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Hulk",
["npcID"] = 148913,
},
[387652] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[412226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sluggish Slug",
["npcID"] = 205754,
},
[397892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imacu'tya",
["npcID"] = 104275,
},
[142649] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hungry Kunchong",
["npcID"] = 71420,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1593,
},
[136506] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Spirit-Twister",
["npcID"] = 69195,
},
[420419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[196916] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[387657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborne Charger",
["npcID"] = 201471,
},
[440899] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[397897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jazshariu",
["npcID"] = 104273,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[326227] = {
["source"] = "Excruciating Memory",
["event"] = "SPELL_CAST_START",
["npcID"] = 158630,
},
[377421] = {
["source"] = "Amberfur Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187455,
},
[412233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[393804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirglgurgl",
["npcID"] = 188860,
},
[346706] = {
["encounterName"] = "The Council of Blood",
["source"] = "Lord Stavros",
["npcID"] = 166970,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2412,
},
[373327] = {
["encounterName"] = "Eranog",
["source"] = "Primal Flame",
["npcID"] = 187593,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[159035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shaadum",
["npcID"] = 78728,
},
[381519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathion",
["npcID"] = 201412,
},
[350803] = {
["encounterName"] = "The Eye of the Jailer",
["source"] = "Eye of the Jailer",
["encounterID"] = 2433,
["event"] = "SPELL_CAST_START",
["npcID"] = 175725,
},
[7948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alzzin the Wildshaper",
["npcID"] = 11492,
},
[373329] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[56405] = {
["encounterName"] = "Gothik the Harvester",
["source"] = "Gothik the Harvester",
["npcID"] = 16060,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1109,
},
[395855] = {
["source"] = "Ruffian Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 193819,
},
[381521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Encroaching Downpour",
["npcID"] = 191324,
},
[279134] = {
["source"] = "John J. Keeshan",
["event"] = "SPELL_CAST_START",
["npcID"] = 140578,
},
[41303] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Suffering",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23418,
},
[397904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[33624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undercity Mage",
["npcID"] = 18971,
},
[279135] = {
["source"] = "John J. Keeshan",
["event"] = "SPELL_CAST_START",
["npcID"] = 140288,
},
[395857] = {
["source"] = "Oppressive Artificer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184444,
},
[438860] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[126625] = {
["source"] = "Spirit of Violence",
["event"] = "SPELL_CAST_START",
["npcID"] = 64656,
},
[307805] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[395859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[397907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baalgar the Watchful",
["npcID"] = 104274,
},
[426576] = {
["source"] = "Dream Seedling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211339,
},
[395860] = {
["source"] = "Ruffian Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 193819,
},
[440912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Festering Sporemass",
["npcID"] = 217963,
},
[369241] = {
["source"] = "Zaqali Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 204087,
},
[453199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vanishing Nightmare",
["npcID"] = 224922,
},
[307809] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[375385] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[40536] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Akama",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 23089,
},
[81576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[361052] = {
["source"] = "Engorged Annelid",
["event"] = "SPELL_CAST_START",
["npcID"] = 180722,
},
[377435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Geomancer",
["npcID"] = 187265,
},
[412247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitator Zoralek",
["npcID"] = 199305,
},
[117924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orbiss",
["npcID"] = 60857,
},
[375388] = {
["source"] = "Primalist Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190840,
},
[59734] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[397914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Depraved Mistweaver",
["npcID"] = 200137,
},
[253239] = {
["source"] = "Dazar'ai Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 122971,
},
[279146] = {
["source"] = "Arlethal Sunwatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 140567,
},
[134470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bow Fly Swarm",
["npcID"] = 68222,
},
[31405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[381535] = {
["source"] = "Earthen Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186849,
},
[146757] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72958,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[445016] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[158020] = {
["source"] = "Avatar of Sacrifice",
["event"] = "SPELL_CAST_START",
["npcID"] = 151957,
},
[451160] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[395871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonemender",
["npcID"] = 187600,
},
[381537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Ice Borer",
["npcID"] = 186392,
},
[12248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[434779] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[395872] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[222526] = {
["source"] = "Debilitating Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 111756,
},
[438877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nakt",
["npcID"] = 218324,
},
[459355] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[136521] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["npcID"] = 69078,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[277106] = {
["source"] = "Professor Gastrinax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203521,
},
[414307] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[395878] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[350828] = {
["encounterName"] = "The Eye of the Jailer",
["source"] = "Eye of the Jailer",
["encounterID"] = 2433,
["event"] = "SPELL_CAST_START",
["npcID"] = 175725,
},
[434786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trilling Attendant",
["npcID"] = 216293,
},
[371306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[426596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Diviner",
["npcID"] = 131819,
},
[412262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[124071] = {
["isChanneled"] = true,
["source"] = "Osul Marauder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60692,
},
[142667] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hungry Kunchong",
["npcID"] = 71420,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[101546] = {
["isChanneled"] = true,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[146763] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["npcID"] = 72353,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[165193] = {
["source"] = "Stele",
["event"] = "SPELL_CAST_START",
["npcID"] = 72627,
},
[21807] = {
["source"] = "Wily Woodling",
["event"] = "SPELL_CAST_START",
["npcID"] = 61155,
},
[142668] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 71156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[397931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Doubt",
["npcID"] = 57109,
},
[261438] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[336499] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[124072] = {
["source"] = "Set'thik Gustwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 63592,
},
[37979] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[434793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Trilling Attendant",
["npcID"] = 216293,
},
[436841] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[391791] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[121513] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Big Gladiator Chief",
["npcID"] = 60170,
},
[261440] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[455273] = {
["source"] = "Bloodswell Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 220891,
},
[391793] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[373364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gerenth the Vile",
["npcID"] = 107435,
},
[126633] = {
["source"] = "Spirit of Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 64744,
},
[197961] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[455275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2677,
},
[81071] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blackrock Summoner",
["npcID"] = 43363,
},
[399987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[114859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[255299] = {
["source"] = "Mighty Guardian Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 146760,
},
[316030] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Shad'har the Insatiable",
["encounterID"] = 2335,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157231,
},
[318078] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Living Miasma",
["encounterID"] = 2335,
["event"] = "SPELL_CAST_START",
["npcID"] = 157229,
},
[412275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
[316031] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Shad'har the Insatiable",
["encounterID"] = 2335,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157231,
},
[391798] = {
["source"] = "Rebel Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195062,
},
[102573] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[140626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Growth",
["npcID"] = 70153,
},
[391799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 197131,
},
[434802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[463471] = {
["encounterName"] = "Lord Incendius",
["source"] = "Flame Geyser",
["encounterID"] = 3043,
["event"] = "SPELL_CAST_START",
["npcID"] = 230079,
},
[434803] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2902,
},
[463472] = {
["encounterName"] = "Lord Incendius",
["source"] = "Flame Geyser",
["encounterID"] = 3043,
["event"] = "SPELL_CAST_START",
["npcID"] = 230079,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[375420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Chomper",
["npcID"] = 190886,
},
[140628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[291463] = {
["source"] = "Grigori the Unrepentant",
["event"] = "SPELL_CAST_START",
["npcID"] = 144569,
},
[125480] = {
["source"] = "Amber Searsting",
["event"] = "SPELL_CAST_START",
["npcID"] = 63569,
},
[442997] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215597,
},
[395899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Chillblaster",
["npcID"] = 199124,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[309894] = {
["source"] = "High Executor Yothrim",
["event"] = "SPELL_CAST_START",
["npcID"] = 158597,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[140629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[414330] = {
["encounterName"] = "Iridikron",
["source"] = "Chromie",
["npcID"] = 204449,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2669,
},
[53047] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 28837,
},
[403772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[412283] = {
["source"] = "Alcanon",
["event"] = "SPELL_CAST_START",
["npcID"] = 203515,
},
[365185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Sentinel",
["npcID"] = 184659,
},
[146773] = {
["encounterName"] = "Galakras",
["source"] = "Master Cannoneer Dagryn",
["npcID"] = 72356,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[410236] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2672,
},
[412284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
[119981] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[183633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockbound Pelter",
["npcID"] = 91008,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[420476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[53467] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[52780] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1984,
},
[41053] = {
["source"] = "Shadowmoon Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 22880,
},
[47696] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[381570] = {
["source"] = "Earthen Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186849,
},
[326281] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[443003] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[50198] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Mage Hunter Initiate",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26728,
},
[260425] = {
["source"] = "Muddy Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 130757,
},
[52778] = {
["encounterName"] = "General Bjarngrim",
["source"] = "Stormforged Tactician",
["npcID"] = 28581,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[79868] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[445052] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[55636] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Golem",
["npcID"] = 29832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[408193] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[12491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Medicine Man",
["npcID"] = 29826,
},
[145752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spike Mine",
["npcID"] = 72656,
},
[285230] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Talah Blightspewer",
["npcID"] = 150735,
},
[59397] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Vrykul Skeleton",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23970,
},
[395908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Icebulk",
["npcID"] = 192767,
},
[437700] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[334476] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[295282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marksman Rakatu",
["npcID"] = 144563,
},
[469628] = {
["encounterName"] = "The Seven",
["source"] = "Dope'rel",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226309,
},
[12737] = {
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 26727,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[37132] = {
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 26722,
},
[428674] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[463486] = {
["encounterName"] = "Lord Incendius",
["source"] = "Lord Incendius",
["npcID"] = 226304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3043,
},
[402887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[55625] = {
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 29820,
},
[284223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Downwind Dori",
["npcID"] = 150755,
},
[340622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rat of Unusual Size",
["npcID"] = 173798,
},
[284354] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Marksman Rakatu",
["npcID"] = 144563,
},
[114864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[42772] = {
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[340623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rat of Unusual Size",
["npcID"] = 173798,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[58460] = {
["source"] = "Anvilrage Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 232893,
},
[350453] = {
["source"] = "Deathseeker Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 179894,
},
[58972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Fire Weaver",
["npcID"] = 29822,
},
[128962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Runekeeper",
["npcID"] = 65598,
},
[60211] = {
["source"] = "Dragonflayer Forge Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 24079,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["npcID"] = 29573,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[381580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Brawler",
["npcID"] = 202248,
},
[69128] = {
["isChanneled"] = true,
["source"] = "Soulguard Animator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36516,
},
[410249] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[69058] = {
["source"] = "Soulguard Reaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 36499,
},
[413123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[457348] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[377486] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 100485,
},
[381582] = {
["source"] = "Spellsworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 200284,
},
[391821] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[434824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[210261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Sentry",
["npcID"] = 104251,
},
[373392] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[31664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Gargoyle",
["npcID"] = 27691,
},
[377488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[157020] = {
["source"] = "Blinding Solar Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 79462,
},
[274792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Released Crawg",
["npcID"] = 140149,
},
[284703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caz'lek the Sleetbringer",
["npcID"] = 150747,
},
[456125] = {
["source"] = "Shadowsting Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 222645,
},
[455281] = {
["source"] = "Grimslice",
["event"] = "SPELL_CAST_START",
["npcID"] = 221551,
},
[381585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[146782] = {
["encounterName"] = "Galakras",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72302,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[387729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goopal",
["npcID"] = 203477,
},
[373395] = {
["encounterName"] = "Balakar Khan",
["source"] = "Batak",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[391825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Watercaller",
["npcID"] = 190995,
},
[312782] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[453258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sikran",
["npcID"] = 214503,
},
[58973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God Hunter",
["npcID"] = 29820,
},
[432781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Radiating Voidstone",
["npcID"] = 212739,
},
[434829] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[165213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Cultivator",
["npcID"] = 81985,
},
[8858] = {
["source"] = "Dark Iron Excavator",
["event"] = "SPELL_CAST_START",
["npcID"] = 47276,
},
[284279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Buckshot Bazza",
["npcID"] = 144565,
},
[143712] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["npcID"] = 71697,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[387732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[44639] = {
["source"] = "Coilskar Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 24696,
},
[375446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunhide Stomphoof",
["npcID"] = 187960,
},
[393876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Isaqa",
["npcID"] = 209919,
},
[34359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Chemist",
["npcID"] = 19486,
},
[136953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Water-Binder",
["npcID"] = 69455,
},
[59359] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Venomancer",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29217,
},
[285148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nethercaster Vandryn",
["npcID"] = 144579,
},
[142222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster S'thoc",
["npcID"] = 71259,
},
[68793] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[118963] = {
["source"] = "Glintrok Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61240,
},
[147811] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Thrall",
["npcID"] = 73483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[381592] = {
["source"] = "Spellsworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 200284,
},
[290296] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sylareon Silverblade",
["npcID"] = 144541,
},
[424462] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[144396] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Rook Stonetoe",
["npcID"] = 71475,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[381593] = {
["source"] = "Ebonstone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 184300,
},
[122547] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[164192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Technician",
["npcID"] = 81236,
},
[420501] = {
["source"] = "Wildfire Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 209200,
},
[284217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Downwind Dori",
["npcID"] = 150755,
},
[391833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sherath",
["npcID"] = 188710,
},
[426645] = {
["source"] = "Naz'jar Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 212673,
},
[136548] = {
["encounterName"] = "Lei Shen",
["source"] = "Ball Lightning",
["npcID"] = 69232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[275112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blisterhide",
["npcID"] = 197353,
},
[55626] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Living Mojo",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29830,
},
[377500] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[116606] = {
["isChanneled"] = true,
["source"] = "Zandalari Skullcharger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60375,
},
[373405] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[55348] = {
["source"] = "Drakkari Battle Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 29836,
},
[445882] = {
["source"] = "Shadow-Mad Sow",
["event"] = "SPELL_CAST_START",
["npcID"] = 214930,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[365215] = {
["source"] = "Hadeon the Stonebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 178563,
},
[424600] = {
["source"] = "Fungal Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211063,
},
[377502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soggymaw Seabasher",
["npcID"] = 187320,
},
[415253] = {
["source"] = "Invasive Sporecap",
["event"] = "SPELL_CAST_START",
["npcID"] = 207482,
},
[223579] = {
["source"] = "Or'ell",
["event"] = "SPELL_CAST_START",
["npcID"] = 102495,
},
[391837] = {
["source"] = "Emerald Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207048,
},
[377503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[440205] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218034,
},
[448787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[265679] = {
["source"] = "Veiled Deathstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 146577,
},
[67037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prince Tortheldrin",
["npcID"] = 11486,
},
[395934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 197119,
},
[290411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giruma Bloodpelt",
["npcID"] = 144537,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191222,
},
[12058] = {
["source"] = "Iron Dwarf Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 29979,
},
[295311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marksman Rakatu",
["npcID"] = 144563,
},
[340646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carved Assistant",
["npcID"] = 173802,
},
[391840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taresh",
["npcID"] = 188711,
},
[15744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pimgib",
["npcID"] = 14349,
},
[395936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Hungry Riverbeast",
["npcID"] = 195969,
},
[124085] = {
["source"] = "Set'thik Zephyrian",
["event"] = "SPELL_CAST_START",
["npcID"] = 63593,
},
[375459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Rumbler",
["npcID"] = 192941,
},
[320170] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 162692,
},
[138187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightning Guardian",
["npcID"] = 69834,
},
[450597] = {
["encounterName"] = "Zekvir",
["source"] = "Egg Cocoon",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 234024,
},
[391842] = {
["source"] = "Rebel Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 195060,
},
[147815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 73483,
},
[154356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulpriest",
["npcID"] = 76595,
},
[290423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giruma Bloodpelt",
["npcID"] = 144537,
},
[17843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gold Priest",
["npcID"] = 32325,
},
[34361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Botanist",
["npcID"] = 18422,
},
[395939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Hungry Riverbeast",
["npcID"] = 195969,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[53334] = {
["isChanneled"] = true,
["source"] = "Anub'ar Necromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29064,
},
[431544] = {
["source"] = "Burrowing Stoneswarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216537,
},
[23601] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[123260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anduin Wrynn",
["npcID"] = 59608,
},
[441782] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[459421] = {
["source"] = "Sir Finley Mrrgglton",
["event"] = "SPELL_CAST_START",
["npcID"] = 228030,
},
[395941] = {
["source"] = "Hungry Hungry Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195969,
},
[76369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[377512] = {
["source"] = "Spiteful Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 186833,
},
[387711] = {
["isChanneled"] = true,
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192696,
},
[430754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Oracle",
["npcID"] = 214439,
},
[326319] = {
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 164921,
},
[360229] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["npcID"] = 181399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[338606] = {
["source"] = "Separation Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 167731,
},
[392635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaurdyth",
["npcID"] = 197835,
},
[450338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Hulk",
["npcID"] = 223118,
},
[114872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[36705] = {
["encounterName"] = "Warp Splinter",
["source"] = "Warp Splinter",
["npcID"] = 17977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1929,
},
[406183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krono Sandtongue",
["npcID"] = 205622,
},
[391849] = {
["source"] = "Flame Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 186736,
},
[446154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Gar",
["npcID"] = 219359,
},
[125623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moldo One-Eye",
["npcID"] = 50806,
},
[211299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watchful Inquisitor",
["npcID"] = 105715,
},
[85692] = {
["source"] = "Doomguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 11859,
},
[68799] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Frye",
["encounterID"] = 2879,
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[395946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 197129,
},
[362565] = {
["encounterName"] = "Kel'Thuzad",
["source"] = "Kel'Thuzad",
["encounterID"] = 2422,
["event"] = "SPELL_CAST_START",
["npcID"] = 175559,
},
[387352] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[426663] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Snap Dragon",
["npcID"] = 212681,
},
[395947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 197124,
},
[389804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[34799] = {
["encounterName"] = "Commander Sarannis",
["source"] = "Commander Sarannis",
["npcID"] = 17976,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1925,
},
[114873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[412330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malrogg",
["npcID"] = 202606,
},
[458161] = {
["source"] = "Lurker of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 220285,
},
[440999] = {
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[250208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tort Jaw",
["npcID"] = 139235,
},
[34659] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["npcID"] = 17978,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1928,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[404919] = {
["source"] = "Shukoro Rapidstamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 198917,
},
[106877] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1305,
},
[366823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelmortos",
["npcID"] = 185275,
},
[456112] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 226646,
},
[88959] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[450505] = {
["source"] = "Zekvir",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[41277] = {
["source"] = "Bonechewer Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 23196,
},
[362601] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["npcID"] = 182169,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2539,
},
[195944] = {
["source"] = "Skrog Wavecrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91796,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["encounterID"] = 2611,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192464,
},
[420525] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[447146] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[375475] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191222,
},
[418478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Claw",
["npcID"] = 210684,
},
[456171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[346690] = {
["encounterName"] = "The Council of Blood",
["source"] = "Castellan Niklaus",
["npcID"] = 166971,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2412,
},
[121762] = {
["source"] = "Sik'thik Builder",
["event"] = "SPELL_CAST_START",
["npcID"] = 62633,
},
[443052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Hopebreaker",
["npcID"] = 216019,
},
[340160] = {
["source"] = "Mistveil Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 173655,
},
[458692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Volcanic Fury",
["npcID"] = 225896,
},
[400050] = {
["source"] = "Territorial Deepflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219902,
},
[370104] = {
["source"] = "Qalashi Metalshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190767,
},
[436910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Woven Threadmancer",
["npcID"] = 218317,
},
[446474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxy Blob",
["npcID"] = 229818,
},
[138609] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["npcID"] = 69699,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[369335] = {
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 184107,
},
[371383] = {
["source"] = "Farscale Siren",
["event"] = "SPELL_CAST_START",
["npcID"] = 200483,
},
[366685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stellar Mote",
["npcID"] = 185271,
},
[400052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[449038] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[395957] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[452013] = {
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[449965] = {
["source"] = "Sludgeborn Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 220734,
},
[69562] = {
["source"] = "Soulguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 36620,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[39121] = {
["source"] = "Bloodwarder Greenkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18419,
},
[458228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sakret'na",
["npcID"] = 215841,
},
[250213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tort Jaw",
["npcID"] = 139235,
},
[461487] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[365168] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Sentinel",
["npcID"] = 183398,
},
[400055] = {
["source"] = "Scavenging Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200113,
},
[147826] = {
["source"] = "Huolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 73167,
},
[140659] = {
["source"] = "Zandalari Stoneshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 69223,
},
[360859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Halondrus",
["npcID"] = 181047,
},
[366559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 185155,
},
[362184] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[374215] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[117948] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Qiang the Merciless",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60709,
},
[400057] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanic Deepstrider",
["npcID"] = 200808,
},
[377532] = {
["source"] = "Primal Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198813,
},
[464338] = {
["encounterName"] = "The Seven",
["source"] = "Seeth'rel",
["npcID"] = 226312,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[366549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 185154,
},
[375485] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191230,
},
[366759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illicit Collector",
["npcID"] = 183498,
},
[22415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alzzin the Wildshaper",
["npcID"] = 11492,
},
[372147] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balara",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[341865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Court Executor",
["npcID"] = 174194,
},
[147828] = {
["source"] = "Huolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 73167,
},
[157043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Ritualist",
["npcID"] = 77130,
},
[398012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[440504] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[227592] = {
["encounterName"] = "Shade of Medivh",
["source"] = "Shade of Medivh",
["npcID"] = 114350,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1965,
},
[198959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[340057] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kennel Overseer",
["npcID"] = 174336,
},
[360591] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Necrotic Ritualist",
["npcID"] = 182045,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[78530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Petrified Treant",
["npcID"] = 11458,
},
[360295] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["npcID"] = 181549,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[79554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Provisioner",
["npcID"] = 72411,
},
[320200] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[395967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Hyena",
["npcID"] = 197123,
},
[362806] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[400063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pesky Sporemoth",
["npcID"] = 202625,
},
[426684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[366938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Xy'pro",
["npcID"] = 185032,
},
[32369] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Apprentice",
["npcID"] = 18430,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[136339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalak",
["npcID"] = 69099,
},
[50276] = {
["source"] = "Ilsa Direbrew",
["event"] = "SPELL_CAST_START",
["npcID"] = 26764,
},
[358836] = {
["source"] = "Mawsworn Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 180664,
},
[347741] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[456101] = {
["source"] = "Reconstructed Skardyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 219245,
},
[443068] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[148515] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Jun-Wei",
["npcID"] = 73723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[438973] = {
["source"] = "Pit Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228574,
},
[400066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Preying Dustmoth",
["npcID"] = 201068,
},
[354142] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[272422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Spotter",
["npcID"] = 138255,
},
[406210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[377490] = {
["source"] = "Primal Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198813,
},
[451261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Earthcaller",
["npcID"] = 224219,
},
[354011] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[366379] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["npcID"] = 182777,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2549,
},
[200050] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[46181] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Apoko",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24553,
},
[338636] = {
["source"] = "Separation Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 167731,
},
[438976] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[310788] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Organ of Corruption",
["encounterID"] = 2345,
["event"] = "SPELL_CAST_START",
["npcID"] = 158343,
},
[328276] = {
["encounterName"] = "Sire Denathrius",
["source"] = "Sire Denathrius",
["npcID"] = 167406,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2407,
},
[119487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[226166] = {
["source"] = "Endgineer Omegaplugg",
["event"] = "SPELL_CAST_START",
["npcID"] = 113621,
},
[250102] = {
["source"] = "Summoned Skeleton",
["event"] = "SPELL_CAST_START",
["npcID"] = 11200,
},
[320208] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 164578,
},
[152953] = {
["source"] = "Solar Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 76097,
},
[145786] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["npcID"] = 71397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[358215] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawsworn Hopebreaker",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177787,
},
[446255] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealing Mass",
["npcID"] = 222459,
},
[157049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'tash the Destructor",
["npcID"] = 77889,
},
[406215] = {
["source"] = "Remembered Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221883,
},
[34353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Researcher",
["npcID"] = 18421,
},
[404178] = {
["source"] = "Veltrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 200904,
},
[152954] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["npcID"] = 75839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1686,
},
[58980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Medicine Man",
["npcID"] = 29826,
},
[424646] = {
["source"] = "Flametouched Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210150,
},
[364962] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["npcID"] = 180773,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2512,
},
[412360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinmarrow",
["npcID"] = 203480,
},
[466447] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Emperor Dagran Thaurissan",
["npcID"] = 226305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[120512] = {
["source"] = "Osul Veteran Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61886,
},
[451268] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[264923] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[41410] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[383693] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[369359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Proto-Drake",
["npcID"] = 189515,
},
[157051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'tash the Destructor",
["npcID"] = 77889,
},
[332500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstripe Great Ray",
["npcID"] = 210050,
},
[346694] = {
["encounterName"] = "The Council of Blood",
["source"] = "Dutiful Attendant",
["npcID"] = 175992,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2412,
},
[84165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Golem",
["npcID"] = 42008,
},
[469700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grim Patron",
["npcID"] = 232444,
},
[162171] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["npcID"] = 77803,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[400077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplung Glowsplasher",
["npcID"] = 204013,
},
[366190] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Worldeater",
["npcID"] = 183495,
},
[465100] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Avatar of Ragnaros",
["encounterID"] = 3049,
["event"] = "SPELL_CAST_START",
["npcID"] = 231006,
},
[357083] = {
["source"] = "High Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 180864,
},
[400078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplung Glowsplasher",
["npcID"] = 204013,
},
[56934] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[257756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Buccaneer",
["npcID"] = 129527,
},
[56933] = {
["encounterName"] = "Frozen Commander",
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Ranger",
["npcID"] = 26802,
},
[439814] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[22709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethtendris",
["npcID"] = 14327,
},
[412366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterrax",
["npcID"] = 203662,
},
[350865] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawsworn Vanguard",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177154,
},
[347992] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["npcID"] = 175616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2425,
},
[122784] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[273844] = {
["source"] = "Horde Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 214169,
},
[422606] = {
["source"] = "Volgoth the Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[464349] = {
["encounterName"] = "The Seven",
["source"] = "Anger'rel",
["encounterID"] = 3048,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226307,
},
[369365] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[412368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[444957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Canyon Devilfish",
["npcID"] = 222248,
},
[22938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Lash",
["npcID"] = 13197,
},
[451276] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[395987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jumping Spiderling",
["npcID"] = 199182,
},
[446271] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Mass",
["npcID"] = 222461,
},
[263604] = {
["source"] = "Servant of Thros",
["event"] = "SPELL_CAST_START",
["npcID"] = 141061,
},
[451277] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217489,
},
[140673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rocky Horror",
["npcID"] = 70430,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[226159] = {
["source"] = "Endgineer Omegaplugg",
["event"] = "SPELL_CAST_START",
["npcID"] = 113621,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[412371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[357082] = {
["source"] = "Mawsworn Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 178733,
},
[38760] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["npcID"] = 18341,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1900,
},
[446300] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[338653] = {
["source"] = "Stitching Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 173044,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[338357] = {
["source"] = "Kyrian Stitchwerk",
["event"] = "SPELL_CAST_START",
["npcID"] = 172981,
},
[143746] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Despair",
["npcID"] = 71474,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[395991] = {
["source"] = "Raging Torrent",
["event"] = "SPELL_CAST_START",
["npcID"] = 197221,
},
[357084] = {
["source"] = "Mawsworn Arbalest",
["event"] = "SPELL_CAST_START",
["npcID"] = 180379,
},
[325440] = {
["encounterName"] = "Sun King's Salvation",
["source"] = "Rockbound Vanquisher",
["npcID"] = 165764,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2402,
},
[333612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winged Ravager",
["npcID"] = 173146,
},
[469711] = {
["encounterName"] = "The Seven",
["source"] = "Vile'rel",
["npcID"] = 226308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[91335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warrior",
["npcID"] = 61842,
},
[257397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bonesaw",
["npcID"] = 129788,
},
[455065] = {
["source"] = "Arax'ne",
["event"] = "SPELL_CAST_START",
["npcID"] = 217465,
},
[152962] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[357086] = {
["source"] = "Mawsworn Soulmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 176959,
},
[22710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethtendris",
["npcID"] = 14327,
},
[22662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alzzin the Wildshaper",
["npcID"] = 11492,
},
[140676] = {
["source"] = "Rocky Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 70430,
},
[111813] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["npcID"] = 58822,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[469099] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Interrogator Gerstahn",
["npcID"] = 232243,
},
[35945] = {
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[346698] = {
["encounterName"] = "The Council of Blood",
["source"] = "Castellan Niklaus",
["npcID"] = 166971,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2412,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[318181] = {
["source"] = "Ravenous Etherwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 158771,
},
[464983] = {
["encounterName"] = "Ambassador Flamelash",
["source"] = "Firestarter",
["encounterID"] = 3047,
["event"] = "SPELL_CAST_START",
["npcID"] = 230804,
},
[140677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rocky Horror",
["npcID"] = 70430,
},
[158083] = {
["source"] = "Adorned Bladetalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 79303,
},
[446409] = {
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[462320] = {
["encounterName"] = "Lord Roccor",
["source"] = "Lord Roccor",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[404188] = {
["source"] = "Static Charge",
["event"] = "SPELL_CAST_START",
["npcID"] = 202847,
},
[381663] = {
["source"] = "Apex Blazewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 193291,
},
[352834] = {
["source"] = "Mawsworn Soulmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 176959,
},
[374743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Pyromancer",
["npcID"] = 115488,
},
[419229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Patches",
["npcID"] = 215147,
},
[339770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anima Crazed Worker",
["npcID"] = 173568,
},
[391903] = {
["source"] = "Ruby Egg Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 190171,
},
[459479] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[6466] = {
["source"] = "Goblin Woodcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 641,
},
[56935] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[448162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enormous Kelp-Snaggler",
["npcID"] = 221061,
},
[430168] = {
["source"] = "Invading Hurler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214677,
},
[458638] = {
["source"] = "Awakened Flamecoil Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[430812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalescing Void Diffuser",
["npcID"] = 214421,
},
[449242] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[465225] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Avatar of Ragnaros",
["npcID"] = 231006,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[412383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossian",
["npcID"] = 204093,
},
[136585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Beastlord",
["npcID"] = 71298,
},
[122754] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["encounterID"] = 1463,
["event"] = "SPELL_CAST_START",
["npcID"] = 62164,
},
[458670] = {
["source"] = "Archavon the Stone Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 227257,
},
[462690] = {
["source"] = "Darkened Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 220164,
},
[373477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Shoresnapper",
["npcID"] = 190193,
},
[257402] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[462969] = {
["encounterName"] = "Bael'Gar",
["source"] = "Bael'Gar",
["encounterID"] = 3044,
["event"] = "SPELL_CAST_START",
["npcID"] = 226303,
},
[281329] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Jolly",
["npcID"] = 126845,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[462319] = {
["encounterName"] = "Lord Roccor",
["source"] = "Lord Roccor",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[465093] = {
["source"] = "Fireguard Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 232254,
},
[466371] = {
["encounterName"] = "Emperor Dagran Thaurissan",
["source"] = "Twilight's Hammer Ambassador",
["npcID"] = 232463,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[355049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Goliath",
["npcID"] = 176535,
},
[371313] = {
["source"] = "Blazing Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 186336,
},
[449246] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Emmerich",
["npcID"] = 215371,
},
[9532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dak Dak",
["npcID"] = 59424,
},
[396005] = {
["isChanneled"] = true,
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198424,
},
[449941] = {
["source"] = "Emperor Pitfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 219265,
},
[462351] = {
["encounterName"] = "Lord Roccor",
["source"] = "Lord Roccor",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[140682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mist Lurker",
["npcID"] = 70594,
},
[448057] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[120519] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[44224] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24664,
},
[396007] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Songbird Queen",
["npcID"] = 59553,
},
[458634] = {
["source"] = "Awakened Flamecoil Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[468691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomforge Mechanic",
["npcID"] = 232266,
},
[201902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Deadeye",
["npcID"] = 100539,
},
[453345] = {
["source"] = "Manifested Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[373483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soggymaw Wavebringer",
["npcID"] = 187263,
},
[50025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wintergrasp Catapult",
["npcID"] = 27881,
},
[34821] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodwarder Steward",
["npcID"] = 18404,
},
[464378] = {
["encounterName"] = "Ambassador Flamelash",
["source"] = "Ambassador Flamelash",
["encounterID"] = 3047,
["event"] = "SPELL_CAST_START",
["npcID"] = 226302,
},
[117960] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[449251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Threadmancer",
["npcID"] = 208244,
},
[80781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockwing Screecher",
["npcID"] = 10409,
},
[140684] = {
["isChanneled"] = true,
["source"] = "Mist Lurker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70594,
},
[256382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Midland Stag",
["npcID"] = 126967,
},
[391915] = {
["source"] = "Cragsworn Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191661,
},
[143666] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["npcID"] = 71160,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[446700] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Voracious Worm",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 219046,
},
[365295] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["npcID"] = 181954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[467505] = {
["encounterName"] = "General Angerforge",
["source"] = "Anvilrage Artillerist",
["npcID"] = 231565,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3045,
},
[80780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Banshee",
["npcID"] = 10463,
},
[139416] = {
["source"] = "Zandalari Arcanital",
["event"] = "SPELL_CAST_START",
["npcID"] = 69281,
},
[468942] = {
["isChanneled"] = true,
["source"] = "Phalanx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 232593,
},
[257407] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 122963,
},
[443111] = {
["source"] = "Nightfall Hopestealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 217517,
},
[449937] = {
["source"] = "Cyclonecrier Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 222959,
},
[389870] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[415125] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 207638,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[464348] = {
["encounterName"] = "The Seven",
["source"] = "Anger'rel",
["npcID"] = 226307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[440501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Juvenile Sandskipper",
["npcID"] = 224789,
},
[470588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Witherer",
["npcID"] = 214251,
},
[457447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[426731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Oracle",
["npcID"] = 41096,
},
[152973] = {
["source"] = "Defense Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 76087,
},
[56937] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26930,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[457448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Menace",
["npcID"] = 208239,
},
[114890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordo Warrior",
["npcID"] = 59972,
},
[404207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[442994] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[396020] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[387826] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[381683] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[85710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Skirmisher",
["npcID"] = 58738,
},
[426734] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[404209] = {
["source"] = "Veltrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 200904,
},
[389875] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[458874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Speaker Xanventh",
["npcID"] = 220130,
},
[46155] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["npcID"] = 24723,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1897,
},
[52586] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Krik'thir the Gatewatcher",
["encounterID"] = 1971,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28684,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[462508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Emissary",
["npcID"] = 229537,
},
[369399] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[412402] = {
["source"] = "Flowfy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203660,
},
[199050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Shieldmaiden",
["npcID"] = 95832,
},
[336037] = {
["source"] = "Mawsworn Oppressor",
["event"] = "SPELL_CAST_START",
["npcID"] = 181186,
},
[369400] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[412403] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201774,
},
[307968] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[64059] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Brain of Yogg-Saron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33890,
},
[448843] = {
["source"] = "Glumtooth Bug-beater",
["event"] = "SPELL_CAST_START",
["npcID"] = 222176,
},
[465268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fireguard Destroyer",
["npcID"] = 232254,
},
[215433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[9053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firegut Flamespeaker",
["npcID"] = 48121,
},
[442052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Ironweaver",
["npcID"] = 220551,
},
[396023] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[56938] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26928,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[434722] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[327497] = {
["encounterName"] = "The Council of Blood",
["source"] = "Lord Stavros",
["npcID"] = 166970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2412,
},
[44141] = {
["source"] = "Ellrys Duskhallow",
["event"] = "SPELL_CAST_START",
["npcID"] = 24558,
},
[375547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Eruption",
["npcID"] = 191286,
},
[426741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[404216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[417598] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Emissary",
["npcID"] = 232440,
},
[457458] = {
["source"] = "Siegelord Xerosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[118988] = {
["encounterName"] = "Gekkan",
["source"] = "Gekkan",
["encounterID"] = 2129,
["event"] = "SPELL_CAST_START",
["npcID"] = 61243,
},
[424704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Gutter",
["npcID"] = 207454,
},
[463602] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[120524] = {
["source"] = "Osul Veteran Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61886,
},
[114646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[264971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hissing Swell",
["npcID"] = 128768,
},
[145812] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71405,
},
[463052] = {
["source"] = "Awakened Phalanx",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[462802] = {
["source"] = "Corrupted Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 229695,
},
[445174] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Forgotten Harbinger",
["npcID"] = 221945,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[381694] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[465652] = {
["encounterName"] = "The Seven",
["source"] = "Anger'rel",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226307,
},
[143765] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 71156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[404220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[322274] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Zolramus Siphoner",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 164815,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[369409] = {
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184130,
},
[55659] = {
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 29822,
},
[307977] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["encounterID"] = 2334,
["event"] = "SPELL_CAST_START",
["npcID"] = 157238,
},
[87761] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[13901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[412413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skornak",
["npcID"] = 203643,
},
[357124] = {
["source"] = "Dreadmaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 180780,
},
[408975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Edgelord",
["npcID"] = 198873,
},
[41069] = {
["source"] = "Shadowmoon Deathshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[412414] = {
["source"] = "Professor Gastrinax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203521,
},
[458834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Speaker Xanventh",
["npcID"] = 220130,
},
[470587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Witherer",
["npcID"] = 214251,
},
[357128] = {
["source"] = "Hollowsoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 176879,
},
[340289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Nightblossom",
["npcID"] = 173714,
},
[463609] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[257326] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
},
[322968] = {
["source"] = "Drust Spiteclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 165111,
},
[387843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[439037] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ravenous Spawn",
["npcID"] = 216205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[87762] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[35950] = {
["encounterName"] = "Blood Guard Porung",
["source"] = "Shattered Hand Houndmaster",
["encounterID"] = 1935,
["event"] = "SPELL_CAST_START",
["npcID"] = 17670,
},
[446000] = {
["source"] = "Hilltop Broodmother",
["event"] = "SPELL_CAST_START",
["npcID"] = 228045,
},
[381701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquifon",
["npcID"] = 203468,
},
[449277] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Emmerich",
["npcID"] = 215371,
},
[405870] = {
["source"] = "Doomforge Arcanasmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 232458,
},
[255371] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 122963,
},
[465051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 230937,
},
[316959] = {
["source"] = "Corrosive Digester",
["event"] = "SPELL_CAST_START",
["npcID"] = 162828,
},
[440468] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[97243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Behemoth",
["npcID"] = 52552,
},
[68821] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["encounterID"] = 2879,
["event"] = "SPELL_CAST_START",
["npcID"] = 36565,
},
[430013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Stormrook",
["npcID"] = 207186,
},
[377608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Guardian",
["npcID"] = 199592,
},
[268260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Cannoneer",
["npcID"] = 138465,
},
[353682] = {
["source"] = "Soulscream Tormentor",
["event"] = "SPELL_CAST_START",
["npcID"] = 176880,
},
[324372] = {
["isChanneled"] = true,
["source"] = "Skeletal Monstrosity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165197,
},
[377609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Guard",
["npcID"] = 185594,
},
[451114] = {
["source"] = "Animated Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 213905,
},
[446086] = {
["source"] = "Sureki Unnaturaler",
["event"] = "SPELL_CAST_START",
["npcID"] = 216339,
},
[456653] = {
["source"] = "Worldcarver Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 221964,
},
[443138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Scribe",
["npcID"] = 221035,
},
[396040] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 199233,
},
[20793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Summoner",
["npcID"] = 4463,
},
[200084] = {
["source"] = "Ghostly Retainer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98366,
},
[387708] = {
["source"] = "Ishyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200579,
},
[193941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embershard Scorpion",
["npcID"] = 98406,
},
[374158] = {
["source"] = "Remembered Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 221664,
},
[138652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani'shi Flame Chanter",
["npcID"] = 69909,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[147868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfuse Engineer",
["npcID"] = 73095,
},
[357135] = {
["source"] = "Mawsworn Paindrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 180387,
},
[413622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[444023] = {
["source"] = "Unstable Experiment",
["event"] = "SPELL_CAST_START",
["npcID"] = 221537,
},
[139402] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "No'ku Stormsayer",
["npcID"] = 70276,
},
[406282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[427960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firebrand Fystia",
["npcID"] = 209893,
},
[369423] = {
["source"] = "Skittering Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 184303,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[174489] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[147500] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[44538] = {
["encounterName"] = "Kael'thas Sunstrider",
["event"] = "SPELL_CAST_START",
["source"] = "Ethereum Smuggler",
["npcID"] = 24698,
},
[445191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[68982] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[46191] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Ellrys Duskhallow",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24558,
},
[16430] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thuzadin Necromancer",
["npcID"] = 10400,
},
[449290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seeping Crustbreaker",
["npcID"] = 224573,
},
[439857] = {
["source"] = "Royal Whisperer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[441097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Regurgitating Monstrosity",
["npcID"] = 220138,
},
[74613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverblade Pathstalker",
["npcID"] = 58858,
},
[276068] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[463459] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[310042] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158367,
},
[41071] = {
["source"] = "Shadowmoon Deathshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[412430] = {
["source"] = "Gastrite",
["event"] = "SPELL_CAST_START",
["npcID"] = 205801,
},
[256401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Blind Weaver",
["npcID"] = 206096,
},
[400144] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[250258] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["encounterID"] = 2085,
["event"] = "SPELL_CAST_START",
["npcID"] = 122965,
},
[130414] = {
["source"] = "Rainiara the Kingslayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82260,
},
[3606] = {
["source"] = "Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 2523,
},
[412346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Corsair",
["npcID"] = 126928,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Black Blood",
["npcID"] = 215968,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2901,
},
[273185] = {
["source"] = "Shieldbearer of Zul",
["event"] = "SPELL_CAST_START",
["npcID"] = 127879,
},
[272888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Destroyer",
["npcID"] = 137517,
},
[257426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Enforcer",
["npcID"] = 129602,
},
[385812] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[60781] = {
["source"] = "Forgotten Depths Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 30205,
},
[373526] = {
["source"] = "Sunrise Honeysucker",
["event"] = "SPELL_CAST_START",
["npcID"] = 224133,
},
[130769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stout Shaghorn",
["npcID"] = 59139,
},
[426768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[444172] = {
["isChanneled"] = true,
["source"] = "Xur'khun the Defiled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[78196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Pyromancer",
["npcID"] = 41902,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191230,
},
[75992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[451097] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Sureki Militant",
["npcID"] = 213932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[321780] = {
["isChanneled"] = true,
["source"] = "Zolramus Necromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163618,
},
[391958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloying Gale",
["npcID"] = 198126,
},
[118905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Capacitor Totem",
["npcID"] = 61245,
},
[144089] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[257739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktooth Scrapper",
["npcID"] = 129529,
},
[391959] = {
["source"] = "Charged Stormcrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 201794,
},
[426771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[453392] = {
["source"] = "Sureki Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[381721] = {
["source"] = "Oppressive Artificer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184444,
},
[324387] = {
["source"] = "Skeletal Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 165197,
},
[41072] = {
["source"] = "Shadowmoon Blood Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 22945,
},
[436698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarab Captain Vul'akan",
["npcID"] = 218306,
},
[256405] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[375579] = {
["source"] = "Primalist Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 190716,
},
[271144] = {
["source"] = "Drust Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 137758,
},
[106864] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[390940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarls",
["npcID"] = 197354,
},
[375580] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[448560] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[265002] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[455443] = {
["source"] = "Waxx",
["event"] = "SPELL_CAST_START",
["npcID"] = 226267,
},
[320171] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 163157,
},
[193826] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[428823] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[411910] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[22458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackwing Taskmaster",
["npcID"] = 12458,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[34879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Falconer",
["npcID"] = 17994,
},
[207261] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[348974] = {
["encounterName"] = "The Eye of the Jailer",
["source"] = "Eye of the Jailer",
["encounterID"] = 2433,
["event"] = "SPELL_CAST_START",
["npcID"] = 175725,
},
[114874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[193951] = {
["source"] = "Barbed Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 97677,
},
[442526] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[31673] = {
["encounterName"] = "Hungarfen",
["source"] = "Hungarfen",
["npcID"] = 17770,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1946,
},
[386675] = {
["source"] = "Novice Timewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[412444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[422683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oxis of Fire",
["npcID"] = 210319,
},
[434252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Hauler",
["npcID"] = 217039,
},
[451102] = {
["source"] = "Ascendant Vis'coxria",
["event"] = "SPELL_CAST_START",
["npcID"] = 211261,
},
[398720] = {
["source"] = "Irontide Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 203988,
},
[456174] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[90329] = {
["source"] = "Ramkahen Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 48514,
},
[445210] = {
["source"] = "Spitfire Charger",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[422685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oxis of Fire",
["npcID"] = 210319,
},
[375587] = {
["source"] = "Primalist Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 190716,
},
[384385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostcoat Bear",
["npcID"] = 203976,
},
[152998] = {
["source"] = "Grand Defense Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 76145,
},
[324394] = {
["source"] = "Skeletal Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 165197,
},
[277296] = {
["source"] = "Cutwater Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 129029,
},
[34930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Darkcaster",
["npcID"] = 18331,
},
[412448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmatron",
["npcID"] = 200115,
},
[321226] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163157,
},
[277297] = {
["source"] = "Company Fusilier",
["event"] = "SPELL_CAST_START",
["npcID"] = 133399,
},
[426783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Seer",
["npcID"] = 212775,
},
[404258] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[447261] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[255373] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 122963,
},
[147880] = {
["source"] = "Molten Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 72888,
},
[404259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[463644] = {
["encounterName"] = "Lord Incendius",
["source"] = "Lord Incendius",
["encounterID"] = 3043,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226304,
},
[375591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Sapling",
["npcID"] = 191313,
},
[334488] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[396069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amephyst",
["npcID"] = 200743,
},
[117975] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Protector Kaolan",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60583,
},
[400165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[147881] = {
["source"] = "Molten Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 72888,
},
[456513] = {
["source"] = "Gong'tze the Riverhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221974,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[200099] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[426787] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[396071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 197142,
},
[260508] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[408358] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[456900] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[265016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[422693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oxis of Fire",
["npcID"] = 210319,
},
[437019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Vanguard",
["npcID"] = 218316,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164804,
},
[396073] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Nodding Tiger",
["npcID"] = 59544,
},
[392574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[375596] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[463217] = {
["source"] = "Mistveil Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 166276,
},
[440222] = {
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[373549] = {
["source"] = "Proto Dragonfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 193302,
},
[451295] = {
["isChanneled"] = true,
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219983,
},
[451364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Brute",
["npcID"] = 224152,
},
[396075] = {
["source"] = "Raging Torrent",
["event"] = "SPELL_CAST_START",
["npcID"] = 197221,
},
[422696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Avius Flamebeak",
["npcID"] = 210305,
},
[450045] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[462264] = {
["isChanneled"] = true,
["source"] = "Blood Drainer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229399,
},
[272581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Tempest",
["npcID"] = 129367,
},
[414506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Emberwing",
["npcID"] = 209098,
},
[449318] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[123244] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["encounterID"] = 1506,
["event"] = "SPELL_CAST_START",
["npcID"] = 62983,
},
[439012] = {
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[447271] = {
["source"] = "Hulking Warshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 221103,
},
[449135] = {
["source"] = "Glumtooth Bug-beater",
["event"] = "SPELL_CAST_START",
["npcID"] = 222176,
},
[445813] = {
["source"] = "Unstable Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[396078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inflammable Wall",
["npcID"] = 201413,
},
[422699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phebis of the Burning Sea",
["npcID"] = 210306,
},
[432520] = {
["source"] = "Nightfall Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 213893,
},
[340544] = {
["isChanneled"] = true,
["source"] = "Spinemaw Staghorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167111,
},
[305978] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["encounterID"] = 2329,
["event"] = "SPELL_CAST_START",
["npcID"] = 156818,
},
[323057] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[324323] = {
["source"] = "Skeletal Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 165919,
},
[418605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Future Self",
["npcID"] = 208887,
},
[115418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krik'thik Wind Shaper",
["npcID"] = 59801,
},
[411000] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[257063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Waveshaper",
["npcID"] = 129370,
},
[443179] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[340300] = {
["source"] = "Mistveil Gorgegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 173720,
},
[437620] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[400177] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Ritualist",
["npcID"] = 199971,
},
[432638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Ascendant",
["npcID"] = 212793,
},
[340208] = {
["source"] = "Mistveil Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 173655,
},
[215754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spawn of Serpentrix",
["npcID"] = 108655,
},
[375605] = {
["source"] = "Arcane Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 203434,
},
[257882] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[323177] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[130265] = {
["source"] = "Thunder Hold Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 66291,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[448660] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[123610] = {
["source"] = "Corrupted Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 63275,
},
[436679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarab Captain Vul'akan",
["npcID"] = 218306,
},
[431659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clotweave Widow",
["npcID"] = 216193,
},
[394037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viridian Colossus",
["npcID"] = 200319,
},
[440107] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[453161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[413044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grotesque Horror",
["npcID"] = 138187,
},
[369465] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[449154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[47731] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26929,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[359233] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 181047,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[271174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pallid Gorger",
["npcID"] = 137830,
},
[432130] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[130266] = {
["source"] = "Thunder Hold Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 66200,
},
[122852] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[463272] = {
["source"] = "Caustic Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 229918,
},
[447076] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[292225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dorian Atwater",
["npcID"] = 149036,
},
[451378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Overseer",
["npcID"] = 224221,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[433766] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[408946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 198870,
},
[451379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Overseer",
["npcID"] = 224221,
},
[445236] = {
["source"] = "Agitated Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 227369,
},
[389947] = {
["source"] = "Nokhud Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 193839,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[377661] = {
["source"] = "Sparring Vorquin",
["event"] = "SPELL_CAST_START",
["npcID"] = 195048,
},
[44475] = {
["source"] = "Sunblade Mage Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 24683,
},
[450191] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[141746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Skirmisher",
["npcID"] = 58738,
},
[52238] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1985,
},
[115421] = {
["isChanneled"] = true,
["source"] = "Krik'thik Wind Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59801,
},
[426345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Touched Elemental",
["npcID"] = 212400,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 45259,
},
[405016] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[144821] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[201139] = {
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 98810,
},
[391998] = {
["source"] = "Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 203757,
},
[444414] = {
["source"] = "Blight Swarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221669,
},
[281420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Brinescale",
["npcID"] = 129600,
},
[207278] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[359235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Halondrus",
["npcID"] = 180906,
},
[373573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mischievous Faerie Dragon",
["npcID"] = 213647,
},
[438473] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[455480] = {
["source"] = "Take",
["event"] = "SPELL_CAST_START",
["npcID"] = 226272,
},
[359236] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[205231] = {
["encounterName"] = "Eranog",
["source"] = "Darkglare",
["npcID"] = 103673,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[137079] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Spear-Shaper",
["npcID"] = 69388,
},
[389953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[367428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarled Scavenger",
["npcID"] = 184962,
},
[124048] = {
["source"] = "Osul Sharphorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 60647,
},
[412479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinn",
["npcID"] = 203646,
},
[442501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Ironweaver",
["npcID"] = 220551,
},
[351047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gatewarden Zo'mazz",
["npcID"] = 178392,
},
[34934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Wraith",
["npcID"] = 18394,
},
[314188] = {
["isChanneled"] = true,
["source"] = "Void Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161335,
},
[463674] = {
["encounterName"] = "Lord Roccor",
["source"] = "Lord Roccor",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[148762] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Zak'tar",
["npcID"] = 71409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[438218] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[424614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Stabber",
["npcID"] = 207450,
},
[381765] = {
["source"] = "Ice Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 201034,
},
[130781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kunzen Ravager",
["npcID"] = 59119,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[438586] = {
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[199090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[450980] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217491,
},
[441116] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Regurgitating Monstrosity",
["npcID"] = 220138,
},
[396101] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Shaper",
["npcID"] = 197128,
},
[214001] = {
["source"] = "Risen Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 102095,
},
[392006] = {
["source"] = "Sickly Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 186668,
},
[451391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 39392,
},
[19645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wailing Banshee",
["npcID"] = 10464,
},
[398150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Dominator",
["npcID"] = 76446,
},
[87779] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[320336] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Reanimated Mage",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 164414,
},
[438807] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Colossal Spider",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 219045,
},
[450786] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[442250] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 220626,
},
[412486] = {
["source"] = "Warchanter Ronvath",
["event"] = "SPELL_CAST_START",
["npcID"] = 200128,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 192481,
},
[424773] = {
["source"] = "Gnarled Reviver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207468,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[314195] = {
["source"] = "Gnashing Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 161334,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[432965] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[451395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 39392,
},
[412488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawling Goo",
["npcID"] = 205820,
},
[398154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiled Spirit",
["npcID"] = 75451,
},
[242496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Surge Totem",
["npcID"] = 121499,
},
[201141] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[396107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyromancer Loregrain",
["npcID"] = 232571,
},
[239022] = {
["source"] = "Helblaze Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 118717,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191232,
},
[73958] = {
["source"] = "Drowned Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 39464,
},
[15536] = {
["source"] = "Twilight Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 38926,
},
[15472] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[392013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viridian Colossus",
["npcID"] = 200319,
},
[143805] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["npcID"] = 71454,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1595,
},
[449130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[68839] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["isChanneled"] = true,
["encounterID"] = 2006,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36497,
},
[383823] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[40936] = {
["encounterName"] = "Supremus",
["source"] = "Illidari Fearbringer",
["encounterID"] = 602,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22954,
},
[412492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[450037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Spire",
["npcID"] = 220068,
},
[144832] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["npcID"] = 71734,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1604,
},
[438153] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[16866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venom Belcher",
["npcID"] = 10417,
},
[371471] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Juggernaut",
["npcID"] = 187969,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[361300] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Renewal",
["npcID"] = 181546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[431612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Venomspitter",
["npcID"] = 219661,
},
[450756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[434589] = {
["source"] = "Overfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 217429,
},
[78903] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1058,
},
[459422] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[440184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chitin Knight",
["npcID"] = 219725,
},
[386866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nevroll",
["npcID"] = 203039,
},
[456841] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[257458] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[136913] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[428879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[444722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Templar",
["npcID"] = 207949,
},
[201411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadfire Imp",
["npcID"] = 100527,
},
[361304] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Wild Stampede",
["npcID"] = 183421,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[376169] = {
["source"] = "High Thaumaturge Fural",
["event"] = "SPELL_CAST_START",
["npcID"] = 189905,
},
[365400] = {
["source"] = "Shifting Stargorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 184413,
},
[257459] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
},
[157652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Magus",
["npcID"] = 77694,
},
[428086] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[68841] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Frye",
["encounterID"] = 2879,
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[196027] = {
["source"] = "Ritualist Lesha",
["event"] = "SPELL_CAST_START",
["npcID"] = 100248,
},
[433845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Overseer",
["npcID"] = 216364,
},
[444408] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218022,
},
[324447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[424787] = {
["isChanneled"] = true,
["source"] = "Crabtankerous",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209909,
},
[11985] = {
["source"] = "Searing Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 4323,
},
[440162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Stinkcap",
["npcID"] = 212579,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[196028] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[180670] = {
["event"] = "SPELL_CAST_START",
["source"] = "K'ute",
["npcID"] = 90215,
},
[279264] = {
["source"] = "Shandris Feathermoon",
["event"] = "SPELL_CAST_START",
["npcID"] = 140584,
},
[34170] = {
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 18420,
},
[424789] = {
["isChanneled"] = true,
["source"] = "Crabtankerous",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209909,
},
[369500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Halondrus",
["npcID"] = 180906,
},
[166335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Far Seer",
["npcID"] = 82579,
},
[431697] = {
["source"] = "Boltweaver Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223362,
},
[424790] = {
["isChanneled"] = true,
["source"] = "Crabtankerous",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209909,
},
[385883] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[198077] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[106856] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[114535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clovercatcher",
["npcID"] = 59576,
},
[451412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
},
[412505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyr's Vanguard",
["npcID"] = 205151,
},
[22334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackwing Technician",
["npcID"] = 13996,
},
[439646] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[443222] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[371551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffkeeper Bouldani",
["npcID"] = 202612,
},
[357217] = {
["source"] = "Mawsworn Rageguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 180389,
},
[359265] = {
["source"] = "Automa Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 182799,
},
[320358] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[428889] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[357218] = {
["source"] = "Shadowsteel Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 176957,
},
[351075] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawsworn Vanguard",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177154,
},
[115652] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[198079] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1834,
},
[434697] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[375649] = {
["isChanneled"] = true,
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191164,
},
[427583] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[357735] = {
["encounterName"] = "Painsmith Raznal",
["source"] = "Shadowsteel Horror",
["encounterID"] = 2430,
["event"] = "SPELL_CAST_START",
["npcID"] = 179847,
},
[406366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[156515] = {
["source"] = "Whirling Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 79469,
},
[450628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[449368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanderer Ida",
["npcID"] = 220953,
},
[316779] = {
["source"] = "Mawsworn Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 178043,
},
[136904] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[426845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[144839] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["npcID"] = 71153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[394593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Lancer",
["npcID"] = 193198,
},
[375652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[445021] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Summoned Acolyte",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 221863,
},
[428894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[406369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[375653] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191232,
},
[130791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Grunt",
["npcID"] = 66398,
},
[346985] = {
["encounterName"] = "The Tarragrue",
["source"] = "The Tarragrue",
["npcID"] = 175611,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2423,
},
[82794] = {
["source"] = "Oathsworn Wanderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 44926,
},
[458582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Darkblade",
["npcID"] = 222274,
},
[351589] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawforged Colossus",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177893,
},
[330604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[114022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Treasurer",
["npcID"] = 59241,
},
[383846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Blaze",
["npcID"] = 200589,
},
[320376] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 164578,
},
[144070] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[451387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[445251] = {
["source"] = "Bloodmaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 219264,
},
[443232] = {
["source"] = "Nightfall Lookout",
["event"] = "SPELL_CAST_START",
["npcID"] = 217485,
},
[225732] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[118228] = {
["source"] = "Osul Veteran Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61886,
},
[310129] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[437093] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[357730] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Anduin Wrynn",
["encounterID"] = 2435,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 178072,
},
[162248] = {
["source"] = "Forgotten Tiger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216822,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[57464] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Lady Blaumeux",
["npcID"] = 16065,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1121,
},
[255421] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2086,
},
[141771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion Sithiss",
["npcID"] = 59632,
},
[191941] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[451428] = {
["isChanneled"] = true,
["source"] = "Xeph'itik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219984,
},
[265081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[436991] = {
["source"] = "Sureki Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 224066,
},
[357239] = {
["source"] = "Gorgoan Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 180407,
},
[357729] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Anduin Wrynn",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 178072,
},
[371565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windyfin Windbringer",
["npcID"] = 187432,
},
[79085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Mist-Shaman",
["npcID"] = 60697,
},
[443162] = {
["source"] = "Devouring Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[426855] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[202181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockback Gnasher",
["npcID"] = 91006,
},
[373614] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[310134] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["encounterID"] = 2344,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158376,
},
[59147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[265084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[360569] = {
["source"] = "Unstable Geomental",
["event"] = "SPELL_CAST_START",
["npcID"] = 178558,
},
[114021] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[123833] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62980,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[438200] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[351091] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawsworn Hopebreaker",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177787,
},
[79721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Northwatch Sharpshooter",
["npcID"] = 39268,
},
[140400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Prophet",
["npcID"] = 70557,
},
[128232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[433002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstained Assistant",
["npcID"] = 216333,
},
[40059] = {
["encounterName"] = "The Maker",
["source"] = "The Maker",
["npcID"] = 17381,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1922,
},
[235578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand from Beyond",
["npcID"] = 118698,
},
[373618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hypnosis Bat",
["npcID"] = 190174,
},
[449385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanderer Ida",
["npcID"] = 220953,
},
[57465] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Sir Zeliek",
["npcID"] = 16063,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1121,
},
[265088] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[440207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
},
[140630] = {
["source"] = "Eternal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 70586,
},
[378818] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[265089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[359282] = {
["source"] = "Fettered Gunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 182430,
},
[212423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[451435] = {
["source"] = "Voidwraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 224466,
},
[387955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Restorer",
["npcID"] = 196203,
},
[128233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[456468] = {
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[428703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[265091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[431639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Saboteur",
["npcID"] = 212715,
},
[432125] = {
["source"] = "Isolated Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 223433,
},
[106853] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["npcID"] = 56541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1304,
},
[118819] = {
["source"] = "Belligerent Blossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 61183,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[375671] = {
["source"] = "Primalist Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190840,
},
[443247] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[114182] = {
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_START",
["npcID"] = 59372,
},
[211401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 104295,
},
[367481] = {
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185508,
},
[445217] = {
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[447141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Repurposed Loaderbot",
["npcID"] = 222923,
},
[241687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jormog the Behemoth",
["npcID"] = 117484,
},
[383864] = {
["source"] = "Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 203757,
},
[146899] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Bonecrusher",
["encounterID"] = 1622,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72945,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[448888] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[40317] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[41084] = {
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23018,
},
[428916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[357245] = {
["source"] = "Gorgoan Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 180407,
},
[367484] = {
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185508,
},
[426869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[114571] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Strife",
["npcID"] = 59051,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[367485] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[130163] = {
["isChanneled"] = true,
["source"] = "Gunship Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66183,
},
[17473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[387224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Mender",
["npcID"] = 199942,
},
[257478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Mastiff",
["npcID"] = 128551,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[445774] = {
["source"] = "Crazed Predator",
["event"] = "SPELL_CAST_START",
["npcID"] = 216325,
},
[22336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackwing Warlock",
["npcID"] = 12459,
},
[161150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grenadier",
["npcID"] = 80936,
},
[424621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sergeant Shaynemail",
["npcID"] = 211291,
},
[363400] = {
["source"] = "Vespoid Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 178158,
},
[384485] = {
["isChanneled"] = true,
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212088,
},
[427343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[375687] = {
["source"] = "Decay Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 190426,
},
[371584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Brinecaster",
["npcID"] = 200853,
},
[260551] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[203163] = {
["source"] = "Felspite Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102788,
},
[451064] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[86374] = {
["source"] = "Shado-Pan Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61252,
},
[111854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
},
[383872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Blaze",
["npcID"] = 200589,
},
[418684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Destroyer",
["npcID"] = 208208,
},
[396159] = {
["source"] = "Lava Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 186836,
},
[211406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 104295,
},
[351109] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawsworn Hopebreaker",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177787,
},
[122497] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 63554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[11443] = {
["source"] = "Doomlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 72564,
},
[406399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[218806] = {
["encounterName"] = "High Botanist Tel'arn",
["source"] = "Solarist Tel'arn",
["encounterID"] = 1886,
["event"] = "SPELL_CAST_START",
["npcID"] = 109038,
},
[146781] = {
["encounterName"] = "Galakras",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72302,
},
[459449] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[85234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalvan Mistmantle",
["npcID"] = 315,
},
[59259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Berserker",
["npcID"] = 28579,
},
[377732] = {
["source"] = "Refti Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184319,
},
[428926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[386993] = {
["source"] = "Cascade Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194939,
},
[424750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Rotcaster",
["npcID"] = 207459,
},
[451913] = {
["source"] = "The Puppetmaster?",
["event"] = "SPELL_CAST_START",
["npcID"] = 220507,
},
[445311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strange Shore Crawler",
["npcID"] = 219365,
},
[146768] = {
["encounterName"] = "Galakras",
["source"] = "Vereesa Windrunner",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 73910,
},
[277394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Hexcaller",
["npcID"] = 137131,
},
[453960] = {
["source"] = "Broodtwister Ovi'nax",
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[420737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen of the Prophet",
["npcID"] = 207272,
},
[201399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadfire Imp",
["npcID"] = 100527,
},
[367496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foul Controller",
["npcID"] = 183497,
},
[9232] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[387974] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[122259] = {
["source"] = "Sik'thik Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62632,
},
[395952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonecrusher",
["npcID"] = 197125,
},
[443027] = {
["source"] = "Webwarden Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223361,
},
[452169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[54965] = {
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[111008] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[40062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Technician",
["npcID"] = 17414,
},
[207806] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[332687] = {
["encounterName"] = "Sludgefist",
["source"] = "Sludgefist",
["npcID"] = 164407,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2399,
},
[204243] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Dweller",
["npcID"] = 101991,
},
[30853] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[459210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[367500] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[33919] = {
["encounterName"] = "Tavarok",
["source"] = "Tavarok",
["npcID"] = 18343,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1901,
},
[322450] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[126973] = {
["source"] = "Mogu'shan Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 64063,
},
[450697] = {
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[142655] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hungry Kunchong",
["npcID"] = 71420,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[378835] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[167385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dungeoneer's Training Dummy",
["npcID"] = 194644,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["encounterID"] = 1041,
["event"] = "SPELL_CAST_START",
["npcID"] = 43873,
},
[20801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp Minion",
["npcID"] = 12922,
},
[120672] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[367503] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[439621] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[32063] = {
["source"] = "Horde Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 214159,
},
[78828] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zzarc' Vul",
["npcID"] = 300,
},
[15585] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[116977] = {
["source"] = "Stone Quilen",
["event"] = "SPELL_CAST_START",
["npcID"] = 60576,
},
[420746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Sentinel",
["npcID"] = 207117,
},
[311015] = {
["source"] = "Monstrous Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 159303,
},
[415047] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[426890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oathsworn Peacekeeper",
["npcID"] = 229308,
},
[222676] = {
["source"] = "Felsworn Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 103972,
},
[202661] = {
["source"] = "Fel Scorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102583,
},
[434089] = {
["encounterName"] = "Rasha'nan",
["event"] = "SPELL_CAST_START",
["source"] = "Rasha'nan",
["npcID"] = 213937,
},
[121073] = {
["source"] = "Malevolent Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 61333,
},
[432059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Hexthrower",
["npcID"] = 213685,
},
[264038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Thornshaper",
["npcID"] = 131666,
},
[392080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maneet",
["npcID"] = 188704,
},
[123121] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["encounterID"] = 1506,
["event"] = "SPELL_CAST_START",
["npcID"] = 62983,
},
[453953] = {
["source"] = "Broodtwister Ovi'nax",
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[445123] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 202789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[201176] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[114663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brewmaster Blanche",
["npcID"] = 58740,
},
[446328] = {
["source"] = "Fog Form",
["event"] = "SPELL_CAST_START",
["npcID"] = 213953,
},
[444055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Threadling",
["npcID"] = 222730,
},
[408901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Contaminant",
["npcID"] = 202270,
},
[259531] = {
["encounterName"] = "Vol'kaal",
["source"] = "Reanimation Totem",
["encounterID"] = 2085,
["event"] = "SPELL_CAST_START",
["npcID"] = 125977,
},
[131000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Shredder",
["npcID"] = 66327,
},
[117485] = {
["encounterName"] = "Will of the Emperor",
["source"] = "Emperor's Courage",
["npcID"] = 60398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1407,
},
[143840] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Desperation Spawn",
["npcID"] = 71478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1598,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[56067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naxxramas Acolyte",
["npcID"] = 15981,
},
[334747] = {
["source"] = "Corpse Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 166302,
},
[412313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberdusk",
["npcID"] = 203664,
},
[396180] = {
["source"] = "Lava Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 186836,
},
[279461] = {
["source"] = "Flynn Fairwind",
["event"] = "SPELL_CAST_START",
["npcID"] = 141032,
},
[334748] = {
["source"] = "Corpse Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 166302,
},
[448485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[200969] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Tor",
["npcID"] = 97084,
},
[275364] = {
["source"] = "Abrasive Reconfigulator 8000",
["event"] = "SPELL_CAST_START",
["npcID"] = 140530,
},
[367521] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[266266] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[392087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Hornswog",
["npcID"] = 191619,
},
[40064] = {
["source"] = "Shadowmoon Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 17414,
},
[382277] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balara",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[113503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tomb Guardian",
["npcID"] = 60912,
},
[400279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Summoner",
["npcID"] = 204826,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[354080] = {
["encounterName"] = "The Tarragrue",
["source"] = "The Tarragrue",
["npcID"] = 175611,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2423,
},
[324513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[224729] = {
["encounterName"] = "The Silken Court",
["source"] = "Shattershell Scarab",
["npcID"] = 218884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[373636] = {
["source"] = "Konkhular",
["event"] = "SPELL_CAST_START",
["npcID"] = 194544,
},
[194966] = {
["source"] = "Lord Etheldrin Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98521,
},
[195037] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[41058] = {
["source"] = "Whirling Blade",
["event"] = "SPELL_CAST_START",
["npcID"] = 23369,
},
[34945] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[443921] = {
["source"] = "Shadowguard Ethereal",
["event"] = "SPELL_CAST_START",
["npcID"] = 221305,
},
[120052] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ordo Battleyak",
["npcID"] = 59970,
},
[450885] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[217434] = {
["source"] = "Suramar Shieldguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 107567,
},
[359334] = {
["source"] = "Chrysalis Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 181942,
},
[373662] = {
["isChanneled"] = true,
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186420,
},
[400283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Heatbinder",
["npcID"] = 199827,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[200154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understone Demolisher",
["npcID"] = 102253,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[426905] = {
["source"] = "Minion of Ghur'sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 212778,
},
[396189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 197129,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[408476] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Erratic Remnant",
["npcID"] = 202824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[422717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phebis of the Burning Sea",
["npcID"] = 210306,
},
[140279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Animator",
["npcID"] = 70069,
},
[139336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unblinking Eye",
["npcID"] = 70238,
},
[258889] = {
["source"] = "Faithless Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 128665,
},
[393148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maneet",
["npcID"] = 188704,
},
[371618] = {
["source"] = "Zaqali Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201117,
},
[433053] = {
["source"] = "Heartfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 216035,
},
[313400] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Corruptor Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158375,
},
[205486] = {
["encounterName"] = "Star Augur Etraeus",
["source"] = "Star Augur Etraeus",
["encounterID"] = 1863,
["event"] = "SPELL_CAST_START",
["npcID"] = 103758,
},
[388001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[371358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[400288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Pain",
["npcID"] = 201290,
},
[374112] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Frostbreath Arachnid",
["npcID"] = 189234,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[388002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[326574] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191206,
},
[443292] = {
["source"] = "Devouring Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[141327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Fizzel",
["npcID"] = 70963,
},
[43649] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[268306] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[377765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Squallcaller",
["npcID"] = 201724,
},
[169445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[439198] = {
["isChanneled"] = true,
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219006,
},
[138729] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[114935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grummle Trail Guide",
["npcID"] = 59593,
},
[40066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[397899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[375719] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[279475] = {
["source"] = "Flynn Fairwind",
["event"] = "SPELL_CAST_START",
["npcID"] = 141032,
},
[404388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatching Egg",
["npcID"] = 202897,
},
[261446] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2116,
},
[318383] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Clotted Corruption",
["encounterID"] = 2345,
["event"] = "SPELL_CAST_START",
["npcID"] = 163678,
},
[385959] = {
["source"] = "Defense Orb",
["event"] = "SPELL_CAST_START",
["npcID"] = 195184,
},
[115139] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["encounterID"] = 1423,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59789,
},
[130395] = {
["encounterName"] = "The Stone Guard",
["source"] = "Jasper Guardian",
["npcID"] = 59915,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1395,
},
[125506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Lindon",
["npcID"] = 59191,
},
[209378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imacu'tya",
["npcID"] = 104275,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[389040] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[432959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Ascendant",
["npcID"] = 212793,
},
[41334] = {
["source"] = "Temple Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 22939,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[57984] = {
["encounterName"] = "Eranog",
["source"] = "Greater Fire Elemental",
["npcID"] = 95061,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[400296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Heatbinder",
["npcID"] = 199827,
},
[108793] = {
["source"] = "Ook-Ook",
["event"] = "SPELL_CAST_START",
["npcID"] = 57628,
},
[421746] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[447395] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[441252] = {
["source"] = "Underdrip Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 223069,
},
[131565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Assassin",
["npcID"] = 66570,
},
[83914] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[43650] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[449444] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[410537] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[153067] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[373678] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[260773] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[271291] = {
["source"] = "Blacktooth Knuckleduster",
["event"] = "SPELL_CAST_START",
["npcID"] = 129095,
},
[152964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[279185] = {
["source"] = "Boss Blastmouth",
["event"] = "SPELL_CAST_START",
["npcID"] = 140510,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[193376] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[322486] = {
["source"] = "Tirnenn Villager",
["event"] = "SPELL_CAST_START",
["npcID"] = 164929,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[405437] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[453937] = {
["encounterName"] = "Zekvir",
["source"] = "Egg Cocoon",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 234024,
},
[395196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[448002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Stormfang",
["npcID"] = 216017,
},
[374699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[164187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Bombardier",
["npcID"] = 81407,
},
[404394] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[9613] = {
["source"] = "Emalora",
["event"] = "SPELL_CAST_START",
["npcID"] = 199796,
},
[191290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crashin' Thrashin' Flamer",
["npcID"] = 76640,
},
[396208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 197126,
},
[166380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Captain",
["npcID"] = 82597,
},
[313253] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["encounterID"] = 2329,
["event"] = "SPELL_CAST_START",
["npcID"] = 156818,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[404400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[427992] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[375732] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shrieking Whelp",
["npcID"] = 191164,
},
[33508] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowmoon Darkcaster",
["npcID"] = 17694,
},
[409581] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[128249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
},
[424879] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[44163] = {
["source"] = "Ellrys Duskhallow",
["event"] = "SPELL_CAST_START",
["npcID"] = 24558,
},
[388000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[455596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magistrate Barthilas",
["npcID"] = 10435,
},
[404409] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[188907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Dreadbringer",
["npcID"] = 92789,
},
[306111] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["encounterID"] = 2329,
["event"] = "SPELL_CAST_START",
["npcID"] = 156818,
},
[270334] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[347668] = {
["encounterName"] = "The Tarragrue",
["source"] = "The Tarragrue",
["npcID"] = 175611,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2423,
},
[385974] = {
["encounterName"] = "Vexamus",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[461741] = {
["source"] = "Sir Finley Mrrgglton",
["event"] = "SPELL_CAST_START",
["npcID"] = 228030,
},
[394114] = {
["event"] = "SPELL_CAST_START",
["source"] = "S.A.V.I.O.R.",
["npcID"] = 195328,
},
[449455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Voidsoul",
["npcID"] = 212453,
},
[387127] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[56919] = {
["encounterName"] = "Frozen Commander",
["source"] = "Alliance Cleric",
["npcID"] = 26805,
["event"] = "SPELL_CAST_START",
["encounterID"] = 519,
},
[47747] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["npcID"] = 26763,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2009,
},
[28099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tesla Coil",
["npcID"] = 16218,
},
[145907] = {
["source"] = "Kor'kron Skullsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72744,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[199151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[138739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Sand Conjurer",
["npcID"] = 69899,
},
[447411] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[157173] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felguard",
["npcID"] = 79507,
},
[396018] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Crybaby Hozen",
["npcID"] = 59552,
},
[372369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 197121,
},
[373692] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[197696] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1833,
},
[372279] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[51587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Spiritualist",
["npcID"] = 28410,
},
[373693] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[400688] = {
["source"] = "Wyrmslayer Angvardi",
["event"] = "SPELL_CAST_START",
["npcID"] = 201013,
},
[112893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zouchin Archer",
["npcID"] = 62247,
},
[428983] = {
["isChanneled"] = true,
["source"] = "Urctos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210518,
},
[79930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Utroka the Keymistress",
["npcID"] = 43350,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[59616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[420509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamesworn Infernomancer",
["npcID"] = 210503,
},
[408509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portalkeeper Cimbra",
["npcID"] = 202613,
},
[355072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Darkcaster",
["npcID"] = 178628,
},
[451510] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[289738] = {
["source"] = "Brynja",
["event"] = "SPELL_CAST_START",
["npcID"] = 147033,
},
[142699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hagman",
["npcID"] = 67426,
},
[138742] = {
["source"] = "Farraki Sand Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69899,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[420490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[414652] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[424891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Speartender",
["npcID"] = 207456,
},
[112894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zouchin Archer",
["npcID"] = 62247,
},
[138338] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["npcID"] = 69473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[373698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[318409] = {
["source"] = "Shath'Yar Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 163690,
},
[41093] = {
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23018,
},
[404415] = {
["source"] = "Damned Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 202922,
},
[256489] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[459496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[116990] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Quilen",
["npcID"] = 60576,
},
[191524] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[211439] = {
["encounterName"] = "Gul'dan",
["source"] = "The Demon Within",
["encounterID"] = 1866,
["event"] = "SPELL_CAST_START",
["npcID"] = 111022,
},
[392130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[197105] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[289722] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 147032,
},
[411404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Skytalon",
["npcID"] = 204430,
},
[269266] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["npcID"] = 137614,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[443325] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[464240] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[457660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Enormos",
["npcID"] = 225274,
},
[59685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
},
[289745] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 146772,
},
[143436] = {
["encounterName"] = "Immerseus",
["source"] = "Immerseus",
["npcID"] = 71543,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1602,
},
[404779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 205245,
},
[320462] = {
["source"] = "Zolramus Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 165137,
},
[461757] = {
["source"] = "Reno Jackson",
["event"] = "SPELL_CAST_START",
["npcID"] = 228044,
},
[441287] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kaheti Sentry",
["npcID"] = 218315,
},
[157053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[400333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Summoner",
["npcID"] = 204829,
},
[395893] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[119843] = {
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 61766,
},
[400335] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[435138] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[308178] = {
["encounterName"] = "The Hivemind",
["source"] = "Ka'zir",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157253,
},
[7154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eldreth Spectre",
["npcID"] = 11473,
},
[139771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Celestial Shaper",
["npcID"] = 70240,
},
[412614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viridian King",
["npcID"] = 201029,
},
[198723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotheart Dryad",
["npcID"] = 99358,
},
[126209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Soul-Caller",
["npcID"] = 63611,
},
[152917] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[324914] = {
["source"] = "Mistveil Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 166299,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[139772] = {
["isChanneled"] = true,
["source"] = "Shan'ze Celestial Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70240,
},
[119552] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[256494] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[420817] = {
["source"] = "Priestess of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211076,
},
[392007] = {
["source"] = "Shadepaw Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 183343,
},
[316383] = {
["source"] = "Anubisath Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 162534,
},
[148138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfuse Engineer",
["npcID"] = 73095,
},
[41245] = {
["source"] = "Suffering Soul Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 23399,
},
[123648] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[382249] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[15587] = {
["encounterName"] = "Blood Guard Porung",
["source"] = "Shadowmoon Acolyte",
["encounterID"] = 1935,
["event"] = "SPELL_CAST_START",
["npcID"] = 16594,
},
[154110] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["encounterID"] = 1699,
["event"] = "SPELL_CAST_START",
["npcID"] = 76141,
},
[388046] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[69056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Watchman",
["npcID"] = 36478,
},
[118529] = {
["source"] = "Mogu'shan Secret-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61131,
},
[443336] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[119553] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[449824] = {
["source"] = "Springbubble",
["event"] = "SPELL_CAST_START",
["npcID"] = 219262,
},
[441289] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[122409] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Kor'thik Elite Blademaster",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62402,
},
[121601] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[123649] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[383953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bakar Companion",
["npcID"] = 194255,
},
[140619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Burrower",
["npcID"] = 70589,
},
[173563] = {
["encounterName"] = "Yalnu",
["source"] = "Feral Lasher",
["npcID"] = 86684,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[86699] = {
["source"] = "Shado-Pan Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61252,
},
[134656] = {
["source"] = "Roaming Fog",
["event"] = "SPELL_CAST_START",
["npcID"] = 68313,
},
[435148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Footman",
["npcID"] = 212835,
},
[162622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[68872] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[397134] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[271329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[119554] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[166397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Scout",
["npcID"] = 82590,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[328667] = {
["source"] = "Brittlebone Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 163126,
},
[370225] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187159,
},
[357336] = {
["source"] = "Havac",
["event"] = "SPELL_CAST_START",
["npcID"] = 180355,
},
[398300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[139777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Sentinel",
["npcID"] = 70324,
},
[412626] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Zskorro",
["npcID"] = 203592,
},
[463820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prototype Electric Golem",
["npcID"] = 232552,
},
[278387] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 145580,
},
[18651] = {
["source"] = "Rageclaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 29439,
},
[463823] = {
["encounterName"] = "Golem Lord Argelmach",
["source"] = "Magmatron Mk. II",
["encounterID"] = 3046,
["event"] = "SPELL_CAST_START",
["npcID"] = 230216,
},
[463821] = {
["encounterName"] = "Golem Lord Argelmach",
["source"] = "Golem Lord Argelmach",
["npcID"] = 226306,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3046,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 44819,
},
[195234] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[34661] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["encounterID"] = 1928,
["event"] = "SPELL_CAST_START",
["npcID"] = 17978,
},
[121174] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[167589] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[259572] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["encounterID"] = 2085,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122965,
},
[154113] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["encounterID"] = 1699,
["event"] = "SPELL_CAST_START",
["npcID"] = 76141,
},
[386012] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[426964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[398296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[388060] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[470330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewalker",
["npcID"] = 233203,
},
[136708] = {
["encounterName"] = "Horridon",
["source"] = "Sul'lithuz Stonegazer",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 69172,
},
[467919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prototype Fire Golem",
["npcID"] = 232551,
},
[34697] = {
["encounterName"] = "Laj",
["source"] = "Laj",
["encounterID"] = 1927,
["event"] = "SPELL_CAST_START",
["npcID"] = 17980,
},
[29765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Protector",
["npcID"] = 17993,
},
[15117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitescale Siren",
["npcID"] = 38301,
},
[357343] = {
["source"] = "Loom Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 180427,
},
[435165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Braunpyke",
["npcID"] = 217658,
},
[209404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Arcanist",
["npcID"] = 104247,
},
[404442] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[406493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinmarrow",
["npcID"] = 203480,
},
[428077] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[199034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[123652] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[11428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warpwood Treant",
["npcID"] = 11462,
},
[335143] = {
["source"] = "Zolramus Bonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 165222,
},
[336868] = {
["source"] = "Monstrous Riftcrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184606,
},
[461781] = {
["source"] = "Sargassum Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212582,
},
[463829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prototype Toxic Golem",
["npcID"] = 232553,
},
[37668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Spellbinder",
["npcID"] = 18312,
},
[386015] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[47496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pebblecrawler",
["npcID"] = 26125,
},
[390111] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[41188] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[443353] = {
["source"] = "Bloated Cindermite",
["event"] = "SPELL_CAST_START",
["npcID"] = 222295,
},
[185857] = {
["source"] = "Irontide Trickshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 138167,
},
[144482] = {
["encounterName"] = "Norushen",
["source"] = "Manifestation of Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 71977,
},
[394843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skag the Thrower",
["npcID"] = 193149,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["npcID"] = 81522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[157348] = {
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[406495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[119524] = {
["source"] = "Mogu Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61345,
},
[152893] = {
["source"] = "Herald of Sunrise",
["event"] = "SPELL_CAST_START",
["npcID"] = 78933,
},
[461785] = {
["source"] = "Sargassum Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212582,
},
[439576] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[59617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[426974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[386024] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[198963] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[117931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arconiss",
["npcID"] = 60824,
},
[445718] = {
["source"] = "Stolen Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 223541,
},
[242170] = {
["encounterName"] = "Thrashbite the Scornful",
["source"] = "Fictional Animated Book",
["npcID"] = 121384,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2057,
},
[328687] = {
["source"] = "Brittlebone Crossbowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 166079,
},
[392884] = {
["source"] = "Tevgai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195132,
},
[123654] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[79932] = {
["source"] = "Malothas",
["event"] = "SPELL_CAST_START",
["npcID"] = 82008,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97259,
},
[83877] = {
["source"] = "Oathsworn Pathfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 44932,
},
[445407] = {
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[357354] = {
["source"] = "Loom Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 180427,
},
[383975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Windlord",
["npcID"] = 200390,
},
[13860] = {
["source"] = "Priest of Sseratus",
["event"] = "SPELL_CAST_START",
["npcID"] = 28035,
},
[386026] = {
["source"] = "Unstable Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 194895,
},
[447456] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[209410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Arcanist",
["npcID"] = 104247,
},
[260907] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[418791] = {
["source"] = "Bill",
["event"] = "SPELL_CAST_START",
["npcID"] = 211062,
},
[318449] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[390983] = {
["source"] = "Lava Phoenix",
["event"] = "SPELL_CAST_START",
["npcID"] = 191637,
},
[400999] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[447458] = {
["source"] = "Queen Rickiticka",
["event"] = "SPELL_CAST_START",
["npcID"] = 215772,
},
[192005] = {
["encounterName"] = "Serpentrix",
["source"] = "Arcane Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97260,
},
[443363] = {
["source"] = "Swarming Sandwhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 215360,
},
[136716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Kros",
["npcID"] = 69341,
},
[429037] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[441316] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Leaper",
["npcID"] = 222214,
},
[59528] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1985,
},
[445412] = {
["source"] = "Shallowshell the Clacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 219278,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[386028] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[124309] = {
["source"] = "Ashfang Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 60932,
},
[116711] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60009,
},
[114516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grummle Trail Guide",
["npcID"] = 59593,
},
[407212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[265511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit Drain Totem",
["npcID"] = 135169,
},
[209413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Construct",
["npcID"] = 104270,
},
[322550] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[412455] = {
["source"] = "Alcanon",
["event"] = "SPELL_CAST_START",
["npcID"] = 203515,
},
[111668] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Raigonn",
["npcID"] = 56877,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1406,
},
[43291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Berserker",
["npcID"] = 24216,
},
[453607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[58966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Battle Rider",
["npcID"] = 29836,
},
[269310] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Titan Keeper Hezrel",
["npcID"] = 134419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2123,
},
[418796] = {
["source"] = "Bill",
["event"] = "SPELL_CAST_START",
["npcID"] = 211062,
},
[136719] = {
["encounterName"] = "Horridon",
["source"] = "Farraki Wastewalker",
["npcID"] = 69175,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[56969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[453616] = {
["source"] = "Doomguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 225493,
},
[32908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Falconer",
["npcID"] = 17994,
},
[244665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember of Azzinoth",
["npcID"] = 122712,
},
[199176] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[122413] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["npcID"] = 62711,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[420846] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[404756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Flamespinner",
["npcID"] = 202245,
},
[138768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horned Battlebeast",
["npcID"] = 69142,
},
[59529] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1985,
},
[404465] = {
["source"] = "Galakhad",
["event"] = "SPELL_CAST_START",
["npcID"] = 200717,
},
[145489] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zu Yin",
["npcID"] = 73724,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[420856] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[140620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Growth",
["npcID"] = 70153,
},
[123791] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[211464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felbound Enforcer",
["npcID"] = 104278,
},
[271371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Opportunist",
["npcID"] = 202673,
},
[200551] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[445422] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[406802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Flayer",
["npcID"] = 204314,
},
[383143] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[201226] = {
["source"] = "Bloodtainted Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 100531,
},
[9573] = {
["source"] = "Incendosaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 9318,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[313945] = {
["source"] = "Aqir Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161218,
},
[153395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[122064] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62405,
},
[4979] = {
["source"] = "Defias Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 1729,
},
[40076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[412661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invoq",
["npcID"] = 203627,
},
[178702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bittertide Brinetail",
["npcID"] = 131674,
},
[40844] = {
["source"] = "Bonechewer Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 22963,
},
[10277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Hunter",
["npcID"] = 4462,
},
[144530] = {
["source"] = "Yu'lon",
["event"] = "SPELL_CAST_START",
["npcID"] = 71955,
},
[308227] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[449522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drone Abductor",
["npcID"] = 219655,
},
[369193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Mender",
["npcID"] = 186602,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[271310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[138772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horned Battlebeast",
["npcID"] = 69142,
},
[59530] = {
["encounterName"] = "Volkhan",
["source"] = "Molten Golem",
["npcID"] = 28695,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1985,
},
[404473] = {
["source"] = "Galakhad",
["event"] = "SPELL_CAST_START",
["npcID"] = 200717,
},
[406527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Banana Bomber",
["npcID"] = 203641,
},
[200205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[160274] = {
["source"] = "Initiate of the Rising Sun",
["event"] = "SPELL_CAST_START",
["npcID"] = 79466,
},
[136725] = {
["encounterName"] = "Horridon",
["source"] = "Farraki Wastewalker",
["npcID"] = 69175,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[314889] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Exposed Synapse",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 159578,
},
[393348] = {
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 198263,
},
[139797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manchu",
["npcID"] = 70202,
},
[383651] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[206939] = {
["encounterName"] = "Gul'dan",
["source"] = "Gul'dan",
["encounterID"] = 1866,
["event"] = "SPELL_CAST_START",
["npcID"] = 104154,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[427001] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[157001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[36227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unamused Imp",
["npcID"] = 110721,
},
[196111] = {
["encounterName"] = "Serpentrix",
["source"] = "Seaspray Crab",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91793,
},
[396559] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[40078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[309961] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Il'gynoth",
["encounterID"] = 2345,
["event"] = "SPELL_CAST_START",
["npcID"] = 158328,
},
[398206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exhumed Spirit",
["npcID"] = 75979,
},
[369674] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[429051] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[211470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Mistress",
["npcID"] = 104300,
},
[122120] = {
["source"] = "Dreadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 62306,
},
[102227] = {
["source"] = "Enemy Tonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 54642,
},
[139803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manchu",
["npcID"] = 70202,
},
[365572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Grunt",
["npcID"] = 184733,
},
[453894] = {
["source"] = "Ren'khat",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[369328] = {
["isChanneled"] = true,
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184107,
},
[404480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Lieutenant",
["npcID"] = 201647,
},
[59019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitting Cobra",
["npcID"] = 29774,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[59020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitting Cobra",
["npcID"] = 29774,
},
[439559] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[407245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[112911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Hatred",
["npcID"] = 58810,
},
[424771] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[145944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zeal",
["npcID"] = 72661,
},
[134920] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[61579] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Construct",
["npcID"] = 28835,
},
[406918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[264694] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[441343] = {
["isChanneled"] = true,
["source"] = "Frenzied Leaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222214,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[117519] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Protector Kaolan",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60583,
},
[390150] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[470014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prototype Arcane Golem",
["npcID"] = 232550,
},
[312336] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 156575,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[143638] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["npcID"] = 71515,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[16568] = {
["isChanneled"] = true,
["source"] = "Amani Shadowspeaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215676,
},
[410629] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[144922] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71380,
},
[20297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dmong Naruuk",
["npcID"] = 60683,
},
[130317] = {
["source"] = "Osul Spitfire",
["event"] = "SPELL_CAST_START",
["npcID"] = 66289,
},
[369675] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[412678] = {
["source"] = "Klakatak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203618,
},
[267288] = {
["source"] = "Earthen Ring Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 135671,
},
[68950] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[385569] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[144923] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["npcID"] = 71380,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[34447] = {
["isChanneled"] = true,
["source"] = "Zandalari Arcanital",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69281,
},
[392194] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184580,
},
[417030] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[421402] = {
["source"] = "Primalist Pyremancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209963,
},
[453889] = {
["source"] = "Ren'khat",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[443397] = {
["source"] = "Sureki Venomblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 220193,
},
[403890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[129082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruqin Elder",
["npcID"] = 59826,
},
[396825] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[116295] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1390,
},
[147997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Chanter",
["npcID"] = 72897,
},
[376073] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[347679] = {
["encounterName"] = "The Tarragrue",
["source"] = "The Tarragrue",
["npcID"] = 175611,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2423,
},
[200218] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[211477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Legion Hound",
["npcID"] = 104277,
},
[343060] = {
["encounterName"] = "Stone Legion Generals",
["source"] = "General Grashaal",
["npcID"] = 168113,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2417,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[372539] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[198962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[392207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gareed",
["npcID"] = 200722,
},
[40079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[106841] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[214988] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[310298] = {
["source"] = "Sinister Soulcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 162717,
},
[147998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Chanter",
["npcID"] = 72897,
},
[396304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 197135,
},
[95283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hodgson",
["npcID"] = 69211,
},
[200216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[44164] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Fizzle",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24656,
},
[404496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Lieutenant",
["npcID"] = 201647,
},
[59021] = {
["source"] = "Unyielding Constrictor",
["event"] = "SPELL_CAST_START",
["npcID"] = 29768,
},
[313798] = {
["source"] = "Abyssal Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161173,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[264931] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[113999] = {
["encounterName"] = "Rattlegore",
["source"] = "Rattlegore",
["npcID"] = 59153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1428,
},
[136737] = {
["source"] = "Shan'ze Gravekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69235,
},
[125716] = {
["source"] = "Set'thik Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 64358,
},
[420671] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[61581] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Runeshaper",
["npcID"] = 28836,
},
[420881] = {
["source"] = "Zaqali Ashwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 208659,
},
[159382] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[124690] = {
["source"] = "Seething Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 61054,
},
[196127] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Siltwalker",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91790,
},
[306208] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156575,
},
[357402] = {
["source"] = "Mawsworn Scryer",
["event"] = "SPELL_CAST_START",
["npcID"] = 180070,
},
[412928] = {
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 203709,
},
[148001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Chanter",
["npcID"] = 72897,
},
[314400] = {
["source"] = "Living Blood",
["event"] = "SPELL_CAST_START",
["npcID"] = 159312,
},
[428868] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[405230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[386072] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[42669] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[148002] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[41360] = {
["source"] = "Promenade Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 23394,
},
[390169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trueborn Dropflame",
["npcID"] = 201439,
},
[142883] = {
["source"] = "Maragor",
["event"] = "SPELL_CAST_START",
["npcID"] = 71492,
},
[147568] = {
["source"] = "Great Turtle Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 220524,
},
[396313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Diruption",
["npcID"] = 201598,
},
[63032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Heartwise",
["npcID"] = 33443,
},
[39794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightsworn Vindicator",
["npcID"] = 22861,
},
[148003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Kilnmaster",
["npcID"] = 72896,
},
[396314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Filth Caller",
["npcID"] = 197122,
},
[463890] = {
["encounterName"] = "Bael'Gar",
["source"] = "Bael'Gar",
["npcID"] = 226303,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3044,
},
[142884] = {
["source"] = "Maragor",
["event"] = "SPELL_CAST_START",
["npcID"] = 71492,
},
[147817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonscale Firestorm",
["npcID"] = 72876,
},
[136741] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[119575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookin Shaman",
["npcID"] = 59435,
},
[61326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[148004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Kilnmaster",
["npcID"] = 72896,
},
[412693] = {
["source"] = "Magtembo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200111,
},
[400407] = {
["source"] = "Nidharr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201310,
},
[124692] = {
["source"] = "Spiteful Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 63839,
},
[429091] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[396317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[265487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[400413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[172578] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melded Berserker",
["npcID"] = 86372,
},
[412700] = {
["source"] = "Magtembo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200111,
},
[353540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 179152,
},
[48016] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["npcID"] = 26794,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2012,
},
[451608] = {
["source"] = "Liverseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 217744,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["npcID"] = 189893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[29120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honor Hold Archer",
["npcID"] = 16896,
},
[387910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algeth'ar Echoknight",
["npcID"] = 196200,
},
[32914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mutated Silkmoth",
["npcID"] = 57422,
},
[16587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Tutor",
["npcID"] = 8548,
},
[369921] = {
["source"] = "Blazing Firesquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 195448,
},
[16102] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[410655] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[372202] = {
["isChanneled"] = true,
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189464,
},
[34637] = {
["source"] = "Sunseeker Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 19505,
},
[183548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneclaw Grubmaster",
["npcID"] = 102404,
},
[139816] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["npcID"] = 70235,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[420895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[398370] = {
["source"] = "Calcifying Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 203342,
},
[376063] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Smoldering Hellion",
["npcID"] = 191510,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[451612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Destroyer",
["npcID"] = 224609,
},
[52624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Firestorm",
["npcID"] = 28584,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 200836,
},
[157331] = {
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[369703] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[441385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hollow Frostweaver",
["npcID"] = 222193,
},
[124182] = {
["isChanneled"] = true,
["source"] = "Battat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60728,
},
[386096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Witherer",
["npcID"] = 183954,
},
[361513] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["npcID"] = 181224,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2540,
},
[396325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disease Slasher",
["npcID"] = 197138,
},
[316463] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Mindgate",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158374,
},
[449567] = {
["source"] = "Undertide Deepfisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 226961,
},
[131627] = {
["source"] = "Sha Haunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66423,
},
[404517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[369602] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184580,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[192621] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["encounterID"] = 1816,
["event"] = "SPELL_CAST_START",
["npcID"] = 95886,
},
[396327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[406566] = {
["source"] = "Primal Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202264,
},
[408614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[410873] = {
["source"] = "Gust Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 45477,
},
[17228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phase Lasher",
["npcID"] = 13196,
},
[20811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Magus Doane",
["npcID"] = 397,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[443427] = {
["source"] = "Sureki Silkbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 220195,
},
[306228] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Flayed Soul",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 157005,
},
[463905] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[310324] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157354,
},
[377900] = {
["source"] = "Dragonbane Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 192582,
},
[43667] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23953,
},
[415556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dr. Boom",
["npcID"] = 215146,
},
[326707] = {
["encounterName"] = "Sire Denathrius",
["source"] = "Sire Denathrius",
["npcID"] = 167406,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2407,
},
[443636] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[144590] = {
["source"] = "Moonfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 71992,
},
[126283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmaster Sydow",
["npcID"] = 63240,
},
[322614] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[328756] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["npcID"] = 164567,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[396346] = {
["source"] = "Oppressive Artificer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184444,
},
[398380] = {
["source"] = "Seismodor, Earth's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199664,
},
[359483] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["npcID"] = 181224,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2540,
},
[273470] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[125720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Mist-Shaman",
["npcID"] = 60697,
},
[68895] = {
["source"] = "Spiteful Apparition",
["event"] = "SPELL_CAST_START",
["npcID"] = 36551,
},
[441384] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[139822] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["npcID"] = 70212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[420907] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[453683] = {
["source"] = "Nexus-Princess Ky'veza",
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[392239] = {
["source"] = "Snowy Mammoth Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 193514,
},
[443433] = {
["source"] = "Herald of Ansurek",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[136751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Cave Bat",
["npcID"] = 69351,
},
[410870] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[400631] = {
["source"] = "Rampant Tide",
["event"] = "SPELL_CAST_START",
["npcID"] = 201463,
},
[279614] = {
["source"] = "Dark Iron Grenadier",
["event"] = "SPELL_CAST_START",
["npcID"] = 131814,
},
[355381] = {
["source"] = "Reality Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184185,
},
[136748] = {
["source"] = "Shan'ze Soulripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69236,
},
[55101] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["npcID"] = 29305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1980,
},
[279615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Grenadier",
["npcID"] = 131814,
},
[136752] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Lu'lin",
["npcID"] = 68905,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1560,
},
[398385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Blazehound",
["npcID"] = 207429,
},
[260223] = {
["source"] = "Furious Guardian Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 148998,
},
[443436] = {
["source"] = "Herald of Ansurek",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[30923] = {
["encounterName"] = "The Maker",
["source"] = "The Maker",
["npcID"] = 17381,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1922,
},
[439341] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[224806] = {
["source"] = "Bilegut",
["event"] = "SPELL_CAST_START",
["npcID"] = 146714,
},
[121114] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[395427] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[125212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gaarn the Toxic",
["npcID"] = 50340,
},
[318525] = {
["source"] = "Shath'Yar Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 163690,
},
[40946] = {
["encounterName"] = "Supremus",
["source"] = "Illidari Fearbringer",
["encounterID"] = 602,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22954,
},
[118552] = {
["source"] = "Mogu'shan Secret-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61131,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200926,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[123461] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["encounterID"] = 1506,
["event"] = "SPELL_CAST_START",
["npcID"] = 62983,
},
[461869] = {
["source"] = "The Ringing Death",
["event"] = "SPELL_CAST_START",
["npcID"] = 214162,
},
[283404] = {
["source"] = "Horde Bombardier",
["event"] = "SPELL_CAST_START",
["npcID"] = 145800,
},
[130120] = {
["source"] = "Apparition of Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 66100,
},
[377912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[461870] = {
["source"] = "Xal'atath",
["event"] = "SPELL_CAST_START",
["npcID"] = 229227,
},
[406581] = {
["source"] = "Primal Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202264,
},
[449584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undertide Deepfisher",
["npcID"] = 226961,
},
[80158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Warbringer",
["npcID"] = 42696,
},
[314433] = {
["source"] = "Living Blood",
["event"] = "SPELL_CAST_START",
["npcID"] = 159312,
},
[422964] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[400439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmslayer Angvardi",
["npcID"] = 201013,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[429108] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Cycle Warden",
["npcID"] = 209800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[398392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfira Wanderling",
["npcID"] = 205808,
},
[441395] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[193069] = {
["source"] = "Felsworn Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 96587,
},
[429109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[126235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jade Warrior",
["npcID"] = 65170,
},
[310340] = {
["encounterName"] = "The Hivemind",
["source"] = "Ka'zir",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157253,
},
[386107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Hexclaw",
["npcID"] = 183995,
},
[429110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[398394] = {
["source"] = "Deep Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 205810,
},
[336834] = {
["source"] = "Monstrous Riftcrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184606,
},
[18392] = {
["encounterName"] = "Onyxia",
["source"] = "Onyxia",
["encounterID"] = 1084,
["event"] = "SPELL_CAST_START",
["npcID"] = 10184,
},
[387186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 217557,
},
[201839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Summoner",
["npcID"] = 99366,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[328772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[396348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 197134,
},
[422969] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[200238] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1839,
},
[328773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[396349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 197133,
},
[398397] = {
["source"] = "Magmaclaw Supplicant",
["event"] = "SPELL_CAST_START",
["npcID"] = 203933,
},
[388862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[392484] = {
["source"] = "Moskhoi",
["event"] = "SPELL_CAST_START",
["npcID"] = 195093,
},
[396350] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 197133,
},
[60236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storming Vortex",
["npcID"] = 28547,
},
[40251] = {
["encounterName"] = "Teron Gorefiend",
["source"] = "Teron Gorefiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 22871,
},
[412378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[396351] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[398399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chittering Acidclaw",
["npcID"] = 201093,
},
[196144] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Siltwalker",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91790,
},
[271439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bombarding Zeppelin",
["npcID"] = 136958,
},
[461880] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[398400] = {
["source"] = "Seismodor, Earth's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199664,
},
[392257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bruffalon Bull",
["npcID"] = 195552,
},
[377923] = {
["source"] = "Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186570,
},
[119922] = {
["encounterName"] = "Trial of the King",
["source"] = "Kuai the Brute",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61442,
},
[390210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 197130,
},
[198715] = {
["source"] = "Val'kyr Battlemaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 100876,
},
[429119] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[289871] = {
["source"] = "Tyrande Whisperwind",
["event"] = "SPELL_CAST_START",
["npcID"] = 146927,
},
[119693] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91808,
},
[435263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 217557,
},
[396355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Plunderer",
["npcID"] = 201292,
},
[398403] = {
["source"] = "Furious Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 200431,
},
[271143] = {
["source"] = "Drust Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 137758,
},
[271443] = {
["source"] = "Toadstool Danner",
["event"] = "SPELL_CAST_START",
["npcID"] = 200260,
},
[395707] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[377927] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 192690,
},
[40875] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[328781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Lurker",
["npcID"] = 203639,
},
[128283] = {
["source"] = "Shuffling Mistlurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 65404,
},
[260651] = {
["source"] = "Karkinus the Capsizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200907,
},
[390926] = {
["source"] = "Professor Gastrinax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203521,
},
[419052] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Future Self",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 208959,
},
[63891] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[202108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightshard Shaper",
["npcID"] = 90998,
},
[425027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[160312] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Cleric",
["npcID"] = 77134,
},
[430503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomshadow",
["npcID"] = 208029,
},
[40598] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[148029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pterrordax",
["npcID"] = 73223,
},
[124284] = {
["source"] = "Urang",
["event"] = "SPELL_CAST_START",
["npcID"] = 60725,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[394795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonewrecker Tokara",
["npcID"] = 193442,
},
[44503] = {
["source"] = "Wretched Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 24690,
},
[425030] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[387317] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Apostle",
["npcID"] = 209911,
},
[472128] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 221427,
},
[334929] = {
["encounterName"] = "Stone Legion Generals",
["source"] = "General Kaal",
["npcID"] = 168112,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2417,
},
[14887] = {
["source"] = "Al'tabim the All-Seeing",
["event"] = "SPELL_CAST_START",
["npcID"] = 70000,
},
[314452] = {
["source"] = "Leeching Parasite",
["event"] = "SPELL_CAST_START",
["npcID"] = 159309,
},
[365646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[159290] = {
["source"] = "Solar Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 76097,
},
[320596] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 162691,
},
[201959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113536,
},
[260654] = {
["source"] = "Karkinus the Capsizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200907,
},
[59160] = {
["encounterName"] = "General Bjarngrim",
["source"] = "Stormforged Lieutenant",
["npcID"] = 29240,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1987,
},
[118094] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[69591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Soldier",
["npcID"] = 36925,
},
[363607] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Domination Core",
["npcID"] = 181244,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2540,
},
[425033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ignit the Firebranded",
["npcID"] = 209620,
},
[15655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Laughing Skull Enforcer",
["npcID"] = 17370,
},
[118049] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[365649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sacred Matrix Automa",
["npcID"] = 184734,
},
[218755] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Festerhide Grizzly",
["npcID"] = 95779,
},
[139838] = {
["encounterName"] = "Megaera",
["source"] = "Venomous Head",
["npcID"] = 70247,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[72014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Shaman",
["npcID"] = 38326,
},
[390223] = {
["source"] = "Flashfrost Tarasek",
["event"] = "SPELL_CAST_START",
["npcID"] = 187089,
},
[425035] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[112930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lu-Shero",
["npcID"] = 69274,
},
[396367] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 197142,
},
[386700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Hailcrasher",
["npcID"] = 201036,
},
[116] = {
["npcID"] = 188027,
},
[200248] = {
["source"] = "Risen Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 98280,
},
[111772] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[387849] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[425037] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[119586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[196870] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[195129] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[204344] = {
["source"] = "Blacktalon Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 191955,
},
[459850] = {
["source"] = "Exalted Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[396370] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[153794] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[306971] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[369750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ceeqa the Peacetaker",
["npcID"] = 188708,
},
[136769] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[154175] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[278961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diseased Lasher",
["npcID"] = 133870,
},
[139841] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["npcID"] = 70235,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[453709] = {
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[411002] = {
["source"] = "Cloud Prince",
["event"] = "SPELL_CAST_START",
["npcID"] = 45917,
},
[365661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[111723] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["npcID"] = 56877,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[136770] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[418202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[13748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Arcweaver",
["npcID"] = 70401,
},
[22478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zevrim Thornhoof",
["npcID"] = 11490,
},
[420947] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[392279] = {
["source"] = "Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 192873,
},
[369754] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[361568] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Renewal",
["npcID"] = 181546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[40508] = {
["encounterName"] = "Gurtogg Bloodboil",
["source"] = "Gurtogg Bloodboil",
["encounterID"] = 605,
["event"] = "SPELL_CAST_START",
["npcID"] = 22948,
},
[392280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaurdyth",
["npcID"] = 197835,
},
[407640] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[461904] = {
["source"] = "Orb of Ascendance",
["event"] = "SPELL_CAST_START",
["npcID"] = 229296,
},
[183539] = {
["source"] = "Rotdrool Grabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 91002,
},
[120213] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Big Gladiator Chief",
["npcID"] = 60170,
},
[372201] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[390982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodial Protector",
["npcID"] = 192694,
},
[373852] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raest Magespear",
["npcID"] = 116409,
},
[126556] = {
["source"] = "Huo-Shuang",
["event"] = "SPELL_CAST_START",
["npcID"] = 63691,
},
[140427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mighty Devilsaur",
["npcID"] = 69406,
},
[445524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrillwing Hunter En'kilah",
["npcID"] = 222038,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["npcID"] = 88862,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[316756] = {
["encounterName"] = "The Hivemind",
["source"] = "Acidic Aqir",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 161019,
},
[8994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Shadowcaster",
["npcID"] = 436,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[414945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Rotspreader",
["npcID"] = 207453,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[197797] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Risen Arcanist",
["npcID"] = 100486,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[275563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[32330] = {
["source"] = "Lykul Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 17732,
},
[320614] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 164702,
},
[200105] = {
["source"] = "Ghostly Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 98368,
},
[145989] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamated Hubris",
["npcID"] = 72658,
},
[384095] = {
["source"] = "Ohuna Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194254,
},
[134370] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[111398] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[41396] = {
["source"] = "Ardent Host",
["event"] = "SPELL_CAST_START",
["npcID"] = 22959,
},
[441626] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[48280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blingtron 7000",
["npcID"] = 153897,
},
[194112] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[122149] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62408,
},
[411433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Chronoweaver",
["npcID"] = 205384,
},
[443482] = {
["source"] = "Nightfall Shadeguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 217519,
},
[398447] = {
["source"] = "Seismodor, Earth's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199664,
},
[371812] = {
["source"] = "Filth Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 197122,
},
[200256] = {
["source"] = "Arcane Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 101549,
},
[41114] = {
["source"] = "Ashtongue Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 22845,
},
[125733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swamp Rodent",
["npcID"] = 60733,
},
[365676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sacred Matrix Automa",
["npcID"] = 184734,
},
[365678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sacred Matrix Automa",
["npcID"] = 184734,
},
[283772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rin'zaka the Galefist",
["npcID"] = 150745,
},
[118903] = {
["source"] = "Glintrok Hexxer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61216,
},
[439401] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Pillager",
["npcID"] = 199374,
},
[83926] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[13608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Silverbrook Lumberjack",
["npcID"] = 226197,
},
[260666] = {
["source"] = "Gilded Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 132126,
},
[257656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[455895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramstein the Gorger",
["npcID"] = 10439,
},
[396388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[390245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplung Pebblefist",
["npcID"] = 204014,
},
[441452] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[225855] = {
["source"] = "Shal'dorei Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 112678,
},
[144969] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[423010] = {
["source"] = "Zealous Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 210813,
},
[413621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[55704] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 29981,
},
[137458] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[408677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Scaleguard",
["npcID"] = 198871,
},
[193092] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[396641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kapraku",
["npcID"] = 203466,
},
[76813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41096,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[377962] = {
["source"] = "Barkback Yeti",
["event"] = "SPELL_CAST_START",
["npcID"] = 190325,
},
[41370] = {
["source"] = "Illidari Archon",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[472159] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 221427,
},
[400488] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[265337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorestained Piglet",
["npcID"] = 135048,
},
[145995] = {
["source"] = "Kor'kron Dark Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72770,
},
[425062] = {
["source"] = "Zaqali Steelshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 210173,
},
[410728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 201411,
},
[59800] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1984,
},
[316532] = {
["source"] = "Willing Sacrifice",
["event"] = "SPELL_CAST_START",
["npcID"] = 162647,
},
[200261] = {
["source"] = "Soul-Torn Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 98243,
},
[204611] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[145996] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Zak'tar",
["npcID"] = 71409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[76590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[388911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Battleaxe",
["npcID"] = 196577,
},
[453733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[123691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kang Bramblestaff",
["npcID"] = 58206,
},
[375919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Streamside Scythid",
["npcID"] = 191469,
},
[209477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mana Wyrm",
["npcID"] = 105703,
},
[125736] = {
["source"] = "Apparition of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 64368,
},
[373872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[128708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Brew Alemental",
["npcID"] = 59521,
},
[320631] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 164702,
},
[119593] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[365682] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Xy Acolyte",
["npcID"] = 184140,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2553,
},
[32363] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[40091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[34716] = {
["encounterName"] = "Warp Splinter",
["source"] = "Warp Splinter",
["npcID"] = 17977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1929,
},
[283773] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rin'zaka the Galefist",
["npcID"] = 150745,
},
[386555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
},
[86830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[396400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[406639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[343159] = {
["encounterName"] = "Shriekwing",
["source"] = "Caramain",
["npcID"] = 173444,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2398,
},
[377971] = {
["source"] = "Massive Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 191951,
},
[365686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 186128,
},
[463977] = {
["encounterName"] = "Lord Incendius",
["source"] = "Lord Incendius",
["encounterID"] = 3043,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226304,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184580,
},
[443500] = {
["source"] = "Royal Swarmguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 220197,
},
[265346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadwing Raven",
["npcID"] = 135049,
},
[8873] = {
["source"] = "Scorchscale Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 23687,
},
[258199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 130400,
},
[136987] = {
["isChanneled"] = true,
["source"] = "Zandalari Spiritweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69285,
},
[265347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadwing Raven",
["npcID"] = 135049,
},
[144606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Niuzao",
["npcID"] = 71954,
},
[144610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Niuzao",
["npcID"] = 71954,
},
[320637] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 162691,
},
[377206] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189813,
},
[283778] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rin'zaka the Galefist",
["npcID"] = 150745,
},
[443510] = {
["source"] = "Nightfall Executor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217516,
},
[372562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Skirmisher",
["npcID"] = 195269,
},
[10348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leprous Machinesmith",
["npcID"] = 6224,
},
[38556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Headhunter",
["npcID"] = 74228,
},
[120951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho Cho the Wicked",
["npcID"] = 60090,
},
[400941] = {
["source"] = "Dampened Bones",
["event"] = "SPELL_CAST_START",
["npcID"] = 203470,
},
[429172] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["npcID"] = 40788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[64153] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[41276] = {
["source"] = "Bonechewer Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 23196,
},
[147879] = {
["source"] = "Molten Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 72888,
},
[399086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[79176] = {
["isChanneled"] = true,
["source"] = "Azure Prickly Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60437,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[41372] = {
["source"] = "Illidari Archon",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[283775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rin'zaka the Galefist",
["npcID"] = 150745,
},
[275200] = {
["source"] = "Dunegorger Kraulok",
["event"] = "SPELL_CAST_START",
["npcID"] = 138794,
},
[443507] = {
["source"] = "Royal Swarmguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 220197,
},
[369788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Necksnapper",
["npcID"] = 186109,
},
[227913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[388225] = {
["source"] = "Glacial Giantess",
["event"] = "SPELL_CAST_START",
["npcID"] = 193075,
},
[394362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boulderfist Ogre",
["npcID"] = 215774,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[317791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
},
[374624] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[341133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrian Executor",
["npcID"] = 165470,
},
[410743] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignited Plume",
["npcID"] = 205167,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[377991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[386173] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[429176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Aquamage",
["npcID"] = 40943,
},
[139866] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["npcID"] = 70250,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[47773] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26731,
},
[451702] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[445559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[406652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[196175] = {
["source"] = "Mak'rana Hardshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 95947,
},
[265368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[365708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestor Krugan",
["npcID"] = 185363,
},
[414844] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[143958] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Gloom",
["npcID"] = 71477,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[396415] = {
["source"] = "Charged Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 201796,
},
[398463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[161056] = {
["source"] = "Frenzied Animus",
["event"] = "SPELL_CAST_START",
["npcID"] = 96579,
},
[429180] = {
["source"] = "Cycle Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 210518,
},
[398464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[269456] = {
["encounterName"] = "Viq'Goth",
["source"] = "Viq'Goth",
["npcID"] = 128652,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[386259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[139498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corpse Spider",
["npcID"] = 68248,
},
[431309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowmage",
["npcID"] = 213892,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["npcID"] = 131817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[34974] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["encounterID"] = 1947,
["event"] = "SPELL_CAST_START",
["npcID"] = 17826,
},
[278919] = {
["source"] = "Blighted Haunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 141930,
},
[20716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bronze Shrine Warden",
["npcID"] = 26277,
},
[384132] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[129325] = {
["source"] = "Bloodthirsty Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 62945,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[115010] = {
["encounterName"] = "Taran Zhu",
["source"] = "Gripping Hatred",
["npcID"] = 59804,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[353417] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[306319] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 156575,
},
[341131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Court Executor",
["npcID"] = 174194,
},
[384134] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[353418] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[144985] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[414851] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207438,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[320655] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 162691,
},
[396432] = {
["source"] = "Primal Magmawing",
["event"] = "SPELL_CAST_START",
["npcID"] = 200588,
},
[373897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[375945] = {
["source"] = "Unruly Goat",
["event"] = "SPELL_CAST_START",
["npcID"] = 197176,
},
[143962] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Sorrow",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71481,
},
[396423] = {
["source"] = "Charged Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 201796,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[253517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[139867] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[412806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Dragon",
["npcID"] = 205804,
},
[256589] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["npcID"] = 126847,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[337110] = {
["encounterName"] = "The Council of Blood",
["source"] = "Baroness Frieda",
["npcID"] = 166969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2412,
},
[377383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[265371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enthralled Guard",
["npcID"] = 131585,
},
[198263] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[369411] = {
["source"] = "Cavern Seeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184301,
},
[410760] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[255567] = {
["source"] = "T'lonja",
["event"] = "SPELL_CAST_START",
["npcID"] = 128455,
},
[455878] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Oozekhan",
["npcID"] = 216049,
},
[126256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani Outrider",
["npcID"] = 64639,
},
[369806] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[136797] = {
["encounterName"] = "Horridon",
["source"] = "Zandalari Dinomancer",
["npcID"] = 69221,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1575,
},
[148730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Brewmaster",
["npcID"] = 73018,
},
[375950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[61596] = {
["isChanneled"] = true,
["source"] = "Stormforged Construct",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28835,
},
[265372] = {
["source"] = "Bewitched Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 131587,
},
[455877] = {
["source"] = "Bloodswell Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 220891,
},
[30932] = {
["source"] = "Shattered Hand Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 17670,
},
[451734] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[347283] = {
["encounterName"] = "The Tarragrue",
["source"] = "The Tarragrue",
["npcID"] = 175611,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2423,
},
[15785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mana Leech",
["npcID"] = 19306,
},
[261711] = {
["source"] = "Faithless Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 129007,
},
[127280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Skirmisher",
["npcID"] = 58738,
},
[396430] = {
["source"] = "Arcane Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 203434,
},
[64156] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[167092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cackling Pyromaniac",
["npcID"] = 79510,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Channeler",
["npcID"] = 197985,
},
[445577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrillwing Hunter En'kilah",
["npcID"] = 222038,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[392336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[369811] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[82742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Venomblade",
["npcID"] = 70328,
},
[8362] = {
["source"] = "Mage Hunter Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 26728,
},
[455825] = {
["encounterName"] = "Warchief Kargath Bladefist",
["source"] = "Warchief Kargath Bladefist",
["encounterID"] = 1938,
["event"] = "SPELL_CAST_START",
["npcID"] = 16808,
},
[378003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[265377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Headhunter",
["npcID"] = 133663,
},
[227925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Understudy",
["npcID"] = 114526,
},
[142934] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Mogu Shadow Ritualist",
["npcID"] = 71393,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[118072] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ook of Dook",
["npcID"] = 60188,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blistering Shalewing",
["npcID"] = 203596,
},
[128305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Suna Silentstrike",
["npcID"] = 61055,
},
[138668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Frost Warden",
["npcID"] = 69910,
},
[341146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Court Executor",
["npcID"] = 174194,
},
[273570] = {
["source"] = "Ringtail Bandicoon",
["event"] = "SPELL_CAST_START",
["npcID"] = 139166,
},
[382101] = {
["source"] = "Spellsworn Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 203737,
},
[209495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Construct",
["npcID"] = 104270,
},
[221783] = {
["encounterName"] = "Gul'dan",
["source"] = "Gul'dan",
["encounterID"] = 1866,
["event"] = "SPELL_CAST_START",
["npcID"] = 104154,
},
[49309] = {
["source"] = "Gold Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 32340,
},
[382102] = {
["source"] = "Spellsworn Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 203737,
},
[392341] = {
["source"] = "Tevgai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195132,
},
[378112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Intrusive Swoglet",
["npcID"] = 193763,
},
[359629] = {
["source"] = "Grasslands Vombata",
["event"] = "SPELL_CAST_START",
["npcID"] = 178913,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[396019] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[41382] = {
["isChanneled"] = true,
["source"] = "Illidari Battle-mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23402,
},
[97019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen of Hethiss",
["npcID"] = 52323,
},
[64157] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[400542] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 193460,
},
[369818] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[449690] = {
["source"] = "Queen's Guard Ge'zah",
["event"] = "SPELL_CAST_START",
["npcID"] = 223839,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[17235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerub'enkan",
["npcID"] = 10437,
},
[427159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[10346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechano-Tank",
["npcID"] = 6225,
},
[373915] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[142947] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["npcID"] = 71395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[44961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Sea Dog",
["npcID"] = 24911,
},
[82760] = {
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 44982,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[421059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[410776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Protector",
["npcID"] = 204658,
},
[54431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dojani Surveyor",
["npcID"] = 58068,
},
[373917] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[163447] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[459923] = {
["source"] = "Exalted Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[146595] = {
["encounterName"] = "Sha of Pride",
["source"] = "Norushen",
["npcID"] = 71965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1604,
},
[398501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Rock Viper",
["npcID"] = 203783,
},
[369823] = {
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[115509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Warden",
["npcID"] = 59751,
},
[341145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrian Hierarch",
["npcID"] = 174090,
},
[153524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plagued Bat",
["npcID"] = 75459,
},
[459925] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[470164] = {
["encounterName"] = "Ambassador Flamelash",
["source"] = "Ambassador Flamelash",
["npcID"] = 226302,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3047,
},
[324776] = {
["source"] = "Mistveil Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 166275,
},
[449687] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[427162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[427200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[398494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember Shalewing",
["npcID"] = 204381,
},
[425115] = {
["source"] = "Fruitface",
["event"] = "SPELL_CAST_START",
["npcID"] = 209913,
},
[40097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Soothsayer",
["npcID"] = 22876,
},
[396447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Frostback",
["npcID"] = 200894,
},
[260696] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[457880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavernous Shrieker",
["npcID"] = 204109,
},
[106807] = {
["encounterName"] = "Ook-Ook",
["source"] = "Ook-Ook",
["npcID"] = 56637,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1412,
},
[255577] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["encounterID"] = 2084,
["event"] = "SPELL_CAST_START",
["npcID"] = 122967,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[425117] = {
["isChanneled"] = true,
["source"] = "Fruitface",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209913,
},
[369828] = {
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[368930] = {
["source"] = "Shadowbat",
["event"] = "SPELL_CAST_START",
["npcID"] = 185838,
},
[260697] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[357550] = {
["source"] = "Soulember",
["event"] = "SPELL_CAST_START",
["npcID"] = 176940,
},
[390290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[348313] = {
["encounterName"] = "The Tarragrue",
["source"] = "The Tarragrue",
["npcID"] = 175611,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2423,
},
[402769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 202260,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[412388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[421024] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[260698] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[449693] = {
["source"] = "Queen's Guard Re'zah",
["event"] = "SPELL_CAST_START",
["npcID"] = 223822,
},
[114999] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[255579] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["encounterID"] = 2084,
["event"] = "SPELL_CAST_START",
["npcID"] = 122967,
},
[398500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conflagrated Rock Cobra",
["npcID"] = 203328,
},
[457881] = {
["source"] = "Zekvir",
["event"] = "SPELL_CAST_START",
["npcID"] = 227471,
},
[143977] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["npcID"] = 71155,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[406686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Magmashaper",
["npcID"] = 202257,
},
[162407] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["npcID"] = 77803,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[136986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spear-Shaper",
["npcID"] = 69388,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[384161] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[395645] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[449696] = {
["source"] = "Queen's Guard Ge'zah",
["event"] = "SPELL_CAST_START",
["npcID"] = 223839,
},
[257641] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Irontide Powdershot",
["npcID"] = 129928,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2098,
},
[125349] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krosh",
["npcID"] = 56833,
},
[195172] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[255593] = {
["isChanneled"] = true,
["source"] = "Sawtooth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 139287,
},
[115006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wuk-Wuk",
["npcID"] = 56691,
},
[3611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Magus Doane",
["npcID"] = 397,
},
[398504] = {
["source"] = "Sulfurous Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205814,
},
[257629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[401109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Oldblood",
["npcID"] = 201054,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["npcID"] = 190187,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[260701] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[119775] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[260700] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[198245] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[47780] = {
["source"] = "Steward",
["event"] = "SPELL_CAST_START",
["npcID"] = 26729,
},
[427175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[41378] = {
["source"] = "Priestess of Delight",
["event"] = "SPELL_CAST_START",
["npcID"] = 22964,
},
[148085] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blackfuse Engineer",
["npcID"] = 73095,
},
[75068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Boomer",
["npcID"] = 140536,
},
[260703] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[371887] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[365744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Zeltoth",
["npcID"] = 184651,
},
[373943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[328885] = {
["encounterName"] = "Sun King's Salvation",
["source"] = "High Torturer Darithos",
["npcID"] = 168973,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2402,
},
[461989] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[373936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[392366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Juggernaut",
["npcID"] = 197793,
},
[386223] = {
["source"] = "Primal Stormshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 194896,
},
[437417] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[371875] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[466086] = {
["encounterName"] = "General Angerforge",
["source"] = "Anvilrage Medic",
["npcID"] = 231561,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3045,
},
[320696] = {
["source"] = "Stitched Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 163121,
},
[265407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Banquet Steward",
["npcID"] = 131586,
},
[154221] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zipteq",
["npcID"] = 78734,
},
[129643] = {
["source"] = "Corporal Jackson Silver",
["event"] = "SPELL_CAST_START",
["npcID"] = 65881,
},
[115002] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[374022] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 190381,
},
[396476] = {
["source"] = "Piskato",
["event"] = "SPELL_CAST_START",
["npcID"] = 195973,
},
[125241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gaarn the Toxic",
["npcID"] = 50340,
},
[136816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fetish-Binder",
["npcID"] = 69155,
},
[435366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[375988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amberfur Slyvern",
["npcID"] = 199785,
},
[435403] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[17620] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maleki the Pallid",
["npcID"] = 10438,
},
[428765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
},
[396475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomforge Arcanasmith",
["npcID"] = 232458,
},
[44196] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24674,
},
[138763] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[449709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burgle-gurgle",
["npcID"] = 214545,
},
[115003] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[373279] = {
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_START",
["npcID"] = 189988,
},
[116027] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[310329] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157602,
},
[451758] = {
["source"] = "Liverseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 217744,
},
[84799] = {
["encounterName"] = "Lockmaw",
["source"] = "Augh",
["encounterID"] = 1054,
["event"] = "SPELL_CAST_START",
["npcID"] = 45379,
},
[369853] = {
["source"] = "Burly Rock-Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 184019,
},
[457902] = {
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 207802,
},
[378022] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[123707] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["encounterID"] = 1501,
["event"] = "SPELL_CAST_START",
["npcID"] = 62837,
},
[162500] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["npcID"] = 77803,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[271138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bombarding Zeppelin",
["npcID"] = 136957,
},
[412868] = {
["source"] = "Karokta",
["event"] = "SPELL_CAST_START",
["npcID"] = 203625,
},
[225514] = {
["source"] = "Irontide Brinecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 131303,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["npcID"] = 29307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[384194] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[459952] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[5174] = {
["encounterName"] = "Cookie",
["source"] = "Cookie",
["npcID"] = 645,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2986,
},
[34984] = {
["source"] = "Fen Ray",
["event"] = "SPELL_CAST_START",
["npcID"] = 17731,
},
[466096] = {
["encounterName"] = "General Angerforge",
["source"] = "Anvilrage Medic",
["npcID"] = 231561,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3045,
},
[427189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[423200] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[250096] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[147309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windfeather Nestkeeper",
["npcID"] = 72761,
},
[394426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Flamecaller",
["npcID"] = 198503,
},
[388283] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[443640] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[209033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Guard",
["npcID"] = 104246,
},
[394427] = {
["isChanneled"] = true,
["source"] = "Kurog Grimtotem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198503,
},
[322756] = {
["source"] = "Zolramus Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 165137,
},
[203373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Observant Inquisitor",
["npcID"] = 107449,
},
[367807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Escapee",
["npcID"] = 185626,
},
[451765] = {
["event"] = "SPELL_CAST_START",
["source"] = "[DNT]Teleport Bunny Prime",
["npcID"] = 224528,
},
[255591] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["encounterID"] = 2084,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122967,
},
[368379] = {
["source"] = "The Engulfer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183516,
},
[392381] = {
["source"] = "Fledgling Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198815,
},
[404654] = {
["source"] = "Grugoth the Hullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200721,
},
[421029] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[118077] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60585,
},
[253544] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[139894] = {
["source"] = "Horgak the Enslaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 70176,
},
[55715] = {
["source"] = "Earthen Elite",
["event"] = "SPELL_CAST_START",
["npcID"] = 29980,
},
[256616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrimshaw Gutter",
["npcID"] = 138002,
},
[257640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[143990] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[41184] = {
["source"] = "Ashtongue Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[146038] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kor'kron Gunner",
["npcID"] = 72784,
},
[466103] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Enforcer",
["npcID"] = 232250,
},
[139895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Fed Construct",
["npcID"] = 70308,
},
[355525] = {
["encounterName"] = "Painsmith Raznal",
["source"] = "Painsmith Raznal",
["encounterID"] = 2430,
["event"] = "SPELL_CAST_START",
["npcID"] = 176523,
},
[316618] = {
["source"] = "Aqir Swarmkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 162303,
},
[425149] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[200291] = {
["source"] = "Risen Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 98691,
},
[388290] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189813,
},
[6358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bronneth",
["npcID"] = 1863,
},
[259187] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[260699] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[427169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[316620] = {
["source"] = "Anubisath Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 162508,
},
[326824] = {
["encounterName"] = "Sire Denathrius",
["source"] = "Echo of Sin",
["npcID"] = 167999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2407,
},
[80195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Bruiser",
["npcID"] = 42692,
},
[404636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[115506] = {
["source"] = "Scarlet Flamethrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 59705,
},
[466107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Officer",
["npcID"] = 232247,
},
[394436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shas'ith",
["npcID"] = 189822,
},
[470203] = {
["encounterName"] = "Ambassador Flamelash",
["source"] = "Ambassador Flamelash",
["encounterID"] = 3047,
["event"] = "SPELL_CAST_START",
["npcID"] = 226302,
},
[421020] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[143974] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["npcID"] = 71155,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[359587] = {
["source"] = "Basal Raptora",
["event"] = "SPELL_CAST_START",
["npcID"] = 179004,
},
[125758] = {
["source"] = "Apparition of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 64368,
},
[439488] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[466109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Rogue",
["npcID"] = 232252,
},
[369865] = {
["source"] = "Nokhud Spearthrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 191570,
},
[322767] = {
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 164921,
},
[64163] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Yogg-Saron",
["encounterID"] = 1143,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 33288,
},
[264608] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[40102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqueous Spawn",
["npcID"] = 22883,
},
[131091] = {
["source"] = "Corporal Jackson Silver",
["event"] = "SPELL_CAST_START",
["npcID"] = 65881,
},
[378012] = {
["source"] = "Lavacaller Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 186823,
},
[466111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Rogue",
["npcID"] = 232252,
},
[361676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Halondrus",
["npcID"] = 180906,
},
[404679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[341199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrian Ranger",
["npcID"] = 174093,
},
[83780] = {
["source"] = "Pygmy Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 44897,
},
[451778] = {
["source"] = "Dogmatic Machine Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212878,
},
[265433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[211571] = {
["source"] = "Felsworn Chaos-Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 113012,
},
[392394] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[139900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbringer Draz'kil",
["npcID"] = 70445,
},
[392927] = {
["source"] = "Yaankhi",
["event"] = "SPELL_CAST_START",
["npcID"] = 195101,
},
[312584] = {
["source"] = "Aqir Venomweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 161229,
},
[392395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[60227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
},
[328857] = {
["encounterName"] = "Shriekwing",
["source"] = "Shriekwing",
["npcID"] = 164406,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2398,
},
[431303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowmage",
["npcID"] = 223994,
},
[116018] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["event"] = "SPELL_CAST_START",
["npcID"] = 60009,
},
[265376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Headhunter",
["npcID"] = 133663,
},
[396492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piskato",
["npcID"] = 195973,
},
[431304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Shadow",
["npcID"] = 211341,
},
[449734] = {
["encounterName"] = "Rasha'nan",
["event"] = "SPELL_CAST_START",
["source"] = "Rasha'nan",
["npcID"] = 213937,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[388302] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[118081] = {
["source"] = "Curious Water Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 57673,
},
[392398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Thundercloud",
["npcID"] = 197509,
},
[435401] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[15979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phase Lasher",
["npcID"] = 13196,
},
[79174] = {
["source"] = "Amberglass Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 54557,
},
[112944] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[258672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 126918,
},
[355540] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[311116] = {
["source"] = "Spiked Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 159416,
},
[123499] = {
["source"] = "Set'thik Fanatic",
["event"] = "SPELL_CAST_START",
["npcID"] = 63031,
},
[139903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbringer Draz'kil",
["npcID"] = 70445,
},
[330968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Belligerent Waiter",
["npcID"] = 174842,
},
[8364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[131545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icy Orb",
["npcID"] = 66940,
},
[201298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Burster",
["npcID"] = 100532,
},
[457853] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Taskmaker",
["npcID"] = 218444,
},
[373972] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[88170] = {
["source"] = "Turbulent Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 45924,
},
[435405] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[273633] = {
["source"] = "Extraction Point Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 137148,
},
[79175] = {
["isChanneled"] = true,
["source"] = "Azure Prickly Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60437,
},
[80514] = {
["isChanneled"] = true,
["source"] = "Skumblade Fleshripper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69210,
},
[407285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Skullcrusher",
["npcID"] = 202258,
},
[38557] = {
["source"] = "Zandalari Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 69065,
},
[209485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Manifestation",
["npcID"] = 105704,
},
[15232] = {
["encounterName"] = "Blood Guard Porung",
["source"] = "Shadowmoon Darkcaster",
["encounterID"] = 1935,
["event"] = "SPELL_CAST_START",
["npcID"] = 17694,
},
[443598] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[453749] = {
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[256627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrimshaw Enforcer",
["npcID"] = 129374,
},
[378420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Boulder",
["npcID"] = 200547,
},
[259462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandskitter Crab",
["npcID"] = 131675,
},
[388310] = {
["source"] = "Custodial Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[96415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razzashi Adder",
["npcID"] = 52085,
},
[392406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Warrior",
["npcID"] = 197982,
},
[260741] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[91263] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["encounterID"] = 1052,
["event"] = "SPELL_CAST_START",
["npcID"] = 44577,
},
[39592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Searing Totem",
["npcID"] = 22895,
},
[265352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Toad",
["npcID"] = 135052,
},
[410837] = {
["source"] = "Pyromancer Loregrain",
["event"] = "SPELL_CAST_START",
["npcID"] = 232571,
},
[396503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[439506] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[145999] = {
["source"] = "Arcweaver Reinforcements",
["event"] = "SPELL_CAST_START",
["npcID"] = 73153,
},
[374451] = {
["source"] = "Burning Chain Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195919,
},
[206459] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Avatar of Shadow",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 104293,
},
[31704] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["npcID"] = 17882,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1948,
},
[406644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[33111] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[308953] = {
["encounterName"] = "Drest'agath",
["source"] = "Eye of Drest'agath",
["encounterID"] = 2343,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157612,
},
[44202] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["npcID"] = 24674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[457938] = {
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 207802,
},
[459986] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[330978] = {
["encounterName"] = "The Council of Blood",
["source"] = "Castellan Niklaus",
["npcID"] = 166971,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2412,
},
[133765] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Durumu the Forgotten",
["npcID"] = 68036,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[427223] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[388316] = {
["source"] = "Oppressive Artificer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184444,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[64152] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[400486] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[30933] = {
["encounterName"] = "Warbringer O'mrogg",
["source"] = "Shattered Hand Houndmaster",
["encounterID"] = 1937,
["event"] = "SPELL_CAST_START",
["npcID"] = 17670,
},
[400492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Cindershaper",
["npcID"] = 199824,
},
[147720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Fire-Watcher",
["npcID"] = 72894,
},
[144005] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[69068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[68939] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[55463] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unholy Axe",
["npcID"] = 16194,
},
[385980] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[39593] = {
["source"] = "Ashtongue Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 22896,
},
[39849] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[82064] = {
["event"] = "SPELL_CAST_START",
["source"] = "John J. Keeshan",
["npcID"] = 43812,
},
[138044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warscout",
["npcID"] = 69768,
},
[409921] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[106823] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[140476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mighty Devilsaur",
["npcID"] = 69406,
},
[140106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spearanger",
["npcID"] = 69298,
},
[371489] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[48191] = {
["encounterName"] = "Frozen Commander",
["source"] = "Alliance Ranger",
["npcID"] = 26802,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 519,
},
[412895] = {
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 203709,
},
[317639] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[253562] = {
["source"] = "Dazar'ai Augur",
["event"] = "SPELL_CAST_START",
["npcID"] = 122972,
},
[410848] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 201668,
},
[119622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[414944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Speartender",
["npcID"] = 207456,
},
[125825] = {
["source"] = "Sik'thik Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 62575,
},
[258822] = {
["source"] = "Shallows Seagull",
["event"] = "SPELL_CAST_START",
["npcID"] = 141877,
},
[113479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Archer",
["npcID"] = 59175,
},
[52904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Titanium Thunderer",
["npcID"] = 28965,
},
[405332] = {
["source"] = "Gahz'raxes",
["event"] = "SPELL_CAST_START",
["npcID"] = 200537,
},
[115015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terracotta Champion",
["npcID"] = 60582,
},
[424315] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211086,
},
[138042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warscout",
["npcID"] = 69768,
},
[340414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Research",
["npcID"] = 202446,
},
[286267] = {
["source"] = "Invading Blight Specialist",
["event"] = "SPELL_CAST_START",
["npcID"] = 145638,
},
[147878] = {
["source"] = "Molten Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 72888,
},
[349419] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[385258] = {
["source"] = "Coastal Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 198782,
},
[129132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogujia Soul-Caller",
["npcID"] = 59797,
},
[22121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timberstep Archer",
["npcID"] = 194041,
},
[196563] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[408805] = {
["source"] = "Incorporeal Being",
["event"] = "SPELL_CAST_START",
["npcID"] = 204560,
},
[40088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[38759] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["npcID"] = 18341,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1900,
},
[455904] = {
["source"] = "Oozemodius",
["event"] = "SPELL_CAST_START",
["npcID"] = 220410,
},
[367851] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["npcID"] = 180990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2537,
},
[390715] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[396520] = {
["source"] = "Primal Stonescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 200581,
},
[136509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spirit-Twister",
["npcID"] = 69195,
},
[369751] = {
["source"] = "Qalashi Ragetamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190766,
},
[210150] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[136844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God-Hulk",
["npcID"] = 69200,
},
[431333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Darkcaster",
["npcID"] = 228539,
},
[416999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[369901] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 186965,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[455907] = {
["source"] = "Tefferty Ulreth",
["event"] = "SPELL_CAST_START",
["npcID"] = 219189,
},
[125056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hati",
["npcID"] = 165189,
},
[451812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burkhalt",
["npcID"] = 228671,
},
[412905] = {
["isChanneled"] = true,
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203709,
},
[52905] = {
["encounterName"] = "Ionar",
["source"] = "Stormfury Revenant",
["encounterID"] = 1984,
["event"] = "SPELL_CAST_START",
["npcID"] = 28826,
},
[267997] = {
["source"] = "Vilefiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 135816,
},
[46150] = {
["source"] = "Coilskar Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 24696,
},
[82765] = {
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 44982,
},
[256639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktar Bomber",
["npcID"] = 129372,
},
[408811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[387343] = {
["source"] = "Hired Kithguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 204362,
},
[470244] = {
["encounterName"] = "Ambassador Flamelash",
["source"] = "Ambassador Flamelash",
["npcID"] = 226302,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3047,
},
[146605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kovok",
["npcID"] = 72927,
},
[265019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[157165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Zealot",
["npcID"] = 77132,
},
[396360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Plunderer",
["npcID"] = 201292,
},
[311544] = {
["source"] = "Sanguimar",
["event"] = "SPELL_CAST_START",
["npcID"] = 159767,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[16172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghoul Ravener",
["npcID"] = 10406,
},
[121673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salyin Skirmisher",
["npcID"] = 62350,
},
[196787] = {
["source"] = "Fel-Infused Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 99956,
},
[359668] = {
["source"] = "Mawtouched Animate",
["event"] = "SPELL_CAST_START",
["npcID"] = 181484,
},
[156301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Boomer",
["npcID"] = 80935,
},
[32103] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fordragon Marksman",
["npcID"] = 27540,
},
[224378] = {
["source"] = "Celestial Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 112655,
},
[343287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrian Archivist",
["npcID"] = 173633,
},
[427245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hapless Assistant",
["npcID"] = 212981,
},
[371956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Terrasentry",
["npcID"] = 188011,
},
[256551] = {
["encounterName"] = "Ring of Booty",
["source"] = "Sawtooth Shark",
["npcID"] = 129359,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[401175] = {
["source"] = "Ebyssian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201707,
},
[147647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Y'Shaarj",
["npcID"] = 73452,
},
[420925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 97269,
},
[194942] = {
["encounterName"] = "Glazer",
["source"] = "Glazer",
["encounterID"] = 1817,
["event"] = "SPELL_CAST_START",
["npcID"] = 95887,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[318534] = {
["source"] = "Umbral Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 163708,
},
[61353] = {
["source"] = "Dagna Flintlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 96779,
},
[131520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Dervish",
["npcID"] = 66169,
},
[412914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Shadow",
["npcID"] = 205968,
},
[374020] = {
["isChanneled"] = true,
["source"] = "Containment Apparatus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190342,
},
[418591] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[445492] = {
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[136850] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[267824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul Essence",
["npcID"] = 135240,
},
[417011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[154396] = {
["encounterName"] = "High Sage Viryx",
["source"] = "High Sage Viryx",
["encounterID"] = 1701,
["event"] = "SPELL_CAST_START",
["npcID"] = 76266,
},
[199210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[166543] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["npcID"] = 82721,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[307725] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["encounterID"] = 2334,
["event"] = "SPELL_CAST_START",
["npcID"] = 157238,
},
[121747] = {
["source"] = "Salyin Warmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 62351,
},
[443430] = {
["source"] = "Sureki Silkbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 220195,
},
[34083] = {
["source"] = "Wyrmcult Broodling",
["event"] = "SPELL_CAST_START",
["npcID"] = 21811,
},
[40876] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[427252] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[441381] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[20824] = {
["source"] = "Deadwind Ogre Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 7379,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[374343] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[153234] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["npcID"] = 75927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1678,
},
[431349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Dark Architect",
["npcID"] = 213885,
},
[188046] = {
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[320771] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[453875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[375011] = {
["source"] = "Seismic Force",
["event"] = "SPELL_CAST_START",
["npcID"] = 192745,
},
[275175] = {
["source"] = "Dunegorger Kraulok",
["event"] = "SPELL_CAST_START",
["npcID"] = 138794,
},
[320772] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[59696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Handler",
["npcID"] = 24082,
},
[388474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstripe Great Ray",
["npcID"] = 210050,
},
[314149] = {
["source"] = "Dark Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 161286,
},
[195108] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[412922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[406564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[417018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
},
[271628] = {
["source"] = "Shandris Feathermoon",
["event"] = "SPELL_CAST_START",
["npcID"] = 140584,
},
[404732] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[313938] = {
["source"] = "Aqir Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161218,
},
[461850] = {
["source"] = "The Ringing Death",
["event"] = "SPELL_CAST_START",
["npcID"] = 214162,
},
[55467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unholy Staff",
["npcID"] = 16215,
},
[453879] = {
["source"] = "Grand Overspinner Antourix",
["event"] = "SPELL_CAST_START",
["npcID"] = 225263,
},
[58967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Battle Rider",
["npcID"] = 29836,
},
[265168] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[121165] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[136855] = {
["source"] = "Drakkari God-Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 69200,
},
[408605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[40877] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[427260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Rooktender",
["npcID"] = 207199,
},
[409745] = {
["source"] = "Shadeisethal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203411,
},
[406783] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[50092] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Rifleman",
["npcID"] = 27791,
},
[34785] = {
["source"] = "Tempest-Forge Peacekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18405,
},
[461842] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[68948] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["encounterID"] = 2879,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36565,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[369925] = {
["source"] = "Transformed Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 197225,
},
[404737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Han'thul",
["npcID"] = 198914,
},
[85072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightbane Shadow Weaver",
["npcID"] = 533,
},
[400642] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[451600] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Expeller",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 224368,
},
[32364] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Necromancer",
["npcID"] = 214625,
},
[359688] = {
["source"] = "Oracle Zoketh",
["event"] = "SPELL_CAST_START",
["npcID"] = 181625,
},
[394620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightrot",
["npcID"] = 188707,
},
[26262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Tendril",
["npcID"] = 65282,
},
[373201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windyfin Skybasher",
["npcID"] = 187431,
},
[137747] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Durumu the Forgotten",
["npcID"] = 68036,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[418009] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[371976] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[178837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cackling Pyromaniac",
["npcID"] = 79510,
},
[355349] = {
["source"] = "Reality Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184185,
},
[378120] = {
["source"] = "Unstable Rock",
["event"] = "SPELL_CAST_START",
["npcID"] = 192799,
},
[3110] = {
["source"] = "Gibpik",
["event"] = "SPELL_CAST_START",
["npcID"] = 58959,
},
[393430] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[433410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chittering Fearmonger",
["npcID"] = 216583,
},
[443649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Scribe",
["npcID"] = 221035,
},
[157931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Magus",
["npcID"] = 76263,
},
[365835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Artisan",
["npcID"] = 183407,
},
[433411] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[115024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terracotta Champion",
["npcID"] = 60582,
},
[396552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[431364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[294165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Guardian",
["npcID"] = 172406,
},
[139010] = {
["source"] = "Mumta",
["event"] = "SPELL_CAST_START",
["npcID"] = 69664,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[406792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Magmaclaw",
["npcID"] = 204315,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[451843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
},
[412156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[154135] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["encounterID"] = 1699,
["event"] = "SPELL_CAST_START",
["npcID"] = 76141,
},
[384474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstripe Great Ray",
["npcID"] = 210050,
},
[320788] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[221464] = {
["source"] = "Chaos Mage Beleron",
["event"] = "SPELL_CAST_START",
["npcID"] = 111225,
},
[211473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Mistress",
["npcID"] = 104300,
},
[253583] = {
["isChanneled"] = true,
["source"] = "Dazar'ai Augur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122972,
},
[410890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Warder",
["npcID"] = 205259,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[37551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Sharpshooter",
["npcID"] = 16704,
},
[166341] = {
["source"] = "Grom'kar Far Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82579,
},
[410625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2685,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[372027] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[343316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hargitas",
["npcID"] = 173446,
},
[147516] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[157794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Magus",
["npcID"] = 76263,
},
[426519] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[257784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Brinescale",
["npcID"] = 129600,
},
[412669] = {
["source"] = "Klakatak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203618,
},
[445705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Makura",
["npcID"] = 220643,
},
[122193] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62408,
},
[397014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Emissary",
["npcID"] = 197146,
},
[394512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[453897] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[232084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Backup Singer",
["npcID"] = 116549,
},
[457993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Croakit",
["npcID"] = 214757,
},
[120160] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61445,
},
[377854] = {
["source"] = "Snarfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 200622,
},
[205660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Observant Inquisitor",
["npcID"] = 107449,
},
[343320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caramain",
["npcID"] = 173444,
},
[310277] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157602,
},
[428082] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[414992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Thaumaturge",
["npcID"] = 206858,
},
[200345] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[369942] = {
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 191509,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 202971,
},
[374038] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[343322] = {
["encounterName"] = "Shriekwing",
["source"] = "Moldovaak",
["npcID"] = 168337,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2398,
},
[149463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[164168] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Overseer",
["npcID"] = 81212,
},
[322557] = {
["source"] = "Drust Soulcleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 164920,
},
[22677] = {
["encounterName"] = "Nefarian",
["source"] = "Lord Victor Nefarius",
["npcID"] = 10162,
["event"] = "SPELL_CAST_START",
["encounterID"] = 617,
},
[271652] = {
["source"] = "Shandris Feathermoon",
["event"] = "SPELL_CAST_START",
["npcID"] = 140584,
},
[388374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Towering Deepstrider",
["npcID"] = 203786,
},
[152894] = {
["source"] = "Initiate of the Rising Sun",
["event"] = "SPELL_CAST_START",
["npcID"] = 79466,
},
[391118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalebane Lieutenant",
["npcID"] = 191739,
},
[207979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jazshariu",
["npcID"] = 104273,
},
[404757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Manaweaver",
["npcID"] = 202246,
},
[55982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Enormos",
["npcID"] = 225274,
},
[343325] = {
["encounterName"] = "Shriekwing",
["source"] = "Sindrel",
["npcID"] = 173445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2398,
},
[369946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Wingripper",
["npcID"] = 202439,
},
[259732] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[382233] = {
["encounterName"] = "Balakar Khan",
["source"] = "Batak",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[392472] = {
["source"] = "Galnmor",
["event"] = "SPELL_CAST_START",
["npcID"] = 193853,
},
[118312] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60586,
},
[428139] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[380487] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[387596] = {
["source"] = "Risen Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 195877,
},
[164218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Bombardier",
["npcID"] = 81407,
},
[463837] = {
["encounterName"] = "Golem Lord Argelmach",
["source"] = "Toxitron Mk. II",
["encounterID"] = 3046,
["event"] = "SPELL_CAST_START",
["npcID"] = 230217,
},
[392474] = {
["isChanneled"] = true,
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197799,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[388796] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2563,
},
[374045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[192158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
},
[408551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[117809] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jahesh of Osul",
["npcID"] = 60802,
},
[53167] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Construct",
["npcID"] = 28835,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[30937] = {
["source"] = "Shadowmoon Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17653,
},
[131178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pandaren Scarecrow",
["npcID"] = 66768,
},
[156722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[378143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infiltrator",
["npcID"] = 189895,
},
[76634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tainted Sentry",
["npcID"] = 40925,
},
[316711] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158376,
},
[335141] = {
["source"] = "Nar'zudah",
["event"] = "SPELL_CAST_START",
["npcID"] = 165824,
},
[39133] = {
["encounterName"] = "Warp Splinter",
["source"] = "Warp Splinter",
["encounterID"] = 1929,
["event"] = "SPELL_CAST_START",
["npcID"] = 17977,
},
[388383] = {
["source"] = "Iskaara Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 186431,
},
[120149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 194853,
},
[57047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[429021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[13322] = {
["source"] = "Rogue Wizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 474,
},
[195232] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[392480] = {
["source"] = "Galnmor",
["event"] = "SPELL_CAST_START",
["npcID"] = 193853,
},
[115030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muck Brawler",
["npcID"] = 192630,
},
[185854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightmare Rider",
["npcID"] = 92792,
},
[292141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Downwind Dori",
["npcID"] = 150755,
},
[451543] = {
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[428103] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Frost Witch",
["npcID"] = 44404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[136872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Kros",
["npcID"] = 69341,
},
[143424] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1598,
},
[204448] = {
["encounterName"] = "Skorpyron",
["source"] = "Skorpyron",
["encounterID"] = 1849,
["event"] = "SPELL_CAST_START",
["npcID"] = 102263,
},
[314337] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[41986] = {
["source"] = "Angered Soul Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 23398,
},
[166565] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[384292] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Thunder Caller",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 194647,
},
[279857] = {
["source"] = "Ranger Captain Areiel",
["event"] = "SPELL_CAST_START",
["npcID"] = 140399,
},
[265523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[130389] = {
["source"] = "Osul Spitfire",
["event"] = "SPELL_CAST_START",
["npcID"] = 66289,
},
[441630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Vanguard",
["npcID"] = 218316,
},
[378150] = {
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 189895,
},
[290097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bandi the Boneknitter",
["npcID"] = 150729,
},
[324909] = {
["source"] = "Drust Boughbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 164926,
},
[59182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Firestorm",
["npcID"] = 28584,
},
[255041] = {
["source"] = "Feasting Skyscreamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 128434,
},
[404772] = {
["source"] = "Grugoth the Hullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200721,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[392486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[451871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Earthcaller",
["npcID"] = 224219,
},
[222880] = {
["source"] = "Brimstone Wrathguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 111889,
},
[137729] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["npcID"] = 70212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[318768] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychophage",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 163947,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[388392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Textbook",
["npcID"] = 196044,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Deadshot",
["npcID"] = 203914,
},
[138923] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[394536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Dead Eye",
["npcID"] = 195337,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[398632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Deadshot",
["npcID"] = 203914,
},
[144702] = {
["source"] = "Moonfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 71992,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[314326] = {
["source"] = "Crushing Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 161312,
},
[118104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Alemental",
["npcID"] = 56684,
},
[318771] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychophage",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 163947,
},
[320464] = {
["source"] = "Zolramus Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 163128,
},
[443001] = {
["source"] = "Boltweaver Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223362,
},
[398634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 200852,
},
[126628] = {
["source"] = "Spirit of Violence",
["event"] = "SPELL_CAST_START",
["npcID"] = 64656,
},
[265876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[138607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani'shi Flame Chanter",
["npcID"] = 69909,
},
[32903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jungle Skitterer",
["npcID"] = 58067,
},
[261612] = {
["source"] = "Faithless Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 128662,
},
[169841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[214692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gerenth the Vile",
["npcID"] = 107435,
},
[365872] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["npcID"] = 181954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[433448] = {
["isChanneled"] = true,
["source"] = "Gem Hoarder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220148,
},
[320822] = {
["source"] = "Zolramus Bonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 165222,
},
[290106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bandi the Boneknitter",
["npcID"] = 150729,
},
[118105] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[435136] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[375351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[39347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Gene-Splicer",
["npcID"] = 19507,
},
[455975] = {
["source"] = "Reconstructed Skardyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 219245,
},
[137528] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1573,
},
[345397] = {
["encounterName"] = "Shriekwing",
["source"] = "Shriekwing",
["npcID"] = 164406,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2398,
},
[157170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulbinder",
["npcID"] = 77812,
},
[41238] = {
["isChanneled"] = true,
["source"] = "Bonechewer Blood Prophet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23237,
},
[122713] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Echo of Force and Verve",
["npcID"] = 65174,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[194611] = {
["source"] = "Shadow Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 98926,
},
[367554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Realmbreaker",
["npcID"] = 183416,
},
[270264] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[91997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spiritbinder",
["npcID"] = 69225,
},
[121291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mischievous Snow Sprite",
["npcID"] = 59967,
},
[388402] = {
["source"] = "Predatory Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 198779,
},
[118106] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[15547] = {
["source"] = "Wyrmcult Poacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 21809,
},
[440185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustul Titancap",
["npcID"] = 213115,
},
[324923] = {
["source"] = "Drust Boughbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 164926,
},
[402793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[401382] = {
["source"] = "Past Self",
["event"] = "SPELL_CAST_START",
["npcID"] = 185800,
},
[136881] = {
["source"] = "Zandalari Water-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69455,
},
[242760] = {
["source"] = "Vilebark Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 121569,
},
[425264] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[137588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Tak'u",
["npcID"] = 69336,
},
[265540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Maggot",
["npcID"] = 130909,
},
[265880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[79616] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felhunter Minion",
["npcID"] = 175166,
},
[452156] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[153680] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[54962] = {
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[55218] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["npcID"] = 29306,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1981,
},
[221864] = {
["encounterName"] = "Grand Magistrix Elisande",
["source"] = "Recursive Elemental",
["encounterID"] = 1872,
["event"] = "SPELL_CAST_START",
["npcID"] = 105299,
},
[127834] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Echo of Attenuation",
["npcID"] = 65173,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[374073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[115650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sudsy Brew Alemental",
["npcID"] = 59522,
},
[137227] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[42526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore",
["npcID"] = 23876,
},
[455984] = {
["source"] = "Reconstructed Skardyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 219245,
},
[145461] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Mogu Shadow Ritualist",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71393,
},
[237950] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tugar Bloodtotem",
["npcID"] = 117230,
},
[396600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[5208] = {
["source"] = "Captain Greenskin",
["event"] = "SPELL_CAST_START",
["npcID"] = 647,
},
[404396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[398254] = {
["source"] = "Winterpelt Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 200362,
},
[388410] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[126299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmaster Sydow",
["npcID"] = 63240,
},
[120788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Antiquator",
["npcID"] = 61641,
},
[447400] = {
["source"] = "Queen Rickiticka",
["event"] = "SPELL_CAST_START",
["npcID"] = 215772,
},
[400300] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[199341] = {
["encounterName"] = "Fenryr",
["source"] = "Valarjar Trapper",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[456851] = {
["source"] = "Chasm Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 219291,
},
[138732] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["npcID"] = 69465,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1577,
},
[365887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Forger",
["npcID"] = 184878,
},
[61362] = {
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 29822,
},
[138691] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[13952] = {
["source"] = "Scarlet Trainer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203481,
},
[365888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Eradicator",
["npcID"] = 184879,
},
[176127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Boomer",
["npcID"] = 80935,
},
[303158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Raider",
["npcID"] = 201301,
},
[153268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[228011] = {
["encounterName"] = "Opera Hall",
["source"] = "Mrs. Cauldrons",
["npcID"] = 114522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1957,
},
[31707] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 78116,
},
[394558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Flame",
["npcID"] = 198577,
},
[124946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qu'nas",
["npcID"] = 50352,
},
[390463] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[225100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Construct",
["npcID"] = 104270,
},
[427323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[139231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 69390,
},
[130396] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gyrocopter Turret",
["npcID"] = 66299,
},
[387740] = {
["source"] = "Ancient Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 193664,
},
[147351] = {
["source"] = "Fallen Pool Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 73342,
},
[433040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[450182] = {
["source"] = "Disturbed Mudspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 219897,
},
[459155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[264153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[310184] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158376,
},
[279464] = {
["source"] = "Abrasive Reconfigulator 8000",
["event"] = "SPELL_CAST_START",
["npcID"] = 140530,
},
[111631] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[17501] = {
["source"] = "Crimson Cannon",
["event"] = "SPELL_CAST_START",
["npcID"] = 11199,
},
[120946] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[199345] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[120670] = {
["source"] = "Zandalari Fire-Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60402,
},
[144635] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[339274] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Kaal",
["npcID"] = 173298,
},
[365895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Saboteur",
["npcID"] = 183412,
},
[231532] = {
["source"] = "Pyrestar Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 114845,
},
[460092] = {
["source"] = "Spinemaw Staghorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 167111,
},
[40832] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[351562] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawforged Colossus",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177893,
},
[355063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Guard",
["npcID"] = 178623,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[457441] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[436971] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[126354] = {
["source"] = "Thunder Hold Sharp-Shooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 66288,
},
[59146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God Hunter",
["npcID"] = 29820,
},
[408466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Crystal-collector",
["npcID"] = 204407,
},
[392519] = {
["isChanneled"] = true,
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197799,
},
[112992] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[406854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[389951] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[113134] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[404807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 205245,
},
[79872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Danforth",
["npcID"] = 43828,
},
[426893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[76133] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[412999] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 201677,
},
[365901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Eradicator",
["npcID"] = 183413,
},
[387189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Researcher",
["npcID"] = 199946,
},
[266209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Deathspeaker",
["npcID"] = 134284,
},
[372045] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Caustic Spiderling",
["npcID"] = 189233,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[35511] = {
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[400714] = {
["source"] = "Nidharr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201310,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[169657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[365903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Eradicator",
["npcID"] = 185346,
},
[335187] = {
["source"] = "Lured Smasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 183580,
},
[221875] = {
["encounterName"] = "Star Augur Etraeus",
["source"] = "Star Augur Etraeus",
["encounterID"] = 1863,
["event"] = "SPELL_CAST_START",
["npcID"] = 103758,
},
[372047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[455380] = {
["source"] = "Malfunctioning Railbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 218251,
},
[458746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[136894] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69078,
},
[7896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildspawn Betrayer",
["npcID"] = 11454,
},
[445974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222281,
},
[351117] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawforged Souljudge",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177889,
},
[404171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[232115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Backup Singer",
["npcID"] = 116549,
},
[384336] = {
["source"] = "Nokhud Lancemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192800,
},
[402766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 202260,
},
[413005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Additive",
["npcID"] = 205672,
},
[396001] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Songbird Queen",
["npcID"] = 59553,
},
[179898] = {
["source"] = "Darkmoon Tonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 90304,
},
[106851] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[265568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Befouled Spirit",
["npcID"] = 133685,
},
[144461] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[446261] = {
["source"] = "Fog Form",
["event"] = "SPELL_CAST_START",
["npcID"] = 213953,
},
[200700] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[445771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Makura",
["npcID"] = 220643,
},
[122761] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[392530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quarry Infuser",
["npcID"] = 197799,
},
[427342] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[413008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201578,
},
[117241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fire-Dancer",
["npcID"] = 60402,
},
[427727] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[361815] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["npcID"] = 181954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2546,
},
[404818] = {
["source"] = "Shukoro Rapidstamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 198917,
},
[114183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[179900] = {
["source"] = "Darkmoon Tonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 90304,
},
[213688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Lord",
["npcID"] = 107024,
},
[157375] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[458256] = {
["source"] = "Lurker of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 220285,
},
[288301] = {
["source"] = "Tyrande Whisperwind",
["event"] = "SPELL_CAST_START",
["npcID"] = 146927,
},
[402772] = {
["source"] = "Deepstrider Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 202312,
},
[372056] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[398677] = {
["source"] = "Irontide Scallywag",
["event"] = "SPELL_CAST_START",
["npcID"] = 203910,
},
[445935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222265,
},
[427346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[413012] = {
["source"] = "Shadow Additive",
["event"] = "SPELL_CAST_START",
["npcID"] = 205671,
},
[394975] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Lasher",
["npcID"] = 198757,
},
[383866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Droplet",
["npcID"] = 194526,
},
[446325] = {
["source"] = "Infected Peafowl",
["event"] = "SPELL_CAST_START",
["npcID"] = 212710,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[430805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalescing Void Diffuser",
["npcID"] = 214421,
},
[425300] = {
["isChanneled"] = true,
["source"] = "Zaqali Flamemancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[402775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Cindershaper",
["npcID"] = 199824,
},
[136990] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[147446] = {
["source"] = "Foreboding Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 73162,
},
[438476] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[388897] = {
["source"] = "Scavenging Pincher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200949,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[361324] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["npcID"] = 180906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2529,
},
[396084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquifon",
["npcID"] = 203468,
},
[149187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72367,
},
[439637] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Echoing Shade",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 219675,
},
[392539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Terrasentry",
["npcID"] = 197801,
},
[445207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Howler",
["npcID"] = 221979,
},
[445781] = {
["source"] = "Stolen Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 223541,
},
[406874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Krolusk",
["npcID"] = 204310,
},
[458068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Croakit",
["npcID"] = 214757,
},
[139206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 69390,
},
[449034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[423257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[401209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepbed Longwalker",
["npcID"] = 203917,
},
[451423] = {
["source"] = "Xeph'itik",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[437592] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[382303] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[384351] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[378208] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[450766] = {
["source"] = "Coalesced Living Honey",
["event"] = "SPELL_CAST_START",
["npcID"] = 217833,
},
[423259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Blazekin",
["npcID"] = 210685,
},
[424798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infected Beast",
["npcID"] = 210478,
},
[112998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Residual Hatred",
["npcID"] = 58803,
},
[448248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstained Webmage",
["npcID"] = 223253,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[427356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[396640] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Ancient Branch",
["npcID"] = 196548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[456438] = {
["source"] = "Cursed Miner",
["event"] = "SPELL_CAST_START",
["npcID"] = 213565,
},
[408927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Contaminant",
["npcID"] = 202270,
},
[427357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[413023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["npcID"] = 131817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[466265] = {
["encounterName"] = "General Angerforge",
["source"] = "General Angerforge",
["npcID"] = 226316,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3045,
},
[59575] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["npcID"] = 24201,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2024,
},
[413024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[199361] = {
["encounterName"] = "Fenryr",
["source"] = "Valarjar Trapper",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[321891] = {
["encounterName"] = "Mistcaller",
["source"] = "Illusionary Vulpin",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 165251,
},
[427359] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[275826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Commander",
["npcID"] = 128969,
},
[196290] = {
["source"] = "Stormwake Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[410978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[327664] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[145861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zeal",
["npcID"] = 72661,
},
[455287] = {
["encounterName"] = "Rasha'nan",
["source"] = "Infested Spawn",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 219739,
},
[396645] = {
["source"] = "Pahi'rys",
["event"] = "SPELL_CAST_START",
["npcID"] = 205540,
},
[446519] = {
["source"] = "Plaguehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 219267,
},
[126822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Sentinel",
["npcID"] = 70334,
},
[458193] = {
["source"] = "Lurker of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 220285,
},
[396646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[450176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slasher",
["npcID"] = 208243,
},
[425315] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[209602] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[432967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sentry Stagshell",
["npcID"] = 216340,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[458080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Croakit",
["npcID"] = 214757,
},
[351066] = {
["encounterName"] = "Remnant of Ner'zhul",
["source"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["event"] = "SPELL_CAST_START",
["npcID"] = 175729,
},
[444000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Woven Threadmancer",
["npcID"] = 218317,
},
[20831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mana Remnant",
["npcID"] = 11483,
},
[376171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[386410] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[445252] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobyss Necromancer",
["npcID"] = 214625,
},
[55334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death Knight Cavalier",
["npcID"] = 16163,
},
[439811] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[451939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Destroyer",
["npcID"] = 224609,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[456746] = {
["source"] = "Workmaster Earwax",
["event"] = "SPELL_CAST_START",
["npcID"] = 213195,
},
[449339] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[432117] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[361088] = {
["source"] = "Cartel Xy Plunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 182378,
},
[52921] = {
["encounterName"] = "Loken",
["source"] = "Loken",
["npcID"] = 28923,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1986,
},
[384365] = {
["source"] = "Nokhud Lancemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192800,
},
[378222] = {
["source"] = "Invasive Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 200275,
},
[165578] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[275835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Invader",
["npcID"] = 137516,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashwhite Kestrel",
["npcID"] = 215070,
},
[145276] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Embodied Despair",
["npcID"] = 72238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[235317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raest Magespear",
["npcID"] = 116409,
},
[445205] = {
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[432036] = {
["source"] = "Hairless the Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 213550,
},
[456902] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[42870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Invader",
["npcID"] = 24051,
},
[406344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[15665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekin Torcher",
["npcID"] = 9778,
},
[394607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Lancer",
["npcID"] = 193198,
},
[372082] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[372235] = {
["source"] = "Rebel Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 195060,
},
[196296] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[448269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreseer Xix'amon",
["npcID"] = 215435,
},
[395833] = {
["source"] = "Remembered Stegodon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221876,
},
[448847] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[392561] = {
["isChanneled"] = true,
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197831,
},
[451107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[322938] = {
["isChanneled"] = true,
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164921,
},
[324986] = {
["source"] = "Mistveil Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 166301,
},
[450546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[136587] = {
["encounterName"] = "Horridon",
["source"] = "Gurubashi Venom Priest",
["npcID"] = 69164,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[429422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[292223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dorian Atwater",
["npcID"] = 149036,
},
[455016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 225817,
},
[378229] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186124,
},
[18144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodfalcon",
["npcID"] = 18155,
},
[445910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sporbit",
["npcID"] = 213434,
},
[433519] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[427376] = {
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 40935,
},
[453997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 223119,
},
[374135] = {
["source"] = "Highhorn Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 190322,
},
[392565] = {
["isChanneled"] = true,
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197831,
},
[415406] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[450330] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[451224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Warlock",
["npcID"] = 224271,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 163157,
},
[433841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Overseer",
["npcID"] = 216364,
},
[339325] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Kaal",
["npcID"] = 173298,
},
[292227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dorian Atwater",
["npcID"] = 149036,
},
[257732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Enforcer",
["npcID"] = 129602,
},
[444479] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218034,
},
[429427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[446862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parasitic Worm",
["npcID"] = 222786,
},
[376186] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[402807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glittering Shard Construct",
["npcID"] = 205241,
},
[429428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Burst Totem",
["npcID"] = 214287,
},
[256709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riptide Shredder",
["npcID"] = 129371,
},
[392569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[410999] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[396665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[455373] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[335233] = {
["source"] = "Lured Smasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 183580,
},
[427382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[372093] = {
["source"] = "Primal Blaze",
["event"] = "SPELL_CAST_START",
["npcID"] = 200589,
},
[143446] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71480,
},
[450129] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[411001] = {
["source"] = "Lurking Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 45704,
},
[136917] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[305236] = {
["source"] = "Aqir Venomweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 161229,
},
[445949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Silkbow",
["npcID"] = 222273,
},
[427384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[444829] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[448341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Thwacker",
["npcID"] = 203877,
},
[427616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Stormrook",
["npcID"] = 207186,
},
[451117] = {
["source"] = "Ixkreten the Unbreakable",
["event"] = "SPELL_CAST_START",
["npcID"] = 211262,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[325205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeneye Bowman",
["npcID"] = 166936,
},
[138966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowed Voodoo Spirit",
["npcID"] = 70060,
},
[394622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 197131,
},
[145216] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["npcID"] = 72276,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[126631] = {
["source"] = "Spirit of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 64684,
},
[257736] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Stormcaller",
["npcID"] = 126919,
},
[444363] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[450899] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[440137] = {
["source"] = "Feral Sharpclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 221470,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[139991] = {
["encounterName"] = "Megaera",
["source"] = "Arcane Head",
["npcID"] = 70248,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[451288] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[406911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Champion",
["npcID"] = 201288,
},
[408959] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[242379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bile Spitter Egg",
["npcID"] = 121459,
},
[445819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Stonestalker",
["npcID"] = 217624,
},
[35124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[188114] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[451241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[59835] = {
["encounterName"] = "Loken",
["source"] = "Loken",
["npcID"] = 28923,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1986,
},
[348953] = {
["encounterName"] = "Kel'Thuzad",
["source"] = "Kel'Thuzad",
["encounterID"] = 2422,
["event"] = "SPELL_CAST_START",
["npcID"] = 175559,
},
[392579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[370054] = {
["source"] = "Magmammoth Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194912,
},
[396675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Cleaver",
["npcID"] = 202247,
},
[130413] = {
["source"] = "Strongarm Ace",
["event"] = "SPELL_CAST_START",
["npcID"] = 66000,
},
[130925] = {
["source"] = "Captain Doren",
["event"] = "SPELL_CAST_START",
["npcID"] = 66052,
},
[451965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Giant",
["npcID"] = 40166,
},
[439873] = {
["source"] = "Royal Whisperer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[415106] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[277907] = {
["source"] = "Brinescale Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 129252,
},
[193235] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[413059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Canister",
["npcID"] = 206019,
},
[452162] = {
["source"] = "Covert Webmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223844,
},
[266106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Bloodswarmer",
["npcID"] = 133835,
},
[411012] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[413060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fire Canister",
["npcID"] = 206022,
},
[449295] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[450197] = {
["source"] = "Skittering Swarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208245,
},
[144090] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[136923] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Trained Saurid",
["npcID"] = 58071,
},
[431491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[122735] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["encounterID"] = 1463,
["event"] = "SPELL_CAST_START",
["npcID"] = 62164,
},
[41150] = {
["source"] = "Illidari Nightlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 22855,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[31601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Crawler",
["npcID"] = 10412,
},
[200404] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[447950] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Ascended Voidspeaker",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 223150,
},
[272528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Sniper",
["npcID"] = 128967,
},
[431493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Curseblade",
["npcID"] = 223995,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[451971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Giant",
["npcID"] = 40166,
},
[132829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Cannoneer",
["npcID"] = 69194,
},
[431494] = {
["source"] = "Nightfall Tactician",
["event"] = "SPELL_CAST_START",
["npcID"] = 213934,
},
[408969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Mud",
["npcID"] = 192519,
},
[450100] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[169689] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[154331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grove Cultivator Kados",
["npcID"] = 133104,
},
[408970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 198870,
},
[333477] = {
["source"] = "Goregrind",
["event"] = "SPELL_CAST_START",
["npcID"] = 163621,
},
[445830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Deepflayer",
["npcID"] = 218657,
},
[341395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executrix Ophelia",
["npcID"] = 174012,
},
[464331] = {
["encounterName"] = "The Seven",
["source"] = "Doom'rel",
["npcID"] = 226310,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[168666] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["npcID"] = 84358,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[169690] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[355062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Guard",
["npcID"] = 178623,
},
[376208] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[427402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Rookguard",
["npcID"] = 207197,
},
[39127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Chemist",
["npcID"] = 19486,
},
[5213] = {
["source"] = "Gilnid",
["event"] = "SPELL_CAST_START",
["npcID"] = 1763,
},
[453212] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[11829] = {
["source"] = "Defias Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 1729,
},
[421260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[463081] = {
["source"] = "Awakened Phalanx",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[464344] = {
["encounterName"] = "The Seven",
["source"] = "Vile'rel",
["npcID"] = 226308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[427404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[462216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[272711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Demolisher",
["npcID"] = 135245,
},
[359829] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["npcID"] = 181395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2542,
},
[345495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frothing Pustule",
["npcID"] = 175519,
},
[145119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storeroom Guard",
["npcID"] = 73152,
},
[439692] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[392594] = {
["source"] = "Meatgrinder Sotok",
["event"] = "SPELL_CAST_START",
["npcID"] = 186777,
},
[110963] = {
["source"] = "Scarlet Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 58569,
},
[469694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grim Patron",
["npcID"] = 232444,
},
[450153] = {
["source"] = "Sludgeborn Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 220734,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[125997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battleworn Paratrooper",
["npcID"] = 63764,
},
[12739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[390548] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[163550] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["npcID"] = 79545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[458836] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Speaker Xanventh",
["npcID"] = 220130,
},
[456664] = {
["source"] = "Worldcarver Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 221964,
},
[270431] = {
["source"] = "Worldcarver Sage",
["event"] = "SPELL_CAST_START",
["npcID"] = 221962,
},
[32863] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[464769] = {
["encounterName"] = "Ambassador Flamelash",
["source"] = "Burning Spirit",
["encounterID"] = 3047,
["event"] = "SPELL_CAST_START",
["npcID"] = 230799,
},
[12471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildspawn Felsworn",
["npcID"] = 11455,
},
[81008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalspawn Giant",
["npcID"] = 42810,
},
[324293] = {
["source"] = "Skeletal Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 165919,
},
[448047] = {
["isChanneled"] = true,
["source"] = "Pale Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223646,
},
[347548] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[442277] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[113] = {
["source"] = "Defias Wizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 4418,
},
[465091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight's Hammer Ambassador",
["npcID"] = 232463,
},
[463503] = {
["encounterName"] = "Lord Incendius",
["source"] = "Lord Incendius",
["npcID"] = 226304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3043,
},
[406934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[114548] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[430238] = {
["source"] = "Corrupted Spellshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 219302,
},
[63830] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[451222] = {
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[441747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Acolyte",
["npcID"] = 218320,
},
[356090] = {
["encounterName"] = "Guardian of the First Ones",
["source"] = "Guardian of the First Ones",
["encounterID"] = 2436,
["event"] = "SPELL_CAST_START",
["npcID"] = 175731,
},
[242841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 118719,
},
[390554] = {
["isChanneled"] = true,
["source"] = "Inferna the Bound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186735,
},
[449939] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[418449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Talathar Brightsong",
["npcID"] = 209934,
},
[452442] = {
["source"] = "Terror of the Forge",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[199389] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[449940] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[153315] = {
["encounterName"] = "Ranjit",
["source"] = "Ranjit",
["encounterID"] = 1698,
["event"] = "SPELL_CAST_START",
["npcID"] = 75964,
},
[275882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratin the Barber",
["npcID"] = 199947,
},
[122740] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[394652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infernum",
["npcID"] = 193648,
},
[415262] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[423626] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[442387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian War-Weaver",
["npcID"] = 222731,
},
[445038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[469636] = {
["encounterName"] = "The Seven",
["source"] = "Hate'rel",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226311,
},
[398749] = {
["source"] = "Irontide Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 203988,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[328117] = {
["encounterName"] = "Sire Denathrius",
["source"] = "Sire Denathrius",
["npcID"] = 167406,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2407,
},
[372129] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[16429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thuzadin Shadowcaster",
["npcID"] = 10398,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[463495] = {
["encounterName"] = "Lord Incendius",
["source"] = "Lord Incendius",
["encounterID"] = 3043,
["event"] = "SPELL_CAST_START",
["npcID"] = 226304,
},
[241788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Attendant",
["npcID"] = 114632,
},
[423324] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[448276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungarian Sporeflinger",
["npcID"] = 218667,
},
[115062] = {
["source"] = "Slingtail Treeleaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61562,
},
[462686] = {
["source"] = "Reno Jackson",
["event"] = "SPELL_CAST_START",
["npcID"] = 228044,
},
[462317] = {
["encounterName"] = "Lord Roccor",
["source"] = "Lord Roccor",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[440181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustul Titancap",
["npcID"] = 213115,
},
[258777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Oarsman",
["npcID"] = 127111,
},
[404896] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[68988] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[237276] = {
["encounterName"] = "Thrashbite the Scornful",
["source"] = "Thrashbite the Scornful",
["npcID"] = 117194,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2057,
},
[22421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hydrospawn",
["npcID"] = 13280,
},
[59839] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1978,
},
[444972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Saurolisk Ambusher",
["npcID"] = 224725,
},
[400802] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 187676,
},
[451996] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[348128] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["npcID"] = 175616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2425,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[464361] = {
["encounterName"] = "The Seven",
["source"] = "Gloom'rel",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226313,
},
[312750] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Abyssal Watcher",
["encounterID"] = 2331,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 160663,
},
[31602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerub'enkan",
["npcID"] = 10437,
},
[361913] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["npcID"] = 181398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[200418] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[365272] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["npcID"] = 181551,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[396709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 197134,
},
[360228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugated Colossus",
["npcID"] = 184767,
},
[341728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Sinsear",
["npcID"] = 174161,
},
[110968] = {
["source"] = "Scarlet Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 58569,
},
[273845] = {
["source"] = "Horde Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 214169,
},
[363139] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Artificer Xy'mox",
["npcID"] = 183501,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2553,
},
[425379] = {
["source"] = "Flamespreader",
["event"] = "SPELL_CAST_START",
["npcID"] = 210294,
},
[450428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gar'loc",
["npcID"] = 219268,
},
[352660] = {
["encounterName"] = "Guardian of the First Ones",
["source"] = "Guardian of the First Ones",
["encounterID"] = 2436,
["event"] = "SPELL_CAST_START",
["npcID"] = 175731,
},
[341422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathrian Siphoner",
["npcID"] = 165472,
},
[343470] = {
["source"] = "Skeletal Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 165919,
},
[378282] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[123767] = {
["source"] = "Sha-Infested Yaungol",
["event"] = "SPELL_CAST_START",
["npcID"] = 68241,
},
[329808] = {
["encounterName"] = "Stone Legion Generals",
["source"] = "General Grashaal",
["npcID"] = 168113,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2417,
},
[425381] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[393411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veshrak of the North",
["npcID"] = 188713,
},
[92266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irradiated Pillager",
["npcID"] = 6329,
},
[445125] = {
["source"] = "Cindersting",
["event"] = "SPELL_CAST_START",
["npcID"] = 220238,
},
[35943] = {
["source"] = "Shadowmoon Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 16594,
},
[226151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Endgineer Omegaplugg",
["npcID"] = 113621,
},
[59840] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["encounterID"] = 1978,
["event"] = "SPELL_CAST_START",
["npcID"] = 29304,
},
[333479] = {
["source"] = "Rotspew",
["event"] = "SPELL_CAST_START",
["npcID"] = 163620,
},
[21987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whip Lasher",
["npcID"] = 13022,
},
[351969] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["source"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["event"] = "SPELL_CAST_START",
["npcID"] = 175730,
},
[366326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foul Controller",
["npcID"] = 185537,
},
[327240] = {
["source"] = "Loyal Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 165911,
},
[144642] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[350202] = {
["encounterName"] = "The Nine",
["source"] = "Kyra",
["encounterID"] = 2429,
["event"] = "SPELL_CAST_START",
["npcID"] = 177095,
},
[348094] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 175732,
},
[22883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Priest",
["npcID"] = 18317,
},
[348117] = {
["encounterName"] = "The Eye of the Jailer",
["source"] = "Eye of the Jailer",
["encounterID"] = 2433,
["event"] = "SPELL_CAST_START",
["npcID"] = 175725,
},
[226148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Endgineer Omegaplugg",
["npcID"] = 113621,
},
[396717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[396751] = {
["source"] = "Gahz'raxes",
["event"] = "SPELL_CAST_START",
["npcID"] = 200537,
},
[160772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mereldar Citizen",
["npcID"] = 225601,
},
[138569] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["npcID"] = 69699,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[340631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sewer Rat",
["npcID"] = 173800,
},
[138467] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Appraising Eye",
["npcID"] = 67858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[449960] = {
["source"] = "Gutter Scarfer",
["event"] = "SPELL_CAST_START",
["npcID"] = 217717,
},
[88445] = {
["source"] = "Dark Iron Lookout",
["event"] = "SPELL_CAST_START",
["npcID"] = 8566,
},
[421292] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[364241] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Renewal",
["npcID"] = 181546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2544,
},
[425388] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[452009] = {
["source"] = "Hijacked Ironstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 219287,
},
[388529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seabreaker Skrog",
["npcID"] = 192931,
},
[456105] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 226646,
},
[16868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baroness Anastari",
["npcID"] = 10436,
},
[366629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overthrown Protector",
["npcID"] = 185155,
},
[355979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Dominator",
["npcID"] = 185313,
},
[316859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneborn Maitre D'",
["npcID"] = 174843,
},
[441772] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[356021] = {
["encounterName"] = "Sylvanas Windrunner",
["source"] = "Mawforged Summoner",
["encounterID"] = 2435,
["event"] = "SPELL_CAST_START",
["npcID"] = 177891,
},
[272588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Cutthroat",
["npcID"] = 137511,
},
[398770] = {
["source"] = "Cormormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 200726,
},
[409009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[137427] = {
["source"] = "Kaldorei Dark Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 149406,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[425392] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[394676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Icecaller",
["npcID"] = 198501,
},
[372151] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 186284,
},
[456109] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 226646,
},
[401214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Honeypelt",
["npcID"] = 202451,
},
[452014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 223119,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[325590] = {
["encounterName"] = "Sun King's Salvation",
["source"] = "Vile Occultist",
["npcID"] = 165763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2402,
},
[147185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqueous Defender",
["npcID"] = 73191,
},
[440376] = {
["source"] = "Encroaching Undercrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 215771,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["source"] = "Archdruid Glaidalis",
["npcID"] = 96512,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1836,
},
[250901] = {
["source"] = "Night Elf Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 147994,
},
[142315] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[432127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Siegelord",
["npcID"] = 215598,
},
[194284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Grenadier",
["npcID"] = 141712,
},
[447921] = {
["source"] = "Galvanized Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 224779,
},
[446430] = {
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[394680] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 201677,
},
[388537] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[364330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acquisitions Automa",
["npcID"] = 184737,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[377483] = {
["source"] = "Deepflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221572,
},
[117628] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Zian of the Endless Shadow",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60701,
},
[146163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Farseer",
["npcID"] = 72770,
},
[409016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[120759] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61634,
},
[59842] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1978,
},
[341441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Gargon",
["npcID"] = 174069,
},
[104318] = {
["source"] = "Wild Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 55659,
},
[125871] = {
["isChanneled"] = true,
["source"] = "Zar'thik Augurer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64454,
},
[424431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[22372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackwing Warlock",
["npcID"] = 12459,
},
[409018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[205549] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[450519] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2985,
["event"] = "SPELL_CAST_START",
["npcID"] = 221427,
},
[398780] = {
["source"] = "Farscale Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 200485,
},
[124849] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["encounterID"] = 1501,
["event"] = "SPELL_CAST_START",
["npcID"] = 62837,
},
[59386] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Vrykul Skeleton",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23970,
},
[456780] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Splash",
["npcID"] = 220275,
},
[170738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undermage Kesalon",
["npcID"] = 85496,
},
[458720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Volcanic Fury",
["npcID"] = 225896,
},
[22924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tendris Warpwood",
["npcID"] = 11489,
},
[440372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understalker Tunneler",
["npcID"] = 216249,
},
[398782] = {
["source"] = "Farscale Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200484,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191225,
},
[361923] = {
["encounterName"] = "Lords of Dread",
["source"] = "Inchoate Shadow",
["npcID"] = 183138,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2543,
},
[388544] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[451014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tendris Warpwood",
["npcID"] = 11489,
},
[392640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[303161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Raider",
["npcID"] = 201301,
},
[273871] = {
["source"] = "Ankylodon Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 123093,
},
[18670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironbark Protector",
["npcID"] = 11459,
},
[16869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maleki the Pallid",
["npcID"] = 10438,
},
[144119] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber",
["npcID"] = 71407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[284409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Draeleth",
["npcID"] = 144567,
},
[431549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Venomspitter",
["npcID"] = 219661,
},
[30481] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[39122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Frayer",
["npcID"] = 19557,
},
[396738] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Blue Gulper",
["npcID"] = 195976,
},
[446776] = {
["event"] = "SPELL_CAST_START",
["source"] = "War Lynx",
["npcID"] = 206699,
},
[54309] = {
["source"] = "Anub'ar Prime Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 29128,
},
[443837] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218022,
},
[396739] = {
["source"] = "Ruffian Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 193819,
},
[406978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Guard",
["npcID"] = 204581,
},
[34634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Channeler",
["npcID"] = 19505,
},
[427456] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[69148] = {
["source"] = "Spectral Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 36666,
},
[431552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Webspinner",
["npcID"] = 224149,
},
[441791] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[125310] = {
["encounterName"] = "Blade Lord Ta'yak",
["source"] = "Blade Lord Ta'yak",
["npcID"] = 62543,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1504,
},
[136954] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[55563] = {
["source"] = "Drakkari Earthshaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 29829,
},
[284752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caz'lek the Sleetbringer",
["npcID"] = 150747,
},
[42723] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[396742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Pinchalot",
["npcID"] = 200620,
},
[144718] = {
["encounterName"] = "Iron Juggernaut",
["source"] = "Crawler Mine",
["npcID"] = 72050,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1600,
},
[42740] = {
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[427459] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[421316] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[146170] = {
["isChanneled"] = true,
["source"] = "Kor'kron Dark Farseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72770,
},
[111667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
},
[443842] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[339407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Legion Skirmisher",
["npcID"] = 173280,
},
[382410] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[449986] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[402888] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[84868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Bear",
["npcID"] = 1186,
},
[57051] = {
["source"] = "Crystalline Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 26792,
},
[34759] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[452035] = {
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[214771] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99651,
},
[52774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Mender",
["npcID"] = 28582,
},
[400842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[52028] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[407296] = {
["source"] = "Erupting Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199838,
},
[22373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warpwood Guardian",
["npcID"] = 11461,
},
[53072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Giant",
["npcID"] = 28920,
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2025-02-15 01:22:29 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Monplande",
"2025-02-15 00:25:41 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-15 00:24:41 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Douche",
"2025-02-15 00:23:27 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Robozeej",
"2025-02-14 23:03:02 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-14 08:40:37 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-13 15:54:20 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-11 00:22:30 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Bigdiscnergy",
"2025-02-11 00:13:40 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Bigdiscnergy",
"2025-02-10 16:46:22 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-10 16:26:17 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Felzeej",
"2025-02-10 09:29:09 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-09 22:37:35 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-09 22:14:18 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Felzeej",
"2025-02-09 20:36:16 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-09 19:54:25 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-09 14:21:05 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-08 17:37:27 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Zeejadin",
"2025-02-08 17:35:49 | INIT | Plater-v600-Retail | Framework v588 | 11.0.7 | enUS | Perideez",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
